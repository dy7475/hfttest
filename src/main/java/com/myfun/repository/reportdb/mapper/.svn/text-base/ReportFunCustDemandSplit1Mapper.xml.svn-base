<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.reportdb.dao.ReportFunCustDemandSplit1Mapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.reportdb.po.ReportFunCustDemandSplit1">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="SOURCE_ID" jdbcType="INTEGER" property="sourceId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, CITY_ID, COMP_ID, CASE_ID, CASE_TYPE, SOURCE_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.reportdb.po.ReportFunCustDemandSplit1Example" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_CUST_DEMAND_SPLIT_1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_CUST_DEMAND_SPLIT_1
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbggenerated-->
    delete from FUN_CUST_DEMAND_SPLIT_1
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.reportdb.po.ReportFunCustDemandSplit1Example">
    <!--@mbggenerated-->
    delete from FUN_CUST_DEMAND_SPLIT_1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.reportdb.po.ReportFunCustDemandSplit1">
    <!--@mbggenerated-->
    insert into FUN_CUST_DEMAND_SPLIT_1 (ID, CITY_ID, COMP_ID, 
      CASE_ID, CASE_TYPE, SOURCE_ID
      )
    values (#{id,jdbcType=BIGINT}, #{cityId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, 
      #{caseId,jdbcType=INTEGER}, #{caseType,jdbcType=TINYINT}, #{sourceId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.reportdb.po.ReportFunCustDemandSplit1">
    <!--@mbggenerated-->
    insert into FUN_CUST_DEMAND_SPLIT_1
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="sourceId != null">
        SOURCE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.reportdb.po.ReportFunCustDemandSplit1Example" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_CUST_DEMAND_SPLIT_1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_CUST_DEMAND_SPLIT_1
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
      <if test="record.sourceId != null">
        SOURCE_ID = #{record.sourceId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_CUST_DEMAND_SPLIT_1
    set ID = #{record.id,jdbcType=BIGINT},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      SOURCE_ID = #{record.sourceId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.reportdb.po.ReportFunCustDemandSplit1">
    <!--@mbggenerated-->
    update FUN_CUST_DEMAND_SPLIT_1
    <set>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="sourceId != null">
        SOURCE_ID = #{sourceId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.reportdb.po.ReportFunCustDemandSplit1">
    <!--@mbggenerated-->
    update FUN_CUST_DEMAND_SPLIT_1
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      SOURCE_ID = #{sourceId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>