<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.reportdb.dao.ReportFunAssessmentStatisticsMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.reportdb.po.ReportFunAssessmentStatistics">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_POSITION" jdbcType="VARCHAR" property="userPosition" />
    <result column="ASSESSMENT_CYCLE_START" jdbcType="TIMESTAMP" property="assessmentCycleStart" />
    <result column="ASSESSMENT_CYCLE_END" jdbcType="TIMESTAMP" property="assessmentCycleEnd" />
    <result column="ASSESSMENT_MONTH" jdbcType="VARCHAR" property="assessmentMonth" />
    <result column="USER_COUNT" jdbcType="NUMERIC" property="userCount" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="XZ_FXZ_COUNT" jdbcType="INTEGER" property="xzFxzCount" />
    <result column="XZ_KXZ_COUNT" jdbcType="INTEGER" property="xzKxzCount" />
    <result column="XZ_GJ_COUNT" jdbcType="INTEGER" property="xzGjCount" />
    <result column="XZ_TPSC_COUNT" jdbcType="INTEGER" property="xzTpscCount" />
    <result column="XZ_SPSC_COUNT" jdbcType="INTEGER" property="xzSpscCount" />
    <result column="XZ_VRSC_COUNT" jdbcType="INTEGER" property="xzVrscCount" />
    <result column="XZ_ZFY_COUNT" jdbcType="INTEGER" property="xzZfyCount" />
    <result column="XZ_IPCALL_COUNT" jdbcType="INTEGER" property="xzIpcallCount" />
    <result column="XZ_KFDP_COUNT" jdbcType="INTEGER" property="xzKfdpCount" />
    <result column="XZ_HBFX_COUNT" jdbcType="INTEGER" property="xzHbfxCount" />
    <result column="XZ_YSTJ_COUNT" jdbcType="INTEGER" property="xzYstjCount" />
    <result column="XZ_PTWT_COUNT" jdbcType="INTEGER" property="xzPtwtCount" />
    <result column="XZ_XSWT_COUNT" jdbcType="INTEGER" property="xzXswtCount" />
    <result column="XZ_DJWT_COUNT" jdbcType="INTEGER" property="xzDjwtCount" />
    <result column="XZ_BZWT_COUNT" jdbcType="INTEGER" property="xzBzwtCount" />
    <result column="XZ_FK_COUNT" jdbcType="INTEGER" property="xzFkCount" />
    <result column="XZ_YJ_COUNT" jdbcType="INTEGER" property="xzYjCount" />
    <result column="XZ_DK_COUNT" jdbcType="INTEGER" property="xzDkCount" />
    <result column="XZYX_FXZ_COUNT" jdbcType="INTEGER" property="xzyxFxzCount" />
    <result column="XZYX_KXZ_COUNT" jdbcType="INTEGER" property="xzyxKxzCount" />
    <result column="XZYX_GJ_COUNT" jdbcType="INTEGER" property="xzyxGjCount" />
    <result column="XZYX_TPSC_COUNT" jdbcType="INTEGER" property="xzyxTpscCount" />
    <result column="XZYX_SPSC_COUNT" jdbcType="INTEGER" property="xzyxSpscCount" />
    <result column="XZYX_VRSC_COUNT" jdbcType="INTEGER" property="xzyxVrscCount" />
    <result column="XZYX_ZFY_COUNT" jdbcType="INTEGER" property="xzyxZfyCount" />
    <result column="XZYX_IPCALL_COUNT" jdbcType="INTEGER" property="xzyxIpcallCount" />
    <result column="XZYX_KFDP_COUNT" jdbcType="INTEGER" property="xzyxKfdpCount" />
    <result column="XZYX_HBFX_COUNT" jdbcType="INTEGER" property="xzyxHbfxCount" />
    <result column="XZYX_YSTJ_COUNT" jdbcType="INTEGER" property="xzyxYstjCount" />
    <result column="XZYX_PTWT_COUNT" jdbcType="INTEGER" property="xzyxPtwtCount" />
    <result column="XZYX_XSWT_COUNT" jdbcType="INTEGER" property="xzyxXswtCount" />
    <result column="XZYX_DJWT_COUNT" jdbcType="INTEGER" property="xzyxDjwtCount" />
    <result column="XZYX_BZWT_COUNT" jdbcType="INTEGER" property="xzyxBzwtCount" />
    <result column="XZYX_FK_COUNT" jdbcType="INTEGER" property="xzyxFkCount" />
    <result column="XZYX_YJ_COUNT" jdbcType="INTEGER" property="xzyxYjCount" />
    <result column="XZYX_DK_COUNT" jdbcType="INTEGER" property="xzyxDkCount" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="CHECK_TYPE" jdbcType="TINYINT" property="checkType" />
    <result column="ROLE_WAGE_CONFIG_ID" jdbcType="INTEGER" property="roleWageConfigId" />
    <result column="XZ_PROFIT_AMOUNT" jdbcType="NUMERIC" property="xzProfitAmount" />
    <result column="XZYX_PROFIT_AMOUNT" jdbcType="NUMERIC" property="xzyxProfitAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, CITY_ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, USER_POSITION, ASSESSMENT_CYCLE_START, 
    ASSESSMENT_CYCLE_END, ASSESSMENT_MONTH, USER_COUNT, CREATE_TIME, XZ_FXZ_COUNT, XZ_KXZ_COUNT, 
    XZ_GJ_COUNT, XZ_TPSC_COUNT, XZ_SPSC_COUNT, XZ_VRSC_COUNT, XZ_ZFY_COUNT, XZ_IPCALL_COUNT, 
    XZ_KFDP_COUNT, XZ_HBFX_COUNT, XZ_YSTJ_COUNT, XZ_PTWT_COUNT, XZ_XSWT_COUNT, XZ_DJWT_COUNT, 
    XZ_BZWT_COUNT, XZ_FK_COUNT, XZ_YJ_COUNT, XZ_DK_COUNT, XZYX_FXZ_COUNT, XZYX_KXZ_COUNT, 
    XZYX_GJ_COUNT, XZYX_TPSC_COUNT, XZYX_SPSC_COUNT, XZYX_VRSC_COUNT, XZYX_ZFY_COUNT, 
    XZYX_IPCALL_COUNT, XZYX_KFDP_COUNT, XZYX_HBFX_COUNT, XZYX_YSTJ_COUNT, XZYX_PTWT_COUNT, 
    XZYX_XSWT_COUNT, XZYX_DJWT_COUNT, XZYX_BZWT_COUNT, XZYX_FK_COUNT, XZYX_YJ_COUNT, 
    XZYX_DK_COUNT, USER_ID, CASE_TYPE, CHECK_TYPE, ROLE_WAGE_CONFIG_ID, XZ_PROFIT_AMOUNT, 
    XZYX_PROFIT_AMOUNT
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.reportdb.po.ReportFunAssessmentStatisticsExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_ASSESSMENT_STATISTICS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_ASSESSMENT_STATISTICS
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_ASSESSMENT_STATISTICS
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.reportdb.po.ReportFunAssessmentStatisticsExample">
    <!--@mbggenerated-->
    delete from FUN_ASSESSMENT_STATISTICS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.reportdb.po.ReportFunAssessmentStatistics" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ASSESSMENT_STATISTICS (CITY_ID, COMP_ID, AREA_ID, 
      REG_ID, DEPT_ID, GR_ID, 
      USER_POSITION, ASSESSMENT_CYCLE_START, ASSESSMENT_CYCLE_END, 
      ASSESSMENT_MONTH, USER_COUNT, CREATE_TIME, 
      XZ_FXZ_COUNT, XZ_KXZ_COUNT, XZ_GJ_COUNT, 
      XZ_TPSC_COUNT, XZ_SPSC_COUNT, XZ_VRSC_COUNT, 
      XZ_ZFY_COUNT, XZ_IPCALL_COUNT, XZ_KFDP_COUNT, 
      XZ_HBFX_COUNT, XZ_YSTJ_COUNT, XZ_PTWT_COUNT, 
      XZ_XSWT_COUNT, XZ_DJWT_COUNT, XZ_BZWT_COUNT, 
      XZ_FK_COUNT, XZ_YJ_COUNT, XZ_DK_COUNT, 
      XZYX_FXZ_COUNT, XZYX_KXZ_COUNT, XZYX_GJ_COUNT, 
      XZYX_TPSC_COUNT, XZYX_SPSC_COUNT, XZYX_VRSC_COUNT, 
      XZYX_ZFY_COUNT, XZYX_IPCALL_COUNT, XZYX_KFDP_COUNT, 
      XZYX_HBFX_COUNT, XZYX_YSTJ_COUNT, XZYX_PTWT_COUNT, 
      XZYX_XSWT_COUNT, XZYX_DJWT_COUNT, XZYX_BZWT_COUNT, 
      XZYX_FK_COUNT, XZYX_YJ_COUNT, XZYX_DK_COUNT, 
      USER_ID, CASE_TYPE, CHECK_TYPE, 
      ROLE_WAGE_CONFIG_ID, XZ_PROFIT_AMOUNT, XZYX_PROFIT_AMOUNT
      )
    values (#{cityId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{regId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, 
      #{userPosition,jdbcType=VARCHAR}, #{assessmentCycleStart,jdbcType=TIMESTAMP}, #{assessmentCycleEnd,jdbcType=TIMESTAMP}, 
      #{assessmentMonth,jdbcType=VARCHAR}, #{userCount,jdbcType=NUMERIC}, #{createTime,jdbcType=TIMESTAMP}, 
      #{xzFxzCount,jdbcType=INTEGER}, #{xzKxzCount,jdbcType=INTEGER}, #{xzGjCount,jdbcType=INTEGER}, 
      #{xzTpscCount,jdbcType=INTEGER}, #{xzSpscCount,jdbcType=INTEGER}, #{xzVrscCount,jdbcType=INTEGER}, 
      #{xzZfyCount,jdbcType=INTEGER}, #{xzIpcallCount,jdbcType=INTEGER}, #{xzKfdpCount,jdbcType=INTEGER}, 
      #{xzHbfxCount,jdbcType=INTEGER}, #{xzYstjCount,jdbcType=INTEGER}, #{xzPtwtCount,jdbcType=INTEGER}, 
      #{xzXswtCount,jdbcType=INTEGER}, #{xzDjwtCount,jdbcType=INTEGER}, #{xzBzwtCount,jdbcType=INTEGER}, 
      #{xzFkCount,jdbcType=INTEGER}, #{xzYjCount,jdbcType=INTEGER}, #{xzDkCount,jdbcType=INTEGER}, 
      #{xzyxFxzCount,jdbcType=INTEGER}, #{xzyxKxzCount,jdbcType=INTEGER}, #{xzyxGjCount,jdbcType=INTEGER}, 
      #{xzyxTpscCount,jdbcType=INTEGER}, #{xzyxSpscCount,jdbcType=INTEGER}, #{xzyxVrscCount,jdbcType=INTEGER}, 
      #{xzyxZfyCount,jdbcType=INTEGER}, #{xzyxIpcallCount,jdbcType=INTEGER}, #{xzyxKfdpCount,jdbcType=INTEGER}, 
      #{xzyxHbfxCount,jdbcType=INTEGER}, #{xzyxYstjCount,jdbcType=INTEGER}, #{xzyxPtwtCount,jdbcType=INTEGER}, 
      #{xzyxXswtCount,jdbcType=INTEGER}, #{xzyxDjwtCount,jdbcType=INTEGER}, #{xzyxBzwtCount,jdbcType=INTEGER}, 
      #{xzyxFkCount,jdbcType=INTEGER}, #{xzyxYjCount,jdbcType=INTEGER}, #{xzyxDkCount,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{caseType,jdbcType=TINYINT}, #{checkType,jdbcType=TINYINT}, 
      #{roleWageConfigId,jdbcType=INTEGER}, #{xzProfitAmount,jdbcType=NUMERIC}, #{xzyxProfitAmount,jdbcType=NUMERIC}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.reportdb.po.ReportFunAssessmentStatistics" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ASSESSMENT_STATISTICS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="userPosition != null">
        USER_POSITION,
      </if>
      <if test="assessmentCycleStart != null">
        ASSESSMENT_CYCLE_START,
      </if>
      <if test="assessmentCycleEnd != null">
        ASSESSMENT_CYCLE_END,
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH,
      </if>
      <if test="userCount != null">
        USER_COUNT,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="xzFxzCount != null">
        XZ_FXZ_COUNT,
      </if>
      <if test="xzKxzCount != null">
        XZ_KXZ_COUNT,
      </if>
      <if test="xzGjCount != null">
        XZ_GJ_COUNT,
      </if>
      <if test="xzTpscCount != null">
        XZ_TPSC_COUNT,
      </if>
      <if test="xzSpscCount != null">
        XZ_SPSC_COUNT,
      </if>
      <if test="xzVrscCount != null">
        XZ_VRSC_COUNT,
      </if>
      <if test="xzZfyCount != null">
        XZ_ZFY_COUNT,
      </if>
      <if test="xzIpcallCount != null">
        XZ_IPCALL_COUNT,
      </if>
      <if test="xzKfdpCount != null">
        XZ_KFDP_COUNT,
      </if>
      <if test="xzHbfxCount != null">
        XZ_HBFX_COUNT,
      </if>
      <if test="xzYstjCount != null">
        XZ_YSTJ_COUNT,
      </if>
      <if test="xzPtwtCount != null">
        XZ_PTWT_COUNT,
      </if>
      <if test="xzXswtCount != null">
        XZ_XSWT_COUNT,
      </if>
      <if test="xzDjwtCount != null">
        XZ_DJWT_COUNT,
      </if>
      <if test="xzBzwtCount != null">
        XZ_BZWT_COUNT,
      </if>
      <if test="xzFkCount != null">
        XZ_FK_COUNT,
      </if>
      <if test="xzYjCount != null">
        XZ_YJ_COUNT,
      </if>
      <if test="xzDkCount != null">
        XZ_DK_COUNT,
      </if>
      <if test="xzyxFxzCount != null">
        XZYX_FXZ_COUNT,
      </if>
      <if test="xzyxKxzCount != null">
        XZYX_KXZ_COUNT,
      </if>
      <if test="xzyxGjCount != null">
        XZYX_GJ_COUNT,
      </if>
      <if test="xzyxTpscCount != null">
        XZYX_TPSC_COUNT,
      </if>
      <if test="xzyxSpscCount != null">
        XZYX_SPSC_COUNT,
      </if>
      <if test="xzyxVrscCount != null">
        XZYX_VRSC_COUNT,
      </if>
      <if test="xzyxZfyCount != null">
        XZYX_ZFY_COUNT,
      </if>
      <if test="xzyxIpcallCount != null">
        XZYX_IPCALL_COUNT,
      </if>
      <if test="xzyxKfdpCount != null">
        XZYX_KFDP_COUNT,
      </if>
      <if test="xzyxHbfxCount != null">
        XZYX_HBFX_COUNT,
      </if>
      <if test="xzyxYstjCount != null">
        XZYX_YSTJ_COUNT,
      </if>
      <if test="xzyxPtwtCount != null">
        XZYX_PTWT_COUNT,
      </if>
      <if test="xzyxXswtCount != null">
        XZYX_XSWT_COUNT,
      </if>
      <if test="xzyxDjwtCount != null">
        XZYX_DJWT_COUNT,
      </if>
      <if test="xzyxBzwtCount != null">
        XZYX_BZWT_COUNT,
      </if>
      <if test="xzyxFkCount != null">
        XZYX_FK_COUNT,
      </if>
      <if test="xzyxYjCount != null">
        XZYX_YJ_COUNT,
      </if>
      <if test="xzyxDkCount != null">
        XZYX_DK_COUNT,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="checkType != null">
        CHECK_TYPE,
      </if>
      <if test="roleWageConfigId != null">
        ROLE_WAGE_CONFIG_ID,
      </if>
      <if test="xzProfitAmount != null">
        XZ_PROFIT_AMOUNT,
      </if>
      <if test="xzyxProfitAmount != null">
        XZYX_PROFIT_AMOUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userPosition != null">
        #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="assessmentCycleStart != null">
        #{assessmentCycleStart,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentCycleEnd != null">
        #{assessmentCycleEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentMonth != null">
        #{assessmentMonth,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null">
        #{userCount,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="xzFxzCount != null">
        #{xzFxzCount,jdbcType=INTEGER},
      </if>
      <if test="xzKxzCount != null">
        #{xzKxzCount,jdbcType=INTEGER},
      </if>
      <if test="xzGjCount != null">
        #{xzGjCount,jdbcType=INTEGER},
      </if>
      <if test="xzTpscCount != null">
        #{xzTpscCount,jdbcType=INTEGER},
      </if>
      <if test="xzSpscCount != null">
        #{xzSpscCount,jdbcType=INTEGER},
      </if>
      <if test="xzVrscCount != null">
        #{xzVrscCount,jdbcType=INTEGER},
      </if>
      <if test="xzZfyCount != null">
        #{xzZfyCount,jdbcType=INTEGER},
      </if>
      <if test="xzIpcallCount != null">
        #{xzIpcallCount,jdbcType=INTEGER},
      </if>
      <if test="xzKfdpCount != null">
        #{xzKfdpCount,jdbcType=INTEGER},
      </if>
      <if test="xzHbfxCount != null">
        #{xzHbfxCount,jdbcType=INTEGER},
      </if>
      <if test="xzYstjCount != null">
        #{xzYstjCount,jdbcType=INTEGER},
      </if>
      <if test="xzPtwtCount != null">
        #{xzPtwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzXswtCount != null">
        #{xzXswtCount,jdbcType=INTEGER},
      </if>
      <if test="xzDjwtCount != null">
        #{xzDjwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzBzwtCount != null">
        #{xzBzwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzFkCount != null">
        #{xzFkCount,jdbcType=INTEGER},
      </if>
      <if test="xzYjCount != null">
        #{xzYjCount,jdbcType=INTEGER},
      </if>
      <if test="xzDkCount != null">
        #{xzDkCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxFxzCount != null">
        #{xzyxFxzCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxKxzCount != null">
        #{xzyxKxzCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxGjCount != null">
        #{xzyxGjCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxTpscCount != null">
        #{xzyxTpscCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxSpscCount != null">
        #{xzyxSpscCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxVrscCount != null">
        #{xzyxVrscCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxZfyCount != null">
        #{xzyxZfyCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxIpcallCount != null">
        #{xzyxIpcallCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxKfdpCount != null">
        #{xzyxKfdpCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxHbfxCount != null">
        #{xzyxHbfxCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxYstjCount != null">
        #{xzyxYstjCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxPtwtCount != null">
        #{xzyxPtwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxXswtCount != null">
        #{xzyxXswtCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxDjwtCount != null">
        #{xzyxDjwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxBzwtCount != null">
        #{xzyxBzwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxFkCount != null">
        #{xzyxFkCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxYjCount != null">
        #{xzyxYjCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxDkCount != null">
        #{xzyxDkCount,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="checkType != null">
        #{checkType,jdbcType=TINYINT},
      </if>
      <if test="roleWageConfigId != null">
        #{roleWageConfigId,jdbcType=INTEGER},
      </if>
      <if test="xzProfitAmount != null">
        #{xzProfitAmount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxProfitAmount != null">
        #{xzyxProfitAmount,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.reportdb.po.ReportFunAssessmentStatisticsExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_ASSESSMENT_STATISTICS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ASSESSMENT_STATISTICS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.userPosition != null">
        USER_POSITION = #{record.userPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.assessmentCycleStart != null">
        ASSESSMENT_CYCLE_START = #{record.assessmentCycleStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.assessmentCycleEnd != null">
        ASSESSMENT_CYCLE_END = #{record.assessmentCycleEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.assessmentMonth != null">
        ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.userCount != null">
        USER_COUNT = #{record.userCount,jdbcType=NUMERIC},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.xzFxzCount != null">
        XZ_FXZ_COUNT = #{record.xzFxzCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzKxzCount != null">
        XZ_KXZ_COUNT = #{record.xzKxzCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzGjCount != null">
        XZ_GJ_COUNT = #{record.xzGjCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzTpscCount != null">
        XZ_TPSC_COUNT = #{record.xzTpscCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzSpscCount != null">
        XZ_SPSC_COUNT = #{record.xzSpscCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzVrscCount != null">
        XZ_VRSC_COUNT = #{record.xzVrscCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzZfyCount != null">
        XZ_ZFY_COUNT = #{record.xzZfyCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzIpcallCount != null">
        XZ_IPCALL_COUNT = #{record.xzIpcallCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzKfdpCount != null">
        XZ_KFDP_COUNT = #{record.xzKfdpCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzHbfxCount != null">
        XZ_HBFX_COUNT = #{record.xzHbfxCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzYstjCount != null">
        XZ_YSTJ_COUNT = #{record.xzYstjCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzPtwtCount != null">
        XZ_PTWT_COUNT = #{record.xzPtwtCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzXswtCount != null">
        XZ_XSWT_COUNT = #{record.xzXswtCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzDjwtCount != null">
        XZ_DJWT_COUNT = #{record.xzDjwtCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzBzwtCount != null">
        XZ_BZWT_COUNT = #{record.xzBzwtCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzFkCount != null">
        XZ_FK_COUNT = #{record.xzFkCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzYjCount != null">
        XZ_YJ_COUNT = #{record.xzYjCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzDkCount != null">
        XZ_DK_COUNT = #{record.xzDkCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxFxzCount != null">
        XZYX_FXZ_COUNT = #{record.xzyxFxzCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxKxzCount != null">
        XZYX_KXZ_COUNT = #{record.xzyxKxzCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxGjCount != null">
        XZYX_GJ_COUNT = #{record.xzyxGjCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxTpscCount != null">
        XZYX_TPSC_COUNT = #{record.xzyxTpscCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxSpscCount != null">
        XZYX_SPSC_COUNT = #{record.xzyxSpscCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxVrscCount != null">
        XZYX_VRSC_COUNT = #{record.xzyxVrscCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxZfyCount != null">
        XZYX_ZFY_COUNT = #{record.xzyxZfyCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxIpcallCount != null">
        XZYX_IPCALL_COUNT = #{record.xzyxIpcallCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxKfdpCount != null">
        XZYX_KFDP_COUNT = #{record.xzyxKfdpCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxHbfxCount != null">
        XZYX_HBFX_COUNT = #{record.xzyxHbfxCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxYstjCount != null">
        XZYX_YSTJ_COUNT = #{record.xzyxYstjCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxPtwtCount != null">
        XZYX_PTWT_COUNT = #{record.xzyxPtwtCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxXswtCount != null">
        XZYX_XSWT_COUNT = #{record.xzyxXswtCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxDjwtCount != null">
        XZYX_DJWT_COUNT = #{record.xzyxDjwtCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxBzwtCount != null">
        XZYX_BZWT_COUNT = #{record.xzyxBzwtCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxFkCount != null">
        XZYX_FK_COUNT = #{record.xzyxFkCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxYjCount != null">
        XZYX_YJ_COUNT = #{record.xzyxYjCount,jdbcType=INTEGER},
      </if>
      <if test="record.xzyxDkCount != null">
        XZYX_DK_COUNT = #{record.xzyxDkCount,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
      <if test="record.checkType != null">
        CHECK_TYPE = #{record.checkType,jdbcType=TINYINT},
      </if>
      <if test="record.roleWageConfigId != null">
        ROLE_WAGE_CONFIG_ID = #{record.roleWageConfigId,jdbcType=INTEGER},
      </if>
      <if test="record.xzProfitAmount != null">
        XZ_PROFIT_AMOUNT = #{record.xzProfitAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxProfitAmount != null">
        XZYX_PROFIT_AMOUNT = #{record.xzyxProfitAmount,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ASSESSMENT_STATISTICS
    set ID = #{record.id,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_POSITION = #{record.userPosition,jdbcType=VARCHAR},
      ASSESSMENT_CYCLE_START = #{record.assessmentCycleStart,jdbcType=TIMESTAMP},
      ASSESSMENT_CYCLE_END = #{record.assessmentCycleEnd,jdbcType=TIMESTAMP},
      ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR},
      USER_COUNT = #{record.userCount,jdbcType=NUMERIC},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      XZ_FXZ_COUNT = #{record.xzFxzCount,jdbcType=INTEGER},
      XZ_KXZ_COUNT = #{record.xzKxzCount,jdbcType=INTEGER},
      XZ_GJ_COUNT = #{record.xzGjCount,jdbcType=INTEGER},
      XZ_TPSC_COUNT = #{record.xzTpscCount,jdbcType=INTEGER},
      XZ_SPSC_COUNT = #{record.xzSpscCount,jdbcType=INTEGER},
      XZ_VRSC_COUNT = #{record.xzVrscCount,jdbcType=INTEGER},
      XZ_ZFY_COUNT = #{record.xzZfyCount,jdbcType=INTEGER},
      XZ_IPCALL_COUNT = #{record.xzIpcallCount,jdbcType=INTEGER},
      XZ_KFDP_COUNT = #{record.xzKfdpCount,jdbcType=INTEGER},
      XZ_HBFX_COUNT = #{record.xzHbfxCount,jdbcType=INTEGER},
      XZ_YSTJ_COUNT = #{record.xzYstjCount,jdbcType=INTEGER},
      XZ_PTWT_COUNT = #{record.xzPtwtCount,jdbcType=INTEGER},
      XZ_XSWT_COUNT = #{record.xzXswtCount,jdbcType=INTEGER},
      XZ_DJWT_COUNT = #{record.xzDjwtCount,jdbcType=INTEGER},
      XZ_BZWT_COUNT = #{record.xzBzwtCount,jdbcType=INTEGER},
      XZ_FK_COUNT = #{record.xzFkCount,jdbcType=INTEGER},
      XZ_YJ_COUNT = #{record.xzYjCount,jdbcType=INTEGER},
      XZ_DK_COUNT = #{record.xzDkCount,jdbcType=INTEGER},
      XZYX_FXZ_COUNT = #{record.xzyxFxzCount,jdbcType=INTEGER},
      XZYX_KXZ_COUNT = #{record.xzyxKxzCount,jdbcType=INTEGER},
      XZYX_GJ_COUNT = #{record.xzyxGjCount,jdbcType=INTEGER},
      XZYX_TPSC_COUNT = #{record.xzyxTpscCount,jdbcType=INTEGER},
      XZYX_SPSC_COUNT = #{record.xzyxSpscCount,jdbcType=INTEGER},
      XZYX_VRSC_COUNT = #{record.xzyxVrscCount,jdbcType=INTEGER},
      XZYX_ZFY_COUNT = #{record.xzyxZfyCount,jdbcType=INTEGER},
      XZYX_IPCALL_COUNT = #{record.xzyxIpcallCount,jdbcType=INTEGER},
      XZYX_KFDP_COUNT = #{record.xzyxKfdpCount,jdbcType=INTEGER},
      XZYX_HBFX_COUNT = #{record.xzyxHbfxCount,jdbcType=INTEGER},
      XZYX_YSTJ_COUNT = #{record.xzyxYstjCount,jdbcType=INTEGER},
      XZYX_PTWT_COUNT = #{record.xzyxPtwtCount,jdbcType=INTEGER},
      XZYX_XSWT_COUNT = #{record.xzyxXswtCount,jdbcType=INTEGER},
      XZYX_DJWT_COUNT = #{record.xzyxDjwtCount,jdbcType=INTEGER},
      XZYX_BZWT_COUNT = #{record.xzyxBzwtCount,jdbcType=INTEGER},
      XZYX_FK_COUNT = #{record.xzyxFkCount,jdbcType=INTEGER},
      XZYX_YJ_COUNT = #{record.xzyxYjCount,jdbcType=INTEGER},
      XZYX_DK_COUNT = #{record.xzyxDkCount,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      CHECK_TYPE = #{record.checkType,jdbcType=TINYINT},
      ROLE_WAGE_CONFIG_ID = #{record.roleWageConfigId,jdbcType=INTEGER},
      XZ_PROFIT_AMOUNT = #{record.xzProfitAmount,jdbcType=NUMERIC},
      XZYX_PROFIT_AMOUNT = #{record.xzyxProfitAmount,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.reportdb.po.ReportFunAssessmentStatistics">
    <!--@mbggenerated-->
    update FUN_ASSESSMENT_STATISTICS
    <set>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userPosition != null">
        USER_POSITION = #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="assessmentCycleStart != null">
        ASSESSMENT_CYCLE_START = #{assessmentCycleStart,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentCycleEnd != null">
        ASSESSMENT_CYCLE_END = #{assessmentCycleEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null">
        USER_COUNT = #{userCount,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="xzFxzCount != null">
        XZ_FXZ_COUNT = #{xzFxzCount,jdbcType=INTEGER},
      </if>
      <if test="xzKxzCount != null">
        XZ_KXZ_COUNT = #{xzKxzCount,jdbcType=INTEGER},
      </if>
      <if test="xzGjCount != null">
        XZ_GJ_COUNT = #{xzGjCount,jdbcType=INTEGER},
      </if>
      <if test="xzTpscCount != null">
        XZ_TPSC_COUNT = #{xzTpscCount,jdbcType=INTEGER},
      </if>
      <if test="xzSpscCount != null">
        XZ_SPSC_COUNT = #{xzSpscCount,jdbcType=INTEGER},
      </if>
      <if test="xzVrscCount != null">
        XZ_VRSC_COUNT = #{xzVrscCount,jdbcType=INTEGER},
      </if>
      <if test="xzZfyCount != null">
        XZ_ZFY_COUNT = #{xzZfyCount,jdbcType=INTEGER},
      </if>
      <if test="xzIpcallCount != null">
        XZ_IPCALL_COUNT = #{xzIpcallCount,jdbcType=INTEGER},
      </if>
      <if test="xzKfdpCount != null">
        XZ_KFDP_COUNT = #{xzKfdpCount,jdbcType=INTEGER},
      </if>
      <if test="xzHbfxCount != null">
        XZ_HBFX_COUNT = #{xzHbfxCount,jdbcType=INTEGER},
      </if>
      <if test="xzYstjCount != null">
        XZ_YSTJ_COUNT = #{xzYstjCount,jdbcType=INTEGER},
      </if>
      <if test="xzPtwtCount != null">
        XZ_PTWT_COUNT = #{xzPtwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzXswtCount != null">
        XZ_XSWT_COUNT = #{xzXswtCount,jdbcType=INTEGER},
      </if>
      <if test="xzDjwtCount != null">
        XZ_DJWT_COUNT = #{xzDjwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzBzwtCount != null">
        XZ_BZWT_COUNT = #{xzBzwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzFkCount != null">
        XZ_FK_COUNT = #{xzFkCount,jdbcType=INTEGER},
      </if>
      <if test="xzYjCount != null">
        XZ_YJ_COUNT = #{xzYjCount,jdbcType=INTEGER},
      </if>
      <if test="xzDkCount != null">
        XZ_DK_COUNT = #{xzDkCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxFxzCount != null">
        XZYX_FXZ_COUNT = #{xzyxFxzCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxKxzCount != null">
        XZYX_KXZ_COUNT = #{xzyxKxzCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxGjCount != null">
        XZYX_GJ_COUNT = #{xzyxGjCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxTpscCount != null">
        XZYX_TPSC_COUNT = #{xzyxTpscCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxSpscCount != null">
        XZYX_SPSC_COUNT = #{xzyxSpscCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxVrscCount != null">
        XZYX_VRSC_COUNT = #{xzyxVrscCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxZfyCount != null">
        XZYX_ZFY_COUNT = #{xzyxZfyCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxIpcallCount != null">
        XZYX_IPCALL_COUNT = #{xzyxIpcallCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxKfdpCount != null">
        XZYX_KFDP_COUNT = #{xzyxKfdpCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxHbfxCount != null">
        XZYX_HBFX_COUNT = #{xzyxHbfxCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxYstjCount != null">
        XZYX_YSTJ_COUNT = #{xzyxYstjCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxPtwtCount != null">
        XZYX_PTWT_COUNT = #{xzyxPtwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxXswtCount != null">
        XZYX_XSWT_COUNT = #{xzyxXswtCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxDjwtCount != null">
        XZYX_DJWT_COUNT = #{xzyxDjwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxBzwtCount != null">
        XZYX_BZWT_COUNT = #{xzyxBzwtCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxFkCount != null">
        XZYX_FK_COUNT = #{xzyxFkCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxYjCount != null">
        XZYX_YJ_COUNT = #{xzyxYjCount,jdbcType=INTEGER},
      </if>
      <if test="xzyxDkCount != null">
        XZYX_DK_COUNT = #{xzyxDkCount,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="checkType != null">
        CHECK_TYPE = #{checkType,jdbcType=TINYINT},
      </if>
      <if test="roleWageConfigId != null">
        ROLE_WAGE_CONFIG_ID = #{roleWageConfigId,jdbcType=INTEGER},
      </if>
      <if test="xzProfitAmount != null">
        XZ_PROFIT_AMOUNT = #{xzProfitAmount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxProfitAmount != null">
        XZYX_PROFIT_AMOUNT = #{xzyxProfitAmount,jdbcType=NUMERIC},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.reportdb.po.ReportFunAssessmentStatistics">
    <!--@mbggenerated-->
    update FUN_ASSESSMENT_STATISTICS
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_POSITION = #{userPosition,jdbcType=VARCHAR},
      ASSESSMENT_CYCLE_START = #{assessmentCycleStart,jdbcType=TIMESTAMP},
      ASSESSMENT_CYCLE_END = #{assessmentCycleEnd,jdbcType=TIMESTAMP},
      ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR},
      USER_COUNT = #{userCount,jdbcType=NUMERIC},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      XZ_FXZ_COUNT = #{xzFxzCount,jdbcType=INTEGER},
      XZ_KXZ_COUNT = #{xzKxzCount,jdbcType=INTEGER},
      XZ_GJ_COUNT = #{xzGjCount,jdbcType=INTEGER},
      XZ_TPSC_COUNT = #{xzTpscCount,jdbcType=INTEGER},
      XZ_SPSC_COUNT = #{xzSpscCount,jdbcType=INTEGER},
      XZ_VRSC_COUNT = #{xzVrscCount,jdbcType=INTEGER},
      XZ_ZFY_COUNT = #{xzZfyCount,jdbcType=INTEGER},
      XZ_IPCALL_COUNT = #{xzIpcallCount,jdbcType=INTEGER},
      XZ_KFDP_COUNT = #{xzKfdpCount,jdbcType=INTEGER},
      XZ_HBFX_COUNT = #{xzHbfxCount,jdbcType=INTEGER},
      XZ_YSTJ_COUNT = #{xzYstjCount,jdbcType=INTEGER},
      XZ_PTWT_COUNT = #{xzPtwtCount,jdbcType=INTEGER},
      XZ_XSWT_COUNT = #{xzXswtCount,jdbcType=INTEGER},
      XZ_DJWT_COUNT = #{xzDjwtCount,jdbcType=INTEGER},
      XZ_BZWT_COUNT = #{xzBzwtCount,jdbcType=INTEGER},
      XZ_FK_COUNT = #{xzFkCount,jdbcType=INTEGER},
      XZ_YJ_COUNT = #{xzYjCount,jdbcType=INTEGER},
      XZ_DK_COUNT = #{xzDkCount,jdbcType=INTEGER},
      XZYX_FXZ_COUNT = #{xzyxFxzCount,jdbcType=INTEGER},
      XZYX_KXZ_COUNT = #{xzyxKxzCount,jdbcType=INTEGER},
      XZYX_GJ_COUNT = #{xzyxGjCount,jdbcType=INTEGER},
      XZYX_TPSC_COUNT = #{xzyxTpscCount,jdbcType=INTEGER},
      XZYX_SPSC_COUNT = #{xzyxSpscCount,jdbcType=INTEGER},
      XZYX_VRSC_COUNT = #{xzyxVrscCount,jdbcType=INTEGER},
      XZYX_ZFY_COUNT = #{xzyxZfyCount,jdbcType=INTEGER},
      XZYX_IPCALL_COUNT = #{xzyxIpcallCount,jdbcType=INTEGER},
      XZYX_KFDP_COUNT = #{xzyxKfdpCount,jdbcType=INTEGER},
      XZYX_HBFX_COUNT = #{xzyxHbfxCount,jdbcType=INTEGER},
      XZYX_YSTJ_COUNT = #{xzyxYstjCount,jdbcType=INTEGER},
      XZYX_PTWT_COUNT = #{xzyxPtwtCount,jdbcType=INTEGER},
      XZYX_XSWT_COUNT = #{xzyxXswtCount,jdbcType=INTEGER},
      XZYX_DJWT_COUNT = #{xzyxDjwtCount,jdbcType=INTEGER},
      XZYX_BZWT_COUNT = #{xzyxBzwtCount,jdbcType=INTEGER},
      XZYX_FK_COUNT = #{xzyxFkCount,jdbcType=INTEGER},
      XZYX_YJ_COUNT = #{xzyxYjCount,jdbcType=INTEGER},
      XZYX_DK_COUNT = #{xzyxDkCount,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      CHECK_TYPE = #{checkType,jdbcType=TINYINT},
      ROLE_WAGE_CONFIG_ID = #{roleWageConfigId,jdbcType=INTEGER},
      XZ_PROFIT_AMOUNT = #{xzProfitAmount,jdbcType=NUMERIC},
      XZYX_PROFIT_AMOUNT = #{xzyxProfitAmount,jdbcType=NUMERIC}
    where ID = #{id,jdbcType=INTEGER}
  </update>


  <resultMap id="extBaseResultMap" extends="BaseResultMap" type="com.myfun.repository.reportdb.dto.ReportFunAssessmentStatisticsDto" >
  </resultMap>
  <select id="selectAssessmentCountList" resultMap="extBaseResultMap">
      select <include refid="Base_Column_List" /> from FUN_ASSESSMENT_STATISTICS
      <where>
          <if test="null != param.cityId">
              and CITY_ID = #{param.cityId}
          </if>
          <if test="null != param.compId">
              and COMP_ID = #{param.compId}
          </if>
          <if test="null != param.areaId">
              and AREA_ID = #{param.areaId}
          </if>
          <if test="null != param.regId">
              and REG_ID = #{param.regId}
          </if>
          <if test="null != param.deptId">
              and DEPT_ID = #{param.deptId}
          </if>
          <if test="null != param.grId">
              and GR_ID = #{param.grId}
          </if>
          <if test="null != param.userId">
              and USER_ID = #{param.userId}
          </if>
          <if test="null != param.checkType">
            and CHECK_TYPE = #{param.checkType}
          </if>
          <if test="null != param.assessmentMonth and '' != param.assessmentMonth">
              and ASSESSMENT_MONTH= #{param.assessmentMonth}
          </if>
      </where>
      order by id desc
  </select>

  <select id="getManagerRangeData" resultMap="extBaseResultMap">
    select CASE_TYPE caseType, sum(XZYX_FXZ_COUNT) XZYX_FXZ_COUNT,
            sum(XZYX_KXZ_COUNT) XZYX_KXZ_COUNT,
            sum(XZYX_GJ_COUNT) XZYX_GJ_COUNT,
            sum(XZYX_TPSC_COUNT) XZYX_TPSC_COUNT,
            sum(XZYX_SPSC_COUNT) XZYX_SPSC_COUNT,
            sum(XZYX_VRSC_COUNT) XZYX_VRSC_COUNT,
            sum(XZYX_ZFY_COUNT) XZYX_ZFY_COUNT,
            sum(XZYX_IPCALL_COUNT) XZYX_IPCALL_COUNT,
            sum(XZYX_KFDP_COUNT) XZYX_KFDP_COUNT,
            sum(XZYX_HBFX_COUNT) XZYX_HBFX_COUNT,
            sum(XZYX_YSTJ_COUNT) XZYX_YSTJ_COUNT,
            sum(XZYX_PTWT_COUNT) XZYX_PTWT_COUNT,
            sum(XZYX_XSWT_COUNT) XZYX_XSWT_COUNT,
            sum(XZYX_DJWT_COUNT) XZYX_DJWT_COUNT,
            sum(XZYX_BZWT_COUNT) XZYX_BZWT_COUNT,
            sum(XZYX_FK_COUNT) XZYX_FK_COUNT,
            sum(XZYX_YJ_COUNT) XZYX_YJ_COUNT,
            sum(XZYX_DK_COUNT) XZYX_DK_COUNT,
            sum(XZYX_PROFIT_AMOUNT) XZYX_PROFIT_AMOUNT,
            sum(USER_COUNT) USER_COUNT
    from FUN_ASSESSMENT_STATISTICS
    <where>
        <if test="1== rangeType">
          and COMP_ID = #{rangeId}
        </if>
        <if test="2== rangeType">
          and AREA_ID = #{rangeId}
        </if>
        <if test="3== rangeType">
          and REG_ID = #{rangeId}
        </if>
        <if test="4== rangeType">
          and DEPT_ID = #{rangeId}
        </if>
        <if test="5== rangeType">
          and REG_ID = #{rangeId}
        </if>
        <if test="null != checkType">
          and CHECK_TYPE = #{checkType}
        </if>
        <if test="null != checkBusiness and 0 != checkBusiness">
          and CASE_TYPE = #{checkBusiness}
        </if>
        <if test="null != assessmentMonth and '' != assessmentMonth">
          and ASSESSMENT_MONTH= #{assessmentMonth}
        </if>
      GROUP BY CASE_TYPE
    </where>
  </select>
   <select id="getBeforeDataList" resultType="java.util.Map">
        SELECT USER_ID userId, ,CASE_TYPE caseType, ROLE_WAGE_CONFIG_ID roleWageConfigId,
             sum(iif(check_type=1 , XZ_FXZ_COUNT, 0)) xzFxzCount, sum(iif(check_type=2, XZ_FXZ_COUNT, 0)) xzMFxzCount
            ,sum(iif(check_type=1 , XZ_KXZ_COUNT, 0)) xzKxzCount, sum(iif(check_type=2, XZ_KXZ_COUNT, 0)) xzMKxzCount
            ,sum(iif(check_type=1 , XZ_GJ_COUNT, 0)) xzGjCount, sum(iif(check_type=2, XZ_GJ_COUNT, 0)) xzMGjCount
            ,sum(iif(check_type=1 , XZ_TPSC_COUNT, 0)) xzTpscCount, sum(iif(check_type=2, XZ_TPSC_COUNT, 0)) xzMTpscCount
            ,sum(iif(check_type=1 , XZ_SPSC_COUNT, 0)) xzSpscCount, sum(iif(check_type=2, XZ_SPSC_COUNT, 0)) xzMSpscCount
            ,sum(iif(check_type=1 , XZ_VRSC_COUNT, 0)) xzVrscCount, sum(iif(check_type=2, XZ_VRSC_COUNT, 0)) xzMVrscCount
            ,sum(iif(check_type=1 , XZ_ZFY_COUNT, 0)) xzZfyCount, sum(iif(check_type=2, XZ_ZFY_COUNT, 0)) xzMZfyCount
            ,sum(iif(check_type=1 , XZ_IPCALL_COUNT, 0)) xzIpcallCount, sum(iif(check_type=2, XZ_IPCALL_COUNT, 0)) xzMIpcallCount
            ,sum(iif(check_type=1 , XZ_KFDP_COUNT, 0)) xzKfdpCount, sum(iif(check_type=2, XZ_KFDP_COUNT, 0)) xzMKfdpCount
            ,sum(iif(check_type=1 , XZ_HBFX_COUNT, 0)) xzHbfxCount, sum(iif(check_type=2, XZ_HBFX_COUNT, 0)) xzMHbfxCount
            ,sum(iif(check_type=1 , XZ_YSTJ_COUNT, 0)) xzYstjCount, sum(iif(check_type=2, XZ_YSTJ_COUNT, 0)) xzMYstjCount
            ,sum(iif(check_type=1 , XZ_PTWT_COUNT, 0)) xzPtwtCount, sum(iif(check_type=2, XZ_PTWT_COUNT, 0)) xzMPtwtCount
            ,sum(iif(check_type=1 , XZ_XSWT_COUNT, 0)) xzXswtCount, sum(iif(check_type=2, XZ_XSWT_COUNT, 0)) xzMXswtCount
            ,sum(iif(check_type=1 , XZ_DJWT_COUNT, 0)) xzDjwtCount, sum(iif(check_type=2, XZ_DJWT_COUNT, 0)) xzMDjwtCount
            ,sum(iif(check_type=1 , XZ_BZWT_COUNT, 0)) xzBzwtCount, sum(iif(check_type=2, XZ_BZWT_COUNT, 0)) xzMBzwtCount
            ,sum(iif(check_type=1 , XZ_FK_COUNT, 0)) xzFkCount, sum(iif(check_type=2, XZ_FK_COUNT, 0)) xzMFkCount
            ,sum(iif(check_type=1 , XZ_YJ_COUNT, 0)) xzYjCount, sum(iif(check_type=2, XZ_YJ_COUNT, 0)) xzMYjCount
            ,sum(iif(check_type=1 , XZ_DK_COUNT, 0)) xzDkCount, sum(iif(check_type=2, XZ_DK_COUNT, 0)) xzMDkCount
            ,sum(iif(check_type=1 , XZ_PROFIT_AMOUNT, 0)) xzProfitAmount, sum(iif(check_type=2, XZ_PROFIT_AMOUNT, 0)) xzProfitAmount

            ,sum(iif(check_type=1 , XZYX_FXZ_COUNT, 0))    xzyxFxzCount, sum(iif(check_type=2,       XZYX_FXZ_COUNT, 0))   xzyxMFxzCount
            ,sum(iif(check_type=1 , XZYX_KXZ_COUNT, 0))    xzyxKxzCount, sum(iif(check_type=2,       XZYX_KXZ_COUNT, 0))   xzyxMKxzCount
            ,sum(iif(check_type=1 , XZYX_GJ_COUNT, 0))     xzyxHjCount, sum(iif(check_type=2,         XZYX_GJ_COUNT, 0))   xzyxMHjCount
            ,sum(iif(check_type=1 , XZYX_TPSC_COUNT, 0))   xzyxTpscCount, sum(iif(check_type=2,     XZYX_TPSC_COUNT, 0))   xzyxMTpscCount
            ,sum(iif(check_type=1 , XZYX_SPSC_COUNT, 0))   xzyxSpscCount, sum(iif(check_type=2,     XZYX_SPSC_COUNT, 0))   xzyxMSpscCount
            ,sum(iif(check_type=1 , XZYX_VRSC_COUNT, 0))   xzyxVrscCount, sum(iif(check_type=2,     XZYX_VRSC_COUNT, 0))   xzyxMVrscCount
            ,sum(iif(check_type=1 , XZYX_ZFY_COUNT, 0))    xzyxZfyCount, sum(iif(check_type=2,       XZYX_ZFY_COUNT, 0))   xzyxMZfyCount
            ,sum(iif(check_type=1 , XZYX_IPCALL_COUNT, 0)) xzyxIpcallCount, sum(iif(check_type=2, XZYX_IPCALL_COUNT, 0))   xzyxMIpcallCount
            ,sum(iif(check_type=1 , XZYX_KFDP_COUNT, 0))   xzyxKfdpCount, sum(iif(check_type=2,     XZYX_KFDP_COUNT, 0))   xzyxMKfdpCount
            ,sum(iif(check_type=1 , XZYX_HBFX_COUNT, 0))   xzyxHbfxCount, sum(iif(check_type=2,     XZYX_HBFX_COUNT, 0))   xzyxMHbfxCount
            ,sum(iif(check_type=1 , XZYX_YSTJ_COUNT, 0))   xzyxYstjCount, sum(iif(check_type=2,     XZYX_YSTJ_COUNT, 0))   xzyxMYstjCount
            ,sum(iif(check_type=1 , XZYX_PTWT_COUNT, 0))   xzyxPtwtCount, sum(iif(check_type=2,     XZYX_PTWT_COUNT, 0))   xzyxMPtwtCount
            ,sum(iif(check_type=1 , XZYX_XSWT_COUNT, 0))   xzyxXswtCount, sum(iif(check_type=2,     XZYX_XSWT_COUNT, 0))   xzyxMXswtCount
            ,sum(iif(check_type=1 , XZYX_DJWT_COUNT, 0))   xzyxDjwtCount, sum(iif(check_type=2,     XZYX_DJWT_COUNT, 0))   xzyxMDjwtCount
            ,sum(iif(check_type=1 , XZYX_BZWT_COUNT, 0))   xzyxBzwtCount, sum(iif(check_type=2,     XZYX_BZWT_COUNT, 0))   xzyxMBzwtCount
            ,sum(iif(check_type=1 , XZYX_FK_COUNT, 0))     xzyxFkCount, sum(iif(check_type=2,         XZYX_FK_COUNT, 0))   xzyxMFkCount
            ,sum(iif(check_type=1 , XZYX_YJ_COUNT, 0))     xzyxYjCount, sum(iif(check_type=2,         XZYX_YJ_COUNT, 0))   xzyxMYjCount
            ,sum(iif(check_type=1 , XZYX_DK_COUNT, 0))     xzyxDkCount, sum(iif(check_type=2,         XZYX_DK_COUNT, 0))   xzyxMDkCount
            ,sum(iif(check_type=1 , XZ_PROFIT_AMOUNT, 0))  xzyxProfitAmount, sum(iif(check_type=2, XZYX_PROFIT_AMOUNT, 0)) xzyxMProfitAmount
        FROM FUN_ASSESSMENT_STATISTICS
        <where>
            <if test="null != param.cityId">
                and CITY_ID = #{param.cityId}
            </if>
            <if test="null != param.compId">
                and COMP_ID = #{param.compId}
            </if>
            <if test="null != param.areaId">
                and AREA_ID = #{param.areaId}
            </if>
            <if test="null != param.regId">
                and REG_ID = #{param.regId}
            </if>
            <if test="null != param.deptId">
                and DEPT_ID = #{param.deptId}
            </if>
            <if test="null != param.grId">
                and GR_ID = #{param.grId}
            </if>
            <if test="null != param.userId">
                and USER_ID = #{param.userId}
            </if>
            <if test="null != param.checkType">
              and CHECK_TYPE = #{param.checkType}
            </if>
            <if test="null != param.assessmentMonth and '' != param.assessmentMonth">
                and ASSESSMENT_MONTH= #{param.assessmentMonth}
            </if>
        </where>
        GROUP BY USER_ID,ID, ROLE_WAGE_CONFIG_ID,CASE_TYPE
        ORDER BY ID desc
    </select>

  <select id="getPageCount" resultType="java.lang.Long">
    select count(1) from FUN_ASSESSMENT_STATISTICS
    <where>
      <if test="null != param.cityId">
        and CITY_ID = #{param.cityId}
      </if>
      <if test="null != param.compId">
        and COMP_ID = #{param.compId}
      </if>
      <if test="null != param.areaId">
        and AREA_ID = #{param.areaId}
      </if>
      <if test="null != param.regId">
        and REG_ID = #{param.regId}
      </if>
      <if test="null != param.deptId">
        and DEPT_ID = #{param.deptId}
      </if>
      <if test="null != param.grId">
        and GR_ID = #{param.grId}
      </if>
      <if test="null != param.userId">
        and USER_ID = #{param.userId}
      </if>
      <if test="null != param.checkType">
        and CHECK_TYPE = #{param.checkType}
      </if>
      <if test="null != param.assessmentMonth and '' != param.assessmentMonth">
          and ASSESSMENT_MONTH= #{param.assessmentMonth}
      </if>
    </where>
  </select>


</mapper>