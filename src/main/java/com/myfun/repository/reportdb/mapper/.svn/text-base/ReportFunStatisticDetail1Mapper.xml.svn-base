<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.reportdb.dao.ReportFunStatisticDetail1Mapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.reportdb.po.ReportFunStatisticDetail1">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="STATISTIC_TYPE" jdbcType="INTEGER" property="statisticType" />
    <result column="CASE_TYPE" jdbcType="INTEGER" property="caseType" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="TRACK_ID" jdbcType="VARCHAR" property="trackId" />
    <result column="CASE_STATUS" jdbcType="INTEGER" property="caseStatus" />
    <result column="CASE_CREATE_TIME" jdbcType="TIMESTAMP" property="caseCreateTime" />
    <result column="CASE_AREA_ID" jdbcType="INTEGER" property="caseAreaId" />
    <result column="CASE_REG_ID" jdbcType="INTEGER" property="caseRegId" />
    <result column="CASE_DEPT_ID" jdbcType="INTEGER" property="caseDeptId" />
    <result column="CASE_GR_ID" jdbcType="INTEGER" property="caseGrId" />
    <result column="CASE_USER_ID" jdbcType="INTEGER" property="caseUserId" />
    <result column="CASE_ARCHIVE_ID" jdbcType="INTEGER" property="caseArchiveId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, USER_ID, ARCHIVE_ID, CITY_ID, STATISTIC_TYPE, 
    CASE_TYPE, CASE_ID, CREATE_TIME, TRACK_ID, CASE_STATUS, CASE_CREATE_TIME, CASE_AREA_ID, 
    CASE_REG_ID, CASE_DEPT_ID, CASE_GR_ID, CASE_USER_ID, CASE_ARCHIVE_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.reportdb.po.ReportFunStatisticDetail1Example" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from  FUN_STATISTIC_DETAIL_1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_STATISTIC_DETAIL_1
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbggenerated-->
    delete from FUN_STATISTIC_DETAIL_1
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.reportdb.po.ReportFunStatisticDetail1Example">
    <!--@mbggenerated-->
    delete from FUN_STATISTIC_DETAIL_1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.reportdb.po.ReportFunStatisticDetail1" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_STATISTIC_DETAIL_1 (COMP_ID, AREA_ID, REG_ID, 
      DEPT_ID, GR_ID, USER_ID, 
      ARCHIVE_ID, CITY_ID, STATISTIC_TYPE, 
      CASE_TYPE, CASE_ID, CREATE_TIME, 
      TRACK_ID, CASE_STATUS, CASE_CREATE_TIME, 
      CASE_AREA_ID, CASE_REG_ID, CASE_DEPT_ID, 
      CASE_GR_ID, CASE_USER_ID, CASE_ARCHIVE_ID
      )
    values (#{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{regId,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{archiveId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{statisticType,jdbcType=INTEGER}, 
      #{caseType,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{trackId,jdbcType=VARCHAR}, #{caseStatus,jdbcType=INTEGER}, #{caseCreateTime,jdbcType=TIMESTAMP}, 
      #{caseAreaId,jdbcType=INTEGER}, #{caseRegId,jdbcType=INTEGER}, #{caseDeptId,jdbcType=INTEGER}, 
      #{caseGrId,jdbcType=INTEGER}, #{caseUserId,jdbcType=INTEGER}, #{caseArchiveId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.reportdb.po.ReportFunStatisticDetail1" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_STATISTIC_DETAIL_1
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="statisticType != null">
        STATISTIC_TYPE,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="trackId != null">
        TRACK_ID,
      </if>
      <if test="caseStatus != null">
        CASE_STATUS,
      </if>
      <if test="caseCreateTime != null">
        CASE_CREATE_TIME,
      </if>
      <if test="caseAreaId != null">
        CASE_AREA_ID,
      </if>
      <if test="caseRegId != null">
        CASE_REG_ID,
      </if>
      <if test="caseDeptId != null">
        CASE_DEPT_ID,
      </if>
      <if test="caseGrId != null">
        CASE_GR_ID,
      </if>
      <if test="caseUserId != null">
        CASE_USER_ID,
      </if>
      <if test="caseArchiveId != null">
        CASE_ARCHIVE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="statisticType != null">
        #{statisticType,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackId != null">
        #{trackId,jdbcType=VARCHAR},
      </if>
      <if test="caseStatus != null">
        #{caseStatus,jdbcType=INTEGER},
      </if>
      <if test="caseCreateTime != null">
        #{caseCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="caseAreaId != null">
        #{caseAreaId,jdbcType=INTEGER},
      </if>
      <if test="caseRegId != null">
        #{caseRegId,jdbcType=INTEGER},
      </if>
      <if test="caseDeptId != null">
        #{caseDeptId,jdbcType=INTEGER},
      </if>
      <if test="caseGrId != null">
        #{caseGrId,jdbcType=INTEGER},
      </if>
      <if test="caseUserId != null">
        #{caseUserId,jdbcType=INTEGER},
      </if>
      <if test="caseArchiveId != null">
        #{caseArchiveId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.reportdb.po.ReportFunStatisticDetail1Example" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_STATISTIC_DETAIL_1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_STATISTIC_DETAIL_1
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.statisticType != null">
        STATISTIC_TYPE = #{record.statisticType,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.trackId != null">
        TRACK_ID = #{record.trackId,jdbcType=VARCHAR},
      </if>
      <if test="record.caseStatus != null">
        CASE_STATUS = #{record.caseStatus,jdbcType=INTEGER},
      </if>
      <if test="record.caseCreateTime != null">
        CASE_CREATE_TIME = #{record.caseCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.caseAreaId != null">
        CASE_AREA_ID = #{record.caseAreaId,jdbcType=INTEGER},
      </if>
      <if test="record.caseRegId != null">
        CASE_REG_ID = #{record.caseRegId,jdbcType=INTEGER},
      </if>
      <if test="record.caseDeptId != null">
        CASE_DEPT_ID = #{record.caseDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.caseGrId != null">
        CASE_GR_ID = #{record.caseGrId,jdbcType=INTEGER},
      </if>
      <if test="record.caseUserId != null">
        CASE_USER_ID = #{record.caseUserId,jdbcType=INTEGER},
      </if>
      <if test="record.caseArchiveId != null">
        CASE_ARCHIVE_ID = #{record.caseArchiveId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_STATISTIC_DETAIL_1
    set ID = #{record.id,jdbcType=BIGINT},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      STATISTIC_TYPE = #{record.statisticType,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      TRACK_ID = #{record.trackId,jdbcType=VARCHAR},
      CASE_STATUS = #{record.caseStatus,jdbcType=INTEGER},
      CASE_CREATE_TIME = #{record.caseCreateTime,jdbcType=TIMESTAMP},
      CASE_AREA_ID = #{record.caseAreaId,jdbcType=INTEGER},
      CASE_REG_ID = #{record.caseRegId,jdbcType=INTEGER},
      CASE_DEPT_ID = #{record.caseDeptId,jdbcType=INTEGER},
      CASE_GR_ID = #{record.caseGrId,jdbcType=INTEGER},
      CASE_USER_ID = #{record.caseUserId,jdbcType=INTEGER},
      CASE_ARCHIVE_ID = #{record.caseArchiveId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.reportdb.po.ReportFunStatisticDetail1">
    <!--@mbggenerated-->
    update FUN_STATISTIC_DETAIL_1
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="statisticType != null">
        STATISTIC_TYPE = #{statisticType,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackId != null">
        TRACK_ID = #{trackId,jdbcType=VARCHAR},
      </if>
      <if test="caseStatus != null">
        CASE_STATUS = #{caseStatus,jdbcType=INTEGER},
      </if>
      <if test="caseCreateTime != null">
        CASE_CREATE_TIME = #{caseCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="caseAreaId != null">
        CASE_AREA_ID = #{caseAreaId,jdbcType=INTEGER},
      </if>
      <if test="caseRegId != null">
        CASE_REG_ID = #{caseRegId,jdbcType=INTEGER},
      </if>
      <if test="caseDeptId != null">
        CASE_DEPT_ID = #{caseDeptId,jdbcType=INTEGER},
      </if>
      <if test="caseGrId != null">
        CASE_GR_ID = #{caseGrId,jdbcType=INTEGER},
      </if>
      <if test="caseUserId != null">
        CASE_USER_ID = #{caseUserId,jdbcType=INTEGER},
      </if>
      <if test="caseArchiveId != null">
        CASE_ARCHIVE_ID = #{caseArchiveId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.reportdb.po.ReportFunStatisticDetail1">
    <!--@mbggenerated-->
    update FUN_STATISTIC_DETAIL_1
    set COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      STATISTIC_TYPE = #{statisticType,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      TRACK_ID = #{trackId,jdbcType=VARCHAR},
      CASE_STATUS = #{caseStatus,jdbcType=INTEGER},
      CASE_CREATE_TIME = #{caseCreateTime,jdbcType=TIMESTAMP},
      CASE_AREA_ID = #{caseAreaId,jdbcType=INTEGER},
      CASE_REG_ID = #{caseRegId,jdbcType=INTEGER},
      CASE_DEPT_ID = #{caseDeptId,jdbcType=INTEGER},
      CASE_GR_ID = #{caseGrId,jdbcType=INTEGER},
      CASE_USER_ID = #{caseUserId,jdbcType=INTEGER},
      CASE_ARCHIVE_ID = #{caseArchiveId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertToDetail" keyProperty="id" parameterType="com.myfun.repository.reportdb.po.ReportFunStatisticDetail1" useGeneratedKeys="true">
    insert into FUN_STATISTIC_DETAIL_${statisticType}
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">COMP_ID,</if>
      <if test="areaId != null">AREA_ID,</if>
      <if test="regId != null">REG_ID,</if>
      <if test="deptId != null">DEPT_ID,</if>
      <if test="grId != null">GR_ID,</if>
      <if test="userId != null">USER_ID,</if>
      <if test="archiveId != null">ARCHIVE_ID,</if>
      <if test="cityId != null">CITY_ID,</if>
      <if test="statisticType != null">STATISTIC_TYPE,</if>
      <if test="caseType != null">CASE_TYPE,</if>
      <if test="caseId != null">CASE_ID,</if>
      <if test="createTime != null">CREATE_TIME,</if>
      <if test="trackId != null">TRACK_ID,</if>
      <if test="caseStatus != null">CASE_STATUS,</if>
      <if test="caseCreateTime != null">CASE_CREATE_TIME,</if>
      <if test="caseAreaId != null">CASE_AREA_ID,</if>
      <if test="caseRegId != null">CASE_REG_ID,</if>
      <if test="caseDeptId != null">CASE_DEPT_ID,</if>
      <if test="caseGrId != null">CASE_GR_ID,</if>
      <if test="caseUserId != null">CASE_USER_ID,</if>
      <if test="caseArchiveId != null">CASE_ARCHIVE_ID,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">#{compId,jdbcType=INTEGER},</if>
      <if test="areaId != null">#{areaId,jdbcType=INTEGER},</if>
      <if test="regId != null">#{regId,jdbcType=INTEGER},</if>
      <if test="deptId != null">#{deptId,jdbcType=INTEGER},</if>
      <if test="grId != null">#{grId,jdbcType=INTEGER},</if>
      <if test="userId != null">#{userId,jdbcType=INTEGER},</if>
      <if test="archiveId != null">#{archiveId,jdbcType=INTEGER},</if>
      <if test="cityId != null">#{cityId,jdbcType=INTEGER},</if>
      <if test="statisticType != null">#{statisticType,jdbcType=INTEGER},</if>
      <if test="caseType != null">#{caseType,jdbcType=INTEGER},</if>
      <if test="caseId != null">#{caseId,jdbcType=INTEGER},</if>
      <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
      <if test="trackId != null">#{trackId,jdbcType=VARCHAR},</if>
      <if test="caseStatus != null">#{caseStatus,jdbcType=INTEGER},</if>
      <if test="caseCreateTime != null">#{caseCreateTime,jdbcType=TIMESTAMP},</if>
      <if test="caseAreaId != null">#{caseAreaId},</if>
      <if test="caseRegId != null">#{caseRegId},</if>
      <if test="caseDeptId != null">#{caseDeptId},</if>
      <if test="caseGrId != null">#{caseGrId},</if>
      <if test="caseUserId != null">#{caseUserId},</if>
      <if test="caseArchiveId != null">#{caseArchiveId},</if>
    </trim>
  </insert>
	
	<select id="count" resultType="java.lang.Integer">
		select count(*)
		from FUN_STATISTIC_DETAIL_${statisticType} <!-- 依据类型用不同的表 -->
		<where>
			AND COMP_ID = #{compId} AND CITY_ID = #{cityId}
			<if test="areaId != null">AND AREA_ID = #{areaId}</if>
			<if test="regId != null">AND REG_ID = #{regId}</if>
			<if test="deptId != null">AND DEPT_ID = #{deptId}</if>
			<if test="grId != null">AND GR_ID = #{grId}</if>
			<if test="userId != null">AND USER_ID = #{userId}</if>
			<if test="cityId != null">AND CITY_ID = #{cityId}</if>
			<if test="caseType != null">AND CASE_TYPE = #{caseType}</if>
			<if test="caseId != null">AND CASE_ID = #{caseId}</if>
			<if test="trackId != null">AND TRACK_ID = #{trackId}</if>
			<if test="createTime != null">AND CREATE_TIME = #{createTime}</if>
		</where>
	</select>
	
	<select id="getNotTrackCaseIdList" resultType="java.util.Map">
		SELECT A.CASE_ID caseId,count(1) counts
		FROM FUN_STATISTIC_DETAIL_${param.statisticTypeMain} A
		LEFT JOIN FUN_STATISTIC_DETAIL_${param.statisticTypeSub} B
		ON B.COMP_ID = A.COMP_ID AND B.CITY_ID = A.CITY_ID AND B.CASE_TYPE = A.CASE_TYPE
		AND B.CASE_ID = A.CASE_ID AND B.CREATE_TIME = A.CREATE_TIME
		WHERE B.ID IS NULL AND A.COMP_ID = #{param.compId} AND A.CITY_ID = #{shardCityId}
		AND A.${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		AND A.CASE_TYPE = #{param.caseType}
		AND A.CREATE_TIME &gt;= #{param.startTime}
		AND A.CREATE_TIME &lt;= #{param.endTime}
		<if test="param.areaId != null and param.areaId != ''">AND A.AREA_ID = #{param.areaId}</if>
		<if test="param.regId != null and param.regId != ''">AND A.REG_ID = #{param.regId}</if>
		<if test="param.deptId != null and param.deptId != ''">AND A.DEPT_ID = #{param.deptId}</if>
		<if test="param.grId != null and param.grId != ''">AND A.GR_ID = #{param.grId}</if>
		<if test="param.userId != null and param.userId != ''">AND A.USER_ID = #{param.userId}</if>
		GROUP BY A.CASE_ID
		ORDER BY MAX(A.CREATE_TIME) DESC
	</select>
	
	<select id="getCaseIdList" resultType="java.util.Map">
		SELECT CASE_ID caseId,count(1) counts FROM FUN_STATISTIC_DETAIL_${param.statisticType}
		WHERE COMP_ID = #{param.compId} AND CITY_ID = #{shardCityId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		AND CASE_TYPE = #{param.caseType}
		AND CREATE_TIME &gt;= #{param.startTime}
		AND CREATE_TIME &lt;= #{param.endTime}
		<if test="param.areaId != null and param.areaId != ''">and AREA_ID = #{param.areaId}</if>
		<if test="param.regId != null and param.regId != ''">and REG_ID = #{param.regId}</if>
		<if test="param.deptId != null and param.deptId != ''">and DEPT_ID = #{param.deptId}</if>
		<if test="param.grId != null and param.grId != ''">and GR_ID = #{param.grId}</if>
		<if test="param.userId != null and param.userId != ''">and USER_ID = #{param.userId}</if>
		GROUP BY CASE_ID
		ORDER BY max(CREATE_TIME) DESC
	</select>
	
	<select id="getWorkCountTrackIdList" resultType="java.util.Map">
		SELECT TRACK_ID trackId FROM FUN_STATISTIC_DETAIL_${param.statisticType}
		WHERE COMP_ID = #{param.compId} AND CITY_ID = #{shardCityId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.deptId != null and param.deptId != ''">and dept_id = #{param.deptId}</if>
		AND CASE_TYPE = #{param.caseType}
		AND CREATE_TIME &gt;= #{param.startTime}
		AND CREATE_TIME &lt;= #{param.endTime}
		AND TRACK_ID IS NOT NULL
		ORDER BY CREATE_TIME DESC
	</select>
	
	<select id="getWorkCountCountsForTrack" resultType="java.util.Map">
		SELECT CASE_TYPE caseType, count(1) counts
		FROM FUN_STATISTIC_DETAIL_${param.statisticType}
		WHERE COMP_ID = #{param.compId} AND CITY_ID = #{shardCityId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		AND CREATE_TIME &gt;= #{param.startTime}
		AND CREATE_TIME &lt;= #{param.endTime}
		<if test="param.caseTypeArr != null">
			AND CASE_TYPE IN
			<foreach open="(" close=")" separator="," collection="param.caseTypeArr" item="item">
				#{item}
			</foreach>
		</if>
		<if test="param.areaId != null and param.areaId != ''">and AREA_ID = #{param.areaId}</if>
		<if test="param.regId != null and param.regId != ''">and REG_ID = #{param.regId}</if>
		<if test="param.deptId != null and param.deptId != ''">and DEPT_ID = #{param.deptId}</if>
		<if test="param.grId != null and param.grId != ''">and GR_ID = #{param.grId}</if>
		<if test="param.userId != null and param.userId != ''">and USER_ID = #{param.userId}</if>
		GROUP BY CASE_TYPE
	</select>
	
	<select id="getWorkCountCountsForNotTrack" resultType="java.util.Map">
		SELECT A.CASE_TYPE caseType,count(1) counts
		FROM FUN_STATISTIC_DETAIL_${param.statisticTypeMain} A
		LEFT JOIN FUN_STATISTIC_DETAIL_${param.statisticTypeSub} B
		ON B.COMP_ID = A.COMP_ID AND B.CITY_ID = A.CITY_ID AND B.CASE_TYPE = A.CASE_TYPE
		AND B.CASE_ID = A.CASE_ID AND B.CREATE_TIME = A.CREATE_TIME
		WHERE B.ID IS NULL AND A.COMP_ID = #{param.compId} AND A.CITY_ID = #{shardCityId}
		AND A.${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		AND A.CREATE_TIME &gt;= #{param.startTime}
		AND A.CREATE_TIME &lt;= #{param.endTime}
		<if test="param.areaId != null and param.areaId != ''">AND A.AREA_ID = #{param.areaId}</if>
		<if test="param.regId != null and param.regId != ''">AND A.REG_ID = #{param.regId}</if>
		<if test="param.deptId != null and param.deptId != ''">AND A.DEPT_ID = #{param.deptId}</if>
		<if test="param.grId != null and param.grId != ''">AND A.GR_ID = #{param.grId}</if>
		<if test="param.userId != null and param.userId != ''">AND A.USER_ID = #{param.userId}</if>
		GROUP BY A.CASE_TYPE
	</select>
	
	<select id="getWorkCountCounts" resultType="java.util.Map">
		SELECT COUNT(1) AS counts,a.CASE_TYPE caseType
		FROM (
			SELECT CASE_TYPE
			FROM FUN_STATISTIC_DETAIL_${param.statisticType}
			WHERE COMP_ID = #{param.compId} AND CITY_ID = #{shardCityId}
			AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
			AND CREATE_TIME &gt;= #{param.startTime}
			AND CREATE_TIME &lt;= #{param.endTime}
			<if test="param.areaId != null and param.areaId != ''">and AREA_ID = #{param.areaId}</if>
			<if test="param.regId != null and param.regId != ''">and REG_ID = #{param.regId}</if>
			<if test="param.deptId != null and param.deptId != ''">and DEPT_ID = #{param.deptId}</if>
			<if test="param.grId != null and param.grId != ''">and GR_ID = #{param.grId}</if>
			<if test="param.userId != null and param.userId != ''">and USER_ID = #{param.userId}</if>
			GROUP BY CASE_TYPE,CASE_ID
		)a GROUP BY a.CASE_TYPE
	</select>
	
	<select id="getDetailCountList" resultType="java.util.Map">
		select count(1) as counts,CASE_ID as caseId
		from FUN_STATISTIC_DETAIL_${param.statisticType}
		where COMP_ID = #{param.compId} 
		AND ${param.serchRange} = #{param.serchRangeId}
		<if test="param.areaId != null and '' != param.areaId">AND AREA_ID = #{param.areaId}</if>
		<if test="param.regId != null and '' != param.regId">AND REG_ID = #{param.regId}</if>
		<if test="param.deptId != null and '' != param.deptId">AND DEPT_ID = #{param.deptId}</if>
		<if test="param.grId != null and '' != param.grId">AND GR_ID = #{param.grId}</if>
		<if test="param.userId != null and '' != param.userId">AND USER_ID = #{param.userId}</if>
		<if test="param.cityId != null and '' != param.cityId">AND CITY_ID = #{param.cityId}</if>
		<if test="param.caseType != null and '' != param.caseType">AND CASE_TYPE = #{param.caseType}</if>
		<if test="param.caseId != null and '' != param.caseId">AND CASE_ID = #{param.caseId}</if>
		<if test="param.trackId != null and '' != param.trackId">AND TRACK_ID = #{param.trackId}</if>
		<if test="param.startTime != null and ''!=param.startTime">AND CREATE_TIME &gt;= #{param.startTime}</if>
		<if test="param.endTime != null and ''!=param.startTime">AND CREATE_TIME &lt;= #{param.endTime}</if>
		group by CASE_ID
	</select>
	
	<select id="getFlowAnalysisStockData" resultType="java.util.Map">
		with t1 as (
			select count(1) decrement
			from FUN_STATISTIC_DETAIL_20
			where 
			CITY_ID = #{param.cityId} 
			and COMP_ID = #{param.compId}
			<if test="null != param.areaId">AND AREA_ID = #{param.areaId}</if>
			<if test="null != param.regId">AND REG_ID = #{param.regId}</if>
			<if test="null != param.deptId">AND DEPT_ID = #{param.deptId}</if>
			<if test="null != param.userId">AND USER_ID = #{param.userId}</if>
			and CASE_CREATE_TIME BETWEEN #{param.startTime} and #{param.endTime}
			and CASE_TYPE = #{param.caseType}
			group by CASE_TYPE
		),t2 as (
			select count(1) decrement
			from FUN_STATISTIC_DETAIL_29
			where 
			CITY_ID = #{param.cityId} 
			and COMP_ID = #{param.compId}
			<if test="null != param.areaId">AND AREA_ID = #{param.areaId}</if>
			<if test="null != param.regId">AND REG_ID = #{param.regId}</if>
			<if test="null != param.deptId">AND DEPT_ID = #{param.deptId}</if>
			<if test="null != param.userId">AND USER_ID = #{param.userId}</if>
			and CASE_CREATE_TIME BETWEEN #{param.startTime} and #{param.endTime}
			and CASE_TYPE = #{param.caseType}
			group by CASE_TYPE
		),t3 as (
			select count(1) increment
			from FUN_STATISTIC_DETAIL_1
			where
			CITY_ID = #{param.cityId} 
			and COMP_ID = #{param.compId}
			<if test="null != param.areaId">AND AREA_ID = #{param.areaId}</if>
			<if test="null != param.regId">AND REG_ID = #{param.regId}</if>
			<if test="null != param.deptId">AND DEPT_ID = #{param.deptId}</if>
			<if test="null != param.userId">AND USER_ID = #{param.userId}</if>
			and CASE_CREATE_TIME BETWEEN #{param.startTime} and #{param.endTime}
			and CASE_TYPE = #{param.caseType}
			group by CASE_TYPE
		)
		select t1.decrement+t2.decrement as 
		<if test="param.caseType != null and 1==param.caseType">decrementForSale</if>
		<if test="param.caseType != null and 2==param.caseType">decrementForLease</if>
		<if test="param.caseType != null and 3==param.caseType">decrementForBuy</if>
		<if test="param.caseType != null and 4==param.caseType">decrementForRent</if>
		,t3.increment as 
		<if test="param.caseType != null and 1==param.caseType">incrementForSale</if>
		<if test="param.caseType != null and 2==param.caseType">incrementForLease</if>
		<if test="param.caseType != null and 3==param.caseType">incrementForBuy</if>
		<if test="param.caseType != null and 4==param.caseType">incrementForRent</if>
		from t1,t2,t3
	</select>
	
	<select id="getNeedRepairHouseCustFlowAnalysisCountList" resultType="java.util.Map">
		SELECT
			A.CITY_ID AS cityId,
			A.COMP_ID AS compId,
			ISNULL(A.CASE_AREA_ID, 0) AS areaId,
			ISNULL(A.CASE_REG_ID, 0) AS regId,
			ISNULL(A.CASE_DEPT_ID, 0) AS deptId,
			ISNULL(A.CASE_GR_ID, 0) AS grId,
			ISNULL(A.CASE_USER_ID,0) AS userId,
			ISNULL(A.CASE_ARCHIVE_ID,0) AS archiveId,
			A.CASE_ID AS caseId,
			A.CASE_TYPE AS caseType,
			DATEPART(MONTH, A.CREATE_TIME) AS monthoffYear,
			MAX (A.TRACK_ID) maxId,
			MIN (A.TRACK_ID) minId
		FROM
			FUN_STATISTIC_DETAIL_7 A
		WHERE
			A.CITY_ID = #{param.cityId}
			AND A.COMP_ID = #{param.compId}
			AND A.CASE_TYPE = #{param.caseType}
			<if test="null != param.areaId">AND A.CASE_AREA_ID = #{param.areaId}</if>
			<if test="null != param.regId">AND A.CASE_REG_ID = #{param.regId}</if>
			<if test="null != param.deptId">AND A.CASE_DEPT_ID = #{param.deptId}</if>
            <if test="null != param.grId">AND A.CASE_GR_ID = #{param.grId}</if>
			<if test="null != param.userId">AND A.CASE_USER_ID = #{param.userId}</if>
			and A.CREATE_TIME BETWEEN #{param.startTime} and #{param.endTime}
		GROUP BY
			A.CITY_ID,
			A.COMP_ID,
			ISNULL(A.CASE_AREA_ID, 0),
			ISNULL(A.CASE_REG_ID, 0),
			ISNULL(A.CASE_DEPT_ID, 0),
			ISNULL(A.CASE_GR_ID, 0),
			ISNULL(A.CASE_USER_ID, 0),
			ISNULL(A.CASE_ARCHIVE_ID,0),
			A.CASE_ID,
			A.CASE_TYPE,
			DATEPART(MONTH, A.CREATE_TIME)
	</select>
	
	<select id="getNeedRepairHouseCustFlowAnalysisTrackList" resultType="java.util.Map">
		WITH T_TRACK_DETAIL as(
			SELECT A.CITY_ID,A.COMP_ID as compId,A.CASE_AREA_ID as areaId,A.CASE_REG_ID as regId,A.CASE_DEPT_ID as deptId,
			A.CASE_GR_ID as grId,A.CASE_USER_ID as userId,A.CASE_ARCHIVE_ID as archiveId,A.CASE_ID as caseId,
			A.CASE_TYPE as caseType, CONVERT (VARCHAR (7),A.CREATE_TIME,20) + '-01' as creationTime,
			MAX(A.TRACK_ID) maxId,MIN(A.TRACK_ID) minId
			FROM FUN_STATISTIC_DETAIL_7 A 
			WHERE 
			A.CITY_ID = #{param.cityId}
			AND A.COMP_ID = #{param.compId}
			AND A.CASE_TYPE = #{param.caseType}
			<if test="null != param.areaId">AND A.CASE_AREA_ID = #{param.areaId}</if>
			<if test="null != param.regId">AND A.CASE_REG_ID = #{param.regId}</if>
			<if test="null != param.deptId">AND A.CASE_DEPT_ID = #{param.deptId}</if>
			<if test="null != param.grId">AND A.CASE_GR_ID = #{param.grId}</if>
			<if test="null != param.userId">AND A.CASE_USER_ID = #{param.userId}</if>
			and A.CREATE_TIME BETWEEN #{param.startTime} and #{param.endTime}
			GROUP BY A.CITY_ID,A.COMP_ID,A.CASE_AREA_ID,A.CASE_REG_ID,A.CASE_DEPT_ID,A.CASE_GR_ID,A.CASE_USER_ID,
			A.CASE_ARCHIVE_ID,A.CASE_ID,A.CASE_TYPE,CONVERT (VARCHAR (7),A.CREATE_TIME,20) + '-01'
		)
		select A.CASE_STATUS as caseStaus,A.TRACK_ID as trackId 
		from FUN_STATISTIC_DETAIL_7 A 
		JOIN T_TRACK_DETAIL B ON (A.TRACK_ID = B.maxId OR A.TRACK_ID = B.minId) and A.CITY_ID = #{param.cityId} AND A.COMP_ID= #{param.compId} AND A.CITY_ID = B.CITY_ID
		WHERE A.CITY_ID =#{param.cityId} and A.CREATE_TIME BETWEEN #{param.startTime} and #{param.endTime}
	</select>
	
	<select id="getHouseCustFlowAnalysisCountList" resultType="java.util.Map">
		SELECT CASE_ID caseId,CASE_TYPE caseType,DATEPART(MONTH, CREATE_TIME)
		timeDate, MAX(TRACK_ID) maxId,MIN(TRACK_ID) minId
		FROM FUN_STATISTIC_DETAIL_7
		WHERE
		CITY_ID = #{param.cityId}
		AND COMP_ID = #{param.compId}
		<if test="null != param.newSqlCaseTypeIn">
			AND CASE_TYPE IN
			<foreach close=")" collection="param.newSqlCaseTypeIn" item="caseType" open="(" separator=",">
				#{caseType}
			</foreach>
		</if>
		<if test="null != param.areaId">AND AREA_ID = #{param.areaId}</if>
		<if test="null != param.regId">AND REG_ID = #{param.regId}</if>
		<if test="null != param.deptId">AND DEPT_ID = #{param.deptId}</if>
		<if test="null != param.userId">AND USER_ID = #{param.userId}</if>
		<if test="null != param.startTime and '' != param.startTime">AND CREATE_TIME &gt;= #{param.startTime}</if>
		<if test="null != param.endTime and '' != param.endTime">AND CREATE_TIME &lt;= #{param.endTime}</if>
		GROUP BY CASE_ID,CASE_TYPE,DATEPART(MONTH, CREATE_TIME)
	</select>
	
	<select id="getDeptDutyBuildStatistic" resultType="java.util.Map">
		SELECT A.DEPT_ID deptId,B.BUILD_ID buildId,B.BUILD_NAME buildName,COUNT(1) counts
		<choose>
			<when test="dateType == 2">,convert(VARCHAR(7),A.CREATE_TIME,20) dateTime</when>
			<otherwise>,A.CREATE_TIME dateTime</otherwise>
		</choose>
		<if test="statisticType == 8">,A.HOUSE_CONSIGN houseConsign</if><!-- 委托方式 -->
		FROM FUN_STATISTIC_DETAIL_${statisticType} A
		JOIN FUN_DUTY_BUILD B ON B.BUILD_ID=A.BUILD_ID AND B.CITY_ID=A.CITY_ID AND B.DEPT_ID=A.DEPT_ID
		WHERE A.CITY_ID=#{cityId} AND A.COMP_ID=#{compId} and A.${serchRange}=#{serchRangeId}
		AND A.CREATE_TIME BETWEEN #{startTime} AND #{endTime} AND A.BUILD_ID &gt; 0
		<choose>
			<when test="caseType == 1"> and A.CASE_TYPE = 1</when>
			<when test="caseType == 2"> and A.CASE_TYPE = 2</when>
			<otherwise> and A.CASE_TYPE IN (1, 2)</otherwise>
		</choose>
		<if test="statisticType == 8">AND A.HOUSE_CONSIGN IN (2,3)</if>
		GROUP BY A.DEPT_ID,B.BUILD_ID,B.BUILD_NAME
		<choose>
			<when test="dateType == 2">,convert(VARCHAR(7),A.CREATE_TIME,20)</when>
			<otherwise>,A.CREATE_TIME</otherwise>
		</choose>
		<if test="statisticType == 8">,A.HOUSE_CONSIGN</if><!-- 委托方式 -->
	</select>
	
	<select id="getTotalDutyBuildStatistic" resultType="java.util.Map">
		SELECT B.BUILD_ID buildId,B.BUILD_NAME buildName,COUNT(1) counts
		<choose>
			<when test="dateType == 2">,convert(VARCHAR(7),A.CREATE_TIME,20) dateTime</when>
			<otherwise>,A.CREATE_TIME dateTime</otherwise>
		</choose>
		<if test="statisticType == 8">,A.HOUSE_CONSIGN houseConsign</if><!-- 委托方式 -->
		FROM FUN_STATISTIC_DETAIL_${statisticType} A
		JOIN FUN_DUTY_BUILD B ON B.BUILD_ID=A.BUILD_ID AND B.CITY_ID=A.CITY_ID
		WHERE A.CITY_ID=#{cityId} AND A.COMP_ID=#{compId}
		AND A.CREATE_TIME BETWEEN #{startTime} AND #{endTime}
		<choose>
			<when test="caseType == 1"> AND A.CASE_TYPE = 1</when>
			<when test="caseType == 2"> AND A.CASE_TYPE = 2</when>
			<otherwise> AND A.CASE_TYPE IN (1, 2)</otherwise>
		</choose>
		AND A.BUILD_ID IN
		<foreach collection="buildIds" item="buildId" separator="," open="(" close=")">
			#{buildId}
		</foreach>
		<if test="statisticType == 8">AND A.HOUSE_CONSIGN IN (2,3)</if>
		GROUP BY B.BUILD_ID,B.BUILD_NAME
		<choose>
			<when test="dateType == 2">,convert(VARCHAR(7),A.CREATE_TIME,20)</when>
			<otherwise>,A.CREATE_TIME</otherwise>
		</choose>
		<if test="statisticType == 8">,A.HOUSE_CONSIGN</if><!-- 委托方式 -->
	</select>

	<select id="getAppAchieveMonthStatisticsRankDetail" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM FUN_STATISTIC_DETAIL_${statisticType}
		WHERE COMP_ID = #{compId} AND CREATE_TIME &gt;= #{assessmentMonth}
		<choose>
			<when test="1 == caseType">
				AND CASE_TYPE IN (1,2)
			</when>
			<otherwise>
				AND CASE_TYPE IN (3,4)
			</otherwise>
		</choose>
		<choose>
			<when test="2 == lookType"> AND AREA_ID = #{lookTypeId}</when>
			<when test="3 == lookType"> AND REG_ID = #{lookTypeId}</when>
			<when test="4 == lookType"> AND DEPT_ID = #{lookTypeId}</when>
			<when test="5 == lookType"> AND GR_ID = #{lookTypeId}</when>
			<when test="6 == lookType"> AND USER_ID = #{lookTypeId}</when>
		</choose>
	</select>
	
	
	<select id="getAppAchieveMonthStatisticsRankDetailHouseAdd" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM FUN_STATISTIC_DETAIL_${statisticType}
		WHERE COMP_ID = #{compId} AND CREATE_TIME &gt;= #{assessmentMonth} 
		<if test="null != endTime and endTime != ''">
			AND CREATE_TIME &lt;= #{endTime}
		</if>
		AND CASE_TYPE = #{caseType}
		<choose>
			<when test="2 == lookType"> AND AREA_ID = #{lookTypeId}</when>
			<when test="3 == lookType"> AND REG_ID = #{lookTypeId}</when>
			<when test="4 == lookType"> AND DEPT_ID = #{lookTypeId}</when>
			<when test="5 == lookType"> AND GR_ID = #{lookTypeId}</when>
			<when test="6 == lookType"> AND USER_ID = #{lookTypeId}</when>
		</choose>
		<if test="lookType == 5">
			AND DEPT_ID = 
			<choose>
				<when test="deptId != null">#{deptId}</when>
				<otherwise>#{selfDeptId}</otherwise>
			</choose>
		</if>
		<if test="partnerIds != null and partnerIds.size > 0">
          and PARTNER_ID IN
          <foreach collection="partnerIds" close=")" open="(" index="index" item="rangeId" separator=",">
            #{rangeId}
          </foreach>
        </if>
		ORDER BY ID DESC
	</select>


  <select id="getAppAchieveMonthStatisticsRankDetailHouseAddForOrg" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM FUN_STATISTIC_DETAIL_${statisticType}
    WHERE CITY_ID = #{cityId} and COMP_ID = #{compId} AND CREATE_TIME &gt;= #{assessmentMonth}
    <if test="null != endTime and endTime != ''">
      AND CREATE_TIME &lt;= #{endTime}
    </if>
    AND CASE_TYPE = #{caseType}
    <if test="null!=whereCause and whereCause!=''">
      and ${whereCause}
    </if>
    <if test="partnerIds != null and partnerIds.size > 0">
      and PARTNER_ID IN
      <foreach collection="partnerIds" close=")" open="(" index="index" item="rangeId" separator=",">
        #{rangeId}
      </foreach>
    </if>
    ORDER BY ID DESC
  </select>
	<select id="getAppInnerData" resultType="java.util.Map">
		select 
		<choose>
			<when test="1 == caseType or caseType == 2">
				ISNULL(sum(iif(CREATE_TIME &gt;= #{nowTime} and CASE_STATUS=5,1,0)),0) as ncjHouseNow,
				ISNULL(sum(iif(CREATE_TIME &gt;= #{weekTime} and CASE_STATUS=5,1,0)),0) as ncjHouseWeek,
				ISNULL(sum(iif(CREATE_TIME &gt;= #{monthTime} and CASE_STATUS=5,1,0)),0) as ncjHouseMonth
			</when>
			<otherwise>
				ISNULL(sum(iif(CREATE_TIME &gt;= #{nowTime} and CASE_STATUS=5,1,0)),0) as ncjCustNow,
				ISNULL(sum(iif(CREATE_TIME &gt;= #{weekTime} and CASE_STATUS=5,1,0)),0) as ncjCustWeek,
				ISNULL(sum(iif(CREATE_TIME &gt;= #{monthTime} and CASE_STATUS=5,1,0)),0) as ncjCustMonth
			</otherwise>
		</choose>
<!-- 		ISNULL(sum(iif(CREATION_TIME &gt;= #{nowTime} and CASE_STATUS=6,1,0)),0) as wcjHouseNow, -->
<!-- 		ISNULL(sum(iif(CREATION_TIME &gt;= #{weekTime} and CASE_STATUS=6,1,0)),0) as wcjHouseWeek, -->
<!-- 		ISNULL(sum(iif(CREATION_TIME &gt;= #{monthTime} and CASE_STATUS=6,1,0)),0) as wcjHouseMonth -->
		from FUN_STATISTIC_DETAIL_${statisticType} 
		where COMP_ID = #{compId} and CASE_TYPE = #{caseType} and CASE_STATUS = #{caseStatus}
		<choose>
			<when test="rangeType == 5">
				<if test="deptId != null">
					and DEPT_ID=#{deptId}
				</if>
			</when>
		</choose>
		<choose>
			<when test="rangeType == 2">AND AREA_ID</when>
			<when test="rangeType == 3">AND REG_ID</when>
			<when test="rangeType == 4">AND DEPT_ID</when>
			<when test="rangeType == 5">AND GR_ID</when>
			<when test="rangeType == 6">AND USER_ID</when>
		</choose>
		<if test="rangeType != 1">
		in
			<foreach collection="rangeIds" close=")" open="(" index="index" item="rangeId" separator=",">
				#{rangeId}
			</foreach>
		</if>
		AND CITY_ID = #{shardCityId}
    </select>

  <select id="selectAllNeedUpdateTableName" resultType="java.lang.String">
    select name from sys.tables where name like 'FUN_STATISTIC_DETAIL_%'
  </select>

  <update id="updatePartnerId">
    update  FUN_STATISTIC_TOTLE set  PARTNER_ID = #{partnerId} where CITY_ID = #{shardCityId} and COMP_ID  = #{compId} and DEPT_ID = #{deptId};
    <if test="tables != null and tables.size > 0">
      <foreach collection="tables" item="tableX" close=";" separator=";">
        update ${tableX} set PARTNER_ID = #{partnerId} where CITY_ID = #{shardCityId} and COMP_ID = #{compId} and DEPT_ID = #{deptId}
      </foreach>
    </if>
  </update>

  <select id="selectSctsCount" resultType="java.util.Map">
    SELECT CASE_ID caseId,USER_ID userId,CREATE_TIME createTime,CASE_STATUS caseStatus,CASE_TYPE caseType
    FROM FUN_STATISTIC_DETAIL_13
    WHERE COMP_ID = #{param.compId} AND CITY_ID = #{shardCityId}
    AND CASE_TYPE IN(1,2)
    AND CREATE_TIME &gt;= #{param.startTime}
    <if test="param.areaId != null and param.areaId != ''">and AREA_ID = #{param.areaId}</if>
    <if test="param.regId != null and param.regId != ''">and REG_ID = #{param.regId}</if>
    <if test="param.deptId != null and param.deptId != ''">and DEPT_ID = #{param.deptId}</if>
    <if test="param.grId != null and param.grId != ''">and GR_ID = #{param.grId}</if>
    <if test="param.userId != null and param.userId != ''">and USER_ID = #{param.userId}</if>
    order by CREATE_TIME desc
  </select>

</mapper>

