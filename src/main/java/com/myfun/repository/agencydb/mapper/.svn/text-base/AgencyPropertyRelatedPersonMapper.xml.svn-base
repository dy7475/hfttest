<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.agencydb.dao.AgencyPropertyRelatedPersonMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.agencydb.po.AgencyPropertyRelatedPerson">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COOPERATION_ID" jdbcType="INTEGER" property="cooperationId" />
    <result column="AGENT_ID" jdbcType="INTEGER" property="agentId" />
    <result column="PERSON_TYPE" jdbcType="TINYINT" property="personType" />
    <result column="USER_MOBILE" jdbcType="VARCHAR" property="userMobile" />
    <result column="ORG_ID" jdbcType="INTEGER" property="orgId" />
    <result column="ORG_NAME" jdbcType="VARCHAR" property="orgName" />
    <result column="RESPONSIBILITY_PERIOD_BEGIN" jdbcType="TIMESTAMP" property="responsibilityPeriodBegin" />
    <result column="RESPONSIBILITY_PERIOD_END" jdbcType="TIMESTAMP" property="responsibilityPeriodEnd" />
    <result column="CREATE_USER_ID" jdbcType="INTEGER" property="createUserId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="DEL_FLAG" jdbcType="TINYINT" property="delFlag" />
    <result column="DEL_USER_ID" jdbcType="INTEGER" property="delUserId" />
    <result column="DEL_TIME" jdbcType="TIMESTAMP" property="delTime" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COOPERATION_ID, AGENT_ID, PERSON_TYPE, USER_MOBILE, ORG_ID, ORG_NAME, RESPONSIBILITY_PERIOD_BEGIN, 
    RESPONSIBILITY_PERIOD_END, CREATE_USER_ID, CREATE_TIME, DEL_FLAG, DEL_USER_ID, DEL_TIME, 
    USER_ID, USER_NAME, BUILD_ID, [STATUS]
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.agencydb.po.AgencyPropertyRelatedPersonExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PROPERTY_RELATED_PERSON
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from PROPERTY_RELATED_PERSON
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from PROPERTY_RELATED_PERSON
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.agencydb.po.AgencyPropertyRelatedPersonExample">
    <!--@mbggenerated-->
    delete from PROPERTY_RELATED_PERSON
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.agencydb.po.AgencyPropertyRelatedPerson" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into PROPERTY_RELATED_PERSON (COOPERATION_ID, AGENT_ID, PERSON_TYPE, 
      USER_MOBILE, ORG_ID, ORG_NAME, 
      RESPONSIBILITY_PERIOD_BEGIN, RESPONSIBILITY_PERIOD_END, 
      CREATE_USER_ID, CREATE_TIME, DEL_FLAG, 
      DEL_USER_ID, DEL_TIME, USER_ID, 
      USER_NAME, BUILD_ID, [STATUS]
      )
    values (#{cooperationId,jdbcType=INTEGER}, #{agentId,jdbcType=INTEGER}, #{personType,jdbcType=TINYINT}, 
      #{userMobile,jdbcType=VARCHAR}, #{orgId,jdbcType=INTEGER}, #{orgName,jdbcType=VARCHAR}, 
      #{responsibilityPeriodBegin,jdbcType=TIMESTAMP}, #{responsibilityPeriodEnd,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT}, 
      #{delUserId,jdbcType=INTEGER}, #{delTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{buildId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.agencydb.po.AgencyPropertyRelatedPerson" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into PROPERTY_RELATED_PERSON
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cooperationId != null">
        COOPERATION_ID,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="personType != null">
        PERSON_TYPE,
      </if>
      <if test="userMobile != null">
        USER_MOBILE,
      </if>
      <if test="orgId != null">
        ORG_ID,
      </if>
      <if test="orgName != null">
        ORG_NAME,
      </if>
      <if test="responsibilityPeriodBegin != null">
        RESPONSIBILITY_PERIOD_BEGIN,
      </if>
      <if test="responsibilityPeriodEnd != null">
        RESPONSIBILITY_PERIOD_END,
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="delFlag != null">
        DEL_FLAG,
      </if>
      <if test="delUserId != null">
        DEL_USER_ID,
      </if>
      <if test="delTime != null">
        DEL_TIME,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="status != null">
        [STATUS],
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cooperationId != null">
        #{cooperationId,jdbcType=INTEGER},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="personType != null">
        #{personType,jdbcType=TINYINT},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="responsibilityPeriodBegin != null">
        #{responsibilityPeriodBegin,jdbcType=TIMESTAMP},
      </if>
      <if test="responsibilityPeriodEnd != null">
        #{responsibilityPeriodEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="delUserId != null">
        #{delUserId,jdbcType=INTEGER},
      </if>
      <if test="delTime != null">
        #{delTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.agencydb.po.AgencyPropertyRelatedPersonExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from PROPERTY_RELATED_PERSON
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update PROPERTY_RELATED_PERSON
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cooperationId != null">
        COOPERATION_ID = #{record.cooperationId,jdbcType=INTEGER},
      </if>
      <if test="record.agentId != null">
        AGENT_ID = #{record.agentId,jdbcType=INTEGER},
      </if>
      <if test="record.personType != null">
        PERSON_TYPE = #{record.personType,jdbcType=TINYINT},
      </if>
      <if test="record.userMobile != null">
        USER_MOBILE = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null">
        ORG_ID = #{record.orgId,jdbcType=INTEGER},
      </if>
      <if test="record.orgName != null">
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.responsibilityPeriodBegin != null">
        RESPONSIBILITY_PERIOD_BEGIN = #{record.responsibilityPeriodBegin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.responsibilityPeriodEnd != null">
        RESPONSIBILITY_PERIOD_END = #{record.responsibilityPeriodEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        CREATE_USER_ID = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        DEL_FLAG = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.delUserId != null">
        DEL_USER_ID = #{record.delUserId,jdbcType=INTEGER},
      </if>
      <if test="record.delTime != null">
        DEL_TIME = #{record.delTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        [STATUS] = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update PROPERTY_RELATED_PERSON
    set ID = #{record.id,jdbcType=INTEGER},
      COOPERATION_ID = #{record.cooperationId,jdbcType=INTEGER},
      AGENT_ID = #{record.agentId,jdbcType=INTEGER},
      PERSON_TYPE = #{record.personType,jdbcType=TINYINT},
      USER_MOBILE = #{record.userMobile,jdbcType=VARCHAR},
      ORG_ID = #{record.orgId,jdbcType=INTEGER},
      ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
      RESPONSIBILITY_PERIOD_BEGIN = #{record.responsibilityPeriodBegin,jdbcType=TIMESTAMP},
      RESPONSIBILITY_PERIOD_END = #{record.responsibilityPeriodEnd,jdbcType=TIMESTAMP},
      CREATE_USER_ID = #{record.createUserId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      DEL_FLAG = #{record.delFlag,jdbcType=TINYINT},
      DEL_USER_ID = #{record.delUserId,jdbcType=INTEGER},
      DEL_TIME = #{record.delTime,jdbcType=TIMESTAMP},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      [STATUS] = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.agencydb.po.AgencyPropertyRelatedPerson">
    <!--@mbggenerated-->
    update PROPERTY_RELATED_PERSON
    <set>
      <if test="cooperationId != null">
        COOPERATION_ID = #{cooperationId,jdbcType=INTEGER},
      </if>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=INTEGER},
      </if>
      <if test="personType != null">
        PERSON_TYPE = #{personType,jdbcType=TINYINT},
      </if>
      <if test="userMobile != null">
        USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        ORG_ID = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="orgName != null">
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="responsibilityPeriodBegin != null">
        RESPONSIBILITY_PERIOD_BEGIN = #{responsibilityPeriodBegin,jdbcType=TIMESTAMP},
      </if>
      <if test="responsibilityPeriodEnd != null">
        RESPONSIBILITY_PERIOD_END = #{responsibilityPeriodEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        DEL_FLAG = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="delUserId != null">
        DEL_USER_ID = #{delUserId,jdbcType=INTEGER},
      </if>
      <if test="delTime != null">
        DEL_TIME = #{delTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        [STATUS] = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencyPropertyRelatedPerson">
    <!--@mbggenerated-->
    update PROPERTY_RELATED_PERSON
    set COOPERATION_ID = #{cooperationId,jdbcType=INTEGER},
      AGENT_ID = #{agentId,jdbcType=INTEGER},
      PERSON_TYPE = #{personType,jdbcType=TINYINT},
      USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      ORG_ID = #{orgId,jdbcType=INTEGER},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      RESPONSIBILITY_PERIOD_BEGIN = #{responsibilityPeriodBegin,jdbcType=TIMESTAMP},
      RESPONSIBILITY_PERIOD_END = #{responsibilityPeriodEnd,jdbcType=TIMESTAMP},
      CREATE_USER_ID = #{createUserId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      DEL_FLAG = #{delFlag,jdbcType=TINYINT},
      DEL_USER_ID = #{delUserId,jdbcType=INTEGER},
      DEL_TIME = #{delTime,jdbcType=TIMESTAMP},
      USER_ID = #{userId,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      [STATUS] = #{status,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>