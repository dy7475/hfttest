<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.agencydb.dao.AgencyWfCompleteEvaMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.agencydb.po.AgencyWfCompleteEva">
    <!--@mbggenerated-->
    <id column="PUSH_LOG_ID" jdbcType="INTEGER" property="pushLogId" />
    <result column="WX_ID" jdbcType="INTEGER" property="wxId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="EVA_STAR" jdbcType="TINYINT" property="evaStar" />
    <result column="EVA_TAG" jdbcType="VARCHAR" property="evaTag" />
    <result column="EVA_CONTENT" jdbcType="VARCHAR" property="evaContent" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="IS_VERTIFY" jdbcType="TINYINT" property="isVertify" />
    <result column="VERTIFY_TIME" jdbcType="TIMESTAMP" property="vertifyTime" />
    <result column="OPERATOR_ID" jdbcType="INTEGER" property="operatorId" />
    <result column="SHOW_STATUS" jdbcType="INTEGER" property="showStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    PUSH_LOG_ID, WX_ID, ARCHIVE_ID, CITY_ID, EVA_STAR, EVA_TAG, EVA_CONTENT, CREATE_TIME, 
    IS_VERTIFY, VERTIFY_TIME, OPERATOR_ID, SHOW_STATUS
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from WF_COMPLETE_EVA
    where PUSH_LOG_ID = #{pushLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from WF_COMPLETE_EVA
    where PUSH_LOG_ID = #{pushLogId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.agencydb.po.AgencyWfCompleteEva">
    <!--@mbggenerated-->
    insert into WF_COMPLETE_EVA (PUSH_LOG_ID, WX_ID, ARCHIVE_ID, 
      CITY_ID, EVA_STAR, EVA_TAG, 
      EVA_CONTENT, CREATE_TIME, IS_VERTIFY, 
      VERTIFY_TIME, OPERATOR_ID, SHOW_STATUS
      )
    values (#{pushLogId,jdbcType=INTEGER}, #{wxId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, 
      #{cityId,jdbcType=INTEGER}, #{evaStar,jdbcType=TINYINT}, #{evaTag,jdbcType=VARCHAR}, 
      #{evaContent,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{isVertify,jdbcType=TINYINT}, 
      #{vertifyTime,jdbcType=TIMESTAMP}, #{operatorId,jdbcType=INTEGER}, #{showStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.agencydb.po.AgencyWfCompleteEva">
    <!--@mbggenerated-->
    insert into WF_COMPLETE_EVA
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pushLogId != null">
        PUSH_LOG_ID,
      </if>
      <if test="wxId != null">
        WX_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="evaStar != null">
        EVA_STAR,
      </if>
      <if test="evaTag != null">
        EVA_TAG,
      </if>
      <if test="evaContent != null">
        EVA_CONTENT,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="isVertify != null">
        IS_VERTIFY,
      </if>
      <if test="vertifyTime != null">
        VERTIFY_TIME,
      </if>
      <if test="operatorId != null">
        OPERATOR_ID,
      </if>
      <if test="showStatus != null">
        SHOW_STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pushLogId != null">
        #{pushLogId,jdbcType=INTEGER},
      </if>
      <if test="wxId != null">
        #{wxId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="evaStar != null">
        #{evaStar,jdbcType=TINYINT},
      </if>
      <if test="evaTag != null">
        #{evaTag,jdbcType=VARCHAR},
      </if>
      <if test="evaContent != null">
        #{evaContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isVertify != null">
        #{isVertify,jdbcType=TINYINT},
      </if>
      <if test="vertifyTime != null">
        #{vertifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="showStatus != null">
        #{showStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.agencydb.po.AgencyWfCompleteEva">
    <!--@mbggenerated-->
    update WF_COMPLETE_EVA
    <set>
      <if test="wxId != null">
        WX_ID = #{wxId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="evaStar != null">
        EVA_STAR = #{evaStar,jdbcType=TINYINT},
      </if>
      <if test="evaTag != null">
        EVA_TAG = #{evaTag,jdbcType=VARCHAR},
      </if>
      <if test="evaContent != null">
        EVA_CONTENT = #{evaContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isVertify != null">
        IS_VERTIFY = #{isVertify,jdbcType=TINYINT},
      </if>
      <if test="vertifyTime != null">
        VERTIFY_TIME = #{vertifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null">
        OPERATOR_ID = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="showStatus != null">
        SHOW_STATUS = #{showStatus,jdbcType=INTEGER},
      </if>
    </set>
    where PUSH_LOG_ID = #{pushLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencyWfCompleteEva">
    <!--@mbggenerated-->
    update WF_COMPLETE_EVA
    set WX_ID = #{wxId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      EVA_STAR = #{evaStar,jdbcType=TINYINT},
      EVA_TAG = #{evaTag,jdbcType=VARCHAR},
      EVA_CONTENT = #{evaContent,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      IS_VERTIFY = #{isVertify,jdbcType=TINYINT},
      VERTIFY_TIME = #{vertifyTime,jdbcType=TIMESTAMP},
      OPERATOR_ID = #{operatorId,jdbcType=INTEGER},
      SHOW_STATUS = #{showStatus,jdbcType=INTEGER}
    where PUSH_LOG_ID = #{pushLogId,jdbcType=INTEGER}
  </update>
  <select id="getCompleteEvaInfoByPushLogId" resultMap="BaseResultMap">
  	SELECT 
  	<include refid="Base_Column_List" />
  	FROM WF_COMPLETE_EVA
  	WHERE PUSH_LOG_ID=#{pushLogId}
  </select>
  
	<resultMap id="agencyWfCompleteEvaDto"
		type="com.myfun.repository.agencydb.dto.AgencyWfCompleteEvaDto">
		<result column="archiveId" jdbcType="VARCHAR" property="archiveId" />
		<result column="attitudeRate" jdbcType="VARCHAR" property="attitudeRate" />
		<result column="explainRate" jdbcType="VARCHAR" property="explainRate" />
		<result column="majorRate" jdbcType="VARCHAR" property="majorRate" />
		<result column="fabulousRate" jdbcType="VARCHAR" property="fabulousRate" />
	</resultMap>
	  
	<select id="getRateByArchiveId" resultMap="agencyWfCompleteEvaDto">
		with t_per_count as(
			select ARCHIVE_ID ,sum(iif( EVA_TAG like '%服务有待提升%',1,0)) as perAttitude ,
				sum(iif( EVA_TAG like '%专业度有待提升%',1,0)) as perMajor,
				sum(iif( EVA_TAG like '%讲解有待提升%',1,0)) as perExplain ,
				sum(iif( EVA_TAG like '%反馈比较及时%',1,0)) as perFabulous 
			from WF_COMPLETE_EVA where EVA_TAG is not null and CITY_ID = 1 GROUP BY ARCHIVE_ID
		), t_total_count as(
			select ARCHIVE_ID,count(1) as attitudeCount 
			from WF_COMPLETE_EVA where CITY_ID = #{cityId} and EVA_TAG is not null GROUP BY ARCHIVE_ID
		)
		select a.ARCHIVE_ID as archiveId,
			((a.perAttitude+0.0)/iif(b.attitudeCount=0,1,b.attitudeCount)) as attitudeRate,
			((a.perMajor+0.0)/iif(b.attitudeCount=0,1,b.attitudeCount)) as majorRate ,
			((a.perExplain+0.0)/iif(b.attitudeCount=0,1,b.attitudeCount)) as explainRate ,
			((a.perFabulous+0.0)/iif(b.attitudeCount=0,1,b.attitudeCount)) as fabulousRate  
		from t_per_count a LEFT JOIN t_total_count b on a.ARCHIVE_ID = b.ARCHIVE_ID 
		where a.ARCHIVE_ID=#{archiveId}
	</select>
</mapper>