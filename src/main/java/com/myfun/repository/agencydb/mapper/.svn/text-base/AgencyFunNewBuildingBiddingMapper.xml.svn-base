<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.agencydb.dao.AgencyFunNewBuildingBiddingMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.agencydb.po.AgencyFunNewBuildingBidding">
    <!--@mbggenerated-->
    <id column="BIDDING_ID" jdbcType="INTEGER" property="biddingId" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="BEGIN_TIME" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="END_TIME" jdbcType="TIMESTAMP" property="endTime" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="PRICE" jdbcType="NUMERIC" property="price" />
    <result column="PERSONAL_PRICE" jdbcType="NUMERIC" property="personalPrice" />
    <result column="PERSONAL_COIN" jdbcType="NUMERIC" property="personalCoin" />
    <result column="COMP_PRICE" jdbcType="NUMERIC" property="compPrice" />
    <result column="COMP_COIN" jdbcType="NUMERIC" property="compCoin" />
    <result column="UA_ID" jdbcType="INTEGER" property="uaId" />
    <result column="COMP_UA_ID" jdbcType="INTEGER" property="compUaId" />
    <result column="UA_TYPE" jdbcType="TINYINT" property="uaType" />
    <result column="CONSULT" jdbcType="INTEGER" property="consult" />
    <result column="BIDD_SOURCE" jdbcType="TINYINT" property="biddSource" />
    <result column="YOUYOU_BIZ_SYNC_FLAG" jdbcType="TINYINT" property="youyouBizSyncFlag" />
    <result column="PHONE_400" jdbcType="VARCHAR" property="phone400" />
    <result column="QUEUE_ID" jdbcType="INTEGER" property="queueId" />
    <result column="SELF_DESC" jdbcType="VARCHAR" property="selfDesc" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    BIDDING_ID, CITY_ID, BUILD_ID, BUILD_NAME, BEGIN_TIME, END_TIME, ARCHIVE_ID, PRICE, 
    PERSONAL_PRICE, PERSONAL_COIN, COMP_PRICE, COMP_COIN, UA_ID, COMP_UA_ID, UA_TYPE, 
    CONSULT, BIDD_SOURCE, YOUYOU_BIZ_SYNC_FLAG, PHONE_400, QUEUE_ID, SELF_DESC, CREATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.agencydb.po.AgencyFunNewBuildingBiddingExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_NEW_BUILDING_BIDDING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_NEW_BUILDING_BIDDING
    where BIDDING_ID = #{biddingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_NEW_BUILDING_BIDDING
    where BIDDING_ID = #{biddingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.agencydb.po.AgencyFunNewBuildingBiddingExample">
    <!--@mbggenerated-->
    delete from FUN_NEW_BUILDING_BIDDING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.agencydb.po.AgencyFunNewBuildingBidding">
    <!--@mbggenerated-->
    <selectKey keyProperty="biddingId" order="BEFORE" resultType="java.lang.Integer">
      SELECT isnull(max(BIDDING_ID), 0) +1 from FUN_NEW_BUILDING_BIDDING
    </selectKey>
    insert into FUN_NEW_BUILDING_BIDDING (BIDDING_ID, CITY_ID, BUILD_ID, 
      BUILD_NAME, BEGIN_TIME, END_TIME, 
      ARCHIVE_ID, PRICE, PERSONAL_PRICE, 
      PERSONAL_COIN, COMP_PRICE, COMP_COIN, 
      UA_ID, COMP_UA_ID, UA_TYPE, 
      CONSULT, BIDD_SOURCE, YOUYOU_BIZ_SYNC_FLAG, 
      PHONE_400, QUEUE_ID, SELF_DESC, 
      CREATE_TIME)
    values (#{biddingId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{buildId,jdbcType=INTEGER}, 
      #{buildName,jdbcType=VARCHAR}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{archiveId,jdbcType=INTEGER}, #{price,jdbcType=NUMERIC}, #{personalPrice,jdbcType=NUMERIC}, 
      #{personalCoin,jdbcType=NUMERIC}, #{compPrice,jdbcType=NUMERIC}, #{compCoin,jdbcType=NUMERIC}, 
      #{uaId,jdbcType=INTEGER}, #{compUaId,jdbcType=INTEGER}, #{uaType,jdbcType=TINYINT}, 
      #{consult,jdbcType=INTEGER}, #{biddSource,jdbcType=TINYINT}, #{youyouBizSyncFlag,jdbcType=TINYINT}, 
      #{phone400,jdbcType=VARCHAR}, #{queueId,jdbcType=INTEGER}, #{selfDesc,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.agencydb.po.AgencyFunNewBuildingBidding">
    <!--@mbggenerated-->
    <selectKey keyProperty="biddingId" order="BEFORE" resultType="java.lang.Integer">
      SELECT isnull(max(BIDDING_ID), 0) +1 from FUN_NEW_BUILDING_BIDDING
    </selectKey>
    insert into FUN_NEW_BUILDING_BIDDING
    <trim prefix="(" suffix=")" suffixOverrides=",">
      BIDDING_ID,
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="buildName != null">
        BUILD_NAME,
      </if>
      <if test="beginTime != null">
        BEGIN_TIME,
      </if>
      <if test="endTime != null">
        END_TIME,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="personalPrice != null">
        PERSONAL_PRICE,
      </if>
      <if test="personalCoin != null">
        PERSONAL_COIN,
      </if>
      <if test="compPrice != null">
        COMP_PRICE,
      </if>
      <if test="compCoin != null">
        COMP_COIN,
      </if>
      <if test="uaId != null">
        UA_ID,
      </if>
      <if test="compUaId != null">
        COMP_UA_ID,
      </if>
      <if test="uaType != null">
        UA_TYPE,
      </if>
      <if test="consult != null">
        CONSULT,
      </if>
      <if test="biddSource != null">
        BIDD_SOURCE,
      </if>
      <if test="youyouBizSyncFlag != null">
        YOUYOU_BIZ_SYNC_FLAG,
      </if>
      <if test="phone400 != null">
        PHONE_400,
      </if>
      <if test="queueId != null">
        QUEUE_ID,
      </if>
      <if test="selfDesc != null">
        SELF_DESC,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{biddingId,jdbcType=INTEGER},
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="personalPrice != null">
        #{personalPrice,jdbcType=NUMERIC},
      </if>
      <if test="personalCoin != null">
        #{personalCoin,jdbcType=NUMERIC},
      </if>
      <if test="compPrice != null">
        #{compPrice,jdbcType=NUMERIC},
      </if>
      <if test="compCoin != null">
        #{compCoin,jdbcType=NUMERIC},
      </if>
      <if test="uaId != null">
        #{uaId,jdbcType=INTEGER},
      </if>
      <if test="compUaId != null">
        #{compUaId,jdbcType=INTEGER},
      </if>
      <if test="uaType != null">
        #{uaType,jdbcType=TINYINT},
      </if>
      <if test="consult != null">
        #{consult,jdbcType=INTEGER},
      </if>
      <if test="biddSource != null">
        #{biddSource,jdbcType=TINYINT},
      </if>
      <if test="youyouBizSyncFlag != null">
        #{youyouBizSyncFlag,jdbcType=TINYINT},
      </if>
      <if test="phone400 != null">
        #{phone400,jdbcType=VARCHAR},
      </if>
      <if test="queueId != null">
        #{queueId,jdbcType=INTEGER},
      </if>
      <if test="selfDesc != null">
        #{selfDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.agencydb.po.AgencyFunNewBuildingBiddingExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_NEW_BUILDING_BIDDING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_NEW_BUILDING_BIDDING
    <set>
      <if test="record.biddingId != null">
        BIDDING_ID = #{record.biddingId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.buildName != null">
        BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        BEGIN_TIME = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        PRICE = #{record.price,jdbcType=NUMERIC},
      </if>
      <if test="record.personalPrice != null">
        PERSONAL_PRICE = #{record.personalPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.personalCoin != null">
        PERSONAL_COIN = #{record.personalCoin,jdbcType=NUMERIC},
      </if>
      <if test="record.compPrice != null">
        COMP_PRICE = #{record.compPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.compCoin != null">
        COMP_COIN = #{record.compCoin,jdbcType=NUMERIC},
      </if>
      <if test="record.uaId != null">
        UA_ID = #{record.uaId,jdbcType=INTEGER},
      </if>
      <if test="record.compUaId != null">
        COMP_UA_ID = #{record.compUaId,jdbcType=INTEGER},
      </if>
      <if test="record.uaType != null">
        UA_TYPE = #{record.uaType,jdbcType=TINYINT},
      </if>
      <if test="record.consult != null">
        CONSULT = #{record.consult,jdbcType=INTEGER},
      </if>
      <if test="record.biddSource != null">
        BIDD_SOURCE = #{record.biddSource,jdbcType=TINYINT},
      </if>
      <if test="record.youyouBizSyncFlag != null">
        YOUYOU_BIZ_SYNC_FLAG = #{record.youyouBizSyncFlag,jdbcType=TINYINT},
      </if>
      <if test="record.phone400 != null">
        PHONE_400 = #{record.phone400,jdbcType=VARCHAR},
      </if>
      <if test="record.queueId != null">
        QUEUE_ID = #{record.queueId,jdbcType=INTEGER},
      </if>
      <if test="record.selfDesc != null">
        SELF_DESC = #{record.selfDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_NEW_BUILDING_BIDDING
    set BIDDING_ID = #{record.biddingId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      BEGIN_TIME = #{record.beginTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      PRICE = #{record.price,jdbcType=NUMERIC},
      PERSONAL_PRICE = #{record.personalPrice,jdbcType=NUMERIC},
      PERSONAL_COIN = #{record.personalCoin,jdbcType=NUMERIC},
      COMP_PRICE = #{record.compPrice,jdbcType=NUMERIC},
      COMP_COIN = #{record.compCoin,jdbcType=NUMERIC},
      UA_ID = #{record.uaId,jdbcType=INTEGER},
      COMP_UA_ID = #{record.compUaId,jdbcType=INTEGER},
      UA_TYPE = #{record.uaType,jdbcType=TINYINT},
      CONSULT = #{record.consult,jdbcType=INTEGER},
      BIDD_SOURCE = #{record.biddSource,jdbcType=TINYINT},
      YOUYOU_BIZ_SYNC_FLAG = #{record.youyouBizSyncFlag,jdbcType=TINYINT},
      PHONE_400 = #{record.phone400,jdbcType=VARCHAR},
      QUEUE_ID = #{record.queueId,jdbcType=INTEGER},
      SELF_DESC = #{record.selfDesc,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.agencydb.po.AgencyFunNewBuildingBidding">
    <!--@mbggenerated-->
    update FUN_NEW_BUILDING_BIDDING
    <set>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        BEGIN_TIME = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=NUMERIC},
      </if>
      <if test="personalPrice != null">
        PERSONAL_PRICE = #{personalPrice,jdbcType=NUMERIC},
      </if>
      <if test="personalCoin != null">
        PERSONAL_COIN = #{personalCoin,jdbcType=NUMERIC},
      </if>
      <if test="compPrice != null">
        COMP_PRICE = #{compPrice,jdbcType=NUMERIC},
      </if>
      <if test="compCoin != null">
        COMP_COIN = #{compCoin,jdbcType=NUMERIC},
      </if>
      <if test="uaId != null">
        UA_ID = #{uaId,jdbcType=INTEGER},
      </if>
      <if test="compUaId != null">
        COMP_UA_ID = #{compUaId,jdbcType=INTEGER},
      </if>
      <if test="uaType != null">
        UA_TYPE = #{uaType,jdbcType=TINYINT},
      </if>
      <if test="consult != null">
        CONSULT = #{consult,jdbcType=INTEGER},
      </if>
      <if test="biddSource != null">
        BIDD_SOURCE = #{biddSource,jdbcType=TINYINT},
      </if>
      <if test="youyouBizSyncFlag != null">
        YOUYOU_BIZ_SYNC_FLAG = #{youyouBizSyncFlag,jdbcType=TINYINT},
      </if>
      <if test="phone400 != null">
        PHONE_400 = #{phone400,jdbcType=VARCHAR},
      </if>
      <if test="queueId != null">
        QUEUE_ID = #{queueId,jdbcType=INTEGER},
      </if>
      <if test="selfDesc != null">
        SELF_DESC = #{selfDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where BIDDING_ID = #{biddingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencyFunNewBuildingBidding">
    <!--@mbggenerated-->
    update FUN_NEW_BUILDING_BIDDING
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      BEGIN_TIME = #{beginTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      PRICE = #{price,jdbcType=NUMERIC},
      PERSONAL_PRICE = #{personalPrice,jdbcType=NUMERIC},
      PERSONAL_COIN = #{personalCoin,jdbcType=NUMERIC},
      COMP_PRICE = #{compPrice,jdbcType=NUMERIC},
      COMP_COIN = #{compCoin,jdbcType=NUMERIC},
      UA_ID = #{uaId,jdbcType=INTEGER},
      COMP_UA_ID = #{compUaId,jdbcType=INTEGER},
      UA_TYPE = #{uaType,jdbcType=TINYINT},
      CONSULT = #{consult,jdbcType=INTEGER},
      BIDD_SOURCE = #{biddSource,jdbcType=TINYINT},
      YOUYOU_BIZ_SYNC_FLAG = #{youyouBizSyncFlag,jdbcType=TINYINT},
      PHONE_400 = #{phone400,jdbcType=VARCHAR},
      QUEUE_ID = #{queueId,jdbcType=INTEGER},
      SELF_DESC = #{selfDesc,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where BIDDING_ID = #{biddingId,jdbcType=INTEGER}
  </update>

	<update id="updateEndTimeToLastTime">
		UPDATE FUN_NEW_BUILDING_BIDDING
		SET END_TIME = #{endTime}
		WHERE END_TIME &gt;= #{nowDate}
		AND ARCHIVE_ID IN
		<foreach collection="archiveIds" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
</mapper>