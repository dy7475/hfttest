<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.agencydb.dao.AgencyFunBuildRateMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.agencydb.po.AgencyFunBuildRate" >
    <!--@mbggenerated-->
    <id column="CITY_ID" property="cityId" jdbcType="SMALLINT" />
    <id column="BUILD_ID" property="buildId" jdbcType="INTEGER" />
    <result column="BUILD_USEAGE" property="buildUseage" jdbcType="VARCHAR" />
    <result column="COMM_RATE" property="commRate" jdbcType="NUMERIC" />
    <result column="AGENCY_RATE" property="agencyRate" jdbcType="NUMERIC" />
    <result column="RATE_DESC" property="rateDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    CITY_ID, BUILD_ID, BUILD_USEAGE, COMM_RATE, AGENCY_RATE, RATE_DESC
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.myfun.repository.agencydb.po.AgencyFunBuildRateKey" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_BUILD_RATE
    where CITY_ID = #{cityId,jdbcType=SMALLINT}
      and BUILD_ID = #{buildId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencyFunBuildRateKey" >
    <!--@mbggenerated-->
    delete from FUN_BUILD_RATE
    where CITY_ID = #{cityId,jdbcType=SMALLINT}
      and BUILD_ID = #{buildId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.agencydb.po.AgencyFunBuildRate" >
    <!--@mbggenerated-->
    insert into FUN_BUILD_RATE (CITY_ID, BUILD_ID, BUILD_USEAGE, 
      COMM_RATE, AGENCY_RATE, RATE_DESC
      )
    values (#{cityId,jdbcType=SMALLINT}, #{buildId,jdbcType=INTEGER}, #{buildUseage,jdbcType=VARCHAR}, 
      #{commRate,jdbcType=NUMERIC}, #{agencyRate,jdbcType=NUMERIC}, #{rateDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.agencydb.po.AgencyFunBuildRate" >
    <!--@mbggenerated-->
    insert into FUN_BUILD_RATE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="buildId != null" >
        BUILD_ID,
      </if>
      <if test="buildUseage != null" >
        BUILD_USEAGE,
      </if>
      <if test="commRate != null" >
        COMM_RATE,
      </if>
      <if test="agencyRate != null" >
        AGENCY_RATE,
      </if>
      <if test="rateDesc != null" >
        RATE_DESC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="buildId != null" >
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildUseage != null" >
        #{buildUseage,jdbcType=VARCHAR},
      </if>
      <if test="commRate != null" >
        #{commRate,jdbcType=NUMERIC},
      </if>
      <if test="agencyRate != null" >
        #{agencyRate,jdbcType=NUMERIC},
      </if>
      <if test="rateDesc != null" >
        #{rateDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.agencydb.po.AgencyFunBuildRate" >
    <!--@mbggenerated-->
    update FUN_BUILD_RATE
    <set >
      <if test="buildUseage != null" >
        BUILD_USEAGE = #{buildUseage,jdbcType=VARCHAR},
      </if>
      <if test="commRate != null" >
        COMM_RATE = #{commRate,jdbcType=NUMERIC},
      </if>
      <if test="agencyRate != null" >
        AGENCY_RATE = #{agencyRate,jdbcType=NUMERIC},
      </if>
      <if test="rateDesc != null" >
        RATE_DESC = #{rateDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where CITY_ID = #{cityId,jdbcType=SMALLINT}
      and BUILD_ID = #{buildId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencyFunBuildRate" >
    <!--@mbggenerated-->
    update FUN_BUILD_RATE
    set BUILD_USEAGE = #{buildUseage,jdbcType=VARCHAR},
      COMM_RATE = #{commRate,jdbcType=NUMERIC},
      AGENCY_RATE = #{agencyRate,jdbcType=NUMERIC},
      RATE_DESC = #{rateDesc,jdbcType=VARCHAR}
    where CITY_ID = #{cityId,jdbcType=SMALLINT}
      and BUILD_ID = #{buildId,jdbcType=INTEGER}
  </update>
</mapper>