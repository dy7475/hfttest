<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.agencydb.dao.AgencyRemitAccountLogMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.agencydb.po.AgencyRemitAccountLog" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="CUST_ID" property="custId" jdbcType="INTEGER" />
    <result column="ACCOUNT_ID" property="accountId" jdbcType="INTEGER" />
    <result column="UA_TYPE" property="uaType" jdbcType="TINYINT" />
    <result column="AMOUNT" property="amount" jdbcType="NUMERIC" />
    <result column="CREATION_TIME" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="PAID_TYPE" property="paidType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, CITY_ID, CUST_ID, ACCOUNT_ID, UA_TYPE, AMOUNT, CREATION_TIME, PAID_TYPE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from REMIT_ACCOUNT_LOG
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from REMIT_ACCOUNT_LOG
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.agencydb.po.AgencyRemitAccountLog" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into REMIT_ACCOUNT_LOG (CITY_ID, CUST_ID, ACCOUNT_ID, 
      UA_TYPE, AMOUNT, CREATION_TIME, 
      PAID_TYPE)
    values (#{cityId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, 
      #{uaType,jdbcType=TINYINT}, #{amount,jdbcType=NUMERIC}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{paidType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.agencydb.po.AgencyRemitAccountLog" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into REMIT_ACCOUNT_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="custId != null" >
        CUST_ID,
      </if>
      <if test="accountId != null" >
        ACCOUNT_ID,
      </if>
      <if test="uaType != null" >
        UA_TYPE,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
      <if test="paidType != null" >
        PAID_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="uaType != null" >
        #{uaType,jdbcType=TINYINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=NUMERIC},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidType != null" >
        #{paidType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.agencydb.po.AgencyRemitAccountLog" >
    <!--@mbggenerated-->
    update REMIT_ACCOUNT_LOG
    <set >
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        CUST_ID = #{custId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        ACCOUNT_ID = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="uaType != null" >
        UA_TYPE = #{uaType,jdbcType=TINYINT},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=NUMERIC},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidType != null" >
        PAID_TYPE = #{paidType,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencyRemitAccountLog" >
    <!--@mbggenerated-->
    update REMIT_ACCOUNT_LOG
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      CUST_ID = #{custId,jdbcType=INTEGER},
      ACCOUNT_ID = #{accountId,jdbcType=INTEGER},
      UA_TYPE = #{uaType,jdbcType=TINYINT},
      AMOUNT = #{amount,jdbcType=NUMERIC},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      PAID_TYPE = #{paidType,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- buniess -->
  <select id="getPaidedHistory" resultMap="BaseResultMap">
  	   select 
    <include refid="Base_Column_List" />
    from REMIT_ACCOUNT_LOG
    where ACCOUNT_ID = #{archiveId} and UA_TYPE = #{compFlag}
  </select>
</mapper>