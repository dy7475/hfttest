<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.agencydb.dao.AgencySpreadPhotoMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.agencydb.po.AgencySpreadPhoto">
    <!--@mbggenerated-->
    <id column="PHOTO_ID" jdbcType="INTEGER" property="photoId" />
    <result column="SPREAD_ID" jdbcType="INTEGER" property="spreadId" />
    <result column="PHOTO_ADDR" jdbcType="VARCHAR" property="photoAddr" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    PHOTO_ID, SPREAD_ID, PHOTO_ADDR, CREATION_TIME
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.agencydb.po.AgencySpreadPhotoExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SPREAD_PHOTO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from SPREAD_PHOTO
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from SPREAD_PHOTO
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.agencydb.po.AgencySpreadPhotoExample">
    <!--@mbggenerated-->
    delete from SPREAD_PHOTO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.agencydb.po.AgencySpreadPhoto">
    <!--@mbggenerated-->
    <selectKey keyProperty="photoId" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into SPREAD_PHOTO (SPREAD_ID, PHOTO_ADDR, CREATION_TIME
      )
    values (#{spreadId,jdbcType=INTEGER}, #{photoAddr,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.agencydb.po.AgencySpreadPhoto">
    <!--@mbggenerated-->
    <selectKey keyProperty="photoId" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into SPREAD_PHOTO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="spreadId != null">
        SPREAD_ID,
      </if>
      <if test="photoAddr != null">
        PHOTO_ADDR,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="spreadId != null">
        #{spreadId,jdbcType=INTEGER},
      </if>
      <if test="photoAddr != null">
        #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.agencydb.po.AgencySpreadPhotoExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from SPREAD_PHOTO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update SPREAD_PHOTO
    <set>
      <if test="record.photoId != null">
        PHOTO_ID = #{record.photoId,jdbcType=INTEGER},
      </if>
      <if test="record.spreadId != null">
        SPREAD_ID = #{record.spreadId,jdbcType=INTEGER},
      </if>
      <if test="record.photoAddr != null">
        PHOTO_ADDR = #{record.photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update SPREAD_PHOTO
    set PHOTO_ID = #{record.photoId,jdbcType=INTEGER},
      SPREAD_ID = #{record.spreadId,jdbcType=INTEGER},
      PHOTO_ADDR = #{record.photoAddr,jdbcType=VARCHAR},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.agencydb.po.AgencySpreadPhoto">
    <!--@mbggenerated-->
    update SPREAD_PHOTO
    <set>
      <if test="spreadId != null">
        SPREAD_ID = #{spreadId,jdbcType=INTEGER},
      </if>
      <if test="photoAddr != null">
        PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencySpreadPhoto">
    <!--@mbggenerated-->
    update SPREAD_PHOTO
    set SPREAD_ID = #{spreadId,jdbcType=INTEGER},
      PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP}
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </update>
  
  <!-- buniess -->
  <select id="getPhotoBySpreadId" resultMap="BaseResultMap">
  	select top 1 <include refid="Base_Column_List" /> from SPREAD_PHOTO
  	where SPREAD_ID = #{spreadId}
  </select>

  <insert id="insertForFastDfs">
    <foreach collection="dfsParamList" item="dfsParam" separator=";">
      INSERT  INTO  SPREAD_PHOTO_FASTDFS_TMP(PHOTO_ID,PHOTO_ADDR_OLD,PHOTO_ADDR_NEW)
      VALUES (#{dfsParam.photoId}, #{dfsParam.photoAddrOld}, #{dfsParam.photoAddrNew})
    </foreach>
  </insert>
</mapper>