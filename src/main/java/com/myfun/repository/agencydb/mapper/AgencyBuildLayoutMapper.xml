<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.agencydb.dao.AgencyBuildLayoutMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.agencydb.po.AgencyBuildLayout">
    <!--@mbggenerated-->
    <id column="LAYOUT_ID" jdbcType="INTEGER" property="layoutId" />
    <result column="CITY_ID" jdbcType="SMALLINT" property="cityId" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="LAYOUT_NO" jdbcType="VARCHAR" property="layoutNo" />
    <result column="LAYOUT_NAME" jdbcType="VARCHAR" property="layoutName" />
    <result column="SEQ_NO" jdbcType="SMALLINT" property="seqNo" />
    <result column="ROOMS" jdbcType="TINYINT" property="rooms" />
    <result column="HALLS" jdbcType="TINYINT" property="halls" />
    <result column="WEIS" jdbcType="TINYINT" property="weis" />
    <result column="YANGS" jdbcType="TINYINT" property="yangs" />
    <result column="BUILD_AREA" jdbcType="NUMERIC" property="buildArea" />
    <result column="INSIDE_AREA" jdbcType="NUMERIC" property="insideArea" />
    <result column="PRICE" jdbcType="INTEGER" property="price" />
    <result column="LAYOUT_TYPE" jdbcType="VARCHAR" property="layoutType" />
    <result column="HOUSES" jdbcType="INTEGER" property="houses" />
    <result column="ISMAIN" jdbcType="SMALLINT" property="ismain" />
    <result column="CHARACT" jdbcType="VARCHAR" property="charact" />
    <result column="LAYOUT_PIC1" jdbcType="VARCHAR" property="layoutPic1" />
    <result column="LAYOUT_PIC2" jdbcType="VARCHAR" property="layoutPic2" />
    <result column="EDIT_FLAG" jdbcType="TINYINT" property="editFlag" />
    <result column="HOUSE_USEAGE" jdbcType="TINYINT" property="houseUseage" />
    <result column="LAYOUT_STATUS" jdbcType="TINYINT" property="layoutStatus" />
    <result column="LAYOUT_TAG" jdbcType="VARCHAR" property="layoutTag" />
    <result column="HAS_PANORAMA" jdbcType="TINYINT" property="hasPanorama" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.myfun.repository.agencydb.po.AgencyBuildLayout">
    <!--@mbggenerated-->
    <result column="CHARACT_RICH_TEXT" jdbcType="CLOB" property="charactRichText" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    LAYOUT_ID, CITY_ID, BUILD_ID, LAYOUT_NO, LAYOUT_NAME, SEQ_NO, ROOMS, HALLS, WEIS, 
    YANGS, BUILD_AREA, INSIDE_AREA, PRICE, LAYOUT_TYPE, HOUSES, ISMAIN, CHARACT, LAYOUT_PIC1, 
    LAYOUT_PIC2, EDIT_FLAG, HOUSE_USEAGE, LAYOUT_STATUS, LAYOUT_TAG, HAS_PANORAMA
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbggenerated-->
    CHARACT_RICH_TEXT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.myfun.repository.agencydb.po.AgencyBuildLayoutExample" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from BUILD_LAYOUT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.myfun.repository.agencydb.po.AgencyBuildLayoutExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BUILD_LAYOUT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from BUILD_LAYOUT
    where LAYOUT_ID = #{layoutId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from BUILD_LAYOUT
    where LAYOUT_ID = #{layoutId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.agencydb.po.AgencyBuildLayoutExample">
    <!--@mbggenerated-->
    delete from BUILD_LAYOUT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.agencydb.po.AgencyBuildLayout">
    <!--@mbggenerated-->
    <selectKey keyProperty="layoutId" order="BEFORE" resultType="java.lang.Integer">
      SELECT isnull(max(LAYOUT_ID), 0) +1 from BUILD_LAYOUT
    </selectKey>
    insert into BUILD_LAYOUT (LAYOUT_ID, CITY_ID, BUILD_ID, 
      LAYOUT_NO, LAYOUT_NAME, SEQ_NO, 
      ROOMS, HALLS, WEIS, 
      YANGS, BUILD_AREA, INSIDE_AREA, 
      PRICE, LAYOUT_TYPE, HOUSES, 
      ISMAIN, CHARACT, LAYOUT_PIC1, 
      LAYOUT_PIC2, EDIT_FLAG, HOUSE_USEAGE, 
      LAYOUT_STATUS, LAYOUT_TAG, HAS_PANORAMA, 
      CHARACT_RICH_TEXT)
    values (#{layoutId,jdbcType=INTEGER}, #{cityId,jdbcType=SMALLINT}, #{buildId,jdbcType=INTEGER}, 
      #{layoutNo,jdbcType=VARCHAR}, #{layoutName,jdbcType=VARCHAR}, #{seqNo,jdbcType=SMALLINT}, 
      #{rooms,jdbcType=TINYINT}, #{halls,jdbcType=TINYINT}, #{weis,jdbcType=TINYINT}, 
      #{yangs,jdbcType=TINYINT}, #{buildArea,jdbcType=NUMERIC}, #{insideArea,jdbcType=NUMERIC}, 
      #{price,jdbcType=INTEGER}, #{layoutType,jdbcType=VARCHAR}, #{houses,jdbcType=INTEGER}, 
      #{ismain,jdbcType=SMALLINT}, #{charact,jdbcType=VARCHAR}, #{layoutPic1,jdbcType=VARCHAR}, 
      #{layoutPic2,jdbcType=VARCHAR}, #{editFlag,jdbcType=TINYINT}, #{houseUseage,jdbcType=TINYINT}, 
      #{layoutStatus,jdbcType=TINYINT}, #{layoutTag,jdbcType=VARCHAR}, #{hasPanorama,jdbcType=TINYINT}, 
      #{charactRichText,jdbcType=CLOB})
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.agencydb.po.AgencyBuildLayoutExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from BUILD_LAYOUT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update BUILD_LAYOUT
    <set>
      <if test="record.layoutId != null">
        LAYOUT_ID = #{record.layoutId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=SMALLINT},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.layoutNo != null">
        LAYOUT_NO = #{record.layoutNo,jdbcType=VARCHAR},
      </if>
      <if test="record.layoutName != null">
        LAYOUT_NAME = #{record.layoutName,jdbcType=VARCHAR},
      </if>
      <if test="record.seqNo != null">
        SEQ_NO = #{record.seqNo,jdbcType=SMALLINT},
      </if>
      <if test="record.rooms != null">
        ROOMS = #{record.rooms,jdbcType=TINYINT},
      </if>
      <if test="record.halls != null">
        HALLS = #{record.halls,jdbcType=TINYINT},
      </if>
      <if test="record.weis != null">
        WEIS = #{record.weis,jdbcType=TINYINT},
      </if>
      <if test="record.yangs != null">
        YANGS = #{record.yangs,jdbcType=TINYINT},
      </if>
      <if test="record.buildArea != null">
        BUILD_AREA = #{record.buildArea,jdbcType=NUMERIC},
      </if>
      <if test="record.insideArea != null">
        INSIDE_AREA = #{record.insideArea,jdbcType=NUMERIC},
      </if>
      <if test="record.price != null">
        PRICE = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.layoutType != null">
        LAYOUT_TYPE = #{record.layoutType,jdbcType=VARCHAR},
      </if>
      <if test="record.houses != null">
        HOUSES = #{record.houses,jdbcType=INTEGER},
      </if>
      <if test="record.ismain != null">
        ISMAIN = #{record.ismain,jdbcType=SMALLINT},
      </if>
      <if test="record.charact != null">
        CHARACT = #{record.charact,jdbcType=VARCHAR},
      </if>
      <if test="record.layoutPic1 != null">
        LAYOUT_PIC1 = #{record.layoutPic1,jdbcType=VARCHAR},
      </if>
      <if test="record.layoutPic2 != null">
        LAYOUT_PIC2 = #{record.layoutPic2,jdbcType=VARCHAR},
      </if>
      <if test="record.editFlag != null">
        EDIT_FLAG = #{record.editFlag,jdbcType=TINYINT},
      </if>
      <if test="record.houseUseage != null">
        HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      </if>
      <if test="record.layoutStatus != null">
        LAYOUT_STATUS = #{record.layoutStatus,jdbcType=TINYINT},
      </if>
      <if test="record.layoutTag != null">
        LAYOUT_TAG = #{record.layoutTag,jdbcType=VARCHAR},
      </if>
      <if test="record.hasPanorama != null">
        HAS_PANORAMA = #{record.hasPanorama,jdbcType=TINYINT},
      </if>
      <if test="record.charactRichText != null">
        CHARACT_RICH_TEXT = #{record.charactRichText,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--@mbggenerated-->
    update BUILD_LAYOUT
    set LAYOUT_ID = #{record.layoutId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=SMALLINT},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      LAYOUT_NO = #{record.layoutNo,jdbcType=VARCHAR},
      LAYOUT_NAME = #{record.layoutName,jdbcType=VARCHAR},
      SEQ_NO = #{record.seqNo,jdbcType=SMALLINT},
      ROOMS = #{record.rooms,jdbcType=TINYINT},
      HALLS = #{record.halls,jdbcType=TINYINT},
      WEIS = #{record.weis,jdbcType=TINYINT},
      YANGS = #{record.yangs,jdbcType=TINYINT},
      BUILD_AREA = #{record.buildArea,jdbcType=NUMERIC},
      INSIDE_AREA = #{record.insideArea,jdbcType=NUMERIC},
      PRICE = #{record.price,jdbcType=INTEGER},
      LAYOUT_TYPE = #{record.layoutType,jdbcType=VARCHAR},
      HOUSES = #{record.houses,jdbcType=INTEGER},
      ISMAIN = #{record.ismain,jdbcType=SMALLINT},
      CHARACT = #{record.charact,jdbcType=VARCHAR},
      LAYOUT_PIC1 = #{record.layoutPic1,jdbcType=VARCHAR},
      LAYOUT_PIC2 = #{record.layoutPic2,jdbcType=VARCHAR},
      EDIT_FLAG = #{record.editFlag,jdbcType=TINYINT},
      HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      LAYOUT_STATUS = #{record.layoutStatus,jdbcType=TINYINT},
      LAYOUT_TAG = #{record.layoutTag,jdbcType=VARCHAR},
      HAS_PANORAMA = #{record.hasPanorama,jdbcType=TINYINT},
      CHARACT_RICH_TEXT = #{record.charactRichText,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update BUILD_LAYOUT
    set LAYOUT_ID = #{record.layoutId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=SMALLINT},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      LAYOUT_NO = #{record.layoutNo,jdbcType=VARCHAR},
      LAYOUT_NAME = #{record.layoutName,jdbcType=VARCHAR},
      SEQ_NO = #{record.seqNo,jdbcType=SMALLINT},
      ROOMS = #{record.rooms,jdbcType=TINYINT},
      HALLS = #{record.halls,jdbcType=TINYINT},
      WEIS = #{record.weis,jdbcType=TINYINT},
      YANGS = #{record.yangs,jdbcType=TINYINT},
      BUILD_AREA = #{record.buildArea,jdbcType=NUMERIC},
      INSIDE_AREA = #{record.insideArea,jdbcType=NUMERIC},
      PRICE = #{record.price,jdbcType=INTEGER},
      LAYOUT_TYPE = #{record.layoutType,jdbcType=VARCHAR},
      HOUSES = #{record.houses,jdbcType=INTEGER},
      ISMAIN = #{record.ismain,jdbcType=SMALLINT},
      CHARACT = #{record.charact,jdbcType=VARCHAR},
      LAYOUT_PIC1 = #{record.layoutPic1,jdbcType=VARCHAR},
      LAYOUT_PIC2 = #{record.layoutPic2,jdbcType=VARCHAR},
      EDIT_FLAG = #{record.editFlag,jdbcType=TINYINT},
      HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      LAYOUT_STATUS = #{record.layoutStatus,jdbcType=TINYINT},
      LAYOUT_TAG = #{record.layoutTag,jdbcType=VARCHAR},
      HAS_PANORAMA = #{record.hasPanorama,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.agencydb.po.AgencyBuildLayout">
    <!--@mbggenerated-->
    update BUILD_LAYOUT
    <set>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="layoutNo != null">
        LAYOUT_NO = #{layoutNo,jdbcType=VARCHAR},
      </if>
      <if test="layoutName != null">
        LAYOUT_NAME = #{layoutName,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        SEQ_NO = #{seqNo,jdbcType=SMALLINT},
      </if>
      <if test="rooms != null">
        ROOMS = #{rooms,jdbcType=TINYINT},
      </if>
      <if test="halls != null">
        HALLS = #{halls,jdbcType=TINYINT},
      </if>
      <if test="weis != null">
        WEIS = #{weis,jdbcType=TINYINT},
      </if>
      <if test="yangs != null">
        YANGS = #{yangs,jdbcType=TINYINT},
      </if>
      <if test="buildArea != null">
        BUILD_AREA = #{buildArea,jdbcType=NUMERIC},
      </if>
      <if test="insideArea != null">
        INSIDE_AREA = #{insideArea,jdbcType=NUMERIC},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=INTEGER},
      </if>
      <if test="layoutType != null">
        LAYOUT_TYPE = #{layoutType,jdbcType=VARCHAR},
      </if>
      <if test="houses != null">
        HOUSES = #{houses,jdbcType=INTEGER},
      </if>
      <if test="ismain != null">
        ISMAIN = #{ismain,jdbcType=SMALLINT},
      </if>
      <if test="charact != null">
        CHARACT = #{charact,jdbcType=VARCHAR},
      </if>
      <if test="layoutPic1 != null">
        LAYOUT_PIC1 = #{layoutPic1,jdbcType=VARCHAR},
      </if>
      <if test="layoutPic2 != null">
        LAYOUT_PIC2 = #{layoutPic2,jdbcType=VARCHAR},
      </if>
      <if test="editFlag != null">
        EDIT_FLAG = #{editFlag,jdbcType=TINYINT},
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      </if>
      <if test="layoutStatus != null">
        LAYOUT_STATUS = #{layoutStatus,jdbcType=TINYINT},
      </if>
      <if test="layoutTag != null">
        LAYOUT_TAG = #{layoutTag,jdbcType=VARCHAR},
      </if>
      <if test="hasPanorama != null">
        HAS_PANORAMA = #{hasPanorama,jdbcType=TINYINT},
      </if>
      <if test="charactRichText != null">
        CHARACT_RICH_TEXT = #{charactRichText,jdbcType=CLOB},
      </if>
    </set>
    where LAYOUT_ID = #{layoutId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myfun.repository.agencydb.po.AgencyBuildLayout">
    <!--@mbggenerated-->
    update BUILD_LAYOUT
    set CITY_ID = #{cityId,jdbcType=SMALLINT},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      LAYOUT_NO = #{layoutNo,jdbcType=VARCHAR},
      LAYOUT_NAME = #{layoutName,jdbcType=VARCHAR},
      SEQ_NO = #{seqNo,jdbcType=SMALLINT},
      ROOMS = #{rooms,jdbcType=TINYINT},
      HALLS = #{halls,jdbcType=TINYINT},
      WEIS = #{weis,jdbcType=TINYINT},
      YANGS = #{yangs,jdbcType=TINYINT},
      BUILD_AREA = #{buildArea,jdbcType=NUMERIC},
      INSIDE_AREA = #{insideArea,jdbcType=NUMERIC},
      PRICE = #{price,jdbcType=INTEGER},
      LAYOUT_TYPE = #{layoutType,jdbcType=VARCHAR},
      HOUSES = #{houses,jdbcType=INTEGER},
      ISMAIN = #{ismain,jdbcType=SMALLINT},
      CHARACT = #{charact,jdbcType=VARCHAR},
      LAYOUT_PIC1 = #{layoutPic1,jdbcType=VARCHAR},
      LAYOUT_PIC2 = #{layoutPic2,jdbcType=VARCHAR},
      EDIT_FLAG = #{editFlag,jdbcType=TINYINT},
      HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      LAYOUT_STATUS = #{layoutStatus,jdbcType=TINYINT},
      LAYOUT_TAG = #{layoutTag,jdbcType=VARCHAR},
      HAS_PANORAMA = #{hasPanorama,jdbcType=TINYINT},
      CHARACT_RICH_TEXT = #{charactRichText,jdbcType=CLOB}
    where LAYOUT_ID = #{layoutId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencyBuildLayout">
    <!--@mbggenerated-->
    update BUILD_LAYOUT
    set CITY_ID = #{cityId,jdbcType=SMALLINT},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      LAYOUT_NO = #{layoutNo,jdbcType=VARCHAR},
      LAYOUT_NAME = #{layoutName,jdbcType=VARCHAR},
      SEQ_NO = #{seqNo,jdbcType=SMALLINT},
      ROOMS = #{rooms,jdbcType=TINYINT},
      HALLS = #{halls,jdbcType=TINYINT},
      WEIS = #{weis,jdbcType=TINYINT},
      YANGS = #{yangs,jdbcType=TINYINT},
      BUILD_AREA = #{buildArea,jdbcType=NUMERIC},
      INSIDE_AREA = #{insideArea,jdbcType=NUMERIC},
      PRICE = #{price,jdbcType=INTEGER},
      LAYOUT_TYPE = #{layoutType,jdbcType=VARCHAR},
      HOUSES = #{houses,jdbcType=INTEGER},
      ISMAIN = #{ismain,jdbcType=SMALLINT},
      CHARACT = #{charact,jdbcType=VARCHAR},
      LAYOUT_PIC1 = #{layoutPic1,jdbcType=VARCHAR},
      LAYOUT_PIC2 = #{layoutPic2,jdbcType=VARCHAR},
      EDIT_FLAG = #{editFlag,jdbcType=TINYINT},
      HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      LAYOUT_STATUS = #{layoutStatus,jdbcType=TINYINT},
      LAYOUT_TAG = #{layoutTag,jdbcType=VARCHAR},
      HAS_PANORAMA = #{hasPanorama,jdbcType=TINYINT}
    where LAYOUT_ID = #{layoutId,jdbcType=INTEGER}
  </update>
  <insert id="insertSelective" parameterType="com.myfun.repository.agencydb.po.AgencyBuildLayout">
  	<selectKey keyProperty="layoutId" order="BEFORE" resultType="java.lang.Integer">
      SELECT isnull(max(LAYOUT_ID), 0) +1 from BUILD_LAYOUT
    </selectKey>
    <!--@mbggenerated-->
    insert into BUILD_LAYOUT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="layoutId != null">
        LAYOUT_ID,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="layoutNo != null">
        LAYOUT_NO,
      </if>
      <if test="layoutName != null">
        LAYOUT_NAME,
      </if>
      <if test="seqNo != null">
        SEQ_NO,
      </if>
      <if test="rooms != null">
        ROOMS,
      </if>
      <if test="halls != null">
        HALLS,
      </if>
      <if test="weis != null">
        WEIS,
      </if>
      <if test="yangs != null">
        YANGS,
      </if>
      <if test="buildArea != null">
        BUILD_AREA,
      </if>
      <if test="insideArea != null">
        INSIDE_AREA,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="layoutType != null">
        LAYOUT_TYPE,
      </if>
      <if test="houses != null">
        HOUSES,
      </if>
      <if test="ismain != null">
        ISMAIN,
      </if>
      <if test="charact != null">
        CHARACT,
      </if>
      <if test="layoutPic1 != null">
        LAYOUT_PIC1,
      </if>
      <if test="layoutPic2 != null">
        LAYOUT_PIC2,
      </if>
      <if test="editFlag != null">
        EDIT_FLAG,
      </if>
      <if test="charactRichText != null">
        CHARACT_RICH_TEXT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="layoutId != null">
        #{layoutId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="layoutNo != null">
        #{layoutNo,jdbcType=VARCHAR},
      </if>
      <if test="layoutName != null">
        #{layoutName,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=SMALLINT},
      </if>
      <if test="rooms != null">
        #{rooms,jdbcType=TINYINT},
      </if>
      <if test="halls != null">
        #{halls,jdbcType=TINYINT},
      </if>
      <if test="weis != null">
        #{weis,jdbcType=TINYINT},
      </if>
      <if test="yangs != null">
        #{yangs,jdbcType=TINYINT},
      </if>
      <if test="buildArea != null">
        #{buildArea,jdbcType=NUMERIC},
      </if>
      <if test="insideArea != null">
        #{insideArea,jdbcType=NUMERIC},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="layoutType != null">
        #{layoutType,jdbcType=VARCHAR},
      </if>
      <if test="houses != null">
        #{houses,jdbcType=INTEGER},
      </if>
      <if test="ismain != null">
        #{ismain,jdbcType=SMALLINT},
      </if>
      <if test="charact != null">
        #{charact,jdbcType=VARCHAR},
      </if>
      <if test="layoutPic1 != null">
        #{layoutPic1,jdbcType=VARCHAR},
      </if>
      <if test="layoutPic2 != null">
        #{layoutPic2,jdbcType=VARCHAR},
      </if>
      <if test="editFlag != null">
        #{editFlag,jdbcType=TINYINT},
      </if>
      <if test="charactRichText != null">
        #{charactRichText,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="selectBuildLayoutByBuildAndCity" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from BUILD_LAYOUT
  	where BUILD_ID = #{buildId} and CITY_ID = #{cityId}
  </select>
  <select id="selectMaxSeqNo" resultMap="BaseResultMap">
  	select top 1 SEQ_NO from BUILD_LAYOUT where CITY_ID=#{cityId} and BUILD_ID=#{buildId} order by SEQ_NO desc
  </select>
  <insert id="insertSelectiveMap" parameterType="java.util.Map">
  	 <selectKey keyProperty="layoutId" order="BEFORE" resultType="java.lang.Integer">
      SELECT isnull(max(LAYOUT_ID), 0) +1 from BUILD_LAYOUT
    </selectKey>
    insert into BUILD_LAYOUT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="layoutId != null">
        LAYOUT_ID,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="layoutNo != null">
        LAYOUT_NO,
      </if>
      <if test="layoutName != null">
        LAYOUT_NAME,
      </if>
      <if test="seqNo != null">
        SEQ_NO,
      </if>
      <if test="rooms != null">
        ROOMS,
      </if>
      <if test="halls != null">
        HALLS,
      </if>
      <if test="weis != null">
        WEIS,
      </if>
      <if test="yangs != null">
        YANGS,
      </if>
      <if test="buildArea != null">
        BUILD_AREA,
      </if>
      <if test="insideArea != null">
        INSIDE_AREA,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="layoutType != null">
        LAYOUT_TYPE,
      </if>
      <if test="houses != null">
        HOUSES,
      </if>
      <if test="ismain != null">
        ISMAIN,
      </if>
      <if test="charact != null">
        CHARACT,
      </if>
      <if test="layoutPic1 != null">
        LAYOUT_PIC1,
      </if>
      <if test="layoutPic2 != null">
        LAYOUT_PIC2,
      </if>
      <if test="editFlag != null">
        EDIT_FLAG,
      </if>
      <if test="charactRichText != null">
        CHARACT_RICH_TEXT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="layoutId != null">
        #{layoutId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="layoutNo != null">
        #{layoutNo,jdbcType=VARCHAR},
      </if>
      <if test="layoutName != null">
        #{layoutName,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=SMALLINT},
      </if>
      <if test="rooms != null">
        #{rooms,jdbcType=TINYINT},
      </if>
      <if test="halls != null">
        #{halls,jdbcType=TINYINT},
      </if>
      <if test="weis != null">
        #{weis,jdbcType=TINYINT},
      </if>
      <if test="yangs != null">
        #{yangs,jdbcType=TINYINT},
      </if>
      <if test="buildArea != null">
        #{buildArea,jdbcType=NUMERIC},
      </if>
      <if test="insideArea != null">
        #{insideArea,jdbcType=NUMERIC},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="layoutType != null">
        #{layoutType,jdbcType=VARCHAR},
      </if>
      <if test="houses != null">
        #{houses,jdbcType=INTEGER},
      </if>
      <if test="ismain != null">
        #{ismain,jdbcType=SMALLINT},
      </if>
      <if test="charact != null">
        #{charact,jdbcType=VARCHAR},
      </if>
      <if test="layoutPic1 != null">
        #{layoutPic1,jdbcType=VARCHAR},
      </if>
      <if test="layoutPic2 != null">
        #{layoutPic2,jdbcType=VARCHAR},
      </if>
      <if test="editFlag != null">
        #{editFlag,jdbcType=TINYINT},
      </if>
      <if test="charactRichText != null">
        #{charactRichText,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <update id="updateBySelectiveMap" parameterType="java.util.Map">
  	 update BUILD_LAYOUT
    <set>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="layoutNo != null">
        LAYOUT_NO = #{layoutNo,jdbcType=VARCHAR},
      </if>
      <if test="layoutName != null">
        LAYOUT_NAME = #{layoutName,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        SEQ_NO = #{seqNo,jdbcType=SMALLINT},
      </if>
      <if test="rooms != null">
        ROOMS = #{rooms,jdbcType=TINYINT},
      </if>
      <if test="halls != null">
        HALLS = #{halls,jdbcType=TINYINT},
      </if>
      <if test="weis != null">
        WEIS = #{weis,jdbcType=TINYINT},
      </if>
      <if test="yangs != null">
        YANGS = #{yangs,jdbcType=TINYINT},
      </if>
      <if test="buildArea != null">
        BUILD_AREA = #{buildArea,jdbcType=NUMERIC},
      </if>
      <if test="insideArea != null">
        INSIDE_AREA = #{insideArea,jdbcType=NUMERIC},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=INTEGER},
      </if>
      <if test="layoutType != null">
        LAYOUT_TYPE = #{layoutType,jdbcType=VARCHAR},
      </if>
      <if test="houses != null">
        HOUSES = #{houses,jdbcType=INTEGER},
      </if>
      <if test="ismain != null">
        ISMAIN = #{ismain,jdbcType=SMALLINT},
      </if>
      <if test="charact != null">
        CHARACT = #{charact,jdbcType=VARCHAR},
      </if>
      <if test="layoutPic1 != null">
        LAYOUT_PIC1 = #{layoutPic1,jdbcType=VARCHAR},
      </if>
      <if test="layoutPic2 != null">
        LAYOUT_PIC2 = #{layoutPic2,jdbcType=VARCHAR},
      </if>
      <if test="editFlag != null">
        EDIT_FLAG = #{editFlag,jdbcType=TINYINT},
      </if>
      <if test="charactRichText != null">
        CHARACT_RICH_TEXT = #{charactRichText,jdbcType=CLOB},
      </if>
    </set>
    where LAYOUT_ID = #{layoutId,jdbcType=INTEGER}
  </update>
  <select id="getBuildLayoutList" parameterType="java.util.Map" resultMap="BaseResultMap"> 
  	 SELECT <include refid="Base_Column_List" />
  	 FROM BUILD_LAYOUT
  	 <![CDATA[WHERE BUILD_ID = #{buildId} and CITY_ID = #{cityId} and EDIT_FLAG  <> 1]]>
  	 order by SEQ_NO
  </select>

  <insert id="insertForFastDfs">
    <foreach collection="dfsParamList" item="dfsParam" separator=";">
      INSERT  BUILD_LAYOUT_FASTDFS_TMP(LAYOUT_ID,LAYOUT_PIC1_OLD,LAYOUT_PIC1_NEW,LAYOUT_PIC2_OLD,LAYOUT_PIC2_NEW)
      VALUES (#{dfsParam.layoutId}, #{dfsParam.layoutPic1Old},#{dfsParam.layoutPic1New}, #{dfsParam.layoutPic2Old},#{dfsParam.layoutPic2New})
    </foreach>
  </insert>
</mapper>