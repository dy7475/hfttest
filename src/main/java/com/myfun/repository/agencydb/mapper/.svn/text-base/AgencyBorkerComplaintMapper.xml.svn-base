<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.agencydb.dao.AgencyBorkerComplaintMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.agencydb.po.AgencyBorkerComplaint" >
    <!--@mbggenerated-->
    <id column="BC_ID" property="bcId" jdbcType="INTEGER" />
    <result column="CASE_ID" property="caseId" jdbcType="INTEGER" />
    <result column="CASE_TYPE" property="caseType" jdbcType="VARCHAR" />
    <result column="CLIENT_ID" property="clientId" jdbcType="INTEGER" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="USER_MOBILE" property="userMobile" jdbcType="VARCHAR" />
    <result column="BC_TYPE" property="bcType" jdbcType="TINYINT" />
    <result column="BC_DESC" property="bcDesc" jdbcType="VARCHAR" />
    <result column="BC_TIME" property="bcTime" jdbcType="TIMESTAMP" />
    <result column="DEAL_STATUS" property="dealStatus" jdbcType="TINYINT" />
    <result column="DEAL_DESC" property="dealDesc" jdbcType="VARCHAR" />
    <result column="DEAL_USER" property="dealUser" jdbcType="INTEGER" />
    <result column="DEAL_TIME" property="dealTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
   <resultMap id="BaseResultMapDto" type="com.myfun.repository.agencydb.dto.AgencyBorkerComplaintDto" >
    <id column="BC_ID" property="bcId" jdbcType="INTEGER" />
    <result column="CASE_ID" property="caseId" jdbcType="INTEGER" />
    <result column="CASE_TYPE" property="caseType" jdbcType="VARCHAR" />
    <result column="CLIENT_ID" property="clientId" jdbcType="INTEGER" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="USER_MOBILE" property="userMobile" jdbcType="VARCHAR" />
    <result column="BC_TYPE" property="bcType" jdbcType="TINYINT" />
    <result column="BC_DESC" property="bcDesc" jdbcType="VARCHAR" />
    <result column="BC_TIME" property="bcTime" jdbcType="TIMESTAMP" />
    <result column="DEAL_STATUS" property="dealStatus" jdbcType="TINYINT" />
    <result column="DEAL_DESC" property="dealDesc" jdbcType="VARCHAR" />
    <result column="DEAL_USER" property="dealUser" jdbcType="INTEGER" />
    <result column="DEAL_TIME" property="dealTime" jdbcType="TIMESTAMP" />
    
    <result column="REFUND_FLAG" property="hasrRefund" jdbcType="VARCHAR" />
    <result column="REFUND_TIME" property="refundTime" jdbcType="VARCHAR" />
    <result column="PB_MONEY" property="pbMoney" jdbcType="VARCHAR" />
    <result column="REFUND_FLAG" property="refundFlag" jdbcType="VARCHAR" />
    <result column="REFUND_USER" property="refundUser" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    BC_ID, CASE_ID, CASE_TYPE, CLIENT_ID, CITY_ID, ARCHIVE_ID, USER_NAME, USER_MOBILE, 
    BC_TYPE, BC_DESC, BC_TIME, DEAL_STATUS, DEAL_DESC, DEAL_USER, DEAL_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from BORKER_COMPLAINT
    where BC_ID = #{bcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from BORKER_COMPLAINT
    where BC_ID = #{bcId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.agencydb.po.AgencyBorkerComplaint" >
    <!--@mbggenerated-->
    insert into BORKER_COMPLAINT (BC_ID, CASE_ID, CASE_TYPE, 
      CLIENT_ID, CITY_ID, ARCHIVE_ID, 
      USER_NAME, USER_MOBILE, BC_TYPE, 
      BC_DESC, BC_TIME, DEAL_STATUS, 
      DEAL_DESC, DEAL_USER, DEAL_TIME
      )
    values (#{bcId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{caseType,jdbcType=VARCHAR}, 
      #{clientId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, #{bcType,jdbcType=TINYINT}, 
      #{bcDesc,jdbcType=VARCHAR}, #{bcTime,jdbcType=TIMESTAMP}, #{dealStatus,jdbcType=TINYINT}, 
      #{dealDesc,jdbcType=VARCHAR}, #{dealUser,jdbcType=INTEGER}, #{dealTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.agencydb.po.AgencyBorkerComplaint" >
    <!--@mbggenerated-->
    insert into BORKER_COMPLAINT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bcId != null" >
        BC_ID,
      </if>
      <if test="caseId != null" >
        CASE_ID,
      </if>
      <if test="caseType != null" >
        CASE_TYPE,
      </if>
      <if test="clientId != null" >
        CLIENT_ID,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="userMobile != null" >
        USER_MOBILE,
      </if>
      <if test="bcType != null" >
        BC_TYPE,
      </if>
      <if test="bcDesc != null" >
        BC_DESC,
      </if>
      <if test="bcTime != null" >
        BC_TIME,
      </if>
      <if test="dealStatus != null" >
        DEAL_STATUS,
      </if>
      <if test="dealDesc != null" >
        DEAL_DESC,
      </if>
      <if test="dealUser != null" >
        DEAL_USER,
      </if>
      <if test="dealTime != null" >
        DEAL_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bcId != null" >
        #{bcId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        #{caseType,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="bcType != null" >
        #{bcType,jdbcType=TINYINT},
      </if>
      <if test="bcDesc != null" >
        #{bcDesc,jdbcType=VARCHAR},
      </if>
      <if test="bcTime != null" >
        #{bcTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealStatus != null" >
        #{dealStatus,jdbcType=TINYINT},
      </if>
      <if test="dealDesc != null" >
        #{dealDesc,jdbcType=VARCHAR},
      </if>
      <if test="dealUser != null" >
        #{dealUser,jdbcType=INTEGER},
      </if>
      <if test="dealTime != null" >
        #{dealTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.agencydb.po.AgencyBorkerComplaint" >
    <!--@mbggenerated-->
    update BORKER_COMPLAINT
    <set >
      <if test="caseId != null" >
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        CASE_TYPE = #{caseType,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        CLIENT_ID = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="bcType != null" >
        BC_TYPE = #{bcType,jdbcType=TINYINT},
      </if>
      <if test="bcDesc != null" >
        BC_DESC = #{bcDesc,jdbcType=VARCHAR},
      </if>
      <if test="bcTime != null" >
        BC_TIME = #{bcTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealStatus != null" >
        DEAL_STATUS = #{dealStatus,jdbcType=TINYINT},
      </if>
      <if test="dealDesc != null" >
        DEAL_DESC = #{dealDesc,jdbcType=VARCHAR},
      </if>
      <if test="dealUser != null" >
        DEAL_USER = #{dealUser,jdbcType=INTEGER},
      </if>
      <if test="dealTime != null" >
        DEAL_TIME = #{dealTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where BC_ID = #{bcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencyBorkerComplaint" >
    <!--@mbggenerated-->
    update BORKER_COMPLAINT
    set CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=VARCHAR},
      CLIENT_ID = #{clientId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      BC_TYPE = #{bcType,jdbcType=TINYINT},
      BC_DESC = #{bcDesc,jdbcType=VARCHAR},
      BC_TIME = #{bcTime,jdbcType=TIMESTAMP},
      DEAL_STATUS = #{dealStatus,jdbcType=TINYINT},
      DEAL_DESC = #{dealDesc,jdbcType=VARCHAR},
      DEAL_USER = #{dealUser,jdbcType=INTEGER},
      DEAL_TIME = #{dealTime,jdbcType=TIMESTAMP}
    where BC_ID = #{bcId,jdbcType=INTEGER}
  </update>
  <select id="getList" resultMap="BaseResultMapDto">
	  SELECT 
		BORKER_COMPLAINT.*, PURCHASE_BORKER.REFUND_FLAG AS HAS_REFUND,
		PURCHASE_BORKER.REFUND_TIME,
		PURCHASE_BORKER.PB_MONEY,
		PURCHASE_BORKER.REFUND_FLAG,
		PURCHASE_BORKER.REFUND_USER
	FROM
		BORKER_COMPLAINT
	LEFT JOIN VIP_SALE ON BORKER_COMPLAINT.CITY_ID = VIP_SALE.CITY_ID
	AND BORKER_COMPLAINT.CASE_ID = VIP_SALE.SALE_ID
	LEFT JOIN PURCHASE_BORKER ON BORKER_COMPLAINT.CITY_ID = PURCHASE_BORKER.CITY_ID
	AND BORKER_COMPLAINT.CASE_ID = PURCHASE_BORKER.CASE_ID
	AND BORKER_COMPLAINT.CASE_TYPE = PURCHASE_BORKER.CASE_TYPE
	AND BORKER_COMPLAINT.ARCHIVE_ID = PURCHASE_BORKER.ARCHIVE_ID
	WHERE
		BORKER_COMPLAINT.CITY_ID = #{cityId}
	AND BORKER_COMPLAINT.CASE_ID = #{caseId}
	AND BORKER_COMPLAINT.CASE_TYPE = #{caseType}
	order by BC_ID
  </select>
  <update id="updateFlag">
  	update ${tableName} SET NEW_COMPLAIN = CASE WHEN NEW_COMPLAIN = 0 OR NEW_COMPLAIN IS NULL THEN 0 ELSE NEW_COMPLAIN - 1 END  
  	where CITY_ID = #{cityId} and ${fieldName} = #{caseId}
  
  </update>
</mapper>