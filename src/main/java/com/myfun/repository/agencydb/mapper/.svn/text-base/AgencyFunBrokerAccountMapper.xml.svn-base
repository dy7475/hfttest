<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.agencydb.dao.AgencyFunBrokerAccountMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.agencydb.po.AgencyFunBrokerAccount" >
    <!--@mbggenerated-->
    <id column="ACCOUNT_ID" property="accountId" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="ACCOUNT_TYPE" property="accountType" jdbcType="TINYINT" />
    <result column="ACCOUNT_BANK" property="accountBank" jdbcType="VARCHAR" />
    <result column="BANK_USERNAME" property="bankUsername" jdbcType="VARCHAR" />
    <result column="ACCOUNT_NO" property="accountNo" jdbcType="VARCHAR" />
    <result column="TAOBAO_NO" property="taobaoNo" jdbcType="VARCHAR" />
    <result column="BIND_TIME" property="bindTime" jdbcType="TIMESTAMP" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="UA_TYPE" property="uaType" jdbcType="INTEGER" />
    <result column="ACCOUNT_STATUS" property="accountStatus" jdbcType="INTEGER" />
    <result column="WRITEOFF_TIME" property="writeoffTime" jdbcType="TIMESTAMP" />
    <result column="USER_ICCODE" property="userIccode" jdbcType="VARCHAR" />
    <result column="CUST_MOBILE" property="custMobile" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ACCOUNT_ID, ARCHIVE_ID, ACCOUNT_TYPE, ACCOUNT_BANK, BANK_USERNAME, ACCOUNT_NO, TAOBAO_NO, 
    BIND_TIME, CITY_ID, UA_TYPE, ACCOUNT_STATUS, WRITEOFF_TIME, USER_ICCODE, CUST_MOBILE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_BROKER_ACCOUNT
    where ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_BROKER_ACCOUNT
    where ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.agencydb.po.AgencyFunBrokerAccount" >
    <!--@mbggenerated-->
    insert into FUN_BROKER_ACCOUNT (ACCOUNT_ID, ARCHIVE_ID, ACCOUNT_TYPE, 
      ACCOUNT_BANK, BANK_USERNAME, ACCOUNT_NO, 
      TAOBAO_NO, BIND_TIME, CITY_ID, 
      UA_TYPE, ACCOUNT_STATUS, WRITEOFF_TIME, 
      USER_ICCODE, CUST_MOBILE)
    values (#{accountId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, #{accountType,jdbcType=TINYINT}, 
      #{accountBank,jdbcType=VARCHAR}, #{bankUsername,jdbcType=VARCHAR}, #{accountNo,jdbcType=VARCHAR}, 
      #{taobaoNo,jdbcType=VARCHAR}, #{bindTime,jdbcType=TIMESTAMP}, #{cityId,jdbcType=INTEGER}, 
      #{uaType,jdbcType=INTEGER}, #{accountStatus,jdbcType=INTEGER}, #{writeoffTime,jdbcType=TIMESTAMP}, 
      #{userIccode,jdbcType=VARCHAR}, #{custMobile,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.agencydb.po.AgencyFunBrokerAccount" >
    <!--@mbggenerated-->
    <selectKey keyProperty="accountId" order="BEFORE" resultType="java.lang.Integer">
      SELECT (MAX(ACCOUNT_ID) + 1) AS accountId FROM FUN_BROKER_ACCOUNT
    </selectKey>
    insert into FUN_BROKER_ACCOUNT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        ACCOUNT_ID,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="accountType != null" >
        ACCOUNT_TYPE,
      </if>
      <if test="accountBank != null" >
        ACCOUNT_BANK,
      </if>
      <if test="bankUsername != null" >
        BANK_USERNAME,
      </if>
      <if test="accountNo != null" >
        ACCOUNT_NO,
      </if>
      <if test="taobaoNo != null" >
        TAOBAO_NO,
      </if>
      <if test="bindTime != null" >
        BIND_TIME,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="uaType != null" >
        UA_TYPE,
      </if>
      <if test="accountStatus != null" >
        ACCOUNT_STATUS,
      </if>
      <if test="writeoffTime != null" >
        WRITEOFF_TIME,
      </if>
      <if test="userIccode != null" >
        USER_ICCODE,
      </if>
      <if test="custMobile != null" >
        CUST_MOBILE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountBank != null" >
        #{accountBank,jdbcType=VARCHAR},
      </if>
      <if test="bankUsername != null" >
        #{bankUsername,jdbcType=VARCHAR},
      </if>
      <if test="accountNo != null" >
        #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="taobaoNo != null" >
        #{taobaoNo,jdbcType=VARCHAR},
      </if>
      <if test="bindTime != null" >
        #{bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="uaType != null" >
        #{uaType,jdbcType=INTEGER},
      </if>
      <if test="accountStatus != null" >
        #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="writeoffTime != null" >
        #{writeoffTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userIccode != null" >
        #{userIccode,jdbcType=VARCHAR},
      </if>
      <if test="custMobile != null" >
        #{custMobile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.agencydb.po.AgencyFunBrokerAccount" >
    <!--@mbggenerated-->
    update FUN_BROKER_ACCOUNT
    <set >
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="accountType != null" >
        ACCOUNT_TYPE = #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountBank != null" >
        ACCOUNT_BANK = #{accountBank,jdbcType=VARCHAR},
      </if>
      <if test="bankUsername != null" >
        BANK_USERNAME = #{bankUsername,jdbcType=VARCHAR},
      </if>
      <if test="accountNo != null" >
        ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="taobaoNo != null" >
        TAOBAO_NO = #{taobaoNo,jdbcType=VARCHAR},
      </if>
      <if test="bindTime != null" >
        BIND_TIME = #{bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="uaType != null" >
        UA_TYPE = #{uaType,jdbcType=INTEGER},
      </if>
      <if test="accountStatus != null" >
        ACCOUNT_STATUS = #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="writeoffTime != null" >
        WRITEOFF_TIME = #{writeoffTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userIccode != null" >
        USER_ICCODE = #{userIccode,jdbcType=VARCHAR},
      </if>
      <if test="custMobile != null" >
        CUST_MOBILE = #{custMobile,jdbcType=VARCHAR},
      </if>
    </set>
    where ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.agencydb.po.AgencyFunBrokerAccount" >
    <!--@mbggenerated-->
    update FUN_BROKER_ACCOUNT
    set ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      ACCOUNT_TYPE = #{accountType,jdbcType=TINYINT},
      ACCOUNT_BANK = #{accountBank,jdbcType=VARCHAR},
      BANK_USERNAME = #{bankUsername,jdbcType=VARCHAR},
      ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR},
      TAOBAO_NO = #{taobaoNo,jdbcType=VARCHAR},
      BIND_TIME = #{bindTime,jdbcType=TIMESTAMP},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      UA_TYPE = #{uaType,jdbcType=INTEGER},
      ACCOUNT_STATUS = #{accountStatus,jdbcType=INTEGER},
      WRITEOFF_TIME = #{writeoffTime,jdbcType=TIMESTAMP},
      USER_ICCODE = #{userIccode,jdbcType=VARCHAR},
      CUST_MOBILE = #{custMobile,jdbcType=VARCHAR}
    where ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </update>
  <select id="getDistUserBindBankList" parameterType="java.util.Map" resultMap="BaseResultMap">
  	SELECT ACCOUNT_ID,ACCOUNT_NO 
  	FROM FUN_BROKER_ACCOUNT
  	<where>
  		<if test="null != cityId">
  			AND CITY_ID = #{cityId} AND ACCOUNT_STATUS = 1
  		</if>
  		<if test="null != archiveId">
  			AND ARCHIVE_ID = #{archiveId}
  		</if>
  	</where>
  </select>
  <update id="updateCurrentAccount" parameterType="java.util.Map">
  	update FUN_BROKER_ACCOUNT set ACCOUNT_STATUS = 0
  	where ARCHIVE_ID = #{archiveId} and CITY_ID = #{cityId} AND ACCOUNT_STATUS = 1
  </update>
  
</mapper>