<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindbRpt.dao.AdminRptVPropertyDongzuoMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindbRpt.po.AdminRptVPropertyDongzuo" >
    <!--@mbggenerated-->
    <result column="PropertyID" property="propertyid" jdbcType="CHAR" />
    <result column="BUILD_ROOF" property="buildRoof" jdbcType="VARCHAR" />
    <result column="BUILD_UNIT" property="buildUnit" jdbcType="VARCHAR" />
    <result column="HOUSE_NUM" property="houseNum" jdbcType="VARCHAR" />
    <result column="build_roof_s" property="buildRoofS" jdbcType="VARCHAR" />
    <result column="build_unit_s" property="buildUnitS" jdbcType="VARCHAR" />
    <result column="house_num_s" property="houseNumS" jdbcType="VARCHAR" />
    <result column="build_roof_r" property="buildRoofR" jdbcType="VARCHAR" />
    <result column="build_unit_r" property="buildUnitR" jdbcType="VARCHAR" />
    <result column="house_num_r" property="houseNumR" jdbcType="VARCHAR" />
    <result column="cell_phone" property="cellPhone" jdbcType="VARCHAR" />
    <result column="cell_phone_r" property="cellPhoneR" jdbcType="VARCHAR" />
    <result column="RegDate" property="regdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    PropertyID, BUILD_ROOF, BUILD_UNIT, HOUSE_NUM, build_roof_s, build_unit_s, house_num_s, 
    build_roof_r, build_unit_r, house_num_r, cell_phone, cell_phone_r, RegDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.admindbRpt.po.AdminRptVPropertyDongzuoExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_Property_dongzuo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindbRpt.po.AdminRptVPropertyDongzuoExample" >
    <!--@mbggenerated-->
    delete from v_Property_dongzuo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindbRpt.po.AdminRptVPropertyDongzuo" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.String" keyProperty="propertyid" order="BEFORE" >
      SELECT MAX(ISNULL(PropertyID,0))+1 FROM v_Property_dongzuo
    </selectKey>
    insert into v_Property_dongzuo (PropertyID, BUILD_ROOF, BUILD_UNIT, 
      HOUSE_NUM, build_roof_s, build_unit_s, 
      house_num_s, build_roof_r, build_unit_r, 
      house_num_r, cell_phone, cell_phone_r, 
      RegDate)
    values (#{propertyid,jdbcType=CHAR}, #{buildRoof,jdbcType=VARCHAR}, #{buildUnit,jdbcType=VARCHAR}, 
      #{houseNum,jdbcType=VARCHAR}, #{buildRoofS,jdbcType=VARCHAR}, #{buildUnitS,jdbcType=VARCHAR}, 
      #{houseNumS,jdbcType=VARCHAR}, #{buildRoofR,jdbcType=VARCHAR}, #{buildUnitR,jdbcType=VARCHAR}, 
      #{houseNumR,jdbcType=VARCHAR}, #{cellPhone,jdbcType=VARCHAR}, #{cellPhoneR,jdbcType=VARCHAR}, 
      #{regdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindbRpt.po.AdminRptVPropertyDongzuo" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.String" keyProperty="propertyid" order="BEFORE" >
      SELECT MAX(ISNULL(PropertyID,0))+1 FROM v_Property_dongzuo
    </selectKey>
    insert into v_Property_dongzuo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      PropertyID,
      <if test="buildRoof != null" >
        BUILD_ROOF,
      </if>
      <if test="buildUnit != null" >
        BUILD_UNIT,
      </if>
      <if test="houseNum != null" >
        HOUSE_NUM,
      </if>
      <if test="buildRoofS != null" >
        build_roof_s,
      </if>
      <if test="buildUnitS != null" >
        build_unit_s,
      </if>
      <if test="houseNumS != null" >
        house_num_s,
      </if>
      <if test="buildRoofR != null" >
        build_roof_r,
      </if>
      <if test="buildUnitR != null" >
        build_unit_r,
      </if>
      <if test="houseNumR != null" >
        house_num_r,
      </if>
      <if test="cellPhone != null" >
        cell_phone,
      </if>
      <if test="cellPhoneR != null" >
        cell_phone_r,
      </if>
      <if test="regdate != null" >
        RegDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{propertyid,jdbcType=CHAR},
      <if test="buildRoof != null" >
        #{buildRoof,jdbcType=VARCHAR},
      </if>
      <if test="buildUnit != null" >
        #{buildUnit,jdbcType=VARCHAR},
      </if>
      <if test="houseNum != null" >
        #{houseNum,jdbcType=VARCHAR},
      </if>
      <if test="buildRoofS != null" >
        #{buildRoofS,jdbcType=VARCHAR},
      </if>
      <if test="buildUnitS != null" >
        #{buildUnitS,jdbcType=VARCHAR},
      </if>
      <if test="houseNumS != null" >
        #{houseNumS,jdbcType=VARCHAR},
      </if>
      <if test="buildRoofR != null" >
        #{buildRoofR,jdbcType=VARCHAR},
      </if>
      <if test="buildUnitR != null" >
        #{buildUnitR,jdbcType=VARCHAR},
      </if>
      <if test="houseNumR != null" >
        #{houseNumR,jdbcType=VARCHAR},
      </if>
      <if test="cellPhone != null" >
        #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="cellPhoneR != null" >
        #{cellPhoneR,jdbcType=VARCHAR},
      </if>
      <if test="regdate != null" >
        #{regdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindbRpt.po.AdminRptVPropertyDongzuoExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from v_Property_dongzuo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update v_Property_dongzuo
    <set >
      <if test="record.propertyid != null" >
        PropertyID = #{record.propertyid,jdbcType=CHAR},
      </if>
      <if test="record.buildRoof != null" >
        BUILD_ROOF = #{record.buildRoof,jdbcType=VARCHAR},
      </if>
      <if test="record.buildUnit != null" >
        BUILD_UNIT = #{record.buildUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.houseNum != null" >
        HOUSE_NUM = #{record.houseNum,jdbcType=VARCHAR},
      </if>
      <if test="record.buildRoofS != null" >
        build_roof_s = #{record.buildRoofS,jdbcType=VARCHAR},
      </if>
      <if test="record.buildUnitS != null" >
        build_unit_s = #{record.buildUnitS,jdbcType=VARCHAR},
      </if>
      <if test="record.houseNumS != null" >
        house_num_s = #{record.houseNumS,jdbcType=VARCHAR},
      </if>
      <if test="record.buildRoofR != null" >
        build_roof_r = #{record.buildRoofR,jdbcType=VARCHAR},
      </if>
      <if test="record.buildUnitR != null" >
        build_unit_r = #{record.buildUnitR,jdbcType=VARCHAR},
      </if>
      <if test="record.houseNumR != null" >
        house_num_r = #{record.houseNumR,jdbcType=VARCHAR},
      </if>
      <if test="record.cellPhone != null" >
        cell_phone = #{record.cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.cellPhoneR != null" >
        cell_phone_r = #{record.cellPhoneR,jdbcType=VARCHAR},
      </if>
      <if test="record.regdate != null" >
        RegDate = #{record.regdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update v_Property_dongzuo
    set PropertyID = #{record.propertyid,jdbcType=CHAR},
      BUILD_ROOF = #{record.buildRoof,jdbcType=VARCHAR},
      BUILD_UNIT = #{record.buildUnit,jdbcType=VARCHAR},
      HOUSE_NUM = #{record.houseNum,jdbcType=VARCHAR},
      build_roof_s = #{record.buildRoofS,jdbcType=VARCHAR},
      build_unit_s = #{record.buildUnitS,jdbcType=VARCHAR},
      house_num_s = #{record.houseNumS,jdbcType=VARCHAR},
      build_roof_r = #{record.buildRoofR,jdbcType=VARCHAR},
      build_unit_r = #{record.buildUnitR,jdbcType=VARCHAR},
      house_num_r = #{record.houseNumR,jdbcType=VARCHAR},
      cell_phone = #{record.cellPhone,jdbcType=VARCHAR},
      cell_phone_r = #{record.cellPhoneR,jdbcType=VARCHAR},
      RegDate = #{record.regdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
	
	<select id="getTop100List" resultMap="BaseResultMap">
		select top 100
		<include refid="Base_Column_List" />
		from v_Property_dongzuo
		where cell_phone_r is null or len(cell_phone_r) &lt;= 0
	</select>
	
	<update id="updateWaitingToNull">
		update v_Property_dongzuo
		set cell_phone_r = null
		where cell_phone_r='waiting'
	</update>
</mapper>

