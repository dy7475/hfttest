<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpBuildPermissionsMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpBuildPermissions">
    <!--@mbggenerated-->
    <id column="BP_ID" jdbcType="INTEGER" property="bpId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="ADD_PERMISSION" jdbcType="TINYINT" property="addPermission" />
    <result column="EDIT_PERMISSION" jdbcType="TINYINT" property="editPermission" />
    <result column="VIEW_PERMISSION" jdbcType="TINYINT" property="viewPermission" />
    <result column="HOUSE_USEAGE" jdbcType="VARCHAR" property="houseUseage" />
    <result column="CREATE_USER_ID" jdbcType="INTEGER" property="createUserId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_USER_ID" jdbcType="INTEGER" property="updateUserId" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="IS_USEAGE_SAME" jdbcType="TINYINT" property="isUseageSame" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    BP_ID, COMP_ID, BUILD_ID, ADD_PERMISSION, EDIT_PERMISSION, VIEW_PERMISSION, HOUSE_USEAGE, 
    CREATE_USER_ID, CREATE_TIME, UPDATE_USER_ID, UPDATE_TIME, IS_DEL, IS_USEAGE_SAME, 
    ORGANIZATION_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildPermissionsExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BUILD_PERMISSIONS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from BUILD_PERMISSIONS
    where BP_ID = #{bpId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from BUILD_PERMISSIONS
    where BP_ID = #{bpId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildPermissionsExample">
    <!--@mbggenerated-->
    delete from BUILD_PERMISSIONS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="bpId" parameterType="com.myfun.repository.erpdb.po.ErpBuildPermissions" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into BUILD_PERMISSIONS (COMP_ID, BUILD_ID, ADD_PERMISSION, 
      EDIT_PERMISSION, VIEW_PERMISSION, HOUSE_USEAGE, 
      CREATE_USER_ID, CREATE_TIME, UPDATE_USER_ID, 
      UPDATE_TIME, IS_DEL, IS_USEAGE_SAME, 
      ORGANIZATION_ID)
    values (#{compId,jdbcType=INTEGER}, #{buildId,jdbcType=INTEGER}, #{addPermission,jdbcType=TINYINT}, 
      #{editPermission,jdbcType=TINYINT}, #{viewPermission,jdbcType=TINYINT}, #{houseUseage,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=TINYINT}, #{isUseageSame,jdbcType=TINYINT}, 
      #{organizationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="bpId" parameterType="com.myfun.repository.erpdb.po.ErpBuildPermissions" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into BUILD_PERMISSIONS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="addPermission != null">
        ADD_PERMISSION,
      </if>
      <if test="editPermission != null">
        EDIT_PERMISSION,
      </if>
      <if test="viewPermission != null">
        VIEW_PERMISSION,
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE,
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateUserId != null">
        UPDATE_USER_ID,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="isUseageSame != null">
        IS_USEAGE_SAME,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="addPermission != null">
        #{addPermission,jdbcType=TINYINT},
      </if>
      <if test="editPermission != null">
        #{editPermission,jdbcType=TINYINT},
      </if>
      <if test="viewPermission != null">
        #{viewPermission,jdbcType=TINYINT},
      </if>
      <if test="houseUseage != null">
        #{houseUseage,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="isUseageSame != null">
        #{isUseageSame,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildPermissionsExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from BUILD_PERMISSIONS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update BUILD_PERMISSIONS
    <set>
      <if test="record.bpId != null">
        BP_ID = #{record.bpId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.addPermission != null">
        ADD_PERMISSION = #{record.addPermission,jdbcType=TINYINT},
      </if>
      <if test="record.editPermission != null">
        EDIT_PERMISSION = #{record.editPermission,jdbcType=TINYINT},
      </if>
      <if test="record.viewPermission != null">
        VIEW_PERMISSION = #{record.viewPermission,jdbcType=TINYINT},
      </if>
      <if test="record.houseUseage != null">
        HOUSE_USEAGE = #{record.houseUseage,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        CREATE_USER_ID = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        UPDATE_USER_ID = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.isUseageSame != null">
        IS_USEAGE_SAME = #{record.isUseageSame,jdbcType=TINYINT},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update BUILD_PERMISSIONS
    set BP_ID = #{record.bpId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      ADD_PERMISSION = #{record.addPermission,jdbcType=TINYINT},
      EDIT_PERMISSION = #{record.editPermission,jdbcType=TINYINT},
      VIEW_PERMISSION = #{record.viewPermission,jdbcType=TINYINT},
      HOUSE_USEAGE = #{record.houseUseage,jdbcType=VARCHAR},
      CREATE_USER_ID = #{record.createUserId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_USER_ID = #{record.updateUserId,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      IS_USEAGE_SAME = #{record.isUseageSame,jdbcType=TINYINT},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpBuildPermissions">
    <!--@mbggenerated-->
    update BUILD_PERMISSIONS
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="addPermission != null">
        ADD_PERMISSION = #{addPermission,jdbcType=TINYINT},
      </if>
      <if test="editPermission != null">
        EDIT_PERMISSION = #{editPermission,jdbcType=TINYINT},
      </if>
      <if test="viewPermission != null">
        VIEW_PERMISSION = #{viewPermission,jdbcType=TINYINT},
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE = #{houseUseage,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="isUseageSame != null">
        IS_USEAGE_SAME = #{isUseageSame,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
    </set>
    where BP_ID = #{bpId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpBuildPermissions">
    <!--@mbggenerated-->
    update BUILD_PERMISSIONS
    set COMP_ID = #{compId,jdbcType=INTEGER},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      ADD_PERMISSION = #{addPermission,jdbcType=TINYINT},
      EDIT_PERMISSION = #{editPermission,jdbcType=TINYINT},
      VIEW_PERMISSION = #{viewPermission,jdbcType=TINYINT},
      HOUSE_USEAGE = #{houseUseage,jdbcType=VARCHAR},
      CREATE_USER_ID = #{createUserId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      IS_USEAGE_SAME = #{isUseageSame,jdbcType=TINYINT},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER}
    where BP_ID = #{bpId,jdbcType=INTEGER}
  </update>
  
  <select id="getBuildPermissionsList" resultMap="BaseResultMap">
	    select <include refid="Base_Column_List" />
	    from BUILD_PERMISSIONS where COMP_ID = #{compId} and IS_DEL = 0
	    <if test="organizationId != null and organizationId &gt; 0">
	     and ORGANIZATION_ID = #{organizationId}
	    </if>
	    <if test="buildId != null">
	     and BUILD_ID = #{buildId}
	    </if>
	    <if test="buildRegion != null">
	     and BUILD_ID in (select BUILD_ID from BUILDING_INFO where BUILD_REGION = #{buildRegion})
	    </if>
	    <if test="houseUseage != null">
	     and HOUSE_USEAGE like '%${houseUseage}%'
	    </if>
  </select>
  
  <select id="getBuildPermissions" resultMap="BaseResultMap">
  	select top 1 <include refid="Base_Column_List" /> from BUILD_PERMISSIONS
    where COMP_ID = #{compId} and ORGANIZATION_ID = #{organizationId} and BUILD_ID = #{buildId} and IS_DEL = 0
  </select>
  
</mapper>