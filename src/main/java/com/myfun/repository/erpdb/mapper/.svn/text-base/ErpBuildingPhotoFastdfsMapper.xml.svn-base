<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpBuildingPhotoFastdfsMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfs" >
    <!--@mbggenerated-->
    <id column="PHOTO_ID" property="photoId" jdbcType="INTEGER" />
    <result column="PHOTO_ADDR" property="photoAddr" jdbcType="VARCHAR" />
    <result column="CREATION_TIME" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="OLD_ADDR" property="oldAddr" jdbcType="VARCHAR" />
    <result column="IS_DEAL" property="isDeal" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    PHOTO_ID, PHOTO_ADDR, CREATION_TIME, OLD_ADDR, IS_DEAL
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfsExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BUILDING_PHOTO_FASTDFS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from BUILDING_PHOTO_FASTDFS
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from BUILDING_PHOTO_FASTDFS
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfsExample" >
    <!--@mbggenerated-->
    delete from BUILDING_PHOTO_FASTDFS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfs" useGeneratedKeys="true" keyProperty="photoId" >
    <!--@mbggenerated-->
    insert into BUILDING_PHOTO_FASTDFS (PHOTO_ADDR, CREATION_TIME, OLD_ADDR, 
      IS_DEAL)
    values (#{photoAddr,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}, #{oldAddr,jdbcType=VARCHAR}, 
      #{isDeal,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfs" useGeneratedKeys="true" keyProperty="photoId" >
    <!--@mbggenerated-->
    insert into BUILDING_PHOTO_FASTDFS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="photoAddr != null" >
        PHOTO_ADDR,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
      <if test="oldAddr != null" >
        OLD_ADDR,
      </if>
      <if test="isDeal != null" >
        IS_DEAL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="photoAddr != null" >
        #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldAddr != null" >
        #{oldAddr,jdbcType=VARCHAR},
      </if>
      <if test="isDeal != null" >
        #{isDeal,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfsExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from BUILDING_PHOTO_FASTDFS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update BUILDING_PHOTO_FASTDFS
    <set >
      <if test="record.photoId != null" >
        PHOTO_ID = #{record.photoId,jdbcType=INTEGER},
      </if>
      <if test="record.photoAddr != null" >
        PHOTO_ADDR = #{record.photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.creationTime != null" >
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oldAddr != null" >
        OLD_ADDR = #{record.oldAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeal != null" >
        IS_DEAL = #{record.isDeal,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update BUILDING_PHOTO_FASTDFS
    set PHOTO_ID = #{record.photoId,jdbcType=INTEGER},
      PHOTO_ADDR = #{record.photoAddr,jdbcType=VARCHAR},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      OLD_ADDR = #{record.oldAddr,jdbcType=VARCHAR},
      IS_DEAL = #{record.isDeal,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfs" >
    <!--@mbggenerated-->
    update BUILDING_PHOTO_FASTDFS
    <set >
      <if test="photoAddr != null" >
        PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldAddr != null" >
        OLD_ADDR = #{oldAddr,jdbcType=VARCHAR},
      </if>
      <if test="isDeal != null" >
        IS_DEAL = #{isDeal,jdbcType=TINYINT},
      </if>
    </set>
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfs" >
    <!--@mbggenerated-->
    update BUILDING_PHOTO_FASTDFS
    set PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      OLD_ADDR = #{oldAddr,jdbcType=VARCHAR},
      IS_DEAL = #{isDeal,jdbcType=TINYINT}
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </update>
  
	<select id="selectLastPhotoId" resultType="java.lang.Integer">
		select top 1 PHOTO_ID
		from BUILDING_PHOTO_FASTDFS order by PHOTO_ID asc
	</select>

	<insert id="insertList" parameterType="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfs">
		INSERT INTO BUILDING_PHOTO_FASTDFS
		(PHOTO_ID, PHOTO_ADDR, CREATION_TIME, OLD_ADDR)
		VALUES
		<foreach collection="photoList" item="item" separator=",">
			(#{item.photoId},#{item.photoAddr},#{item.creationTime},#{item.oldAddr})
		</foreach>
	</insert>

	<update id="updatePhotoAddrForList" parameterType="com.myfun.repository.erpdb.po.ErpBuildingPhotoFastdfs">
		<foreach collection="photoList" item="item" separator=";">
			update BUILDING_PHOTO_FASTDFS
			set PHOTO_ADDR=#{item.photoAddr}
			where PHOTO_ID = #{item.photoId}
		</foreach>
	</update>
</mapper>