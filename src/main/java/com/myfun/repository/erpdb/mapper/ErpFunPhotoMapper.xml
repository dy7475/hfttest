<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunPhotoMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunPhoto">
    <!--@mbggenerated-->
    <id column="PHOTO_ID" jdbcType="INTEGER" property="photoId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="PHOTO_ADDR" jdbcType="VARCHAR" property="photoAddr" />
    <result column="PHOTO_TYPE" jdbcType="TINYINT" property="photoType" />
    <result column="USEAGE_TYPE" jdbcType="TINYINT" property="useageType" />
    <result column="PD_ID" jdbcType="INTEGER" property="pdId" />
    <result column="UPLOAD_USER" jdbcType="INTEGER" property="uploadUser" />
    <result column="UPLOAD_DATE" jdbcType="VARCHAR" property="uploadDate" />
    <result column="IS_TOP" jdbcType="TINYINT" property="isTop" />
    <result column="PHOTO_SOURCE" jdbcType="TINYINT" property="photoSource" />
    <result column="TRANSMIT_FLAG" jdbcType="TINYINT" property="transmitFlag" />
    <result column="PHOTO_ID_OLD" jdbcType="INTEGER" property="photoIdOld" />
    <result column="PHOTO_SEQ" jdbcType="INTEGER" property="photoSeq" />
    <result column="PHOTO_REVIEW_FLAG" jdbcType="TINYINT" property="photoReviewFlag" />
    <result column="PHOTO_REVIEW_UID" jdbcType="INTEGER" property="photoReviewUid" />
    <result column="PHOTO_REVIEW_TIME" jdbcType="TIMESTAMP" property="photoReviewTime" />
    <result column="LOCK_USER" jdbcType="INTEGER" property="lockUser" />
    <result column="IS_INVALID" jdbcType="INTEGER" property="isInvalid" />
    <result column="DEL_USER" jdbcType="INTEGER" property="delUser" />
    <result column="DEL_TIME" jdbcType="TIMESTAMP" property="delTime" />
    <result column="TRACK_ID" jdbcType="INTEGER" property="trackId" />
    <result column="FILE_SYSTEM_TYPE" jdbcType="TINYINT" property="fileSystemType" />
    <result column="FILE_ADDR" jdbcType="VARCHAR" property="fileAddr" />
    <result column="UPLOAD_CLIENT_ID" jdbcType="VARCHAR" property="uploadClientId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
    <result column="HOUSE_INDOOR_PHOTO_TYPE" jdbcType="TINYINT" property="houseIndoorPhotoType" />
    <result column="FK_PHOTO" jdbcType="TINYINT" property="fkPhoto" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
    <result column="ORGANIZATION_NAME" jdbcType="VARCHAR" property="organizationName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    PHOTO_ID, COMP_ID, CASE_ID, CASE_TYPE, PHOTO_ADDR, PHOTO_TYPE, USEAGE_TYPE, PD_ID, 
    UPLOAD_USER, UPLOAD_DATE, IS_TOP, PHOTO_SOURCE, TRANSMIT_FLAG, PHOTO_ID_OLD, PHOTO_SEQ, 
    PHOTO_REVIEW_FLAG, PHOTO_REVIEW_UID, PHOTO_REVIEW_TIME, LOCK_USER, IS_INVALID, DEL_USER, 
    DEL_TIME, TRACK_ID, FILE_SYSTEM_TYPE, FILE_ADDR, UPLOAD_CLIENT_ID, DEPT_ID, DEPT_NAME, 
    HOUSE_INDOOR_PHOTO_TYPE, FK_PHOTO, ORGANIZATION_ID, ORGANIZATION_NAME
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPhotoExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_PHOTO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_PHOTO
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_PHOTO
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPhotoExample">
    <!--@mbggenerated-->
    delete from FUN_PHOTO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunPhoto">
    <!--@mbggenerated-->
    <selectKey keyProperty="photoId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_PHOTO_PHOTO_ID
    </selectKey>
    insert into FUN_PHOTO (PHOTO_ID, COMP_ID, CASE_ID, 
      CASE_TYPE, PHOTO_ADDR, PHOTO_TYPE, 
      USEAGE_TYPE, PD_ID, UPLOAD_USER, 
      UPLOAD_DATE, IS_TOP, PHOTO_SOURCE, 
      TRANSMIT_FLAG, PHOTO_ID_OLD, PHOTO_SEQ, 
      PHOTO_REVIEW_FLAG, PHOTO_REVIEW_UID, PHOTO_REVIEW_TIME, 
      LOCK_USER, IS_INVALID, DEL_USER, 
      DEL_TIME, TRACK_ID, FILE_SYSTEM_TYPE, 
      FILE_ADDR, UPLOAD_CLIENT_ID, DEPT_ID, 
      DEPT_NAME, HOUSE_INDOOR_PHOTO_TYPE, FK_PHOTO, 
      ORGANIZATION_ID, ORGANIZATION_NAME)
    values (#{photoId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, 
      #{caseType,jdbcType=TINYINT}, #{photoAddr,jdbcType=VARCHAR}, #{photoType,jdbcType=TINYINT}, 
      #{useageType,jdbcType=TINYINT}, #{pdId,jdbcType=INTEGER}, #{uploadUser,jdbcType=INTEGER}, 
      #{uploadDate,jdbcType=VARCHAR}, #{isTop,jdbcType=TINYINT}, #{photoSource,jdbcType=TINYINT}, 
      #{transmitFlag,jdbcType=TINYINT}, #{photoIdOld,jdbcType=INTEGER}, #{photoSeq,jdbcType=INTEGER}, 
      #{photoReviewFlag,jdbcType=TINYINT}, #{photoReviewUid,jdbcType=INTEGER}, #{photoReviewTime,jdbcType=TIMESTAMP}, 
      #{lockUser,jdbcType=INTEGER}, #{isInvalid,jdbcType=INTEGER}, #{delUser,jdbcType=INTEGER}, 
      #{delTime,jdbcType=TIMESTAMP}, #{trackId,jdbcType=INTEGER}, #{fileSystemType,jdbcType=TINYINT}, 
      #{fileAddr,jdbcType=VARCHAR}, #{uploadClientId,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, 
      #{deptName,jdbcType=VARCHAR}, #{houseIndoorPhotoType,jdbcType=TINYINT}, #{fkPhoto,jdbcType=TINYINT}, 
      #{organizationId,jdbcType=INTEGER}, #{organizationName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunPhoto">
    <!--@mbggenerated-->
    <selectKey keyProperty="photoId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_PHOTO_PHOTO_ID
    </selectKey>
    insert into FUN_PHOTO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      PHOTO_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="photoAddr != null">
        PHOTO_ADDR,
      </if>
      <if test="photoType != null">
        PHOTO_TYPE,
      </if>
      <if test="useageType != null">
        USEAGE_TYPE,
      </if>
      <if test="pdId != null">
        PD_ID,
      </if>
      <if test="uploadUser != null">
        UPLOAD_USER,
      </if>
      <if test="uploadDate != null">
        UPLOAD_DATE,
      </if>
      <if test="isTop != null">
        IS_TOP,
      </if>
      <if test="photoSource != null">
        PHOTO_SOURCE,
      </if>
      <if test="transmitFlag != null">
        TRANSMIT_FLAG,
      </if>
      <if test="photoIdOld != null">
        PHOTO_ID_OLD,
      </if>
      <if test="photoSeq != null">
        PHOTO_SEQ,
      </if>
      <if test="photoReviewFlag != null">
        PHOTO_REVIEW_FLAG,
      </if>
      <if test="photoReviewUid != null">
        PHOTO_REVIEW_UID,
      </if>
      <if test="photoReviewTime != null">
        PHOTO_REVIEW_TIME,
      </if>
      <if test="lockUser != null">
        LOCK_USER,
      </if>
      <if test="isInvalid != null">
        IS_INVALID,
      </if>
      <if test="delUser != null">
        DEL_USER,
      </if>
      <if test="delTime != null">
        DEL_TIME,
      </if>
      <if test="trackId != null">
        TRACK_ID,
      </if>
      <if test="fileSystemType != null">
        FILE_SYSTEM_TYPE,
      </if>
      <if test="fileAddr != null">
        FILE_ADDR,
      </if>
      <if test="uploadClientId != null">
        UPLOAD_CLIENT_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="deptName != null">
        DEPT_NAME,
      </if>
      <if test="houseIndoorPhotoType != null">
        HOUSE_INDOOR_PHOTO_TYPE,
      </if>
      <if test="fkPhoto != null">
        FK_PHOTO,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
      <if test="organizationName != null">
        ORGANIZATION_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{photoId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="photoAddr != null">
        #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="photoType != null">
        #{photoType,jdbcType=TINYINT},
      </if>
      <if test="useageType != null">
        #{useageType,jdbcType=TINYINT},
      </if>
      <if test="pdId != null">
        #{pdId,jdbcType=INTEGER},
      </if>
      <if test="uploadUser != null">
        #{uploadUser,jdbcType=INTEGER},
      </if>
      <if test="uploadDate != null">
        #{uploadDate,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null">
        #{isTop,jdbcType=TINYINT},
      </if>
      <if test="photoSource != null">
        #{photoSource,jdbcType=TINYINT},
      </if>
      <if test="transmitFlag != null">
        #{transmitFlag,jdbcType=TINYINT},
      </if>
      <if test="photoIdOld != null">
        #{photoIdOld,jdbcType=INTEGER},
      </if>
      <if test="photoSeq != null">
        #{photoSeq,jdbcType=INTEGER},
      </if>
      <if test="photoReviewFlag != null">
        #{photoReviewFlag,jdbcType=TINYINT},
      </if>
      <if test="photoReviewUid != null">
        #{photoReviewUid,jdbcType=INTEGER},
      </if>
      <if test="photoReviewTime != null">
        #{photoReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lockUser != null">
        #{lockUser,jdbcType=INTEGER},
      </if>
      <if test="isInvalid != null">
        #{isInvalid,jdbcType=INTEGER},
      </if>
      <if test="delUser != null">
        #{delUser,jdbcType=INTEGER},
      </if>
      <if test="delTime != null">
        #{delTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackId != null">
        #{trackId,jdbcType=INTEGER},
      </if>
      <if test="fileSystemType != null">
        #{fileSystemType,jdbcType=TINYINT},
      </if>
      <if test="fileAddr != null">
        #{fileAddr,jdbcType=VARCHAR},
      </if>
      <if test="uploadClientId != null">
        #{uploadClientId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="houseIndoorPhotoType != null">
        #{houseIndoorPhotoType,jdbcType=TINYINT},
      </if>
      <if test="fkPhoto != null">
        #{fkPhoto,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationName != null">
        #{organizationName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPhotoExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_PHOTO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PHOTO
    <set>
      <if test="record.photoId != null">
        PHOTO_ID = #{record.photoId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
      <if test="record.photoAddr != null">
        PHOTO_ADDR = #{record.photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.photoType != null">
        PHOTO_TYPE = #{record.photoType,jdbcType=TINYINT},
      </if>
      <if test="record.useageType != null">
        USEAGE_TYPE = #{record.useageType,jdbcType=TINYINT},
      </if>
      <if test="record.pdId != null">
        PD_ID = #{record.pdId,jdbcType=INTEGER},
      </if>
      <if test="record.uploadUser != null">
        UPLOAD_USER = #{record.uploadUser,jdbcType=INTEGER},
      </if>
      <if test="record.uploadDate != null">
        UPLOAD_DATE = #{record.uploadDate,jdbcType=VARCHAR},
      </if>
      <if test="record.isTop != null">
        IS_TOP = #{record.isTop,jdbcType=TINYINT},
      </if>
      <if test="record.photoSource != null">
        PHOTO_SOURCE = #{record.photoSource,jdbcType=TINYINT},
      </if>
      <if test="record.transmitFlag != null">
        TRANSMIT_FLAG = #{record.transmitFlag,jdbcType=TINYINT},
      </if>
      <if test="record.photoIdOld != null">
        PHOTO_ID_OLD = #{record.photoIdOld,jdbcType=INTEGER},
      </if>
      <if test="record.photoSeq != null">
        PHOTO_SEQ = #{record.photoSeq,jdbcType=INTEGER},
      </if>
      <if test="record.photoReviewFlag != null">
        PHOTO_REVIEW_FLAG = #{record.photoReviewFlag,jdbcType=TINYINT},
      </if>
      <if test="record.photoReviewUid != null">
        PHOTO_REVIEW_UID = #{record.photoReviewUid,jdbcType=INTEGER},
      </if>
      <if test="record.photoReviewTime != null">
        PHOTO_REVIEW_TIME = #{record.photoReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lockUser != null">
        LOCK_USER = #{record.lockUser,jdbcType=INTEGER},
      </if>
      <if test="record.isInvalid != null">
        IS_INVALID = #{record.isInvalid,jdbcType=INTEGER},
      </if>
      <if test="record.delUser != null">
        DEL_USER = #{record.delUser,jdbcType=INTEGER},
      </if>
      <if test="record.delTime != null">
        DEL_TIME = #{record.delTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.trackId != null">
        TRACK_ID = #{record.trackId,jdbcType=INTEGER},
      </if>
      <if test="record.fileSystemType != null">
        FILE_SYSTEM_TYPE = #{record.fileSystemType,jdbcType=TINYINT},
      </if>
      <if test="record.fileAddr != null">
        FILE_ADDR = #{record.fileAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadClientId != null">
        UPLOAD_CLIENT_ID = #{record.uploadClientId,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.deptName != null">
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.houseIndoorPhotoType != null">
        HOUSE_INDOOR_PHOTO_TYPE = #{record.houseIndoorPhotoType,jdbcType=TINYINT},
      </if>
      <if test="record.fkPhoto != null">
        FK_PHOTO = #{record.fkPhoto,jdbcType=TINYINT},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationName != null">
        ORGANIZATION_NAME = #{record.organizationName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PHOTO
    set PHOTO_ID = #{record.photoId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      PHOTO_ADDR = #{record.photoAddr,jdbcType=VARCHAR},
      PHOTO_TYPE = #{record.photoType,jdbcType=TINYINT},
      USEAGE_TYPE = #{record.useageType,jdbcType=TINYINT},
      PD_ID = #{record.pdId,jdbcType=INTEGER},
      UPLOAD_USER = #{record.uploadUser,jdbcType=INTEGER},
      UPLOAD_DATE = #{record.uploadDate,jdbcType=VARCHAR},
      IS_TOP = #{record.isTop,jdbcType=TINYINT},
      PHOTO_SOURCE = #{record.photoSource,jdbcType=TINYINT},
      TRANSMIT_FLAG = #{record.transmitFlag,jdbcType=TINYINT},
      PHOTO_ID_OLD = #{record.photoIdOld,jdbcType=INTEGER},
      PHOTO_SEQ = #{record.photoSeq,jdbcType=INTEGER},
      PHOTO_REVIEW_FLAG = #{record.photoReviewFlag,jdbcType=TINYINT},
      PHOTO_REVIEW_UID = #{record.photoReviewUid,jdbcType=INTEGER},
      PHOTO_REVIEW_TIME = #{record.photoReviewTime,jdbcType=TIMESTAMP},
      LOCK_USER = #{record.lockUser,jdbcType=INTEGER},
      IS_INVALID = #{record.isInvalid,jdbcType=INTEGER},
      DEL_USER = #{record.delUser,jdbcType=INTEGER},
      DEL_TIME = #{record.delTime,jdbcType=TIMESTAMP},
      TRACK_ID = #{record.trackId,jdbcType=INTEGER},
      FILE_SYSTEM_TYPE = #{record.fileSystemType,jdbcType=TINYINT},
      FILE_ADDR = #{record.fileAddr,jdbcType=VARCHAR},
      UPLOAD_CLIENT_ID = #{record.uploadClientId,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      HOUSE_INDOOR_PHOTO_TYPE = #{record.houseIndoorPhotoType,jdbcType=TINYINT},
      FK_PHOTO = #{record.fkPhoto,jdbcType=TINYINT},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      ORGANIZATION_NAME = #{record.organizationName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunPhoto">
    <!--@mbggenerated-->
    update FUN_PHOTO
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="photoAddr != null">
        PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="photoType != null">
        PHOTO_TYPE = #{photoType,jdbcType=TINYINT},
      </if>
      <if test="useageType != null">
        USEAGE_TYPE = #{useageType,jdbcType=TINYINT},
      </if>
      <if test="pdId != null">
        PD_ID = #{pdId,jdbcType=INTEGER},
      </if>
      <if test="uploadUser != null">
        UPLOAD_USER = #{uploadUser,jdbcType=INTEGER},
      </if>
      <if test="uploadDate != null">
        UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null">
        IS_TOP = #{isTop,jdbcType=TINYINT},
      </if>
      <if test="photoSource != null">
        PHOTO_SOURCE = #{photoSource,jdbcType=TINYINT},
      </if>
      <if test="transmitFlag != null">
        TRANSMIT_FLAG = #{transmitFlag,jdbcType=TINYINT},
      </if>
      <if test="photoIdOld != null">
        PHOTO_ID_OLD = #{photoIdOld,jdbcType=INTEGER},
      </if>
      <if test="photoSeq != null">
        PHOTO_SEQ = #{photoSeq,jdbcType=INTEGER},
      </if>
      <if test="photoReviewFlag != null">
        PHOTO_REVIEW_FLAG = #{photoReviewFlag,jdbcType=TINYINT},
      </if>
      <if test="photoReviewUid != null">
        PHOTO_REVIEW_UID = #{photoReviewUid,jdbcType=INTEGER},
      </if>
      <if test="photoReviewTime != null">
        PHOTO_REVIEW_TIME = #{photoReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lockUser != null">
        LOCK_USER = #{lockUser,jdbcType=INTEGER},
      </if>
      <if test="isInvalid != null">
        IS_INVALID = #{isInvalid,jdbcType=INTEGER},
      </if>
      <if test="delUser != null">
        DEL_USER = #{delUser,jdbcType=INTEGER},
      </if>
      <if test="delTime != null">
        DEL_TIME = #{delTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackId != null">
        TRACK_ID = #{trackId,jdbcType=INTEGER},
      </if>
      <if test="fileSystemType != null">
        FILE_SYSTEM_TYPE = #{fileSystemType,jdbcType=TINYINT},
      </if>
      <if test="fileAddr != null">
        FILE_ADDR = #{fileAddr,jdbcType=VARCHAR},
      </if>
      <if test="uploadClientId != null">
        UPLOAD_CLIENT_ID = #{uploadClientId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="houseIndoorPhotoType != null">
        HOUSE_INDOOR_PHOTO_TYPE = #{houseIndoorPhotoType,jdbcType=TINYINT},
      </if>
      <if test="fkPhoto != null">
        FK_PHOTO = #{fkPhoto,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationName != null">
        ORGANIZATION_NAME = #{organizationName,jdbcType=VARCHAR},
      </if>
    </set>
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunPhoto">
    <!--@mbggenerated-->
    update FUN_PHOTO
    set COMP_ID = #{compId,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      PHOTO_TYPE = #{photoType,jdbcType=TINYINT},
      USEAGE_TYPE = #{useageType,jdbcType=TINYINT},
      PD_ID = #{pdId,jdbcType=INTEGER},
      UPLOAD_USER = #{uploadUser,jdbcType=INTEGER},
      UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR},
      IS_TOP = #{isTop,jdbcType=TINYINT},
      PHOTO_SOURCE = #{photoSource,jdbcType=TINYINT},
      TRANSMIT_FLAG = #{transmitFlag,jdbcType=TINYINT},
      PHOTO_ID_OLD = #{photoIdOld,jdbcType=INTEGER},
      PHOTO_SEQ = #{photoSeq,jdbcType=INTEGER},
      PHOTO_REVIEW_FLAG = #{photoReviewFlag,jdbcType=TINYINT},
      PHOTO_REVIEW_UID = #{photoReviewUid,jdbcType=INTEGER},
      PHOTO_REVIEW_TIME = #{photoReviewTime,jdbcType=TIMESTAMP},
      LOCK_USER = #{lockUser,jdbcType=INTEGER},
      IS_INVALID = #{isInvalid,jdbcType=INTEGER},
      DEL_USER = #{delUser,jdbcType=INTEGER},
      DEL_TIME = #{delTime,jdbcType=TIMESTAMP},
      TRACK_ID = #{trackId,jdbcType=INTEGER},
      FILE_SYSTEM_TYPE = #{fileSystemType,jdbcType=TINYINT},
      FILE_ADDR = #{fileAddr,jdbcType=VARCHAR},
      UPLOAD_CLIENT_ID = #{uploadClientId,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      HOUSE_INDOOR_PHOTO_TYPE = #{houseIndoorPhotoType,jdbcType=TINYINT},
      FK_PHOTO = #{fkPhoto,jdbcType=TINYINT},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      ORGANIZATION_NAME = #{organizationName,jdbcType=VARCHAR}
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </update>
  <resultMap extends="BaseResultMap" id="BaseResultMapDto" type="com.myfun.repository.erpdb.dto.ErpFunPhotoDto">
  
  </resultMap>
  
  <!-- 该查询条件目前用于优优好房项目 陈文超 -->
  <select id="getValidErpFunPhotoByCondition" parameterType="com.myfun.repository.erpdb.po.ErpFunPhoto" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from FUN_PHOTO
	    <where>
	    	<if test="null != photoId">
				and PHOTO_ID = #{photoId,jdbcType=INTEGER}
			</if>
			<if test="null != caseId">
				and CASE_ID = #{caseId,jdbcType=INTEGER}
			</if>
			<if test="null != caseType">
				and CASE_TYPE = #{caseType,jdbcType=TINYINT}
			</if>
			<if test="null != isTop">
				and IS_TOP = #{isTop,jdbcType=TINYINT}
			</if>
			<if test="null != photoType">
				and PHOTO_TYPE = #{photoType,jdbcType=TINYINT}
			</if>
				and TRANSMIT_FLAG &lt; 2
		</where>
		order by IS_TOP desc
  </select>

	<select id="getPhotoList" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from FUN_PHOTO
		<where>
			<if test="null != housingIds">
				CASE_ID IN
				<foreach close=")" collection="housingIds" item="val" open="(" separator=",">#{val}</foreach>
			</if>
			<if test="null != caseType">
				and CASE_TYPE = #{caseType,jdbcType=TINYINT}
			</if>
			<if test="null != compId">
				and COMP_ID = #{compId,jdbcType=TINYINT}
			</if>
				and TRANSMIT_FLAG &lt; 2
		</where>
		order by IS_TOP desc
	</select>
	
	<select id="getPhotoListOrderByPhotoIdDesc" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select top 50 PHOTO_ID,PHOTO_ADDR
		from FUN_PHOTO
		where UPLOAD_DATE &lt; '2017-04-15 18:00:00' and TRANSMIT_FLAG &lt; 2 
		<if test="photoId != null and photoId &gt; 0">AND PHOTO_ID &lt; #{photoId}</if>
		order by PHOTO_ID desc
	</select>


	<select id="getHousePhoto" resultMap="BaseResultMapDto">
		select
		 <include refid="Base_Column_List" />
		from FUN_PHOTO	
		where CASE_ID = #{param.caseId} and CASE_TYPE = #{param.caseType}
		<choose>
			<when test="param.trackId != null and param.trackId &gt; 0">and TRACK_ID = #{param.trackId}</when>
			<otherwise>
				<choose>
					<when test="param.isMeiLian != null and param.isMeiLian == 1">
						and TRANSMIT_FLAG in (0,1,5)
					</when>
					<otherwise>
						and TRANSMIT_FLAG &lt;= 1
					</otherwise>
				</choose>		
			</otherwise>
		</choose>
		order by IS_TOP DESC, UPLOAD_DATE desc, PHOTO_TYPE ASC,PHOTO_SEQ ASC
	</select>
	
	<select id="getHousePhotoByCaseId" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" /> 
		FROM FUN_PHOTO WHERE 
		COMP_ID=#{param.compId} 
		<if test="param.saleId != null and '' != param.saleId">
		AND CASE_ID=#{param.saleId}
		</if>
		<if test="param.leasId != null and '' != param.leasId">
		AND CASE_ID=#{param.leasId}
		</if>
		<if test="param.houseId != null and '' != param.houseId">
		AND CASE_ID=#{param.houseId}
		</if>
		AND CASE_TYPE=#{param.caseType}
	</select>
	
	<select id="getPhotoTypeCount" resultType="map">
		<if test="otherSaleLeaseId!= null">
			 select SUM(C.ATTR_0) as ATTR_0,SUM(C.ATTR_1) as ATTR_1 from (select sum(iif(PHOTO_TYPE=0,1,0)) as ATTR_0,sum(iif(PHOTO_TYPE=1,1,0)) as ATTR_1 from FUN_PHOTO where CASE_TYPE =#{caseType} and CASE_ID = #{caseId} and TRANSMIT_FLAG&lt;=1 AND COMP_ID=#{compId} UNION ALL select sum(iif(PHOTO_TYPE=0,1,0)) as ATTR_0,sum(iif(PHOTO_TYPE=1,1,0)) as ATTR_1 from FUN_PHOTO where CASE_TYPE =#{otherSaleLeaseCaseType} and CASE_ID = #{otherSaleLeaseId} and TRANSMIT_FLAG&lt;=1 AND COMP_ID=#{compId}) as C
		</if>
		<if test="otherSaleLeaseId == null">
			 select sum(iif(PHOTO_TYPE=0,1,0)) as ATTR_0,sum(iif(PHOTO_TYPE=1,1,0)) as ATTR_1  from FUN_PHOTO where CASE_TYPE = #{caseType} and CASE_ID = #{caseId}  and TRANSMIT_FLAG&lt;=1 and COMP_ID=#{compId}
		</if>
	</select>
	
	<select id="getCountByType" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_PHOTO
		WHERE COMP_ID=#{compId}
		AND CASE_ID = #{caseId} AND CASE_TYPE = #{caseType}
		<if test="transmitFlag != null and transmitFlag != ''">
			AND TRANSMIT_FLAG = #{transmitFlag}
		</if>
		AND PHOTO_REVIEW_FLAG IN
		<foreach close=")" collection="photoReviewFlag" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</select>

  <select id="getFunPhoto" resultMap="BaseResultMap">
    SELECT TOP 1 PHOTO_ADDR
    FROM FUN_PHOTO
    WHERE CASE_ID = #{caseId}
    AND CASE_TYPE = #{caseType}
    AND TRANSMIT_FLAG <![CDATA[<=]]> 1
    AND IS_TOP = 1
  </select>
	
	<update id="updateFangKanPhoto">
		update FUN_PHOTO set DEL_USER = #{userId},DEL_TIME = #{timeNow}, TRANSMIT_FLAG = 2
		where TRANSMIT_FLAG !=2 and PHOTO_ID in
		<foreach close=")" collection="photoIds" item="photoId" open="(" separator=",">
			#{photoId}
		</foreach>
	</update>
 

</mapper>