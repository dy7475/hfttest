<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpBuildRoadsRelationMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpBuildRoadsRelation" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="BUILD_ID" property="buildId" jdbcType="INTEGER" />
    <result column="ROADS_NAME" property="roadsName" jdbcType="VARCHAR" />
    <result column="THIRD_ROADS_ID" property="thirdRoadsId" jdbcType="VARCHAR" />
    <result column="ROADS_ID" property="roadsId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, BUILD_ID, ROADS_NAME, THIRD_ROADS_ID, ROADS_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpBuildRoadsRelationExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BUILD_ROADS_RELATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from BUILD_ROADS_RELATION
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from BUILD_ROADS_RELATION
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildRoadsRelationExample" >
    <!--@mbggenerated-->
    delete from BUILD_ROADS_RELATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpBuildRoadsRelation" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into BUILD_ROADS_RELATION (BUILD_ID, ROADS_NAME, THIRD_ROADS_ID, 
      ROADS_ID)
    values (#{buildId,jdbcType=INTEGER}, #{roadsName,jdbcType=VARCHAR}, #{thirdRoadsId,jdbcType=VARCHAR}, 
      #{roadsId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpBuildRoadsRelation" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into BUILD_ROADS_RELATION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="buildId != null" >
        BUILD_ID,
      </if>
      <if test="roadsName != null" >
        ROADS_NAME,
      </if>
      <if test="thirdRoadsId != null" >
        THIRD_ROADS_ID,
      </if>
      <if test="roadsId != null" >
        ROADS_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="buildId != null" >
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="roadsName != null" >
        #{roadsName,jdbcType=VARCHAR},
      </if>
      <if test="thirdRoadsId != null" >
        #{thirdRoadsId,jdbcType=VARCHAR},
      </if>
      <if test="roadsId != null" >
        #{roadsId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildRoadsRelationExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from BUILD_ROADS_RELATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update BUILD_ROADS_RELATION
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null" >
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.roadsName != null" >
        ROADS_NAME = #{record.roadsName,jdbcType=VARCHAR},
      </if>
      <if test="record.thirdRoadsId != null" >
        THIRD_ROADS_ID = #{record.thirdRoadsId,jdbcType=VARCHAR},
      </if>
      <if test="record.roadsId != null" >
        ROADS_ID = #{record.roadsId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update BUILD_ROADS_RELATION
    set ID = #{record.id,jdbcType=INTEGER},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      ROADS_NAME = #{record.roadsName,jdbcType=VARCHAR},
      THIRD_ROADS_ID = #{record.thirdRoadsId,jdbcType=VARCHAR},
      ROADS_ID = #{record.roadsId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpBuildRoadsRelation" >
    <!--@mbggenerated-->
    update BUILD_ROADS_RELATION
    <set >
      <if test="buildId != null" >
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="roadsName != null" >
        ROADS_NAME = #{roadsName,jdbcType=VARCHAR},
      </if>
      <if test="thirdRoadsId != null" >
        THIRD_ROADS_ID = #{thirdRoadsId,jdbcType=VARCHAR},
      </if>
      <if test="roadsId != null" >
        ROADS_ID = #{roadsId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpBuildRoadsRelation" >
    <!--@mbggenerated-->
    update BUILD_ROADS_RELATION
    set BUILD_ID = #{buildId,jdbcType=INTEGER},
      ROADS_NAME = #{roadsName,jdbcType=VARCHAR},
      THIRD_ROADS_ID = #{thirdRoadsId,jdbcType=VARCHAR},
      ROADS_ID = #{roadsId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getListByBuildId" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from BUILD_ROADS_RELATION
    where BUILD_ID = #{buildId}
  </select>
</mapper>