<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunDealCodeMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunDealCode">
    <!--@mbggenerated-->
    <id column="CODE_ID" jdbcType="INTEGER" property="codeId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="DEAL_TYPE" jdbcType="TINYINT" property="dealType" />
    <result column="CODE_PREFIX" jdbcType="VARCHAR" property="codePrefix" />
    <result column="CODE_START" jdbcType="VARCHAR" property="codeStart" />
    <result column="CODE_END" jdbcType="VARCHAR" property="codeEnd" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
    <result column="CREATE_USER" jdbcType="INTEGER" property="createUser" />
    <result column="CREATE_USER_NAME" jdbcType="VARCHAR" property="createUserName" />
    <result column="TOTAL_COUNT" jdbcType="INTEGER" property="totalCount" />
    <result column="USED_COUNT" jdbcType="INTEGER" property="usedCount" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    CODE_ID, COMP_ID, DEPT_ID, DEAL_TYPE, CODE_PREFIX, CODE_START, CODE_END, CREATE_TIME, 
    [STATUS], CREATE_USER, CREATE_USER_NAME, TOTAL_COUNT, USED_COUNT, ORGANIZATION_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealCodeExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_DEAL_CODE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_DEAL_CODE
    where CODE_ID = #{codeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_DEAL_CODE
    where CODE_ID = #{codeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealCodeExample">
    <!--@mbggenerated-->
    delete from FUN_DEAL_CODE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="codeId" parameterType="com.myfun.repository.erpdb.po.ErpFunDealCode" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_DEAL_CODE (COMP_ID, DEPT_ID, DEAL_TYPE, 
      CODE_PREFIX, CODE_START, CODE_END, 
      CREATE_TIME, [STATUS], CREATE_USER, 
      CREATE_USER_NAME, TOTAL_COUNT, USED_COUNT, 
      ORGANIZATION_ID)
    values (#{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{dealType,jdbcType=TINYINT}, 
      #{codePrefix,jdbcType=VARCHAR}, #{codeStart,jdbcType=VARCHAR}, #{codeEnd,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{createUser,jdbcType=INTEGER}, 
      #{createUserName,jdbcType=VARCHAR}, #{totalCount,jdbcType=INTEGER}, #{usedCount,jdbcType=INTEGER}, 
      #{organizationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="codeId" parameterType="com.myfun.repository.erpdb.po.ErpFunDealCode" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_DEAL_CODE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="dealType != null">
        DEAL_TYPE,
      </if>
      <if test="codePrefix != null">
        CODE_PREFIX,
      </if>
      <if test="codeStart != null">
        CODE_START,
      </if>
      <if test="codeEnd != null">
        CODE_END,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="status != null">
        [STATUS],
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="createUserName != null">
        CREATE_USER_NAME,
      </if>
      <if test="totalCount != null">
        TOTAL_COUNT,
      </if>
      <if test="usedCount != null">
        USED_COUNT,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="dealType != null">
        #{dealType,jdbcType=TINYINT},
      </if>
      <if test="codePrefix != null">
        #{codePrefix,jdbcType=VARCHAR},
      </if>
      <if test="codeStart != null">
        #{codeStart,jdbcType=VARCHAR},
      </if>
      <if test="codeEnd != null">
        #{codeEnd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        #{totalCount,jdbcType=INTEGER},
      </if>
      <if test="usedCount != null">
        #{usedCount,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealCodeExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_DEAL_CODE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEAL_CODE
    <set>
      <if test="record.codeId != null">
        CODE_ID = #{record.codeId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.dealType != null">
        DEAL_TYPE = #{record.dealType,jdbcType=TINYINT},
      </if>
      <if test="record.codePrefix != null">
        CODE_PREFIX = #{record.codePrefix,jdbcType=VARCHAR},
      </if>
      <if test="record.codeStart != null">
        CODE_START = #{record.codeStart,jdbcType=VARCHAR},
      </if>
      <if test="record.codeEnd != null">
        CODE_END = #{record.codeEnd,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        [STATUS] = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null">
        CREATE_USER_NAME = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.totalCount != null">
        TOTAL_COUNT = #{record.totalCount,jdbcType=INTEGER},
      </if>
      <if test="record.usedCount != null">
        USED_COUNT = #{record.usedCount,jdbcType=INTEGER},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEAL_CODE
    set CODE_ID = #{record.codeId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      DEAL_TYPE = #{record.dealType,jdbcType=TINYINT},
      CODE_PREFIX = #{record.codePrefix,jdbcType=VARCHAR},
      CODE_START = #{record.codeStart,jdbcType=VARCHAR},
      CODE_END = #{record.codeEnd,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      [STATUS] = #{record.status,jdbcType=TINYINT},
      CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      CREATE_USER_NAME = #{record.createUserName,jdbcType=VARCHAR},
      TOTAL_COUNT = #{record.totalCount,jdbcType=INTEGER},
      USED_COUNT = #{record.usedCount,jdbcType=INTEGER},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunDealCode">
    <!--@mbggenerated-->
    update FUN_DEAL_CODE
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="dealType != null">
        DEAL_TYPE = #{dealType,jdbcType=TINYINT},
      </if>
      <if test="codePrefix != null">
        CODE_PREFIX = #{codePrefix,jdbcType=VARCHAR},
      </if>
      <if test="codeStart != null">
        CODE_START = #{codeStart,jdbcType=VARCHAR},
      </if>
      <if test="codeEnd != null">
        CODE_END = #{codeEnd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        [STATUS] = #{status,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null">
        CREATE_USER_NAME = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        TOTAL_COUNT = #{totalCount,jdbcType=INTEGER},
      </if>
      <if test="usedCount != null">
        USED_COUNT = #{usedCount,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
    </set>
    where CODE_ID = #{codeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunDealCode">
    <!--@mbggenerated-->
    update FUN_DEAL_CODE
    set COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      DEAL_TYPE = #{dealType,jdbcType=TINYINT},
      CODE_PREFIX = #{codePrefix,jdbcType=VARCHAR},
      CODE_START = #{codeStart,jdbcType=VARCHAR},
      CODE_END = #{codeEnd,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      [STATUS] = #{status,jdbcType=TINYINT},
      CREATE_USER = #{createUser,jdbcType=INTEGER},
      CREATE_USER_NAME = #{createUserName,jdbcType=VARCHAR},
      TOTAL_COUNT = #{totalCount,jdbcType=INTEGER},
      USED_COUNT = #{usedCount,jdbcType=INTEGER},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER}
    where CODE_ID = #{codeId,jdbcType=INTEGER}
  </update>
  <resultMap extends="BaseResultMap" id="BaseResultMapDto" type="com.myfun.repository.erpdb.dto.ErpFunDealCodeDto">
	  <result column="CODELOG_ID" jdbcType="INTEGER" property="codelogId" />
	  <result column="CODE_NO" jdbcType="VARCHAR" property="codeNo" />
  </resultMap>
  

	<select id="getDealFunDealCodeList" resultMap="BaseResultMap">
		SELECT
        A.CODE_ID, A.COMP_ID, A.DEPT_ID, A.DEAL_TYPE, A.CODE_PREFIX, A.CODE_START, A.CODE_END, A.CREATE_TIME,
        A.[STATUS], A.CREATE_USER, A.CREATE_USER_NAME, A.TOTAL_COUNT, A.USED_COUNT, A.ORGANIZATION_ID
		FROM FUN_DEAL_CODE A JOIN FUN_USERS B ON A.CREATE_USER=B.USER_ID
		<where>
			<if test="param.compId != null and ''!=param.compId">
				AND A.COMP_ID=#{param.compId}
			</if>
			<if test="param.newOrganization == 0">
				<if test="param.deptId != null and ''!=param.deptId">
					AND A.DEPT_ID=#{param.deptId}
				</if>
				<if test="param.grId != null and ''!=param.grId">
					AND B.GR_ID=#{param.grId}
				</if>
			</if>
			<if test="param.newOrganization == 1">
				<if test="param.organizationId != null and param.organizationId != 0">
					AND A.ORGANIZATION_ID = #{param.organizationId}
				</if>
			</if>
			<if test="param.userId != null and ''!=param.userId">
				<choose>
	        		<when test="param.operLevel != null and param.operLevel == 1 "><!-- 本人团队 -->
	        			AND  B.TISSUE_LINE LIKE '%:${param.userId}:%' AND B.USER_LEVEL &lt;= #{param.userLevel}
	        		</when>
	        		<when test="param.operLevel != null and param.operLevel == 2 "><!-- 下级团队 -->
	        			AND  B.TISSUE_LINE LIKE '%:${param.userId}:%'  
	        		</when>
	        		<otherwise>
	        			AND A.CREATE_USER=#{param.userId}
	        		</otherwise>
	        	</choose>
			</if>
			<if test="param.endTime != null and ''!=param.endTime">
				AND A.CREATE_TIME &lt; #{param.endTime}
			</if>
			<if test="param.startTime != null and ''!=param.startTime">
				AND A.CREATE_TIME &gt; #{param.startTime}
			</if>
			<if test="param.codeNo != null and ''!=param.codeNo">
				AND A.CODE_PREFIX like #{param.codeNo}
			</if>
		</where>
		ORDER BY CREATE_TIME DESC 
	</select>
	
	<select id="getDealCountInfo" resultMap="BaseResultMapDto">
		SELECT sum(TOTAL_COUNT) as TOTAL_COUNT,sum(USED_COUNT) as USED_COUNT 
		FROM FUN_DEAL_CODE
		<where>
			<if test="param.compId != null and ''!=param.compId">
			AND COMP_ID=#{param.compId}
			</if>
			<if test="param.newOrganization == 0">
				<if test="param.deptId != null and ''!=param.deptId">
					AND DEPT_ID=#{param.deptId}
				</if>
			</if>
			<if test="param.newOrganization == 1">
				<if test="param.organizationId != null and param.organizationId != 0">
					AND ORGANIZATION_ID = #{param.organizationId}
				</if>
			</if>
			<if test="param.userId != null and ''!=param.userId">
				<choose>
	        		<when test="param.operLevel != null and param.operLevel == 1 "><!-- 本人团队 -->
	        			AND  CREATE_USER in(
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId}
							 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel} 
	        			)	
	        		</when>
	        		<when test="param.operLevel != null and param.operLevel == 2 "><!-- 下级团队 -->
	        			AND  CREATE_USER in(
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId}
							 AND TISSUE_LINE LIKE '%:${param.userId}:%'  
	        			)
	        		</when>
	        		<otherwise>
	        			AND CREATE_USER = #{param.userId}
	        		</otherwise>
	        	</choose>
			</if>
			<if test="param.endTime != null and ''!=param.endTime">
				AND CREATE_TIME &lt; #{param.endTime} 
			</if>
			<if test="param.startTime != null and ''!=param.startTime">
				AND CREATE_TIME &gt; #{param.startTime} 
			</if>
			<if test="param.codeNo != null and ''!=param.codeNo">
				AND CODE_PREFIX like #{param.codeNo}
			</if>
		</where>
	</select>
	<update id="updateDealFunDealCode">
		UPDATE FUN_DEAL_CODE SET STATUS=#{param.status} 
		WHERE CODE_ID = #{param.codeId} 
	</update>

	<update id="updateUsedCount">
		 update FUN_DEAL_CODE set USED_COUNT = USED_COUNT-1 where COMP_ID = #{compId} and CODE_ID = #{codeId}
	</update>

	<update id="updateCode">
		<choose>
			<when test="isCan==1">
				update A set A.USED_COUNT = A.USED_COUNT-B.USED_COUNT
				from FUN_DEAL_CODE A join (select A.CODE_ID,sum(1) as USED_COUNT from FUN_DEAL_CODELOG A JOIN (select CODE_ID,CONTRACT_NO,sum(iif(DEAL_AUDIT_STATUS = '3',1,0)) as FAIL_COUNT,sum(iif(DEAL_AUDIT_STATUS != '3',1,0)) as NOFAIL_COUNT
				from FUN_DEAL
				where COMP_ID = #{compId} and ISBYHAND = 0 and CODE_ID &gt; 0 group by CODE_ID,CONTRACT_NO HAVING sum(iif(DEAL_AUDIT_STATUS = '3',1,0))&gt;0 and sum(iif(DEAL_AUDIT_STATUS != '3',1,0))=0) B ON A.CODE_ID = B.CODE_ID and A.CODE_NO = B.CONTRACT_NO join FUN_DEAL_CODE C ON B.CODE_ID = C.CODE_ID
				where A.COMP_ID = #{compId} and C.STATUS = 1 group by A.CODE_ID) as B ON A.CODE_ID = B.CODE_ID
				where A.COMP_ID = #{compId}
			</when>
			<otherwise>
				update A set A.USED_COUNT = ISNULL(A.USED_COUNT,0)+1
				from FUN_DEAL_CODE A join (select A.CODE_ID from FUN_DEAL_CODELOG A JOIN FUN_DEAL B ON A.CODE_ID = B.CODE_ID and A.CODE_NO = B.CONTRACT_NO join FUN_DEAL_CODE C ON B.CODE_ID = C.CODE_ID
				where B.COMP_ID = #{compId} and B.DEAL_AUDIT_STATUS = 3 and A.USE_STATUS = 0 and C.STATUS = 1
				group by A.CODE_ID ) as B ON A.CODE_ID = B.CODE_ID
				where A.COMP_ID = #{compId} AND A.TOTAL_COUNT&gt;A.USED_COUNT
			</otherwise>
		</choose>

	</update>

	<update id="updateCodeLog">
		<choose>
			<when test="isCan==1">
				update A set A.USE_STATUS = 0
				from FUN_DEAL_CODELOG A join (select A.CODE_ID,A.CODE_NO,A.CODELOG_ID from FUN_DEAL_CODELOG A JOIN (select CODE_ID,CONTRACT_NO,sum(iif(DEAL_AUDIT_STATUS = '3',1,0)) as FAIL_COUNT,sum(iif(DEAL_AUDIT_STATUS != '3',1,0)) as NOFAIL_COUNT
				from FUN_DEAL where COMP_ID = #{compId} and ISBYHAND = 0 and CODE_ID &gt; 0 group by CODE_ID,CONTRACT_NO HAVING sum(iif(DEAL_AUDIT_STATUS = '3',1,0))&gt;0 and sum(iif(DEAL_AUDIT_STATUS != '3',1,0))=0) B ON A.CODE_ID = B.CODE_ID and A.CODE_NO = B.CONTRACT_NO join FUN_DEAL_CODE C ON B.CODE_ID = C.CODE_ID
				where A.COMP_ID = #{compId} and C.STATUS = 1
				group by A.CODE_ID,A.CODE_NO,A.CODELOG_ID) as B ON A.CODELOG_ID = B.CODELOG_ID
				where A.COMP_ID = #{compId}
			</when>
			<otherwise>
				update A set A.USE_STATUS = 1 from FUN_DEAL_CODELOG A join (select A.CODE_ID,A.CODE_NO,A.CODELOG_ID
				from FUN_DEAL_CODELOG A JOIN FUN_DEAL B ON A.CODE_ID = B.CODE_ID and A.CODE_NO = B.CONTRACT_NO join FUN_DEAL_CODE C ON B.CODE_ID = C.CODE_ID
				where B.COMP_ID = #{compId} and B.DEAL_AUDIT_STATUS = 3 and A.USE_STATUS = 0 and C.STATUS = 1
				group by A.CODE_ID,A.CODE_NO,A.CODELOG_ID ) as B ON A.CODELOG_ID = B.CODELOG_ID
				where A.COMP_ID = #{compId}
			</otherwise>
		</choose>
	</update>
	
	<delete id="deleteByCodeId">
		delete from FUN_DEAL_CODE
    	where CODE_ID = #{codeId}
	</delete>
	
	<select id="getFunDealCodeList" resultMap="BaseResultMapDto">
		select top 10 A.CODE_ID AS CODE_ID,A.DEAL_TYPE AS DEAL_TYPE,B.CODE_NO AS CODE_NO,B.CODELOG_ID AS CODELOG_ID
		from FUN_DEAL_CODE A left join FUN_DEAL_CODELOG B ON A.CODE_ID=B.CODE_ID
		where A.COMP_ID = #{compId} and A.STATUS = 1 and B.USE_STATUS = 0
		<if test="dealType==101">
			and A.DEAL_TYPE in (0,1)
		</if>
		<if test="dealType==102">
			and A.DEAL_TYPE in (0,2)
		</if>
		<if test="deptId!=null">
			and A.DEPT_ID = #{deptId}
		</if>
		<if test="dealNo!=null and dealNo!=''">
			and B.CODE_NO like  '${dealNo}%'
		</if>
		order by B.CODELOG_ID
	</select>
 

</mapper>