<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunRoleLevelsMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunRoleLevels">
    <!--@mbggenerated-->
    <id column="ROLE_LEVEL_ID" jdbcType="INTEGER" property="roleLevelId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="ROLE_LEVEL_NAME" jdbcType="VARCHAR" property="roleLevelName" />
    <result column="ROLE_LEVEL_SALARY" jdbcType="INTEGER" property="roleLevelSalary" />
    <result column="SEQ_NO" jdbcType="INTEGER" property="seqNo" />
    <result column="ROLE_LEVEL_STATUS" jdbcType="TINYINT" property="roleLevelStatus" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ROLE_LEVEL_ID, COMP_ID, ROLE_ID, ROLE_LEVEL_NAME, ROLE_LEVEL_SALARY, SEQ_NO, ROLE_LEVEL_STATUS, 
    CREATION_TIME
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRoleLevelsExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_ROLE_LEVELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_ROLE_LEVELS
    where ROLE_LEVEL_ID = #{roleLevelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_ROLE_LEVELS
    where ROLE_LEVEL_ID = #{roleLevelId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRoleLevelsExample">
    <!--@mbggenerated-->
    delete from FUN_ROLE_LEVELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="roleLevelId" parameterType="com.myfun.repository.erpdb.po.ErpFunRoleLevels" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ROLE_LEVELS (COMP_ID, ROLE_ID, ROLE_LEVEL_NAME, 
      ROLE_LEVEL_SALARY, SEQ_NO, ROLE_LEVEL_STATUS, 
      CREATION_TIME)
    values (#{compId,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{roleLevelName,jdbcType=VARCHAR}, 
      #{roleLevelSalary,jdbcType=INTEGER}, #{seqNo,jdbcType=INTEGER}, #{roleLevelStatus,jdbcType=TINYINT}, 
      #{creationTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="roleLevelId" parameterType="com.myfun.repository.erpdb.po.ErpFunRoleLevels" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ROLE_LEVELS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="roleLevelName != null">
        ROLE_LEVEL_NAME,
      </if>
      <if test="roleLevelSalary != null">
        ROLE_LEVEL_SALARY,
      </if>
      <if test="seqNo != null">
        SEQ_NO,
      </if>
      <if test="roleLevelStatus != null">
        ROLE_LEVEL_STATUS,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleLevelName != null">
        #{roleLevelName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevelSalary != null">
        #{roleLevelSalary,jdbcType=INTEGER},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="roleLevelStatus != null">
        #{roleLevelStatus,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRoleLevelsExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_ROLE_LEVELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ROLE_LEVELS
    <set>
      <if test="record.roleLevelId != null">
        ROLE_LEVEL_ID = #{record.roleLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleLevelName != null">
        ROLE_LEVEL_NAME = #{record.roleLevelName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleLevelSalary != null">
        ROLE_LEVEL_SALARY = #{record.roleLevelSalary,jdbcType=INTEGER},
      </if>
      <if test="record.seqNo != null">
        SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      </if>
      <if test="record.roleLevelStatus != null">
        ROLE_LEVEL_STATUS = #{record.roleLevelStatus,jdbcType=TINYINT},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ROLE_LEVELS
    set ROLE_LEVEL_ID = #{record.roleLevelId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      ROLE_LEVEL_NAME = #{record.roleLevelName,jdbcType=VARCHAR},
      ROLE_LEVEL_SALARY = #{record.roleLevelSalary,jdbcType=INTEGER},
      SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      ROLE_LEVEL_STATUS = #{record.roleLevelStatus,jdbcType=TINYINT},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunRoleLevels">
    <!--@mbggenerated-->
    update FUN_ROLE_LEVELS
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleLevelName != null">
        ROLE_LEVEL_NAME = #{roleLevelName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevelSalary != null">
        ROLE_LEVEL_SALARY = #{roleLevelSalary,jdbcType=INTEGER},
      </if>
      <if test="seqNo != null">
        SEQ_NO = #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="roleLevelStatus != null">
        ROLE_LEVEL_STATUS = #{roleLevelStatus,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ROLE_LEVEL_ID = #{roleLevelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunRoleLevels">
    <!--@mbggenerated-->
    update FUN_ROLE_LEVELS
    set COMP_ID = #{compId,jdbcType=INTEGER},
      ROLE_ID = #{roleId,jdbcType=VARCHAR},
      ROLE_LEVEL_NAME = #{roleLevelName,jdbcType=VARCHAR},
      ROLE_LEVEL_SALARY = #{roleLevelSalary,jdbcType=INTEGER},
      SEQ_NO = #{seqNo,jdbcType=INTEGER},
      ROLE_LEVEL_STATUS = #{roleLevelStatus,jdbcType=TINYINT},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP}
    where ROLE_LEVEL_ID = #{roleLevelId,jdbcType=INTEGER}
  </update>
  
  <select id="getMaxRoleLevelSeqNo" resultType="java.lang.Integer">
		select max(SEQ_NO) maxSeq from FUN_ROLE_LEVELS where COMP_ID = #{compId} and ROLE_ID = #{roleId} and ROLE_LEVEL_STATUS = 1
  </select>

  <select id="getRoleLowRoleLeveLId" resultType="java.lang.Integer">
		SELECT TOP 1 ROLE_LEVEL_ID
		FROM FUN_ROLE_LEVELS
		WHERE COMP_ID = #{compId} AND ROLE_ID = #{roleId} AND ROLE_LEVEL_STATUS = 1 ORDER BY SEQ_NO
  </select>
</mapper>