<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunDealTaxesMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunDealTaxes">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="AGREEMENT_NO" jdbcType="VARCHAR" property="agreementNo" />
    <result column="TAXES_FATHER_ID" jdbcType="INTEGER" property="taxesFatherId" />
    <result column="TAXES_SUB_ID" jdbcType="INTEGER" property="taxesSubId" />
    <result column="TAXES_TYPE" jdbcType="TINYINT" property="taxesType" />
    <result column="TAXES_DATE" jdbcType="VARCHAR" property="taxesDate" />
    <result column="PRICE" jdbcType="VARCHAR" property="price" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="TAXES_FATHER_NAME" jdbcType="VARCHAR" property="taxesFatherName" />
    <result column="TAXES_SUB_NAME" jdbcType="VARCHAR" property="taxesSubName" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="pay_type" jdbcType="TINYINT" property="payType" />
    <result column="taxes_fixed_unit" jdbcType="TINYINT" property="taxesFixedUnit" />
    <result column="UPDATE_USER" jdbcType="INTEGER" property="updateUser" />
    <result column="UPDATE_USER_NAME" jdbcType="VARCHAR" property="updateUserName" />
    <result column="CHECK_FLAG" jdbcType="TINYINT" property="checkFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, DEAL_ID, AGREEMENT_NO, TAXES_FATHER_ID, TAXES_SUB_ID, TAXES_TYPE, TAXES_DATE, 
    PRICE, REMARK, TAXES_FATHER_NAME, TAXES_SUB_NAME, CREATE_TIME, pay_type, taxes_fixed_unit, 
    UPDATE_USER, UPDATE_USER_NAME, CHECK_FLAG
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_DEAL_TAXES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_DEAL_TAXES
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_DEAL_TAXES
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesExample">
    <!--@mbggenerated-->
    delete from FUN_DEAL_TAXES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxes" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_DEAL_TAXES (COMP_ID, DEAL_ID, AGREEMENT_NO, 
      TAXES_FATHER_ID, TAXES_SUB_ID, TAXES_TYPE, 
      TAXES_DATE, PRICE, REMARK, 
      TAXES_FATHER_NAME, TAXES_SUB_NAME, CREATE_TIME, 
      pay_type, taxes_fixed_unit, UPDATE_USER, 
      UPDATE_USER_NAME, CHECK_FLAG)
    values (#{compId,jdbcType=INTEGER}, #{dealId,jdbcType=INTEGER}, #{agreementNo,jdbcType=VARCHAR}, 
      #{taxesFatherId,jdbcType=INTEGER}, #{taxesSubId,jdbcType=INTEGER}, #{taxesType,jdbcType=TINYINT}, 
      #{taxesDate,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{taxesFatherName,jdbcType=VARCHAR}, #{taxesSubName,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{payType,jdbcType=TINYINT}, #{taxesFixedUnit,jdbcType=TINYINT}, #{updateUser,jdbcType=INTEGER}, 
      #{updateUserName,jdbcType=VARCHAR}, #{checkFlag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxes" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_DEAL_TAXES
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="dealId != null">
        DEAL_ID,
      </if>
      <if test="agreementNo != null">
        AGREEMENT_NO,
      </if>
      <if test="taxesFatherId != null">
        TAXES_FATHER_ID,
      </if>
      <if test="taxesSubId != null">
        TAXES_SUB_ID,
      </if>
      <if test="taxesType != null">
        TAXES_TYPE,
      </if>
      <if test="taxesDate != null">
        TAXES_DATE,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="taxesFatherName != null">
        TAXES_FATHER_NAME,
      </if>
      <if test="taxesSubName != null">
        TAXES_SUB_NAME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="taxesFixedUnit != null">
        taxes_fixed_unit,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="updateUserName != null">
        UPDATE_USER_NAME,
      </if>
      <if test="checkFlag != null">
        CHECK_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="dealId != null">
        #{dealId,jdbcType=INTEGER},
      </if>
      <if test="agreementNo != null">
        #{agreementNo,jdbcType=VARCHAR},
      </if>
      <if test="taxesFatherId != null">
        #{taxesFatherId,jdbcType=INTEGER},
      </if>
      <if test="taxesSubId != null">
        #{taxesSubId,jdbcType=INTEGER},
      </if>
      <if test="taxesType != null">
        #{taxesType,jdbcType=TINYINT},
      </if>
      <if test="taxesDate != null">
        #{taxesDate,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="taxesFatherName != null">
        #{taxesFatherName,jdbcType=VARCHAR},
      </if>
      <if test="taxesSubName != null">
        #{taxesSubName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="taxesFixedUnit != null">
        #{taxesFixedUnit,jdbcType=TINYINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null">
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="checkFlag != null">
        #{checkFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_DEAL_TAXES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEAL_TAXES
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.dealId != null">
        DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      </if>
      <if test="record.agreementNo != null">
        AGREEMENT_NO = #{record.agreementNo,jdbcType=VARCHAR},
      </if>
      <if test="record.taxesFatherId != null">
        TAXES_FATHER_ID = #{record.taxesFatherId,jdbcType=INTEGER},
      </if>
      <if test="record.taxesSubId != null">
        TAXES_SUB_ID = #{record.taxesSubId,jdbcType=INTEGER},
      </if>
      <if test="record.taxesType != null">
        TAXES_TYPE = #{record.taxesType,jdbcType=TINYINT},
      </if>
      <if test="record.taxesDate != null">
        TAXES_DATE = #{record.taxesDate,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        PRICE = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.taxesFatherName != null">
        TAXES_FATHER_NAME = #{record.taxesFatherName,jdbcType=VARCHAR},
      </if>
      <if test="record.taxesSubName != null">
        TAXES_SUB_NAME = #{record.taxesSubName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.taxesFixedUnit != null">
        taxes_fixed_unit = #{record.taxesFixedUnit,jdbcType=TINYINT},
      </if>
      <if test="record.updateUser != null">
        UPDATE_USER = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserName != null">
        UPDATE_USER_NAME = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.checkFlag != null">
        CHECK_FLAG = #{record.checkFlag,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEAL_TAXES
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      AGREEMENT_NO = #{record.agreementNo,jdbcType=VARCHAR},
      TAXES_FATHER_ID = #{record.taxesFatherId,jdbcType=INTEGER},
      TAXES_SUB_ID = #{record.taxesSubId,jdbcType=INTEGER},
      TAXES_TYPE = #{record.taxesType,jdbcType=TINYINT},
      TAXES_DATE = #{record.taxesDate,jdbcType=VARCHAR},
      PRICE = #{record.price,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      TAXES_FATHER_NAME = #{record.taxesFatherName,jdbcType=VARCHAR},
      TAXES_SUB_NAME = #{record.taxesSubName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=TINYINT},
      taxes_fixed_unit = #{record.taxesFixedUnit,jdbcType=TINYINT},
      UPDATE_USER = #{record.updateUser,jdbcType=INTEGER},
      UPDATE_USER_NAME = #{record.updateUserName,jdbcType=VARCHAR},
      CHECK_FLAG = #{record.checkFlag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxes">
    <!--@mbggenerated-->
    update FUN_DEAL_TAXES
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="dealId != null">
        DEAL_ID = #{dealId,jdbcType=INTEGER},
      </if>
      <if test="agreementNo != null">
        AGREEMENT_NO = #{agreementNo,jdbcType=VARCHAR},
      </if>
      <if test="taxesFatherId != null">
        TAXES_FATHER_ID = #{taxesFatherId,jdbcType=INTEGER},
      </if>
      <if test="taxesSubId != null">
        TAXES_SUB_ID = #{taxesSubId,jdbcType=INTEGER},
      </if>
      <if test="taxesType != null">
        TAXES_TYPE = #{taxesType,jdbcType=TINYINT},
      </if>
      <if test="taxesDate != null">
        TAXES_DATE = #{taxesDate,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="taxesFatherName != null">
        TAXES_FATHER_NAME = #{taxesFatherName,jdbcType=VARCHAR},
      </if>
      <if test="taxesSubName != null">
        TAXES_SUB_NAME = #{taxesSubName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="taxesFixedUnit != null">
        taxes_fixed_unit = #{taxesFixedUnit,jdbcType=TINYINT},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null">
        UPDATE_USER_NAME = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="checkFlag != null">
        CHECK_FLAG = #{checkFlag,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxes">
    <!--@mbggenerated-->
    update FUN_DEAL_TAXES
    set COMP_ID = #{compId,jdbcType=INTEGER},
      DEAL_ID = #{dealId,jdbcType=INTEGER},
      AGREEMENT_NO = #{agreementNo,jdbcType=VARCHAR},
      TAXES_FATHER_ID = #{taxesFatherId,jdbcType=INTEGER},
      TAXES_SUB_ID = #{taxesSubId,jdbcType=INTEGER},
      TAXES_TYPE = #{taxesType,jdbcType=TINYINT},
      TAXES_DATE = #{taxesDate,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      TAXES_FATHER_NAME = #{taxesFatherName,jdbcType=VARCHAR},
      TAXES_SUB_NAME = #{taxesSubName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=TINYINT},
      taxes_fixed_unit = #{taxesFixedUnit,jdbcType=TINYINT},
      UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      UPDATE_USER_NAME = #{updateUserName,jdbcType=VARCHAR},
      CHECK_FLAG = #{checkFlag,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getModelDataList" resultMap="BaseResultMap">
	    <include refid="Base_Column_List" />
	    FROM FUN_DEAL_TAXES
        AND DEAL_ID = #{dealId} and PAY_TYPE = #{payType} and CHECK_FLAG = 1
  </select>
</mapper>