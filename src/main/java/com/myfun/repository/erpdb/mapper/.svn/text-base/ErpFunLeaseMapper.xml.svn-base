<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunLeaseMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunLease">
    <!--@mbggenerated-->
    <id column="LEASE_ID" jdbcType="INTEGER" property="leaseId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="CREATE_ARCHIVE_ID" jdbcType="INTEGER" property="createArchiveId" />
    <result column="LEASE_NO" jdbcType="VARCHAR" property="leaseNo" />
    <result column="LEASE_SUBJECT" jdbcType="VARCHAR" property="leaseSubject" />
    <result column="LEASE_OWNER" jdbcType="VARCHAR" property="leaseOwner" />
    <result column="CELL_PHONE" jdbcType="VARCHAR" property="cellPhone" />
    <result column="ID_CARD" jdbcType="VARCHAR" property="idCard" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="BUILD_CODE" jdbcType="VARCHAR" property="buildCode" />
    <result column="LEASE_REG" jdbcType="INTEGER" property="leaseReg" />
    <result column="REGION_NAME" jdbcType="VARCHAR" property="regionName" />
    <result column="SECTION_ID" jdbcType="INTEGER" property="sectionId" />
    <result column="SECTION_NAME" jdbcType="VARCHAR" property="sectionName" />
    <result column="LEASE_ROUND" jdbcType="TINYINT" property="leaseRound" />
    <result column="TRADE_ADDR" jdbcType="VARCHAR" property="tradeAddr" />
    <result column="LEASE_ROOF" jdbcType="VARCHAR" property="leaseRoof" />
    <result column="LEASE_UNIT" jdbcType="VARCHAR" property="leaseUnit" />
    <result column="UNIT_FLOOR" jdbcType="VARCHAR" property="unitFloor" />
    <result column="LEASE_NUM" jdbcType="VARCHAR" property="leaseNum" />
    <result column="LEASE_ROOF_R" jdbcType="VARCHAR" property="leaseRoofR" />
    <result column="LEASE_UNIT_R" jdbcType="VARCHAR" property="leaseUnitR" />
    <result column="UNIT_FLOOR_R" jdbcType="VARCHAR" property="unitFloorR" />
    <result column="LEASE_NUM_R" jdbcType="VARCHAR" property="leaseNumR" />
    <result column="PLATE_TYPE" jdbcType="TINYINT" property="plateType" />
    <result column="LEASE_ROOM" jdbcType="TINYINT" property="leaseRoom" />
    <result column="LEASE_HALL" jdbcType="TINYINT" property="leaseHall" />
    <result column="LEASE_WEI" jdbcType="TINYINT" property="leaseWei" />
    <result column="LEASE_YANG" jdbcType="TINYINT" property="leaseYang" />
    <result column="LEASE_LADDER" jdbcType="TINYINT" property="leaseLadder" />
    <result column="LEASE_DOORS" jdbcType="INTEGER" property="leaseDoors" />
    <result column="LEASE_TYPE" jdbcType="TINYINT" property="leaseType" />
    <result column="LEASE_FLOOR" jdbcType="SMALLINT" property="leaseFloor" />
    <result column="LEASE_FLOORS" jdbcType="INTEGER" property="leaseFloors" />
    <result column="LEASE_FITMENT" jdbcType="TINYINT" property="leaseFitment" />
    <result column="LEASE_DIRECT" jdbcType="TINYINT" property="leaseDirect" />
    <result column="LEASE_YEAR" jdbcType="SMALLINT" property="leaseYear" />
    <result column="LEASE_USEAGE" jdbcType="TINYINT" property="leaseUseage" />
    <result column="LEASE_STREET" jdbcType="BIT" property="leaseStreet" />
    <result column="LEASE_ACCOUNT" jdbcType="INTEGER" property="leaseAccount" />
    <result column="LEASE_AREA" jdbcType="NUMERIC" property="leaseArea" />
    <result column="LEASE_TOTAL_PRICE" jdbcType="NUMERIC" property="leaseTotalPrice" />
    <result column="PRICE_UNIT" jdbcType="TINYINT" property="priceUnit" />
    <result column="LEASE_LOWEST_PRICE" jdbcType="NUMERIC" property="leaseLowestPrice" />
    <result column="LEASE_PROPERTY" jdbcType="NUMERIC" property="leaseProperty" />
    <result column="IS_SEPERATOR" jdbcType="BIT" property="isSeperator" />
    <result column="SHOP_USAGE" jdbcType="VARCHAR" property="shopUsage" />
    <result column="OWNER_TYPE" jdbcType="TINYINT" property="ownerType" />
    <result column="OFFICE_LEVEL" jdbcType="TINYINT" property="officeLevel" />
    <result column="LEASE_DEPOSIT" jdbcType="INTEGER" property="leaseDeposit" />
    <result column="LEASE_LEAVE_TIME" jdbcType="VARCHAR" property="leaseLeaveTime" />
    <result column="LEASE_LIMITE" jdbcType="INTEGER" property="leaseLimite" />
    <result column="HALL_STRUCTURE" jdbcType="TINYINT" property="hallStructure" />
    <result column="UG_AREA" jdbcType="NUMERIC" property="ugArea" />
    <result column="UG_TYPE" jdbcType="INTEGER" property="ugType" />
    <result column="GARDEN_AREA" jdbcType="NUMERIC" property="gardenArea" />
    <result column="GARAGE_AMOUNT" jdbcType="INTEGER" property="garageAmount" />
    <result column="LEASE_SET" jdbcType="VARCHAR" property="leaseSet" />
    <result column="LEASE_CHARACT" jdbcType="VARCHAR" property="leaseCharact" />
    <result column="LEASE_MEMO" jdbcType="VARCHAR" property="leaseMemo" />
    <result column="LEASE_SOURCE" jdbcType="TINYINT" property="leaseSource" />
    <result column="LEASE_LEVEL" jdbcType="TINYINT" property="leaseLevel" />
    <result column="LEASE_KEY" jdbcType="BIT" property="leaseKey" />
    <result column="LEASE_KEY_NUM" jdbcType="VARCHAR" property="leaseKeyNum" />
    <result column="KEY_TIME" jdbcType="VARCHAR" property="keyTime" />
    <result column="LEASE_EXPLRTH" jdbcType="BIT" property="leaseExplrth" />
    <result column="EXPLRTH_DATETIME" jdbcType="VARCHAR" property="explrthDatetime" />
    <result column="LEASE_CONSIGN" jdbcType="INTEGER" property="leaseConsign" />
    <result column="LEASE_CONSIGN_NO" jdbcType="VARCHAR" property="leaseConsignNo" />
    <result column="WEITUO_TIME" jdbcType="VARCHAR" property="weituoTime" />
    <result column="LEASE_COOPERATE" jdbcType="BIT" property="leaseCooperate" />
    <result column="COOPERATE_TIME" jdbcType="VARCHAR" property="cooperateTime" />
    <result column="COMPLAINT_FLAG" jdbcType="BIT" property="complaintFlag" />
    <result column="LEASE_PUBLISH" jdbcType="BIT" property="leasePublish" />
    <result column="PUBLISH_TIME" jdbcType="VARCHAR" property="publishTime" />
    <result column="LEASE_MAP" jdbcType="INTEGER" property="leaseMap" />
    <result column="PHOTO_TIME" jdbcType="VARCHAR" property="photoTime" />
    <result column="LEASE_STATUS" jdbcType="INTEGER" property="leaseStatus" />
    <result column="TRACK_TIME" jdbcType="VARCHAR" property="trackTime" />
    <result column="TRACK_TIME2" jdbcType="VARCHAR" property="trackTime2" />
    <result column="ACTION_TIME" jdbcType="VARCHAR" property="actionTime" />
    <result column="FROM_SOSO" jdbcType="BIT" property="fromSoso" />
    <result column="REPEAT_FLAG" jdbcType="INTEGER" property="repeatFlag" />
    <result column="INFO_TYPE" jdbcType="TINYINT" property="infoType" />
    <result column="SHARE_FLAG" jdbcType="BIT" property="shareFlag" />
    <result column="FRIEND_HOUSE" jdbcType="BIT" property="friendHouse" />
    <result column="RED_FLAG" jdbcType="BIT" property="redFlag" />
    <result column="ORANGE_FLAG" jdbcType="BIT" property="orangeFlag" />
    <result column="PUBLIC_COUNT" jdbcType="INTEGER" property="publicCount" />
    <result column="PUBLIC_TIME" jdbcType="VARCHAR" property="publicTime" />
    <result column="DUE_TIME" jdbcType="VARCHAR" property="dueTime" />
    <result column="SPECIAL_TIME" jdbcType="VARCHAR" property="specialTime" />
    <result column="SCHEDULE_TIME" jdbcType="VARCHAR" property="scheduleTime" />
    <result column="DEAL_TIME" jdbcType="VARCHAR" property="dealTime" />
    <result column="WRITEOFF_TIME" jdbcType="VARCHAR" property="writeoffTime" />
    <result column="SECRECY_TIME" jdbcType="VARCHAR" property="secrecyTime" />
    <result column="COMMEND_TIME" jdbcType="VARCHAR" property="commendTime" />
    <result column="PRIVATE_TIME" jdbcType="VARCHAR" property="privateTime" />
    <result column="FROM_PUBLIC" jdbcType="BIT" property="fromPublic" />
    <result column="THUMB_URL" jdbcType="VARCHAR" property="thumbUrl" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="TAG_IDS" jdbcType="VARCHAR" property="tagIds" />
    <result column="LEASE_CERT_TIME" jdbcType="VARCHAR" property="leaseCertTime" />
    <result column="PUBLISH_SITES" jdbcType="INTEGER" property="publishSites" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="LEASE_ROOF_T" jdbcType="VARCHAR" property="leaseRoofT" />
    <result column="LEASE_NUM_T" jdbcType="VARCHAR" property="leaseNumT" />
    <result column="LEASE_UNIT_T" jdbcType="VARCHAR" property="leaseUnitT" />
    <result column="LEASE_RIGHT" jdbcType="TINYINT" property="leaseRight" />
    <result column="VIDEO_NUM" jdbcType="INTEGER" property="videoNum" />
    <result column="CREATOR_UID" jdbcType="INTEGER" property="creatorUid" />
    <result column="is_ignore" jdbcType="TINYINT" property="isIgnore" />
    <result column="lease_id_old" jdbcType="INTEGER" property="leaseIdOld" />
    <result column="LEASE_INNERAREA" jdbcType="DECIMAL" property="leaseInnerarea" />
    <result column="HOUSE_BARGAIN" jdbcType="BIT" property="houseBargain" />
    <result column="ENCODE_FLAG" jdbcType="TINYINT" property="encodeFlag" />
    <result column="LOCK" jdbcType="TINYINT" property="lock" />
    <result column="TRUE_FLAG" jdbcType="TINYINT" property="trueFlag" />
    <result column="SENDTOTENCENT" jdbcType="TINYINT" property="sendtotencent" />
    <result column="HOUSE_SOURCE_WAY" jdbcType="TINYINT" property="houseSourceWay" />
    <result column="YOU_SHARE_FLAG" jdbcType="TINYINT" property="youShareFlag" />
    <result column="YOU_SHARE_TIME" jdbcType="TIMESTAMP" property="youShareTime" />
    <result column="YOU_BUY_COUNT" jdbcType="INTEGER" property="youBuyCount" />
    <result column="OWNER_SEX" jdbcType="TINYINT" property="ownerSex" />
    <result column="YOU_SHARE_ID" jdbcType="INTEGER" property="youShareId" />
    <result column="THUMBPIC_VER" jdbcType="VARCHAR" property="thumbpicVer" />
    <result column="PRIVATE_USER_ID" jdbcType="INTEGER" property="privateUserId" />
    <result column="LEASE_ROOM_TYPE" jdbcType="TINYINT" property="leaseRoomType" />
    <result column="LEASE_ROOM_CLASSIC" jdbcType="TINYINT" property="leaseRoomClassic" />
    <result column="FLAT_SHARE_SEX" jdbcType="TINYINT" property="flatShareSex" />
    <result column="ADDR_MD5" jdbcType="VARCHAR" property="addrMd5" />
    <result column="PANORAMA_MAP" jdbcType="INTEGER" property="panoramaMap" />
    <result column="YOUJIA_STATISTIC_FLAG" jdbcType="TINYINT" property="youjiaStatisticFlag" />
    <result column="ADS_FLAG" jdbcType="TINYINT" property="adsFlag" />
    <result column="SYNC_TIME" jdbcType="TIMESTAMP" property="syncTime" />
    <result column="VIDEO_REVIEW_FLAG" jdbcType="TINYINT" property="videoReviewFlag" />
    <result column="HAS_PANORAMA" jdbcType="TINYINT" property="hasPanorama" />
    <result column="BIDDING_FLAG" jdbcType="BIT" property="biddingFlag" />
    <result column="COMPETE_END_TIME" jdbcType="TIMESTAMP" property="competeEndTime" />
    <result column="COMPETE_PRICE" jdbcType="NUMERIC" property="competePrice" />
    <result column="YOU_SHARE_MONEY_STATE" jdbcType="TINYINT" property="youShareMoneyState" />
    <result column="SENDTO_WEIDIAN" jdbcType="TINYINT" property="sendtoWeidian" />
    <result column="SENDTO_YOUYOU" jdbcType="TINYINT" property="sendtoYouyou" />
    <result column="YOUYOU_DEAL" jdbcType="TINYINT" property="youyouDeal" />
    <result column="SPECIAL_END_TIME" jdbcType="TIMESTAMP" property="specialEndTime" />
    <result column="SCHEDULE_END_TIME" jdbcType="TIMESTAMP" property="scheduleEndTime" />
    <result column="PROXY_URL" jdbcType="VARCHAR" property="proxyUrl" />
    <result column="UPLOAD_PROXY_USER" jdbcType="VARCHAR" property="uploadProxyUser" />
    <result column="CITY_SHARE_FLAG" jdbcType="TINYINT" property="cityShareFlag" />
    <result column="BRAND_COMP_ID" jdbcType="INTEGER" property="brandCompId" />
    <result column="CHECK_CODE_FUN" jdbcType="VARCHAR" property="checkCodeFun" />
    <result column="OWNERSHIP_TYPE" jdbcType="TINYINT" property="ownershipType" />
    <result column="EFFECTIVE_DATE" jdbcType="TIMESTAMP" property="effectiveDate" />
    <result column="QZ_CODE_FUN" jdbcType="VARCHAR" property="qzCodeFun" />
    <result column="FUNMANAGER_SALESTATUS" jdbcType="TINYINT" property="funmanagerSalestatus" />
    <result column="HAS_FUNKAN" jdbcType="TINYINT" property="hasFunkan" />
    <result column="JOINT_CELL_PHONE" jdbcType="VARCHAR" property="jointCellPhone" />
    <result column="JOINT_USER_NAME" jdbcType="VARCHAR" property="jointUserName" />
    <result column="JOINT_USER_SEX" jdbcType="TINYINT" property="jointUserSex" />
    <result column="JOINT_ID_CARD" jdbcType="VARCHAR" property="jointIdCard" />
    <result column="RESPITE_END_TIME" jdbcType="TIMESTAMP" property="respiteEndTime" />
    <result column="SALE_LEASE_ID" jdbcType="INTEGER" property="saleLeaseId" />
    <result column="IS_SALE_LEASE" jdbcType="TINYINT" property="isSaleLease" />
    <result column="ENTRUST_END_TIME" jdbcType="TIMESTAMP" property="entrustEndTime" />
    <result column="ENTRUST_CREATE_USER" jdbcType="INTEGER" property="entrustCreateUser" />
    <result column="AVAILABLE_TIME" jdbcType="TIMESTAMP" property="availableTime" />
    <result column="MODIFY_PRICE_END" jdbcType="TIMESTAMP" property="modifyPriceEnd" />
    <result column="MODIFY_PRICE_TREND" jdbcType="TINYINT" property="modifyPriceTrend" />
    <result column="LAST_DKAN_TIME" jdbcType="TIMESTAMP" property="lastDkanTime" />
    <result column="OLD_TRUE_FLAG" jdbcType="TINYINT" property="oldTrueFlag" />
    <result column="INNER_NO" jdbcType="INTEGER" property="innerNo" />
    <result column="JOINT_ID_CARD_TYPE" jdbcType="INTEGER" property="jointIdCardType" />
    <result column="ID_CARD_TYPE" jdbcType="INTEGER" property="idCardType" />
    <result column="OFFICE_CHARACTER" jdbcType="TINYINT" property="officeCharacter" />
    <result column="OFFICE_TAX" jdbcType="BIT" property="officeTax" />
    <result column="LEASE_BAY" jdbcType="NUMERIC" property="leaseBay" />
    <result column="LEASE_DEPTH" jdbcType="NUMERIC" property="leaseDepth" />
    <result column="LEASE_STOREY" jdbcType="NUMERIC" property="leaseStorey" />
    <result column="CHECK_TIME" jdbcType="VARCHAR" property="checkTime" />
    <result column="FOCUS_TIME" jdbcType="TIMESTAMP" property="focusTime" />
    <result column="USER_LEVEL" jdbcType="INTEGER" property="userLevel" />
    <result column="TISSUE_LINE" jdbcType="VARCHAR" property="tissueLine" />
    <result column="PARTNER_ID" jdbcType="INTEGER" property="partnerId" />
    <result column="FUNKAN_USER_ID" jdbcType="INTEGER" property="funkanUserId" />
    <result column="LEASE_KEY_USER_ID" jdbcType="INTEGER" property="leaseKeyUserId" />
    <result column="FILE_CODING" jdbcType="VARCHAR" property="fileCoding" />
    <result column="LESSOR" jdbcType="TINYINT" property="lessor" />
    <result column="TRANSFER_FEE" jdbcType="NUMERIC" property="transferFee" />
    <result column="RETURN_RATE" jdbcType="NUMERIC" property="returnRate" />
    <result column="ML_RESERVED_COMP" jdbcType="VARCHAR" property="mlReservedComp" />
    <result column="HOUSE_VERIFY" jdbcType="TINYINT" property="houseVerify" />
    <result column="KITCHEN" jdbcType="TINYINT" property="kitchen" />
    <result column="ML_WHOLE_LAYER" jdbcType="TINYINT" property="mlWholeLayer" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
    <result column="LEASE_NATURE" jdbcType="TINYINT" property="leaseNature" />
    <result column="LEASE_STRUCT" jdbcType="TINYINT" property="leaseStruct" />
    <result column="LEASE_EXPIRATION_TIME" jdbcType="TIMESTAMP" property="leaseExpirationTime" />
    <result column="HOUSE_SITUATION" jdbcType="TINYINT" property="houseSituation" />
    <result column="CURRENT_RENT" jdbcType="NUMERIC" property="currentRent" />
    <result column="TRANSACTION_STATUS" jdbcType="TINYINT" property="transactionStatus" />
    <result column="LEASE_UNIT_PRICE" jdbcType="DECIMAL" property="leaseUnitPrice" />
    <result column="HAS_RECORDED" jdbcType="TINYINT" property="hasRecorded" />
    <result column="LEASE_ENTRUST_PRICE" jdbcType="NUMERIC" property="leaseEntrustPrice" />
    <result column="HAS_ENTRUST" jdbcType="TINYINT" property="hasEntrust" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.myfun.repository.erpdb.po.ErpFunLease">
    <!--@mbggenerated-->
    <result column="FUZZY_SEARCH" jdbcType="CLOB" property="fuzzySearch" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    LEASE_ID, COMP_ID, CITY_ID, REG_ID, DEPT_ID, GR_ID, USER_ID, ARCHIVE_ID, CREATION_TIME, 
    CREATE_ARCHIVE_ID, LEASE_NO, LEASE_SUBJECT, LEASE_OWNER, CELL_PHONE, ID_CARD, BUILD_ID, 
    BUILD_NAME, BUILD_CODE, LEASE_REG, REGION_NAME, SECTION_ID, SECTION_NAME, LEASE_ROUND, 
    TRADE_ADDR, LEASE_ROOF, LEASE_UNIT, UNIT_FLOOR, LEASE_NUM, LEASE_ROOF_R, LEASE_UNIT_R, 
    UNIT_FLOOR_R, LEASE_NUM_R, PLATE_TYPE, LEASE_ROOM, LEASE_HALL, LEASE_WEI, LEASE_YANG, 
    LEASE_LADDER, LEASE_DOORS, LEASE_TYPE, LEASE_FLOOR, LEASE_FLOORS, LEASE_FITMENT, 
    LEASE_DIRECT, LEASE_YEAR, LEASE_USEAGE, LEASE_STREET, LEASE_ACCOUNT, LEASE_AREA, 
    LEASE_TOTAL_PRICE, PRICE_UNIT, LEASE_LOWEST_PRICE, LEASE_PROPERTY, IS_SEPERATOR, 
    SHOP_USAGE, OWNER_TYPE, OFFICE_LEVEL, LEASE_DEPOSIT, LEASE_LEAVE_TIME, LEASE_LIMITE, 
    HALL_STRUCTURE, UG_AREA, UG_TYPE, GARDEN_AREA, GARAGE_AMOUNT, LEASE_SET, LEASE_CHARACT, 
    LEASE_MEMO, LEASE_SOURCE, LEASE_LEVEL, LEASE_KEY, LEASE_KEY_NUM, KEY_TIME, LEASE_EXPLRTH, 
    EXPLRTH_DATETIME, LEASE_CONSIGN, LEASE_CONSIGN_NO, WEITUO_TIME, LEASE_COOPERATE, 
    COOPERATE_TIME, COMPLAINT_FLAG, LEASE_PUBLISH, PUBLISH_TIME, LEASE_MAP, PHOTO_TIME, 
    LEASE_STATUS, TRACK_TIME, TRACK_TIME2, ACTION_TIME, FROM_SOSO, REPEAT_FLAG, INFO_TYPE, 
    SHARE_FLAG, FRIEND_HOUSE, RED_FLAG, ORANGE_FLAG, PUBLIC_COUNT, PUBLIC_TIME, DUE_TIME, 
    SPECIAL_TIME, SCHEDULE_TIME, DEAL_TIME, WRITEOFF_TIME, SECRECY_TIME, COMMEND_TIME, 
    PRIVATE_TIME, FROM_PUBLIC, THUMB_URL, UPDATE_TIME, TAG_IDS, LEASE_CERT_TIME, PUBLISH_SITES, 
    AREA_ID, LEASE_ROOF_T, LEASE_NUM_T, LEASE_UNIT_T, LEASE_RIGHT, VIDEO_NUM, CREATOR_UID, 
    is_ignore, lease_id_old, LEASE_INNERAREA, HOUSE_BARGAIN, ENCODE_FLAG, [LOCK], TRUE_FLAG, 
    SENDTOTENCENT, HOUSE_SOURCE_WAY, YOU_SHARE_FLAG, YOU_SHARE_TIME, YOU_BUY_COUNT, OWNER_SEX, 
    YOU_SHARE_ID, THUMBPIC_VER, PRIVATE_USER_ID, LEASE_ROOM_TYPE, LEASE_ROOM_CLASSIC, 
    FLAT_SHARE_SEX, ADDR_MD5, PANORAMA_MAP, YOUJIA_STATISTIC_FLAG, ADS_FLAG, SYNC_TIME, 
    VIDEO_REVIEW_FLAG, HAS_PANORAMA, BIDDING_FLAG, COMPETE_END_TIME, COMPETE_PRICE, YOU_SHARE_MONEY_STATE, 
    SENDTO_WEIDIAN, SENDTO_YOUYOU, YOUYOU_DEAL, SPECIAL_END_TIME, SCHEDULE_END_TIME, 
    PROXY_URL, UPLOAD_PROXY_USER, CITY_SHARE_FLAG, BRAND_COMP_ID, CHECK_CODE_FUN, OWNERSHIP_TYPE, 
    EFFECTIVE_DATE, QZ_CODE_FUN, FUNMANAGER_SALESTATUS, HAS_FUNKAN, JOINT_CELL_PHONE, 
    JOINT_USER_NAME, JOINT_USER_SEX, JOINT_ID_CARD, RESPITE_END_TIME, SALE_LEASE_ID, 
    IS_SALE_LEASE, ENTRUST_END_TIME, ENTRUST_CREATE_USER, AVAILABLE_TIME, MODIFY_PRICE_END, 
    MODIFY_PRICE_TREND, LAST_DKAN_TIME, OLD_TRUE_FLAG, INNER_NO, JOINT_ID_CARD_TYPE, 
    ID_CARD_TYPE, OFFICE_CHARACTER, OFFICE_TAX, LEASE_BAY, LEASE_DEPTH, LEASE_STOREY, 
    CHECK_TIME, FOCUS_TIME, USER_LEVEL, TISSUE_LINE, PARTNER_ID, FUNKAN_USER_ID, LEASE_KEY_USER_ID, 
    FILE_CODING, LESSOR, TRANSFER_FEE, RETURN_RATE, ML_RESERVED_COMP, HOUSE_VERIFY, KITCHEN, 
    ML_WHOLE_LAYER, ORGANIZATION_ID, LEASE_NATURE, LEASE_STRUCT, LEASE_EXPIRATION_TIME, 
    HOUSE_SITUATION, CURRENT_RENT, TRANSACTION_STATUS, LEASE_UNIT_PRICE, HAS_RECORDED, 
    LEASE_ENTRUST_PRICE, HAS_ENTRUST
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbggenerated-->
    FUZZY_SEARCH
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.myfun.repository.erpdb.po.ErpFunLeaseExample" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_LEASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunLeaseExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_LEASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_LEASE
    where LEASE_ID = #{leaseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_LEASE
    where LEASE_ID = #{leaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunLeaseExample">
    <!--@mbggenerated-->
    delete from FUN_LEASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunLease">
    <!--@mbggenerated-->
    <selectKey keyProperty="leaseId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_LEASE_LEASE_ID
    </selectKey>
    insert into FUN_LEASE (LEASE_ID, COMP_ID, CITY_ID, 
      REG_ID, DEPT_ID, GR_ID, 
      USER_ID, ARCHIVE_ID, CREATION_TIME, 
      CREATE_ARCHIVE_ID, LEASE_NO, LEASE_SUBJECT, 
      LEASE_OWNER, CELL_PHONE, ID_CARD, 
      BUILD_ID, BUILD_NAME, BUILD_CODE, 
      LEASE_REG, REGION_NAME, SECTION_ID, 
      SECTION_NAME, LEASE_ROUND, TRADE_ADDR, 
      LEASE_ROOF, LEASE_UNIT, UNIT_FLOOR, 
      LEASE_NUM, LEASE_ROOF_R, LEASE_UNIT_R, 
      UNIT_FLOOR_R, LEASE_NUM_R, PLATE_TYPE, 
      LEASE_ROOM, LEASE_HALL, LEASE_WEI, 
      LEASE_YANG, LEASE_LADDER, LEASE_DOORS, 
      LEASE_TYPE, LEASE_FLOOR, LEASE_FLOORS, 
      LEASE_FITMENT, LEASE_DIRECT, LEASE_YEAR, 
      LEASE_USEAGE, LEASE_STREET, LEASE_ACCOUNT, 
      LEASE_AREA, LEASE_TOTAL_PRICE, PRICE_UNIT, 
      LEASE_LOWEST_PRICE, LEASE_PROPERTY, IS_SEPERATOR, 
      SHOP_USAGE, OWNER_TYPE, OFFICE_LEVEL, 
      LEASE_DEPOSIT, LEASE_LEAVE_TIME, LEASE_LIMITE, 
      HALL_STRUCTURE, UG_AREA, UG_TYPE, 
      GARDEN_AREA, GARAGE_AMOUNT, LEASE_SET, 
      LEASE_CHARACT, LEASE_MEMO, LEASE_SOURCE, 
      LEASE_LEVEL, LEASE_KEY, LEASE_KEY_NUM, 
      KEY_TIME, LEASE_EXPLRTH, EXPLRTH_DATETIME, 
      LEASE_CONSIGN, LEASE_CONSIGN_NO, WEITUO_TIME, 
      LEASE_COOPERATE, COOPERATE_TIME, COMPLAINT_FLAG, 
      LEASE_PUBLISH, PUBLISH_TIME, LEASE_MAP, 
      PHOTO_TIME, LEASE_STATUS, TRACK_TIME, 
      TRACK_TIME2, ACTION_TIME, FROM_SOSO, 
      REPEAT_FLAG, INFO_TYPE, SHARE_FLAG, 
      FRIEND_HOUSE, RED_FLAG, ORANGE_FLAG, 
      PUBLIC_COUNT, PUBLIC_TIME, DUE_TIME, 
      SPECIAL_TIME, SCHEDULE_TIME, DEAL_TIME, 
      WRITEOFF_TIME, SECRECY_TIME, COMMEND_TIME, 
      PRIVATE_TIME, FROM_PUBLIC, THUMB_URL, 
      UPDATE_TIME, TAG_IDS, LEASE_CERT_TIME, 
      PUBLISH_SITES, AREA_ID, LEASE_ROOF_T, 
      LEASE_NUM_T, LEASE_UNIT_T, LEASE_RIGHT, 
      VIDEO_NUM, CREATOR_UID, is_ignore, 
      lease_id_old, LEASE_INNERAREA, HOUSE_BARGAIN, 
      ENCODE_FLAG, [LOCK], TRUE_FLAG, 
      SENDTOTENCENT, HOUSE_SOURCE_WAY, YOU_SHARE_FLAG, 
      YOU_SHARE_TIME, YOU_BUY_COUNT, OWNER_SEX, 
      YOU_SHARE_ID, THUMBPIC_VER, PRIVATE_USER_ID, 
      LEASE_ROOM_TYPE, LEASE_ROOM_CLASSIC, FLAT_SHARE_SEX, 
      ADDR_MD5, PANORAMA_MAP, YOUJIA_STATISTIC_FLAG, 
      ADS_FLAG, SYNC_TIME, VIDEO_REVIEW_FLAG, 
      HAS_PANORAMA, BIDDING_FLAG, COMPETE_END_TIME, 
      COMPETE_PRICE, YOU_SHARE_MONEY_STATE, SENDTO_WEIDIAN, 
      SENDTO_YOUYOU, YOUYOU_DEAL, SPECIAL_END_TIME, 
      SCHEDULE_END_TIME, PROXY_URL, UPLOAD_PROXY_USER, 
      CITY_SHARE_FLAG, BRAND_COMP_ID, CHECK_CODE_FUN, 
      OWNERSHIP_TYPE, EFFECTIVE_DATE, QZ_CODE_FUN, 
      FUNMANAGER_SALESTATUS, HAS_FUNKAN, JOINT_CELL_PHONE, 
      JOINT_USER_NAME, JOINT_USER_SEX, JOINT_ID_CARD, 
      RESPITE_END_TIME, SALE_LEASE_ID, IS_SALE_LEASE, 
      ENTRUST_END_TIME, ENTRUST_CREATE_USER, AVAILABLE_TIME, 
      MODIFY_PRICE_END, MODIFY_PRICE_TREND, LAST_DKAN_TIME, 
      OLD_TRUE_FLAG, INNER_NO, JOINT_ID_CARD_TYPE, 
      ID_CARD_TYPE, OFFICE_CHARACTER, OFFICE_TAX, 
      LEASE_BAY, LEASE_DEPTH, LEASE_STOREY, 
      CHECK_TIME, FOCUS_TIME, USER_LEVEL, 
      TISSUE_LINE, PARTNER_ID, FUNKAN_USER_ID, 
      LEASE_KEY_USER_ID, FILE_CODING, LESSOR, 
      TRANSFER_FEE, RETURN_RATE, ML_RESERVED_COMP, 
      HOUSE_VERIFY, KITCHEN, ML_WHOLE_LAYER, 
      ORGANIZATION_ID, LEASE_NATURE, LEASE_STRUCT, 
      LEASE_EXPIRATION_TIME, HOUSE_SITUATION, 
      CURRENT_RENT, TRANSACTION_STATUS, LEASE_UNIT_PRICE, 
      HAS_RECORDED, LEASE_ENTRUST_PRICE, HAS_ENTRUST, 
      FUZZY_SEARCH)
    values (#{leaseId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, 
      #{regId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{createArchiveId,jdbcType=INTEGER}, #{leaseNo,jdbcType=VARCHAR}, #{leaseSubject,jdbcType=VARCHAR}, 
      #{leaseOwner,jdbcType=VARCHAR}, #{cellPhone,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{buildId,jdbcType=INTEGER}, #{buildName,jdbcType=VARCHAR}, #{buildCode,jdbcType=VARCHAR}, 
      #{leaseReg,jdbcType=INTEGER}, #{regionName,jdbcType=VARCHAR}, #{sectionId,jdbcType=INTEGER}, 
      #{sectionName,jdbcType=VARCHAR}, #{leaseRound,jdbcType=TINYINT}, #{tradeAddr,jdbcType=VARCHAR}, 
      #{leaseRoof,jdbcType=VARCHAR}, #{leaseUnit,jdbcType=VARCHAR}, #{unitFloor,jdbcType=VARCHAR}, 
      #{leaseNum,jdbcType=VARCHAR}, #{leaseRoofR,jdbcType=VARCHAR}, #{leaseUnitR,jdbcType=VARCHAR}, 
      #{unitFloorR,jdbcType=VARCHAR}, #{leaseNumR,jdbcType=VARCHAR}, #{plateType,jdbcType=TINYINT}, 
      #{leaseRoom,jdbcType=TINYINT}, #{leaseHall,jdbcType=TINYINT}, #{leaseWei,jdbcType=TINYINT}, 
      #{leaseYang,jdbcType=TINYINT}, #{leaseLadder,jdbcType=TINYINT}, #{leaseDoors,jdbcType=INTEGER}, 
      #{leaseType,jdbcType=TINYINT}, #{leaseFloor,jdbcType=SMALLINT}, #{leaseFloors,jdbcType=INTEGER}, 
      #{leaseFitment,jdbcType=TINYINT}, #{leaseDirect,jdbcType=TINYINT}, #{leaseYear,jdbcType=SMALLINT}, 
      #{leaseUseage,jdbcType=TINYINT}, #{leaseStreet,jdbcType=BIT}, #{leaseAccount,jdbcType=INTEGER}, 
      #{leaseArea,jdbcType=NUMERIC}, #{leaseTotalPrice,jdbcType=NUMERIC}, #{priceUnit,jdbcType=TINYINT}, 
      #{leaseLowestPrice,jdbcType=NUMERIC}, #{leaseProperty,jdbcType=NUMERIC}, #{isSeperator,jdbcType=BIT}, 
      #{shopUsage,jdbcType=VARCHAR}, #{ownerType,jdbcType=TINYINT}, #{officeLevel,jdbcType=TINYINT}, 
      #{leaseDeposit,jdbcType=INTEGER}, #{leaseLeaveTime,jdbcType=VARCHAR}, #{leaseLimite,jdbcType=INTEGER}, 
      #{hallStructure,jdbcType=TINYINT}, #{ugArea,jdbcType=NUMERIC}, #{ugType,jdbcType=INTEGER}, 
      #{gardenArea,jdbcType=NUMERIC}, #{garageAmount,jdbcType=INTEGER}, #{leaseSet,jdbcType=VARCHAR}, 
      #{leaseCharact,jdbcType=VARCHAR}, #{leaseMemo,jdbcType=VARCHAR}, #{leaseSource,jdbcType=TINYINT}, 
      #{leaseLevel,jdbcType=TINYINT}, #{leaseKey,jdbcType=BIT}, #{leaseKeyNum,jdbcType=VARCHAR}, 
      #{keyTime,jdbcType=VARCHAR}, #{leaseExplrth,jdbcType=BIT}, #{explrthDatetime,jdbcType=VARCHAR}, 
      #{leaseConsign,jdbcType=INTEGER}, #{leaseConsignNo,jdbcType=VARCHAR}, #{weituoTime,jdbcType=VARCHAR}, 
      #{leaseCooperate,jdbcType=BIT}, #{cooperateTime,jdbcType=VARCHAR}, #{complaintFlag,jdbcType=BIT}, 
      #{leasePublish,jdbcType=BIT}, #{publishTime,jdbcType=VARCHAR}, #{leaseMap,jdbcType=INTEGER}, 
      #{photoTime,jdbcType=VARCHAR}, #{leaseStatus,jdbcType=INTEGER}, #{trackTime,jdbcType=VARCHAR}, 
      #{trackTime2,jdbcType=VARCHAR}, #{actionTime,jdbcType=VARCHAR}, #{fromSoso,jdbcType=BIT}, 
      #{repeatFlag,jdbcType=INTEGER}, #{infoType,jdbcType=TINYINT}, #{shareFlag,jdbcType=BIT}, 
      #{friendHouse,jdbcType=BIT}, #{redFlag,jdbcType=BIT}, #{orangeFlag,jdbcType=BIT}, 
      #{publicCount,jdbcType=INTEGER}, #{publicTime,jdbcType=VARCHAR}, #{dueTime,jdbcType=VARCHAR}, 
      #{specialTime,jdbcType=VARCHAR}, #{scheduleTime,jdbcType=VARCHAR}, #{dealTime,jdbcType=VARCHAR}, 
      #{writeoffTime,jdbcType=VARCHAR}, #{secrecyTime,jdbcType=VARCHAR}, #{commendTime,jdbcType=VARCHAR}, 
      #{privateTime,jdbcType=VARCHAR}, #{fromPublic,jdbcType=BIT}, #{thumbUrl,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{tagIds,jdbcType=VARCHAR}, #{leaseCertTime,jdbcType=VARCHAR}, 
      #{publishSites,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{leaseRoofT,jdbcType=VARCHAR}, 
      #{leaseNumT,jdbcType=VARCHAR}, #{leaseUnitT,jdbcType=VARCHAR}, #{leaseRight,jdbcType=TINYINT}, 
      #{videoNum,jdbcType=INTEGER}, #{creatorUid,jdbcType=INTEGER}, #{isIgnore,jdbcType=TINYINT}, 
      #{leaseIdOld,jdbcType=INTEGER}, #{leaseInnerarea,jdbcType=DECIMAL}, #{houseBargain,jdbcType=BIT}, 
      #{encodeFlag,jdbcType=TINYINT}, #{lock,jdbcType=TINYINT}, #{trueFlag,jdbcType=TINYINT}, 
      #{sendtotencent,jdbcType=TINYINT}, #{houseSourceWay,jdbcType=TINYINT}, #{youShareFlag,jdbcType=TINYINT}, 
      #{youShareTime,jdbcType=TIMESTAMP}, #{youBuyCount,jdbcType=INTEGER}, #{ownerSex,jdbcType=TINYINT}, 
      #{youShareId,jdbcType=INTEGER}, #{thumbpicVer,jdbcType=VARCHAR}, #{privateUserId,jdbcType=INTEGER}, 
      #{leaseRoomType,jdbcType=TINYINT}, #{leaseRoomClassic,jdbcType=TINYINT}, #{flatShareSex,jdbcType=TINYINT}, 
      #{addrMd5,jdbcType=VARCHAR}, #{panoramaMap,jdbcType=INTEGER}, #{youjiaStatisticFlag,jdbcType=TINYINT}, 
      #{adsFlag,jdbcType=TINYINT}, #{syncTime,jdbcType=TIMESTAMP}, #{videoReviewFlag,jdbcType=TINYINT}, 
      #{hasPanorama,jdbcType=TINYINT}, #{biddingFlag,jdbcType=BIT}, #{competeEndTime,jdbcType=TIMESTAMP}, 
      #{competePrice,jdbcType=NUMERIC}, #{youShareMoneyState,jdbcType=TINYINT}, #{sendtoWeidian,jdbcType=TINYINT}, 
      #{sendtoYouyou,jdbcType=TINYINT}, #{youyouDeal,jdbcType=TINYINT}, #{specialEndTime,jdbcType=TIMESTAMP}, 
      #{scheduleEndTime,jdbcType=TIMESTAMP}, #{proxyUrl,jdbcType=VARCHAR}, #{uploadProxyUser,jdbcType=VARCHAR}, 
      #{cityShareFlag,jdbcType=TINYINT}, #{brandCompId,jdbcType=INTEGER}, #{checkCodeFun,jdbcType=VARCHAR}, 
      #{ownershipType,jdbcType=TINYINT}, #{effectiveDate,jdbcType=TIMESTAMP}, #{qzCodeFun,jdbcType=VARCHAR}, 
      #{funmanagerSalestatus,jdbcType=TINYINT}, #{hasFunkan,jdbcType=TINYINT}, #{jointCellPhone,jdbcType=VARCHAR}, 
      #{jointUserName,jdbcType=VARCHAR}, #{jointUserSex,jdbcType=TINYINT}, #{jointIdCard,jdbcType=VARCHAR}, 
      #{respiteEndTime,jdbcType=TIMESTAMP}, #{saleLeaseId,jdbcType=INTEGER}, #{isSaleLease,jdbcType=TINYINT}, 
      #{entrustEndTime,jdbcType=TIMESTAMP}, #{entrustCreateUser,jdbcType=INTEGER}, #{availableTime,jdbcType=TIMESTAMP}, 
      #{modifyPriceEnd,jdbcType=TIMESTAMP}, #{modifyPriceTrend,jdbcType=TINYINT}, #{lastDkanTime,jdbcType=TIMESTAMP}, 
      #{oldTrueFlag,jdbcType=TINYINT}, #{innerNo,jdbcType=INTEGER}, #{jointIdCardType,jdbcType=INTEGER}, 
      #{idCardType,jdbcType=INTEGER}, #{officeCharacter,jdbcType=TINYINT}, #{officeTax,jdbcType=BIT}, 
      #{leaseBay,jdbcType=NUMERIC}, #{leaseDepth,jdbcType=NUMERIC}, #{leaseStorey,jdbcType=NUMERIC}, 
      #{checkTime,jdbcType=VARCHAR}, #{focusTime,jdbcType=TIMESTAMP}, #{userLevel,jdbcType=INTEGER}, 
      #{tissueLine,jdbcType=VARCHAR}, #{partnerId,jdbcType=INTEGER}, #{funkanUserId,jdbcType=INTEGER}, 
      #{leaseKeyUserId,jdbcType=INTEGER}, #{fileCoding,jdbcType=VARCHAR}, #{lessor,jdbcType=TINYINT}, 
      #{transferFee,jdbcType=NUMERIC}, #{returnRate,jdbcType=NUMERIC}, #{mlReservedComp,jdbcType=VARCHAR}, 
      #{houseVerify,jdbcType=TINYINT}, #{kitchen,jdbcType=TINYINT}, #{mlWholeLayer,jdbcType=TINYINT}, 
      #{organizationId,jdbcType=INTEGER}, #{leaseNature,jdbcType=TINYINT}, #{leaseStruct,jdbcType=TINYINT}, 
      #{leaseExpirationTime,jdbcType=TIMESTAMP}, #{houseSituation,jdbcType=TINYINT}, 
      #{currentRent,jdbcType=NUMERIC}, #{transactionStatus,jdbcType=TINYINT}, #{leaseUnitPrice,jdbcType=DECIMAL}, 
      #{hasRecorded,jdbcType=TINYINT}, #{leaseEntrustPrice,jdbcType=NUMERIC}, #{hasEntrust,jdbcType=TINYINT}, 
      #{fuzzySearch,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunLease">
    <!--@mbggenerated-->
    <selectKey keyProperty="leaseId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_LEASE_LEASE_ID
    </selectKey>
    insert into FUN_LEASE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      LEASE_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="createArchiveId != null">
        CREATE_ARCHIVE_ID,
      </if>
      <if test="leaseNo != null">
        LEASE_NO,
      </if>
      <if test="leaseSubject != null">
        LEASE_SUBJECT,
      </if>
      <if test="leaseOwner != null">
        LEASE_OWNER,
      </if>
      <if test="cellPhone != null">
        CELL_PHONE,
      </if>
      <if test="idCard != null">
        ID_CARD,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="buildName != null">
        BUILD_NAME,
      </if>
      <if test="buildCode != null">
        BUILD_CODE,
      </if>
      <if test="leaseReg != null">
        LEASE_REG,
      </if>
      <if test="regionName != null">
        REGION_NAME,
      </if>
      <if test="sectionId != null">
        SECTION_ID,
      </if>
      <if test="sectionName != null">
        SECTION_NAME,
      </if>
      <if test="leaseRound != null">
        LEASE_ROUND,
      </if>
      <if test="tradeAddr != null">
        TRADE_ADDR,
      </if>
      <if test="leaseRoof != null">
        LEASE_ROOF,
      </if>
      <if test="leaseUnit != null">
        LEASE_UNIT,
      </if>
      <if test="unitFloor != null">
        UNIT_FLOOR,
      </if>
      <if test="leaseNum != null">
        LEASE_NUM,
      </if>
      <if test="leaseRoofR != null">
        LEASE_ROOF_R,
      </if>
      <if test="leaseUnitR != null">
        LEASE_UNIT_R,
      </if>
      <if test="unitFloorR != null">
        UNIT_FLOOR_R,
      </if>
      <if test="leaseNumR != null">
        LEASE_NUM_R,
      </if>
      <if test="plateType != null">
        PLATE_TYPE,
      </if>
      <if test="leaseRoom != null">
        LEASE_ROOM,
      </if>
      <if test="leaseHall != null">
        LEASE_HALL,
      </if>
      <if test="leaseWei != null">
        LEASE_WEI,
      </if>
      <if test="leaseYang != null">
        LEASE_YANG,
      </if>
      <if test="leaseLadder != null">
        LEASE_LADDER,
      </if>
      <if test="leaseDoors != null">
        LEASE_DOORS,
      </if>
      <if test="leaseType != null">
        LEASE_TYPE,
      </if>
      <if test="leaseFloor != null">
        LEASE_FLOOR,
      </if>
      <if test="leaseFloors != null">
        LEASE_FLOORS,
      </if>
      <if test="leaseFitment != null">
        LEASE_FITMENT,
      </if>
      <if test="leaseDirect != null">
        LEASE_DIRECT,
      </if>
      <if test="leaseYear != null">
        LEASE_YEAR,
      </if>
      <if test="leaseUseage != null">
        LEASE_USEAGE,
      </if>
      <if test="leaseStreet != null">
        LEASE_STREET,
      </if>
      <if test="leaseAccount != null">
        LEASE_ACCOUNT,
      </if>
      <if test="leaseArea != null">
        LEASE_AREA,
      </if>
      <if test="leaseTotalPrice != null">
        LEASE_TOTAL_PRICE,
      </if>
      <if test="priceUnit != null">
        PRICE_UNIT,
      </if>
      <if test="leaseLowestPrice != null">
        LEASE_LOWEST_PRICE,
      </if>
      <if test="leaseProperty != null">
        LEASE_PROPERTY,
      </if>
      <if test="isSeperator != null">
        IS_SEPERATOR,
      </if>
      <if test="shopUsage != null">
        SHOP_USAGE,
      </if>
      <if test="ownerType != null">
        OWNER_TYPE,
      </if>
      <if test="officeLevel != null">
        OFFICE_LEVEL,
      </if>
      <if test="leaseDeposit != null">
        LEASE_DEPOSIT,
      </if>
      <if test="leaseLeaveTime != null">
        LEASE_LEAVE_TIME,
      </if>
      <if test="leaseLimite != null">
        LEASE_LIMITE,
      </if>
      <if test="hallStructure != null">
        HALL_STRUCTURE,
      </if>
      <if test="ugArea != null">
        UG_AREA,
      </if>
      <if test="ugType != null">
        UG_TYPE,
      </if>
      <if test="gardenArea != null">
        GARDEN_AREA,
      </if>
      <if test="garageAmount != null">
        GARAGE_AMOUNT,
      </if>
      <if test="leaseSet != null">
        LEASE_SET,
      </if>
      <if test="leaseCharact != null">
        LEASE_CHARACT,
      </if>
      <if test="leaseMemo != null">
        LEASE_MEMO,
      </if>
      <if test="leaseSource != null">
        LEASE_SOURCE,
      </if>
      <if test="leaseLevel != null">
        LEASE_LEVEL,
      </if>
      <if test="leaseKey != null">
        LEASE_KEY,
      </if>
      <if test="leaseKeyNum != null">
        LEASE_KEY_NUM,
      </if>
      <if test="keyTime != null">
        KEY_TIME,
      </if>
      <if test="leaseExplrth != null">
        LEASE_EXPLRTH,
      </if>
      <if test="explrthDatetime != null">
        EXPLRTH_DATETIME,
      </if>
      <if test="leaseConsign != null">
        LEASE_CONSIGN,
      </if>
      <if test="leaseConsignNo != null">
        LEASE_CONSIGN_NO,
      </if>
      <if test="weituoTime != null">
        WEITUO_TIME,
      </if>
      <if test="leaseCooperate != null">
        LEASE_COOPERATE,
      </if>
      <if test="cooperateTime != null">
        COOPERATE_TIME,
      </if>
      <if test="complaintFlag != null">
        COMPLAINT_FLAG,
      </if>
      <if test="leasePublish != null">
        LEASE_PUBLISH,
      </if>
      <if test="publishTime != null">
        PUBLISH_TIME,
      </if>
      <if test="leaseMap != null">
        LEASE_MAP,
      </if>
      <if test="photoTime != null">
        PHOTO_TIME,
      </if>
      <if test="leaseStatus != null">
        LEASE_STATUS,
      </if>
      <if test="trackTime != null">
        TRACK_TIME,
      </if>
      <if test="trackTime2 != null">
        TRACK_TIME2,
      </if>
      <if test="actionTime != null">
        ACTION_TIME,
      </if>
      <if test="fromSoso != null">
        FROM_SOSO,
      </if>
      <if test="repeatFlag != null">
        REPEAT_FLAG,
      </if>
      <if test="infoType != null">
        INFO_TYPE,
      </if>
      <if test="shareFlag != null">
        SHARE_FLAG,
      </if>
      <if test="friendHouse != null">
        FRIEND_HOUSE,
      </if>
      <if test="redFlag != null">
        RED_FLAG,
      </if>
      <if test="orangeFlag != null">
        ORANGE_FLAG,
      </if>
      <if test="publicCount != null">
        PUBLIC_COUNT,
      </if>
      <if test="publicTime != null">
        PUBLIC_TIME,
      </if>
      <if test="dueTime != null">
        DUE_TIME,
      </if>
      <if test="specialTime != null">
        SPECIAL_TIME,
      </if>
      <if test="scheduleTime != null">
        SCHEDULE_TIME,
      </if>
      <if test="dealTime != null">
        DEAL_TIME,
      </if>
      <if test="writeoffTime != null">
        WRITEOFF_TIME,
      </if>
      <if test="secrecyTime != null">
        SECRECY_TIME,
      </if>
      <if test="commendTime != null">
        COMMEND_TIME,
      </if>
      <if test="privateTime != null">
        PRIVATE_TIME,
      </if>
      <if test="fromPublic != null">
        FROM_PUBLIC,
      </if>
      <if test="thumbUrl != null">
        THUMB_URL,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="tagIds != null">
        TAG_IDS,
      </if>
      <if test="leaseCertTime != null">
        LEASE_CERT_TIME,
      </if>
      <if test="publishSites != null">
        PUBLISH_SITES,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="leaseRoofT != null">
        LEASE_ROOF_T,
      </if>
      <if test="leaseNumT != null">
        LEASE_NUM_T,
      </if>
      <if test="leaseUnitT != null">
        LEASE_UNIT_T,
      </if>
      <if test="leaseRight != null">
        LEASE_RIGHT,
      </if>
      <if test="videoNum != null">
        VIDEO_NUM,
      </if>
      <if test="creatorUid != null">
        CREATOR_UID,
      </if>
      <if test="isIgnore != null">
        is_ignore,
      </if>
      <if test="leaseIdOld != null">
        lease_id_old,
      </if>
      <if test="leaseInnerarea != null">
        LEASE_INNERAREA,
      </if>
      <if test="houseBargain != null">
        HOUSE_BARGAIN,
      </if>
      <if test="encodeFlag != null">
        ENCODE_FLAG,
      </if>
      <if test="lock != null">
        [LOCK],
      </if>
      <if test="trueFlag != null">
        TRUE_FLAG,
      </if>
      <if test="sendtotencent != null">
        SENDTOTENCENT,
      </if>
      <if test="houseSourceWay != null">
        HOUSE_SOURCE_WAY,
      </if>
      <if test="youShareFlag != null">
        YOU_SHARE_FLAG,
      </if>
      <if test="youShareTime != null">
        YOU_SHARE_TIME,
      </if>
      <if test="youBuyCount != null">
        YOU_BUY_COUNT,
      </if>
      <if test="ownerSex != null">
        OWNER_SEX,
      </if>
      <if test="youShareId != null">
        YOU_SHARE_ID,
      </if>
      <if test="thumbpicVer != null">
        THUMBPIC_VER,
      </if>
      <if test="privateUserId != null">
        PRIVATE_USER_ID,
      </if>
      <if test="leaseRoomType != null">
        LEASE_ROOM_TYPE,
      </if>
      <if test="leaseRoomClassic != null">
        LEASE_ROOM_CLASSIC,
      </if>
      <if test="flatShareSex != null">
        FLAT_SHARE_SEX,
      </if>
      <if test="addrMd5 != null">
        ADDR_MD5,
      </if>
      <if test="panoramaMap != null">
        PANORAMA_MAP,
      </if>
      <if test="youjiaStatisticFlag != null">
        YOUJIA_STATISTIC_FLAG,
      </if>
      <if test="adsFlag != null">
        ADS_FLAG,
      </if>
      <if test="syncTime != null">
        SYNC_TIME,
      </if>
      <if test="videoReviewFlag != null">
        VIDEO_REVIEW_FLAG,
      </if>
      <if test="hasPanorama != null">
        HAS_PANORAMA,
      </if>
      <if test="biddingFlag != null">
        BIDDING_FLAG,
      </if>
      <if test="competeEndTime != null">
        COMPETE_END_TIME,
      </if>
      <if test="competePrice != null">
        COMPETE_PRICE,
      </if>
      <if test="youShareMoneyState != null">
        YOU_SHARE_MONEY_STATE,
      </if>
      <if test="sendtoWeidian != null">
        SENDTO_WEIDIAN,
      </if>
      <if test="sendtoYouyou != null">
        SENDTO_YOUYOU,
      </if>
      <if test="youyouDeal != null">
        YOUYOU_DEAL,
      </if>
      <if test="specialEndTime != null">
        SPECIAL_END_TIME,
      </if>
      <if test="scheduleEndTime != null">
        SCHEDULE_END_TIME,
      </if>
      <if test="proxyUrl != null">
        PROXY_URL,
      </if>
      <if test="uploadProxyUser != null">
        UPLOAD_PROXY_USER,
      </if>
      <if test="cityShareFlag != null">
        CITY_SHARE_FLAG,
      </if>
      <if test="brandCompId != null">
        BRAND_COMP_ID,
      </if>
      <if test="checkCodeFun != null">
        CHECK_CODE_FUN,
      </if>
      <if test="ownershipType != null">
        OWNERSHIP_TYPE,
      </if>
      <if test="effectiveDate != null">
        EFFECTIVE_DATE,
      </if>
      <if test="qzCodeFun != null">
        QZ_CODE_FUN,
      </if>
      <if test="funmanagerSalestatus != null">
        FUNMANAGER_SALESTATUS,
      </if>
      <if test="hasFunkan != null">
        HAS_FUNKAN,
      </if>
      <if test="jointCellPhone != null">
        JOINT_CELL_PHONE,
      </if>
      <if test="jointUserName != null">
        JOINT_USER_NAME,
      </if>
      <if test="jointUserSex != null">
        JOINT_USER_SEX,
      </if>
      <if test="jointIdCard != null">
        JOINT_ID_CARD,
      </if>
      <if test="respiteEndTime != null">
        RESPITE_END_TIME,
      </if>
      <if test="saleLeaseId != null">
        SALE_LEASE_ID,
      </if>
      <if test="isSaleLease != null">
        IS_SALE_LEASE,
      </if>
      <if test="entrustEndTime != null">
        ENTRUST_END_TIME,
      </if>
      <if test="entrustCreateUser != null">
        ENTRUST_CREATE_USER,
      </if>
      <if test="availableTime != null">
        AVAILABLE_TIME,
      </if>
      <if test="modifyPriceEnd != null">
        MODIFY_PRICE_END,
      </if>
      <if test="modifyPriceTrend != null">
        MODIFY_PRICE_TREND,
      </if>
      <if test="lastDkanTime != null">
        LAST_DKAN_TIME,
      </if>
      <if test="oldTrueFlag != null">
        OLD_TRUE_FLAG,
      </if>
      <if test="innerNo != null">
        INNER_NO,
      </if>
      <if test="jointIdCardType != null">
        JOINT_ID_CARD_TYPE,
      </if>
      <if test="idCardType != null">
        ID_CARD_TYPE,
      </if>
      <if test="officeCharacter != null">
        OFFICE_CHARACTER,
      </if>
      <if test="officeTax != null">
        OFFICE_TAX,
      </if>
      <if test="leaseBay != null">
        LEASE_BAY,
      </if>
      <if test="leaseDepth != null">
        LEASE_DEPTH,
      </if>
      <if test="leaseStorey != null">
        LEASE_STOREY,
      </if>
      <if test="checkTime != null">
        CHECK_TIME,
      </if>
      <if test="focusTime != null">
        FOCUS_TIME,
      </if>
      <if test="userLevel != null">
        USER_LEVEL,
      </if>
      <if test="tissueLine != null">
        TISSUE_LINE,
      </if>
      <if test="partnerId != null">
        PARTNER_ID,
      </if>
      <if test="funkanUserId != null">
        FUNKAN_USER_ID,
      </if>
      <if test="leaseKeyUserId != null">
        LEASE_KEY_USER_ID,
      </if>
      <if test="fileCoding != null">
        FILE_CODING,
      </if>
      <if test="lessor != null">
        LESSOR,
      </if>
      <if test="transferFee != null">
        TRANSFER_FEE,
      </if>
      <if test="returnRate != null">
        RETURN_RATE,
      </if>
      <if test="mlReservedComp != null">
        ML_RESERVED_COMP,
      </if>
      <if test="houseVerify != null">
        HOUSE_VERIFY,
      </if>
      <if test="kitchen != null">
        KITCHEN,
      </if>
      <if test="mlWholeLayer != null">
        ML_WHOLE_LAYER,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
      <if test="leaseNature != null">
        LEASE_NATURE,
      </if>
      <if test="leaseStruct != null">
        LEASE_STRUCT,
      </if>
      <if test="leaseExpirationTime != null">
        LEASE_EXPIRATION_TIME,
      </if>
      <if test="houseSituation != null">
        HOUSE_SITUATION,
      </if>
      <if test="currentRent != null">
        CURRENT_RENT,
      </if>
      <if test="transactionStatus != null">
        TRANSACTION_STATUS,
      </if>
      <if test="leaseUnitPrice != null">
        LEASE_UNIT_PRICE,
      </if>
      <if test="hasRecorded != null">
        HAS_RECORDED,
      </if>
      <if test="leaseEntrustPrice != null">
        LEASE_ENTRUST_PRICE,
      </if>
      <if test="hasEntrust != null">
        HAS_ENTRUST,
      </if>
      <if test="fuzzySearch != null">
        FUZZY_SEARCH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{leaseId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createArchiveId != null">
        #{createArchiveId,jdbcType=INTEGER},
      </if>
      <if test="leaseNo != null">
        #{leaseNo,jdbcType=VARCHAR},
      </if>
      <if test="leaseSubject != null">
        #{leaseSubject,jdbcType=VARCHAR},
      </if>
      <if test="leaseOwner != null">
        #{leaseOwner,jdbcType=VARCHAR},
      </if>
      <if test="cellPhone != null">
        #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="buildCode != null">
        #{buildCode,jdbcType=VARCHAR},
      </if>
      <if test="leaseReg != null">
        #{leaseReg,jdbcType=INTEGER},
      </if>
      <if test="regionName != null">
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="sectionId != null">
        #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sectionName != null">
        #{sectionName,jdbcType=VARCHAR},
      </if>
      <if test="leaseRound != null">
        #{leaseRound,jdbcType=TINYINT},
      </if>
      <if test="tradeAddr != null">
        #{tradeAddr,jdbcType=VARCHAR},
      </if>
      <if test="leaseRoof != null">
        #{leaseRoof,jdbcType=VARCHAR},
      </if>
      <if test="leaseUnit != null">
        #{leaseUnit,jdbcType=VARCHAR},
      </if>
      <if test="unitFloor != null">
        #{unitFloor,jdbcType=VARCHAR},
      </if>
      <if test="leaseNum != null">
        #{leaseNum,jdbcType=VARCHAR},
      </if>
      <if test="leaseRoofR != null">
        #{leaseRoofR,jdbcType=VARCHAR},
      </if>
      <if test="leaseUnitR != null">
        #{leaseUnitR,jdbcType=VARCHAR},
      </if>
      <if test="unitFloorR != null">
        #{unitFloorR,jdbcType=VARCHAR},
      </if>
      <if test="leaseNumR != null">
        #{leaseNumR,jdbcType=VARCHAR},
      </if>
      <if test="plateType != null">
        #{plateType,jdbcType=TINYINT},
      </if>
      <if test="leaseRoom != null">
        #{leaseRoom,jdbcType=TINYINT},
      </if>
      <if test="leaseHall != null">
        #{leaseHall,jdbcType=TINYINT},
      </if>
      <if test="leaseWei != null">
        #{leaseWei,jdbcType=TINYINT},
      </if>
      <if test="leaseYang != null">
        #{leaseYang,jdbcType=TINYINT},
      </if>
      <if test="leaseLadder != null">
        #{leaseLadder,jdbcType=TINYINT},
      </if>
      <if test="leaseDoors != null">
        #{leaseDoors,jdbcType=INTEGER},
      </if>
      <if test="leaseType != null">
        #{leaseType,jdbcType=TINYINT},
      </if>
      <if test="leaseFloor != null">
        #{leaseFloor,jdbcType=SMALLINT},
      </if>
      <if test="leaseFloors != null">
        #{leaseFloors,jdbcType=INTEGER},
      </if>
      <if test="leaseFitment != null">
        #{leaseFitment,jdbcType=TINYINT},
      </if>
      <if test="leaseDirect != null">
        #{leaseDirect,jdbcType=TINYINT},
      </if>
      <if test="leaseYear != null">
        #{leaseYear,jdbcType=SMALLINT},
      </if>
      <if test="leaseUseage != null">
        #{leaseUseage,jdbcType=TINYINT},
      </if>
      <if test="leaseStreet != null">
        #{leaseStreet,jdbcType=BIT},
      </if>
      <if test="leaseAccount != null">
        #{leaseAccount,jdbcType=INTEGER},
      </if>
      <if test="leaseArea != null">
        #{leaseArea,jdbcType=NUMERIC},
      </if>
      <if test="leaseTotalPrice != null">
        #{leaseTotalPrice,jdbcType=NUMERIC},
      </if>
      <if test="priceUnit != null">
        #{priceUnit,jdbcType=TINYINT},
      </if>
      <if test="leaseLowestPrice != null">
        #{leaseLowestPrice,jdbcType=NUMERIC},
      </if>
      <if test="leaseProperty != null">
        #{leaseProperty,jdbcType=NUMERIC},
      </if>
      <if test="isSeperator != null">
        #{isSeperator,jdbcType=BIT},
      </if>
      <if test="shopUsage != null">
        #{shopUsage,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=TINYINT},
      </if>
      <if test="officeLevel != null">
        #{officeLevel,jdbcType=TINYINT},
      </if>
      <if test="leaseDeposit != null">
        #{leaseDeposit,jdbcType=INTEGER},
      </if>
      <if test="leaseLeaveTime != null">
        #{leaseLeaveTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseLimite != null">
        #{leaseLimite,jdbcType=INTEGER},
      </if>
      <if test="hallStructure != null">
        #{hallStructure,jdbcType=TINYINT},
      </if>
      <if test="ugArea != null">
        #{ugArea,jdbcType=NUMERIC},
      </if>
      <if test="ugType != null">
        #{ugType,jdbcType=INTEGER},
      </if>
      <if test="gardenArea != null">
        #{gardenArea,jdbcType=NUMERIC},
      </if>
      <if test="garageAmount != null">
        #{garageAmount,jdbcType=INTEGER},
      </if>
      <if test="leaseSet != null">
        #{leaseSet,jdbcType=VARCHAR},
      </if>
      <if test="leaseCharact != null">
        #{leaseCharact,jdbcType=VARCHAR},
      </if>
      <if test="leaseMemo != null">
        #{leaseMemo,jdbcType=VARCHAR},
      </if>
      <if test="leaseSource != null">
        #{leaseSource,jdbcType=TINYINT},
      </if>
      <if test="leaseLevel != null">
        #{leaseLevel,jdbcType=TINYINT},
      </if>
      <if test="leaseKey != null">
        #{leaseKey,jdbcType=BIT},
      </if>
      <if test="leaseKeyNum != null">
        #{leaseKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="keyTime != null">
        #{keyTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseExplrth != null">
        #{leaseExplrth,jdbcType=BIT},
      </if>
      <if test="explrthDatetime != null">
        #{explrthDatetime,jdbcType=VARCHAR},
      </if>
      <if test="leaseConsign != null">
        #{leaseConsign,jdbcType=INTEGER},
      </if>
      <if test="leaseConsignNo != null">
        #{leaseConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="weituoTime != null">
        #{weituoTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseCooperate != null">
        #{leaseCooperate,jdbcType=BIT},
      </if>
      <if test="cooperateTime != null">
        #{cooperateTime,jdbcType=VARCHAR},
      </if>
      <if test="complaintFlag != null">
        #{complaintFlag,jdbcType=BIT},
      </if>
      <if test="leasePublish != null">
        #{leasePublish,jdbcType=BIT},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseMap != null">
        #{leaseMap,jdbcType=INTEGER},
      </if>
      <if test="photoTime != null">
        #{photoTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseStatus != null">
        #{leaseStatus,jdbcType=INTEGER},
      </if>
      <if test="trackTime != null">
        #{trackTime,jdbcType=VARCHAR},
      </if>
      <if test="trackTime2 != null">
        #{trackTime2,jdbcType=VARCHAR},
      </if>
      <if test="actionTime != null">
        #{actionTime,jdbcType=VARCHAR},
      </if>
      <if test="fromSoso != null">
        #{fromSoso,jdbcType=BIT},
      </if>
      <if test="repeatFlag != null">
        #{repeatFlag,jdbcType=INTEGER},
      </if>
      <if test="infoType != null">
        #{infoType,jdbcType=TINYINT},
      </if>
      <if test="shareFlag != null">
        #{shareFlag,jdbcType=BIT},
      </if>
      <if test="friendHouse != null">
        #{friendHouse,jdbcType=BIT},
      </if>
      <if test="redFlag != null">
        #{redFlag,jdbcType=BIT},
      </if>
      <if test="orangeFlag != null">
        #{orangeFlag,jdbcType=BIT},
      </if>
      <if test="publicCount != null">
        #{publicCount,jdbcType=INTEGER},
      </if>
      <if test="publicTime != null">
        #{publicTime,jdbcType=VARCHAR},
      </if>
      <if test="dueTime != null">
        #{dueTime,jdbcType=VARCHAR},
      </if>
      <if test="specialTime != null">
        #{specialTime,jdbcType=VARCHAR},
      </if>
      <if test="scheduleTime != null">
        #{scheduleTime,jdbcType=VARCHAR},
      </if>
      <if test="dealTime != null">
        #{dealTime,jdbcType=VARCHAR},
      </if>
      <if test="writeoffTime != null">
        #{writeoffTime,jdbcType=VARCHAR},
      </if>
      <if test="secrecyTime != null">
        #{secrecyTime,jdbcType=VARCHAR},
      </if>
      <if test="commendTime != null">
        #{commendTime,jdbcType=VARCHAR},
      </if>
      <if test="privateTime != null">
        #{privateTime,jdbcType=VARCHAR},
      </if>
      <if test="fromPublic != null">
        #{fromPublic,jdbcType=BIT},
      </if>
      <if test="thumbUrl != null">
        #{thumbUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tagIds != null">
        #{tagIds,jdbcType=VARCHAR},
      </if>
      <if test="leaseCertTime != null">
        #{leaseCertTime,jdbcType=VARCHAR},
      </if>
      <if test="publishSites != null">
        #{publishSites,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="leaseRoofT != null">
        #{leaseRoofT,jdbcType=VARCHAR},
      </if>
      <if test="leaseNumT != null">
        #{leaseNumT,jdbcType=VARCHAR},
      </if>
      <if test="leaseUnitT != null">
        #{leaseUnitT,jdbcType=VARCHAR},
      </if>
      <if test="leaseRight != null">
        #{leaseRight,jdbcType=TINYINT},
      </if>
      <if test="videoNum != null">
        #{videoNum,jdbcType=INTEGER},
      </if>
      <if test="creatorUid != null">
        #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="isIgnore != null">
        #{isIgnore,jdbcType=TINYINT},
      </if>
      <if test="leaseIdOld != null">
        #{leaseIdOld,jdbcType=INTEGER},
      </if>
      <if test="leaseInnerarea != null">
        #{leaseInnerarea,jdbcType=DECIMAL},
      </if>
      <if test="houseBargain != null">
        #{houseBargain,jdbcType=BIT},
      </if>
      <if test="encodeFlag != null">
        #{encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="lock != null">
        #{lock,jdbcType=TINYINT},
      </if>
      <if test="trueFlag != null">
        #{trueFlag,jdbcType=TINYINT},
      </if>
      <if test="sendtotencent != null">
        #{sendtotencent,jdbcType=TINYINT},
      </if>
      <if test="houseSourceWay != null">
        #{houseSourceWay,jdbcType=TINYINT},
      </if>
      <if test="youShareFlag != null">
        #{youShareFlag,jdbcType=TINYINT},
      </if>
      <if test="youShareTime != null">
        #{youShareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="youBuyCount != null">
        #{youBuyCount,jdbcType=INTEGER},
      </if>
      <if test="ownerSex != null">
        #{ownerSex,jdbcType=TINYINT},
      </if>
      <if test="youShareId != null">
        #{youShareId,jdbcType=INTEGER},
      </if>
      <if test="thumbpicVer != null">
        #{thumbpicVer,jdbcType=VARCHAR},
      </if>
      <if test="privateUserId != null">
        #{privateUserId,jdbcType=INTEGER},
      </if>
      <if test="leaseRoomType != null">
        #{leaseRoomType,jdbcType=TINYINT},
      </if>
      <if test="leaseRoomClassic != null">
        #{leaseRoomClassic,jdbcType=TINYINT},
      </if>
      <if test="flatShareSex != null">
        #{flatShareSex,jdbcType=TINYINT},
      </if>
      <if test="addrMd5 != null">
        #{addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="panoramaMap != null">
        #{panoramaMap,jdbcType=INTEGER},
      </if>
      <if test="youjiaStatisticFlag != null">
        #{youjiaStatisticFlag,jdbcType=TINYINT},
      </if>
      <if test="adsFlag != null">
        #{adsFlag,jdbcType=TINYINT},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="videoReviewFlag != null">
        #{videoReviewFlag,jdbcType=TINYINT},
      </if>
      <if test="hasPanorama != null">
        #{hasPanorama,jdbcType=TINYINT},
      </if>
      <if test="biddingFlag != null">
        #{biddingFlag,jdbcType=BIT},
      </if>
      <if test="competeEndTime != null">
        #{competeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="competePrice != null">
        #{competePrice,jdbcType=NUMERIC},
      </if>
      <if test="youShareMoneyState != null">
        #{youShareMoneyState,jdbcType=TINYINT},
      </if>
      <if test="sendtoWeidian != null">
        #{sendtoWeidian,jdbcType=TINYINT},
      </if>
      <if test="sendtoYouyou != null">
        #{sendtoYouyou,jdbcType=TINYINT},
      </if>
      <if test="youyouDeal != null">
        #{youyouDeal,jdbcType=TINYINT},
      </if>
      <if test="specialEndTime != null">
        #{specialEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleEndTime != null">
        #{scheduleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proxyUrl != null">
        #{proxyUrl,jdbcType=VARCHAR},
      </if>
      <if test="uploadProxyUser != null">
        #{uploadProxyUser,jdbcType=VARCHAR},
      </if>
      <if test="cityShareFlag != null">
        #{cityShareFlag,jdbcType=TINYINT},
      </if>
      <if test="brandCompId != null">
        #{brandCompId,jdbcType=INTEGER},
      </if>
      <if test="checkCodeFun != null">
        #{checkCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="ownershipType != null">
        #{ownershipType,jdbcType=TINYINT},
      </if>
      <if test="effectiveDate != null">
        #{effectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="qzCodeFun != null">
        #{qzCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="funmanagerSalestatus != null">
        #{funmanagerSalestatus,jdbcType=TINYINT},
      </if>
      <if test="hasFunkan != null">
        #{hasFunkan,jdbcType=TINYINT},
      </if>
      <if test="jointCellPhone != null">
        #{jointCellPhone,jdbcType=VARCHAR},
      </if>
      <if test="jointUserName != null">
        #{jointUserName,jdbcType=VARCHAR},
      </if>
      <if test="jointUserSex != null">
        #{jointUserSex,jdbcType=TINYINT},
      </if>
      <if test="jointIdCard != null">
        #{jointIdCard,jdbcType=VARCHAR},
      </if>
      <if test="respiteEndTime != null">
        #{respiteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleLeaseId != null">
        #{saleLeaseId,jdbcType=INTEGER},
      </if>
      <if test="isSaleLease != null">
        #{isSaleLease,jdbcType=TINYINT},
      </if>
      <if test="entrustEndTime != null">
        #{entrustEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entrustCreateUser != null">
        #{entrustCreateUser,jdbcType=INTEGER},
      </if>
      <if test="availableTime != null">
        #{availableTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPriceEnd != null">
        #{modifyPriceEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPriceTrend != null">
        #{modifyPriceTrend,jdbcType=TINYINT},
      </if>
      <if test="lastDkanTime != null">
        #{lastDkanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldTrueFlag != null">
        #{oldTrueFlag,jdbcType=TINYINT},
      </if>
      <if test="innerNo != null">
        #{innerNo,jdbcType=INTEGER},
      </if>
      <if test="jointIdCardType != null">
        #{jointIdCardType,jdbcType=INTEGER},
      </if>
      <if test="idCardType != null">
        #{idCardType,jdbcType=INTEGER},
      </if>
      <if test="officeCharacter != null">
        #{officeCharacter,jdbcType=TINYINT},
      </if>
      <if test="officeTax != null">
        #{officeTax,jdbcType=BIT},
      </if>
      <if test="leaseBay != null">
        #{leaseBay,jdbcType=NUMERIC},
      </if>
      <if test="leaseDepth != null">
        #{leaseDepth,jdbcType=NUMERIC},
      </if>
      <if test="leaseStorey != null">
        #{leaseStorey,jdbcType=NUMERIC},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=VARCHAR},
      </if>
      <if test="focusTime != null">
        #{focusTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLevel != null">
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="tissueLine != null">
        #{tissueLine,jdbcType=VARCHAR},
      </if>
      <if test="partnerId != null">
        #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="funkanUserId != null">
        #{funkanUserId,jdbcType=INTEGER},
      </if>
      <if test="leaseKeyUserId != null">
        #{leaseKeyUserId,jdbcType=INTEGER},
      </if>
      <if test="fileCoding != null">
        #{fileCoding,jdbcType=VARCHAR},
      </if>
      <if test="lessor != null">
        #{lessor,jdbcType=TINYINT},
      </if>
      <if test="transferFee != null">
        #{transferFee,jdbcType=NUMERIC},
      </if>
      <if test="returnRate != null">
        #{returnRate,jdbcType=NUMERIC},
      </if>
      <if test="mlReservedComp != null">
        #{mlReservedComp,jdbcType=VARCHAR},
      </if>
      <if test="houseVerify != null">
        #{houseVerify,jdbcType=TINYINT},
      </if>
      <if test="kitchen != null">
        #{kitchen,jdbcType=TINYINT},
      </if>
      <if test="mlWholeLayer != null">
        #{mlWholeLayer,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="leaseNature != null">
        #{leaseNature,jdbcType=TINYINT},
      </if>
      <if test="leaseStruct != null">
        #{leaseStruct,jdbcType=TINYINT},
      </if>
      <if test="leaseExpirationTime != null">
        #{leaseExpirationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="houseSituation != null">
        #{houseSituation,jdbcType=TINYINT},
      </if>
      <if test="currentRent != null">
        #{currentRent,jdbcType=NUMERIC},
      </if>
      <if test="transactionStatus != null">
        #{transactionStatus,jdbcType=TINYINT},
      </if>
      <if test="leaseUnitPrice != null">
        #{leaseUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="hasRecorded != null">
        #{hasRecorded,jdbcType=TINYINT},
      </if>
      <if test="leaseEntrustPrice != null">
        #{leaseEntrustPrice,jdbcType=NUMERIC},
      </if>
      <if test="hasEntrust != null">
        #{hasEntrust,jdbcType=TINYINT},
      </if>
      <if test="fuzzySearch != null">
        #{fuzzySearch,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunLeaseExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_LEASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_LEASE
    <set>
      <if test="record.leaseId != null">
        LEASE_ID = #{record.leaseId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createArchiveId != null">
        CREATE_ARCHIVE_ID = #{record.createArchiveId,jdbcType=INTEGER},
      </if>
      <if test="record.leaseNo != null">
        LEASE_NO = #{record.leaseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseSubject != null">
        LEASE_SUBJECT = #{record.leaseSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseOwner != null">
        LEASE_OWNER = #{record.leaseOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.cellPhone != null">
        CELL_PHONE = #{record.cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.buildName != null">
        BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildCode != null">
        BUILD_CODE = #{record.buildCode,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseReg != null">
        LEASE_REG = #{record.leaseReg,jdbcType=INTEGER},
      </if>
      <if test="record.regionName != null">
        REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionId != null">
        SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      </if>
      <if test="record.sectionName != null">
        SECTION_NAME = #{record.sectionName,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseRound != null">
        LEASE_ROUND = #{record.leaseRound,jdbcType=TINYINT},
      </if>
      <if test="record.tradeAddr != null">
        TRADE_ADDR = #{record.tradeAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseRoof != null">
        LEASE_ROOF = #{record.leaseRoof,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseUnit != null">
        LEASE_UNIT = #{record.leaseUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.unitFloor != null">
        UNIT_FLOOR = #{record.unitFloor,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseNum != null">
        LEASE_NUM = #{record.leaseNum,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseRoofR != null">
        LEASE_ROOF_R = #{record.leaseRoofR,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseUnitR != null">
        LEASE_UNIT_R = #{record.leaseUnitR,jdbcType=VARCHAR},
      </if>
      <if test="record.unitFloorR != null">
        UNIT_FLOOR_R = #{record.unitFloorR,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseNumR != null">
        LEASE_NUM_R = #{record.leaseNumR,jdbcType=VARCHAR},
      </if>
      <if test="record.plateType != null">
        PLATE_TYPE = #{record.plateType,jdbcType=TINYINT},
      </if>
      <if test="record.leaseRoom != null">
        LEASE_ROOM = #{record.leaseRoom,jdbcType=TINYINT},
      </if>
      <if test="record.leaseHall != null">
        LEASE_HALL = #{record.leaseHall,jdbcType=TINYINT},
      </if>
      <if test="record.leaseWei != null">
        LEASE_WEI = #{record.leaseWei,jdbcType=TINYINT},
      </if>
      <if test="record.leaseYang != null">
        LEASE_YANG = #{record.leaseYang,jdbcType=TINYINT},
      </if>
      <if test="record.leaseLadder != null">
        LEASE_LADDER = #{record.leaseLadder,jdbcType=TINYINT},
      </if>
      <if test="record.leaseDoors != null">
        LEASE_DOORS = #{record.leaseDoors,jdbcType=INTEGER},
      </if>
      <if test="record.leaseType != null">
        LEASE_TYPE = #{record.leaseType,jdbcType=TINYINT},
      </if>
      <if test="record.leaseFloor != null">
        LEASE_FLOOR = #{record.leaseFloor,jdbcType=SMALLINT},
      </if>
      <if test="record.leaseFloors != null">
        LEASE_FLOORS = #{record.leaseFloors,jdbcType=INTEGER},
      </if>
      <if test="record.leaseFitment != null">
        LEASE_FITMENT = #{record.leaseFitment,jdbcType=TINYINT},
      </if>
      <if test="record.leaseDirect != null">
        LEASE_DIRECT = #{record.leaseDirect,jdbcType=TINYINT},
      </if>
      <if test="record.leaseYear != null">
        LEASE_YEAR = #{record.leaseYear,jdbcType=SMALLINT},
      </if>
      <if test="record.leaseUseage != null">
        LEASE_USEAGE = #{record.leaseUseage,jdbcType=TINYINT},
      </if>
      <if test="record.leaseStreet != null">
        LEASE_STREET = #{record.leaseStreet,jdbcType=BIT},
      </if>
      <if test="record.leaseAccount != null">
        LEASE_ACCOUNT = #{record.leaseAccount,jdbcType=INTEGER},
      </if>
      <if test="record.leaseArea != null">
        LEASE_AREA = #{record.leaseArea,jdbcType=NUMERIC},
      </if>
      <if test="record.leaseTotalPrice != null">
        LEASE_TOTAL_PRICE = #{record.leaseTotalPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.priceUnit != null">
        PRICE_UNIT = #{record.priceUnit,jdbcType=TINYINT},
      </if>
      <if test="record.leaseLowestPrice != null">
        LEASE_LOWEST_PRICE = #{record.leaseLowestPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.leaseProperty != null">
        LEASE_PROPERTY = #{record.leaseProperty,jdbcType=NUMERIC},
      </if>
      <if test="record.isSeperator != null">
        IS_SEPERATOR = #{record.isSeperator,jdbcType=BIT},
      </if>
      <if test="record.shopUsage != null">
        SHOP_USAGE = #{record.shopUsage,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        OWNER_TYPE = #{record.ownerType,jdbcType=TINYINT},
      </if>
      <if test="record.officeLevel != null">
        OFFICE_LEVEL = #{record.officeLevel,jdbcType=TINYINT},
      </if>
      <if test="record.leaseDeposit != null">
        LEASE_DEPOSIT = #{record.leaseDeposit,jdbcType=INTEGER},
      </if>
      <if test="record.leaseLeaveTime != null">
        LEASE_LEAVE_TIME = #{record.leaseLeaveTime,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseLimite != null">
        LEASE_LIMITE = #{record.leaseLimite,jdbcType=INTEGER},
      </if>
      <if test="record.hallStructure != null">
        HALL_STRUCTURE = #{record.hallStructure,jdbcType=TINYINT},
      </if>
      <if test="record.ugArea != null">
        UG_AREA = #{record.ugArea,jdbcType=NUMERIC},
      </if>
      <if test="record.ugType != null">
        UG_TYPE = #{record.ugType,jdbcType=INTEGER},
      </if>
      <if test="record.gardenArea != null">
        GARDEN_AREA = #{record.gardenArea,jdbcType=NUMERIC},
      </if>
      <if test="record.garageAmount != null">
        GARAGE_AMOUNT = #{record.garageAmount,jdbcType=INTEGER},
      </if>
      <if test="record.leaseSet != null">
        LEASE_SET = #{record.leaseSet,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseCharact != null">
        LEASE_CHARACT = #{record.leaseCharact,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseMemo != null">
        LEASE_MEMO = #{record.leaseMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseSource != null">
        LEASE_SOURCE = #{record.leaseSource,jdbcType=TINYINT},
      </if>
      <if test="record.leaseLevel != null">
        LEASE_LEVEL = #{record.leaseLevel,jdbcType=TINYINT},
      </if>
      <if test="record.leaseKey != null">
        LEASE_KEY = #{record.leaseKey,jdbcType=BIT},
      </if>
      <if test="record.leaseKeyNum != null">
        LEASE_KEY_NUM = #{record.leaseKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="record.keyTime != null">
        KEY_TIME = #{record.keyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseExplrth != null">
        LEASE_EXPLRTH = #{record.leaseExplrth,jdbcType=BIT},
      </if>
      <if test="record.explrthDatetime != null">
        EXPLRTH_DATETIME = #{record.explrthDatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseConsign != null">
        LEASE_CONSIGN = #{record.leaseConsign,jdbcType=INTEGER},
      </if>
      <if test="record.leaseConsignNo != null">
        LEASE_CONSIGN_NO = #{record.leaseConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="record.weituoTime != null">
        WEITUO_TIME = #{record.weituoTime,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseCooperate != null">
        LEASE_COOPERATE = #{record.leaseCooperate,jdbcType=BIT},
      </if>
      <if test="record.cooperateTime != null">
        COOPERATE_TIME = #{record.cooperateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.complaintFlag != null">
        COMPLAINT_FLAG = #{record.complaintFlag,jdbcType=BIT},
      </if>
      <if test="record.leasePublish != null">
        LEASE_PUBLISH = #{record.leasePublish,jdbcType=BIT},
      </if>
      <if test="record.publishTime != null">
        PUBLISH_TIME = #{record.publishTime,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseMap != null">
        LEASE_MAP = #{record.leaseMap,jdbcType=INTEGER},
      </if>
      <if test="record.photoTime != null">
        PHOTO_TIME = #{record.photoTime,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseStatus != null">
        LEASE_STATUS = #{record.leaseStatus,jdbcType=INTEGER},
      </if>
      <if test="record.trackTime != null">
        TRACK_TIME = #{record.trackTime,jdbcType=VARCHAR},
      </if>
      <if test="record.trackTime2 != null">
        TRACK_TIME2 = #{record.trackTime2,jdbcType=VARCHAR},
      </if>
      <if test="record.actionTime != null">
        ACTION_TIME = #{record.actionTime,jdbcType=VARCHAR},
      </if>
      <if test="record.fromSoso != null">
        FROM_SOSO = #{record.fromSoso,jdbcType=BIT},
      </if>
      <if test="record.repeatFlag != null">
        REPEAT_FLAG = #{record.repeatFlag,jdbcType=INTEGER},
      </if>
      <if test="record.infoType != null">
        INFO_TYPE = #{record.infoType,jdbcType=TINYINT},
      </if>
      <if test="record.shareFlag != null">
        SHARE_FLAG = #{record.shareFlag,jdbcType=BIT},
      </if>
      <if test="record.friendHouse != null">
        FRIEND_HOUSE = #{record.friendHouse,jdbcType=BIT},
      </if>
      <if test="record.redFlag != null">
        RED_FLAG = #{record.redFlag,jdbcType=BIT},
      </if>
      <if test="record.orangeFlag != null">
        ORANGE_FLAG = #{record.orangeFlag,jdbcType=BIT},
      </if>
      <if test="record.publicCount != null">
        PUBLIC_COUNT = #{record.publicCount,jdbcType=INTEGER},
      </if>
      <if test="record.publicTime != null">
        PUBLIC_TIME = #{record.publicTime,jdbcType=VARCHAR},
      </if>
      <if test="record.dueTime != null">
        DUE_TIME = #{record.dueTime,jdbcType=VARCHAR},
      </if>
      <if test="record.specialTime != null">
        SPECIAL_TIME = #{record.specialTime,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleTime != null">
        SCHEDULE_TIME = #{record.scheduleTime,jdbcType=VARCHAR},
      </if>
      <if test="record.dealTime != null">
        DEAL_TIME = #{record.dealTime,jdbcType=VARCHAR},
      </if>
      <if test="record.writeoffTime != null">
        WRITEOFF_TIME = #{record.writeoffTime,jdbcType=VARCHAR},
      </if>
      <if test="record.secrecyTime != null">
        SECRECY_TIME = #{record.secrecyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.commendTime != null">
        COMMEND_TIME = #{record.commendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.privateTime != null">
        PRIVATE_TIME = #{record.privateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.fromPublic != null">
        FROM_PUBLIC = #{record.fromPublic,jdbcType=BIT},
      </if>
      <if test="record.thumbUrl != null">
        THUMB_URL = #{record.thumbUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tagIds != null">
        TAG_IDS = #{record.tagIds,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseCertTime != null">
        LEASE_CERT_TIME = #{record.leaseCertTime,jdbcType=VARCHAR},
      </if>
      <if test="record.publishSites != null">
        PUBLISH_SITES = #{record.publishSites,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.leaseRoofT != null">
        LEASE_ROOF_T = #{record.leaseRoofT,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseNumT != null">
        LEASE_NUM_T = #{record.leaseNumT,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseUnitT != null">
        LEASE_UNIT_T = #{record.leaseUnitT,jdbcType=VARCHAR},
      </if>
      <if test="record.leaseRight != null">
        LEASE_RIGHT = #{record.leaseRight,jdbcType=TINYINT},
      </if>
      <if test="record.videoNum != null">
        VIDEO_NUM = #{record.videoNum,jdbcType=INTEGER},
      </if>
      <if test="record.creatorUid != null">
        CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      </if>
      <if test="record.isIgnore != null">
        is_ignore = #{record.isIgnore,jdbcType=TINYINT},
      </if>
      <if test="record.leaseIdOld != null">
        lease_id_old = #{record.leaseIdOld,jdbcType=INTEGER},
      </if>
      <if test="record.leaseInnerarea != null">
        LEASE_INNERAREA = #{record.leaseInnerarea,jdbcType=DECIMAL},
      </if>
      <if test="record.houseBargain != null">
        HOUSE_BARGAIN = #{record.houseBargain,jdbcType=BIT},
      </if>
      <if test="record.encodeFlag != null">
        ENCODE_FLAG = #{record.encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="record.lock != null">
        [LOCK] = #{record.lock,jdbcType=TINYINT},
      </if>
      <if test="record.trueFlag != null">
        TRUE_FLAG = #{record.trueFlag,jdbcType=TINYINT},
      </if>
      <if test="record.sendtotencent != null">
        SENDTOTENCENT = #{record.sendtotencent,jdbcType=TINYINT},
      </if>
      <if test="record.houseSourceWay != null">
        HOUSE_SOURCE_WAY = #{record.houseSourceWay,jdbcType=TINYINT},
      </if>
      <if test="record.youShareFlag != null">
        YOU_SHARE_FLAG = #{record.youShareFlag,jdbcType=TINYINT},
      </if>
      <if test="record.youShareTime != null">
        YOU_SHARE_TIME = #{record.youShareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.youBuyCount != null">
        YOU_BUY_COUNT = #{record.youBuyCount,jdbcType=INTEGER},
      </if>
      <if test="record.ownerSex != null">
        OWNER_SEX = #{record.ownerSex,jdbcType=TINYINT},
      </if>
      <if test="record.youShareId != null">
        YOU_SHARE_ID = #{record.youShareId,jdbcType=INTEGER},
      </if>
      <if test="record.thumbpicVer != null">
        THUMBPIC_VER = #{record.thumbpicVer,jdbcType=VARCHAR},
      </if>
      <if test="record.privateUserId != null">
        PRIVATE_USER_ID = #{record.privateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.leaseRoomType != null">
        LEASE_ROOM_TYPE = #{record.leaseRoomType,jdbcType=TINYINT},
      </if>
      <if test="record.leaseRoomClassic != null">
        LEASE_ROOM_CLASSIC = #{record.leaseRoomClassic,jdbcType=TINYINT},
      </if>
      <if test="record.flatShareSex != null">
        FLAT_SHARE_SEX = #{record.flatShareSex,jdbcType=TINYINT},
      </if>
      <if test="record.addrMd5 != null">
        ADDR_MD5 = #{record.addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.panoramaMap != null">
        PANORAMA_MAP = #{record.panoramaMap,jdbcType=INTEGER},
      </if>
      <if test="record.youjiaStatisticFlag != null">
        YOUJIA_STATISTIC_FLAG = #{record.youjiaStatisticFlag,jdbcType=TINYINT},
      </if>
      <if test="record.adsFlag != null">
        ADS_FLAG = #{record.adsFlag,jdbcType=TINYINT},
      </if>
      <if test="record.syncTime != null">
        SYNC_TIME = #{record.syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.videoReviewFlag != null">
        VIDEO_REVIEW_FLAG = #{record.videoReviewFlag,jdbcType=TINYINT},
      </if>
      <if test="record.hasPanorama != null">
        HAS_PANORAMA = #{record.hasPanorama,jdbcType=TINYINT},
      </if>
      <if test="record.biddingFlag != null">
        BIDDING_FLAG = #{record.biddingFlag,jdbcType=BIT},
      </if>
      <if test="record.competeEndTime != null">
        COMPETE_END_TIME = #{record.competeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.competePrice != null">
        COMPETE_PRICE = #{record.competePrice,jdbcType=NUMERIC},
      </if>
      <if test="record.youShareMoneyState != null">
        YOU_SHARE_MONEY_STATE = #{record.youShareMoneyState,jdbcType=TINYINT},
      </if>
      <if test="record.sendtoWeidian != null">
        SENDTO_WEIDIAN = #{record.sendtoWeidian,jdbcType=TINYINT},
      </if>
      <if test="record.sendtoYouyou != null">
        SENDTO_YOUYOU = #{record.sendtoYouyou,jdbcType=TINYINT},
      </if>
      <if test="record.youyouDeal != null">
        YOUYOU_DEAL = #{record.youyouDeal,jdbcType=TINYINT},
      </if>
      <if test="record.specialEndTime != null">
        SPECIAL_END_TIME = #{record.specialEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scheduleEndTime != null">
        SCHEDULE_END_TIME = #{record.scheduleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.proxyUrl != null">
        PROXY_URL = #{record.proxyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadProxyUser != null">
        UPLOAD_PROXY_USER = #{record.uploadProxyUser,jdbcType=VARCHAR},
      </if>
      <if test="record.cityShareFlag != null">
        CITY_SHARE_FLAG = #{record.cityShareFlag,jdbcType=TINYINT},
      </if>
      <if test="record.brandCompId != null">
        BRAND_COMP_ID = #{record.brandCompId,jdbcType=INTEGER},
      </if>
      <if test="record.checkCodeFun != null">
        CHECK_CODE_FUN = #{record.checkCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="record.ownershipType != null">
        OWNERSHIP_TYPE = #{record.ownershipType,jdbcType=TINYINT},
      </if>
      <if test="record.effectiveDate != null">
        EFFECTIVE_DATE = #{record.effectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qzCodeFun != null">
        QZ_CODE_FUN = #{record.qzCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="record.funmanagerSalestatus != null">
        FUNMANAGER_SALESTATUS = #{record.funmanagerSalestatus,jdbcType=TINYINT},
      </if>
      <if test="record.hasFunkan != null">
        HAS_FUNKAN = #{record.hasFunkan,jdbcType=TINYINT},
      </if>
      <if test="record.jointCellPhone != null">
        JOINT_CELL_PHONE = #{record.jointCellPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.jointUserName != null">
        JOINT_USER_NAME = #{record.jointUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.jointUserSex != null">
        JOINT_USER_SEX = #{record.jointUserSex,jdbcType=TINYINT},
      </if>
      <if test="record.jointIdCard != null">
        JOINT_ID_CARD = #{record.jointIdCard,jdbcType=VARCHAR},
      </if>
      <if test="record.respiteEndTime != null">
        RESPITE_END_TIME = #{record.respiteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.saleLeaseId != null">
        SALE_LEASE_ID = #{record.saleLeaseId,jdbcType=INTEGER},
      </if>
      <if test="record.isSaleLease != null">
        IS_SALE_LEASE = #{record.isSaleLease,jdbcType=TINYINT},
      </if>
      <if test="record.entrustEndTime != null">
        ENTRUST_END_TIME = #{record.entrustEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.entrustCreateUser != null">
        ENTRUST_CREATE_USER = #{record.entrustCreateUser,jdbcType=INTEGER},
      </if>
      <if test="record.availableTime != null">
        AVAILABLE_TIME = #{record.availableTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyPriceEnd != null">
        MODIFY_PRICE_END = #{record.modifyPriceEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyPriceTrend != null">
        MODIFY_PRICE_TREND = #{record.modifyPriceTrend,jdbcType=TINYINT},
      </if>
      <if test="record.lastDkanTime != null">
        LAST_DKAN_TIME = #{record.lastDkanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oldTrueFlag != null">
        OLD_TRUE_FLAG = #{record.oldTrueFlag,jdbcType=TINYINT},
      </if>
      <if test="record.innerNo != null">
        INNER_NO = #{record.innerNo,jdbcType=INTEGER},
      </if>
      <if test="record.jointIdCardType != null">
        JOINT_ID_CARD_TYPE = #{record.jointIdCardType,jdbcType=INTEGER},
      </if>
      <if test="record.idCardType != null">
        ID_CARD_TYPE = #{record.idCardType,jdbcType=INTEGER},
      </if>
      <if test="record.officeCharacter != null">
        OFFICE_CHARACTER = #{record.officeCharacter,jdbcType=TINYINT},
      </if>
      <if test="record.officeTax != null">
        OFFICE_TAX = #{record.officeTax,jdbcType=BIT},
      </if>
      <if test="record.leaseBay != null">
        LEASE_BAY = #{record.leaseBay,jdbcType=NUMERIC},
      </if>
      <if test="record.leaseDepth != null">
        LEASE_DEPTH = #{record.leaseDepth,jdbcType=NUMERIC},
      </if>
      <if test="record.leaseStorey != null">
        LEASE_STOREY = #{record.leaseStorey,jdbcType=NUMERIC},
      </if>
      <if test="record.checkTime != null">
        CHECK_TIME = #{record.checkTime,jdbcType=VARCHAR},
      </if>
      <if test="record.focusTime != null">
        FOCUS_TIME = #{record.focusTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userLevel != null">
        USER_LEVEL = #{record.userLevel,jdbcType=INTEGER},
      </if>
      <if test="record.tissueLine != null">
        TISSUE_LINE = #{record.tissueLine,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerId != null">
        PARTNER_ID = #{record.partnerId,jdbcType=INTEGER},
      </if>
      <if test="record.funkanUserId != null">
        FUNKAN_USER_ID = #{record.funkanUserId,jdbcType=INTEGER},
      </if>
      <if test="record.leaseKeyUserId != null">
        LEASE_KEY_USER_ID = #{record.leaseKeyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.fileCoding != null">
        FILE_CODING = #{record.fileCoding,jdbcType=VARCHAR},
      </if>
      <if test="record.lessor != null">
        LESSOR = #{record.lessor,jdbcType=TINYINT},
      </if>
      <if test="record.transferFee != null">
        TRANSFER_FEE = #{record.transferFee,jdbcType=NUMERIC},
      </if>
      <if test="record.returnRate != null">
        RETURN_RATE = #{record.returnRate,jdbcType=NUMERIC},
      </if>
      <if test="record.mlReservedComp != null">
        ML_RESERVED_COMP = #{record.mlReservedComp,jdbcType=VARCHAR},
      </if>
      <if test="record.houseVerify != null">
        HOUSE_VERIFY = #{record.houseVerify,jdbcType=TINYINT},
      </if>
      <if test="record.kitchen != null">
        KITCHEN = #{record.kitchen,jdbcType=TINYINT},
      </if>
      <if test="record.mlWholeLayer != null">
        ML_WHOLE_LAYER = #{record.mlWholeLayer,jdbcType=TINYINT},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.leaseNature != null">
        LEASE_NATURE = #{record.leaseNature,jdbcType=TINYINT},
      </if>
      <if test="record.leaseStruct != null">
        LEASE_STRUCT = #{record.leaseStruct,jdbcType=TINYINT},
      </if>
      <if test="record.leaseExpirationTime != null">
        LEASE_EXPIRATION_TIME = #{record.leaseExpirationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.houseSituation != null">
        HOUSE_SITUATION = #{record.houseSituation,jdbcType=TINYINT},
      </if>
      <if test="record.currentRent != null">
        CURRENT_RENT = #{record.currentRent,jdbcType=NUMERIC},
      </if>
      <if test="record.transactionStatus != null">
        TRANSACTION_STATUS = #{record.transactionStatus,jdbcType=TINYINT},
      </if>
      <if test="record.leaseUnitPrice != null">
        LEASE_UNIT_PRICE = #{record.leaseUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.hasRecorded != null">
        HAS_RECORDED = #{record.hasRecorded,jdbcType=TINYINT},
      </if>
      <if test="record.leaseEntrustPrice != null">
        LEASE_ENTRUST_PRICE = #{record.leaseEntrustPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.hasEntrust != null">
        HAS_ENTRUST = #{record.hasEntrust,jdbcType=TINYINT},
      </if>
      <if test="record.fuzzySearch != null">
        FUZZY_SEARCH = #{record.fuzzySearch,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--@mbggenerated-->
    update FUN_LEASE
    set LEASE_ID = #{record.leaseId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      CREATE_ARCHIVE_ID = #{record.createArchiveId,jdbcType=INTEGER},
      LEASE_NO = #{record.leaseNo,jdbcType=VARCHAR},
      LEASE_SUBJECT = #{record.leaseSubject,jdbcType=VARCHAR},
      LEASE_OWNER = #{record.leaseOwner,jdbcType=VARCHAR},
      CELL_PHONE = #{record.cellPhone,jdbcType=VARCHAR},
      ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      BUILD_CODE = #{record.buildCode,jdbcType=VARCHAR},
      LEASE_REG = #{record.leaseReg,jdbcType=INTEGER},
      REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{record.sectionName,jdbcType=VARCHAR},
      LEASE_ROUND = #{record.leaseRound,jdbcType=TINYINT},
      TRADE_ADDR = #{record.tradeAddr,jdbcType=VARCHAR},
      LEASE_ROOF = #{record.leaseRoof,jdbcType=VARCHAR},
      LEASE_UNIT = #{record.leaseUnit,jdbcType=VARCHAR},
      UNIT_FLOOR = #{record.unitFloor,jdbcType=VARCHAR},
      LEASE_NUM = #{record.leaseNum,jdbcType=VARCHAR},
      LEASE_ROOF_R = #{record.leaseRoofR,jdbcType=VARCHAR},
      LEASE_UNIT_R = #{record.leaseUnitR,jdbcType=VARCHAR},
      UNIT_FLOOR_R = #{record.unitFloorR,jdbcType=VARCHAR},
      LEASE_NUM_R = #{record.leaseNumR,jdbcType=VARCHAR},
      PLATE_TYPE = #{record.plateType,jdbcType=TINYINT},
      LEASE_ROOM = #{record.leaseRoom,jdbcType=TINYINT},
      LEASE_HALL = #{record.leaseHall,jdbcType=TINYINT},
      LEASE_WEI = #{record.leaseWei,jdbcType=TINYINT},
      LEASE_YANG = #{record.leaseYang,jdbcType=TINYINT},
      LEASE_LADDER = #{record.leaseLadder,jdbcType=TINYINT},
      LEASE_DOORS = #{record.leaseDoors,jdbcType=INTEGER},
      LEASE_TYPE = #{record.leaseType,jdbcType=TINYINT},
      LEASE_FLOOR = #{record.leaseFloor,jdbcType=SMALLINT},
      LEASE_FLOORS = #{record.leaseFloors,jdbcType=INTEGER},
      LEASE_FITMENT = #{record.leaseFitment,jdbcType=TINYINT},
      LEASE_DIRECT = #{record.leaseDirect,jdbcType=TINYINT},
      LEASE_YEAR = #{record.leaseYear,jdbcType=SMALLINT},
      LEASE_USEAGE = #{record.leaseUseage,jdbcType=TINYINT},
      LEASE_STREET = #{record.leaseStreet,jdbcType=BIT},
      LEASE_ACCOUNT = #{record.leaseAccount,jdbcType=INTEGER},
      LEASE_AREA = #{record.leaseArea,jdbcType=NUMERIC},
      LEASE_TOTAL_PRICE = #{record.leaseTotalPrice,jdbcType=NUMERIC},
      PRICE_UNIT = #{record.priceUnit,jdbcType=TINYINT},
      LEASE_LOWEST_PRICE = #{record.leaseLowestPrice,jdbcType=NUMERIC},
      LEASE_PROPERTY = #{record.leaseProperty,jdbcType=NUMERIC},
      IS_SEPERATOR = #{record.isSeperator,jdbcType=BIT},
      SHOP_USAGE = #{record.shopUsage,jdbcType=VARCHAR},
      OWNER_TYPE = #{record.ownerType,jdbcType=TINYINT},
      OFFICE_LEVEL = #{record.officeLevel,jdbcType=TINYINT},
      LEASE_DEPOSIT = #{record.leaseDeposit,jdbcType=INTEGER},
      LEASE_LEAVE_TIME = #{record.leaseLeaveTime,jdbcType=VARCHAR},
      LEASE_LIMITE = #{record.leaseLimite,jdbcType=INTEGER},
      HALL_STRUCTURE = #{record.hallStructure,jdbcType=TINYINT},
      UG_AREA = #{record.ugArea,jdbcType=NUMERIC},
      UG_TYPE = #{record.ugType,jdbcType=INTEGER},
      GARDEN_AREA = #{record.gardenArea,jdbcType=NUMERIC},
      GARAGE_AMOUNT = #{record.garageAmount,jdbcType=INTEGER},
      LEASE_SET = #{record.leaseSet,jdbcType=VARCHAR},
      LEASE_CHARACT = #{record.leaseCharact,jdbcType=VARCHAR},
      LEASE_MEMO = #{record.leaseMemo,jdbcType=VARCHAR},
      LEASE_SOURCE = #{record.leaseSource,jdbcType=TINYINT},
      LEASE_LEVEL = #{record.leaseLevel,jdbcType=TINYINT},
      LEASE_KEY = #{record.leaseKey,jdbcType=BIT},
      LEASE_KEY_NUM = #{record.leaseKeyNum,jdbcType=VARCHAR},
      KEY_TIME = #{record.keyTime,jdbcType=VARCHAR},
      LEASE_EXPLRTH = #{record.leaseExplrth,jdbcType=BIT},
      EXPLRTH_DATETIME = #{record.explrthDatetime,jdbcType=VARCHAR},
      LEASE_CONSIGN = #{record.leaseConsign,jdbcType=INTEGER},
      LEASE_CONSIGN_NO = #{record.leaseConsignNo,jdbcType=VARCHAR},
      WEITUO_TIME = #{record.weituoTime,jdbcType=VARCHAR},
      LEASE_COOPERATE = #{record.leaseCooperate,jdbcType=BIT},
      COOPERATE_TIME = #{record.cooperateTime,jdbcType=VARCHAR},
      COMPLAINT_FLAG = #{record.complaintFlag,jdbcType=BIT},
      LEASE_PUBLISH = #{record.leasePublish,jdbcType=BIT},
      PUBLISH_TIME = #{record.publishTime,jdbcType=VARCHAR},
      LEASE_MAP = #{record.leaseMap,jdbcType=INTEGER},
      PHOTO_TIME = #{record.photoTime,jdbcType=VARCHAR},
      LEASE_STATUS = #{record.leaseStatus,jdbcType=INTEGER},
      TRACK_TIME = #{record.trackTime,jdbcType=VARCHAR},
      TRACK_TIME2 = #{record.trackTime2,jdbcType=VARCHAR},
      ACTION_TIME = #{record.actionTime,jdbcType=VARCHAR},
      FROM_SOSO = #{record.fromSoso,jdbcType=BIT},
      REPEAT_FLAG = #{record.repeatFlag,jdbcType=INTEGER},
      INFO_TYPE = #{record.infoType,jdbcType=TINYINT},
      SHARE_FLAG = #{record.shareFlag,jdbcType=BIT},
      FRIEND_HOUSE = #{record.friendHouse,jdbcType=BIT},
      RED_FLAG = #{record.redFlag,jdbcType=BIT},
      ORANGE_FLAG = #{record.orangeFlag,jdbcType=BIT},
      PUBLIC_COUNT = #{record.publicCount,jdbcType=INTEGER},
      PUBLIC_TIME = #{record.publicTime,jdbcType=VARCHAR},
      DUE_TIME = #{record.dueTime,jdbcType=VARCHAR},
      SPECIAL_TIME = #{record.specialTime,jdbcType=VARCHAR},
      SCHEDULE_TIME = #{record.scheduleTime,jdbcType=VARCHAR},
      DEAL_TIME = #{record.dealTime,jdbcType=VARCHAR},
      WRITEOFF_TIME = #{record.writeoffTime,jdbcType=VARCHAR},
      SECRECY_TIME = #{record.secrecyTime,jdbcType=VARCHAR},
      COMMEND_TIME = #{record.commendTime,jdbcType=VARCHAR},
      PRIVATE_TIME = #{record.privateTime,jdbcType=VARCHAR},
      FROM_PUBLIC = #{record.fromPublic,jdbcType=BIT},
      THUMB_URL = #{record.thumbUrl,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      TAG_IDS = #{record.tagIds,jdbcType=VARCHAR},
      LEASE_CERT_TIME = #{record.leaseCertTime,jdbcType=VARCHAR},
      PUBLISH_SITES = #{record.publishSites,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      LEASE_ROOF_T = #{record.leaseRoofT,jdbcType=VARCHAR},
      LEASE_NUM_T = #{record.leaseNumT,jdbcType=VARCHAR},
      LEASE_UNIT_T = #{record.leaseUnitT,jdbcType=VARCHAR},
      LEASE_RIGHT = #{record.leaseRight,jdbcType=TINYINT},
      VIDEO_NUM = #{record.videoNum,jdbcType=INTEGER},
      CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      is_ignore = #{record.isIgnore,jdbcType=TINYINT},
      lease_id_old = #{record.leaseIdOld,jdbcType=INTEGER},
      LEASE_INNERAREA = #{record.leaseInnerarea,jdbcType=DECIMAL},
      HOUSE_BARGAIN = #{record.houseBargain,jdbcType=BIT},
      ENCODE_FLAG = #{record.encodeFlag,jdbcType=TINYINT},
      [LOCK] = #{record.lock,jdbcType=TINYINT},
      TRUE_FLAG = #{record.trueFlag,jdbcType=TINYINT},
      SENDTOTENCENT = #{record.sendtotencent,jdbcType=TINYINT},
      HOUSE_SOURCE_WAY = #{record.houseSourceWay,jdbcType=TINYINT},
      YOU_SHARE_FLAG = #{record.youShareFlag,jdbcType=TINYINT},
      YOU_SHARE_TIME = #{record.youShareTime,jdbcType=TIMESTAMP},
      YOU_BUY_COUNT = #{record.youBuyCount,jdbcType=INTEGER},
      OWNER_SEX = #{record.ownerSex,jdbcType=TINYINT},
      YOU_SHARE_ID = #{record.youShareId,jdbcType=INTEGER},
      THUMBPIC_VER = #{record.thumbpicVer,jdbcType=VARCHAR},
      PRIVATE_USER_ID = #{record.privateUserId,jdbcType=INTEGER},
      LEASE_ROOM_TYPE = #{record.leaseRoomType,jdbcType=TINYINT},
      LEASE_ROOM_CLASSIC = #{record.leaseRoomClassic,jdbcType=TINYINT},
      FLAT_SHARE_SEX = #{record.flatShareSex,jdbcType=TINYINT},
      ADDR_MD5 = #{record.addrMd5,jdbcType=VARCHAR},
      PANORAMA_MAP = #{record.panoramaMap,jdbcType=INTEGER},
      YOUJIA_STATISTIC_FLAG = #{record.youjiaStatisticFlag,jdbcType=TINYINT},
      ADS_FLAG = #{record.adsFlag,jdbcType=TINYINT},
      SYNC_TIME = #{record.syncTime,jdbcType=TIMESTAMP},
      VIDEO_REVIEW_FLAG = #{record.videoReviewFlag,jdbcType=TINYINT},
      HAS_PANORAMA = #{record.hasPanorama,jdbcType=TINYINT},
      BIDDING_FLAG = #{record.biddingFlag,jdbcType=BIT},
      COMPETE_END_TIME = #{record.competeEndTime,jdbcType=TIMESTAMP},
      COMPETE_PRICE = #{record.competePrice,jdbcType=NUMERIC},
      YOU_SHARE_MONEY_STATE = #{record.youShareMoneyState,jdbcType=TINYINT},
      SENDTO_WEIDIAN = #{record.sendtoWeidian,jdbcType=TINYINT},
      SENDTO_YOUYOU = #{record.sendtoYouyou,jdbcType=TINYINT},
      YOUYOU_DEAL = #{record.youyouDeal,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{record.specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{record.scheduleEndTime,jdbcType=TIMESTAMP},
      PROXY_URL = #{record.proxyUrl,jdbcType=VARCHAR},
      UPLOAD_PROXY_USER = #{record.uploadProxyUser,jdbcType=VARCHAR},
      CITY_SHARE_FLAG = #{record.cityShareFlag,jdbcType=TINYINT},
      BRAND_COMP_ID = #{record.brandCompId,jdbcType=INTEGER},
      CHECK_CODE_FUN = #{record.checkCodeFun,jdbcType=VARCHAR},
      OWNERSHIP_TYPE = #{record.ownershipType,jdbcType=TINYINT},
      EFFECTIVE_DATE = #{record.effectiveDate,jdbcType=TIMESTAMP},
      QZ_CODE_FUN = #{record.qzCodeFun,jdbcType=VARCHAR},
      FUNMANAGER_SALESTATUS = #{record.funmanagerSalestatus,jdbcType=TINYINT},
      HAS_FUNKAN = #{record.hasFunkan,jdbcType=TINYINT},
      JOINT_CELL_PHONE = #{record.jointCellPhone,jdbcType=VARCHAR},
      JOINT_USER_NAME = #{record.jointUserName,jdbcType=VARCHAR},
      JOINT_USER_SEX = #{record.jointUserSex,jdbcType=TINYINT},
      JOINT_ID_CARD = #{record.jointIdCard,jdbcType=VARCHAR},
      RESPITE_END_TIME = #{record.respiteEndTime,jdbcType=TIMESTAMP},
      SALE_LEASE_ID = #{record.saleLeaseId,jdbcType=INTEGER},
      IS_SALE_LEASE = #{record.isSaleLease,jdbcType=TINYINT},
      ENTRUST_END_TIME = #{record.entrustEndTime,jdbcType=TIMESTAMP},
      ENTRUST_CREATE_USER = #{record.entrustCreateUser,jdbcType=INTEGER},
      AVAILABLE_TIME = #{record.availableTime,jdbcType=TIMESTAMP},
      MODIFY_PRICE_END = #{record.modifyPriceEnd,jdbcType=TIMESTAMP},
      MODIFY_PRICE_TREND = #{record.modifyPriceTrend,jdbcType=TINYINT},
      LAST_DKAN_TIME = #{record.lastDkanTime,jdbcType=TIMESTAMP},
      OLD_TRUE_FLAG = #{record.oldTrueFlag,jdbcType=TINYINT},
      INNER_NO = #{record.innerNo,jdbcType=INTEGER},
      JOINT_ID_CARD_TYPE = #{record.jointIdCardType,jdbcType=INTEGER},
      ID_CARD_TYPE = #{record.idCardType,jdbcType=INTEGER},
      OFFICE_CHARACTER = #{record.officeCharacter,jdbcType=TINYINT},
      OFFICE_TAX = #{record.officeTax,jdbcType=BIT},
      LEASE_BAY = #{record.leaseBay,jdbcType=NUMERIC},
      LEASE_DEPTH = #{record.leaseDepth,jdbcType=NUMERIC},
      LEASE_STOREY = #{record.leaseStorey,jdbcType=NUMERIC},
      CHECK_TIME = #{record.checkTime,jdbcType=VARCHAR},
      FOCUS_TIME = #{record.focusTime,jdbcType=TIMESTAMP},
      USER_LEVEL = #{record.userLevel,jdbcType=INTEGER},
      TISSUE_LINE = #{record.tissueLine,jdbcType=VARCHAR},
      PARTNER_ID = #{record.partnerId,jdbcType=INTEGER},
      FUNKAN_USER_ID = #{record.funkanUserId,jdbcType=INTEGER},
      LEASE_KEY_USER_ID = #{record.leaseKeyUserId,jdbcType=INTEGER},
      FILE_CODING = #{record.fileCoding,jdbcType=VARCHAR},
      LESSOR = #{record.lessor,jdbcType=TINYINT},
      TRANSFER_FEE = #{record.transferFee,jdbcType=NUMERIC},
      RETURN_RATE = #{record.returnRate,jdbcType=NUMERIC},
      ML_RESERVED_COMP = #{record.mlReservedComp,jdbcType=VARCHAR},
      HOUSE_VERIFY = #{record.houseVerify,jdbcType=TINYINT},
      KITCHEN = #{record.kitchen,jdbcType=TINYINT},
      ML_WHOLE_LAYER = #{record.mlWholeLayer,jdbcType=TINYINT},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      LEASE_NATURE = #{record.leaseNature,jdbcType=TINYINT},
      LEASE_STRUCT = #{record.leaseStruct,jdbcType=TINYINT},
      LEASE_EXPIRATION_TIME = #{record.leaseExpirationTime,jdbcType=TIMESTAMP},
      HOUSE_SITUATION = #{record.houseSituation,jdbcType=TINYINT},
      CURRENT_RENT = #{record.currentRent,jdbcType=NUMERIC},
      TRANSACTION_STATUS = #{record.transactionStatus,jdbcType=TINYINT},
      LEASE_UNIT_PRICE = #{record.leaseUnitPrice,jdbcType=DECIMAL},
      HAS_RECORDED = #{record.hasRecorded,jdbcType=TINYINT},
      LEASE_ENTRUST_PRICE = #{record.leaseEntrustPrice,jdbcType=NUMERIC},
      HAS_ENTRUST = #{record.hasEntrust,jdbcType=TINYINT},
      FUZZY_SEARCH = #{record.fuzzySearch,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_LEASE
    set LEASE_ID = #{record.leaseId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      CREATE_ARCHIVE_ID = #{record.createArchiveId,jdbcType=INTEGER},
      LEASE_NO = #{record.leaseNo,jdbcType=VARCHAR},
      LEASE_SUBJECT = #{record.leaseSubject,jdbcType=VARCHAR},
      LEASE_OWNER = #{record.leaseOwner,jdbcType=VARCHAR},
      CELL_PHONE = #{record.cellPhone,jdbcType=VARCHAR},
      ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      BUILD_CODE = #{record.buildCode,jdbcType=VARCHAR},
      LEASE_REG = #{record.leaseReg,jdbcType=INTEGER},
      REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{record.sectionName,jdbcType=VARCHAR},
      LEASE_ROUND = #{record.leaseRound,jdbcType=TINYINT},
      TRADE_ADDR = #{record.tradeAddr,jdbcType=VARCHAR},
      LEASE_ROOF = #{record.leaseRoof,jdbcType=VARCHAR},
      LEASE_UNIT = #{record.leaseUnit,jdbcType=VARCHAR},
      UNIT_FLOOR = #{record.unitFloor,jdbcType=VARCHAR},
      LEASE_NUM = #{record.leaseNum,jdbcType=VARCHAR},
      LEASE_ROOF_R = #{record.leaseRoofR,jdbcType=VARCHAR},
      LEASE_UNIT_R = #{record.leaseUnitR,jdbcType=VARCHAR},
      UNIT_FLOOR_R = #{record.unitFloorR,jdbcType=VARCHAR},
      LEASE_NUM_R = #{record.leaseNumR,jdbcType=VARCHAR},
      PLATE_TYPE = #{record.plateType,jdbcType=TINYINT},
      LEASE_ROOM = #{record.leaseRoom,jdbcType=TINYINT},
      LEASE_HALL = #{record.leaseHall,jdbcType=TINYINT},
      LEASE_WEI = #{record.leaseWei,jdbcType=TINYINT},
      LEASE_YANG = #{record.leaseYang,jdbcType=TINYINT},
      LEASE_LADDER = #{record.leaseLadder,jdbcType=TINYINT},
      LEASE_DOORS = #{record.leaseDoors,jdbcType=INTEGER},
      LEASE_TYPE = #{record.leaseType,jdbcType=TINYINT},
      LEASE_FLOOR = #{record.leaseFloor,jdbcType=SMALLINT},
      LEASE_FLOORS = #{record.leaseFloors,jdbcType=INTEGER},
      LEASE_FITMENT = #{record.leaseFitment,jdbcType=TINYINT},
      LEASE_DIRECT = #{record.leaseDirect,jdbcType=TINYINT},
      LEASE_YEAR = #{record.leaseYear,jdbcType=SMALLINT},
      LEASE_USEAGE = #{record.leaseUseage,jdbcType=TINYINT},
      LEASE_STREET = #{record.leaseStreet,jdbcType=BIT},
      LEASE_ACCOUNT = #{record.leaseAccount,jdbcType=INTEGER},
      LEASE_AREA = #{record.leaseArea,jdbcType=NUMERIC},
      LEASE_TOTAL_PRICE = #{record.leaseTotalPrice,jdbcType=NUMERIC},
      PRICE_UNIT = #{record.priceUnit,jdbcType=TINYINT},
      LEASE_LOWEST_PRICE = #{record.leaseLowestPrice,jdbcType=NUMERIC},
      LEASE_PROPERTY = #{record.leaseProperty,jdbcType=NUMERIC},
      IS_SEPERATOR = #{record.isSeperator,jdbcType=BIT},
      SHOP_USAGE = #{record.shopUsage,jdbcType=VARCHAR},
      OWNER_TYPE = #{record.ownerType,jdbcType=TINYINT},
      OFFICE_LEVEL = #{record.officeLevel,jdbcType=TINYINT},
      LEASE_DEPOSIT = #{record.leaseDeposit,jdbcType=INTEGER},
      LEASE_LEAVE_TIME = #{record.leaseLeaveTime,jdbcType=VARCHAR},
      LEASE_LIMITE = #{record.leaseLimite,jdbcType=INTEGER},
      HALL_STRUCTURE = #{record.hallStructure,jdbcType=TINYINT},
      UG_AREA = #{record.ugArea,jdbcType=NUMERIC},
      UG_TYPE = #{record.ugType,jdbcType=INTEGER},
      GARDEN_AREA = #{record.gardenArea,jdbcType=NUMERIC},
      GARAGE_AMOUNT = #{record.garageAmount,jdbcType=INTEGER},
      LEASE_SET = #{record.leaseSet,jdbcType=VARCHAR},
      LEASE_CHARACT = #{record.leaseCharact,jdbcType=VARCHAR},
      LEASE_MEMO = #{record.leaseMemo,jdbcType=VARCHAR},
      LEASE_SOURCE = #{record.leaseSource,jdbcType=TINYINT},
      LEASE_LEVEL = #{record.leaseLevel,jdbcType=TINYINT},
      LEASE_KEY = #{record.leaseKey,jdbcType=BIT},
      LEASE_KEY_NUM = #{record.leaseKeyNum,jdbcType=VARCHAR},
      KEY_TIME = #{record.keyTime,jdbcType=VARCHAR},
      LEASE_EXPLRTH = #{record.leaseExplrth,jdbcType=BIT},
      EXPLRTH_DATETIME = #{record.explrthDatetime,jdbcType=VARCHAR},
      LEASE_CONSIGN = #{record.leaseConsign,jdbcType=INTEGER},
      LEASE_CONSIGN_NO = #{record.leaseConsignNo,jdbcType=VARCHAR},
      WEITUO_TIME = #{record.weituoTime,jdbcType=VARCHAR},
      LEASE_COOPERATE = #{record.leaseCooperate,jdbcType=BIT},
      COOPERATE_TIME = #{record.cooperateTime,jdbcType=VARCHAR},
      COMPLAINT_FLAG = #{record.complaintFlag,jdbcType=BIT},
      LEASE_PUBLISH = #{record.leasePublish,jdbcType=BIT},
      PUBLISH_TIME = #{record.publishTime,jdbcType=VARCHAR},
      LEASE_MAP = #{record.leaseMap,jdbcType=INTEGER},
      PHOTO_TIME = #{record.photoTime,jdbcType=VARCHAR},
      LEASE_STATUS = #{record.leaseStatus,jdbcType=INTEGER},
      TRACK_TIME = #{record.trackTime,jdbcType=VARCHAR},
      TRACK_TIME2 = #{record.trackTime2,jdbcType=VARCHAR},
      ACTION_TIME = #{record.actionTime,jdbcType=VARCHAR},
      FROM_SOSO = #{record.fromSoso,jdbcType=BIT},
      REPEAT_FLAG = #{record.repeatFlag,jdbcType=INTEGER},
      INFO_TYPE = #{record.infoType,jdbcType=TINYINT},
      SHARE_FLAG = #{record.shareFlag,jdbcType=BIT},
      FRIEND_HOUSE = #{record.friendHouse,jdbcType=BIT},
      RED_FLAG = #{record.redFlag,jdbcType=BIT},
      ORANGE_FLAG = #{record.orangeFlag,jdbcType=BIT},
      PUBLIC_COUNT = #{record.publicCount,jdbcType=INTEGER},
      PUBLIC_TIME = #{record.publicTime,jdbcType=VARCHAR},
      DUE_TIME = #{record.dueTime,jdbcType=VARCHAR},
      SPECIAL_TIME = #{record.specialTime,jdbcType=VARCHAR},
      SCHEDULE_TIME = #{record.scheduleTime,jdbcType=VARCHAR},
      DEAL_TIME = #{record.dealTime,jdbcType=VARCHAR},
      WRITEOFF_TIME = #{record.writeoffTime,jdbcType=VARCHAR},
      SECRECY_TIME = #{record.secrecyTime,jdbcType=VARCHAR},
      COMMEND_TIME = #{record.commendTime,jdbcType=VARCHAR},
      PRIVATE_TIME = #{record.privateTime,jdbcType=VARCHAR},
      FROM_PUBLIC = #{record.fromPublic,jdbcType=BIT},
      THUMB_URL = #{record.thumbUrl,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      TAG_IDS = #{record.tagIds,jdbcType=VARCHAR},
      LEASE_CERT_TIME = #{record.leaseCertTime,jdbcType=VARCHAR},
      PUBLISH_SITES = #{record.publishSites,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      LEASE_ROOF_T = #{record.leaseRoofT,jdbcType=VARCHAR},
      LEASE_NUM_T = #{record.leaseNumT,jdbcType=VARCHAR},
      LEASE_UNIT_T = #{record.leaseUnitT,jdbcType=VARCHAR},
      LEASE_RIGHT = #{record.leaseRight,jdbcType=TINYINT},
      VIDEO_NUM = #{record.videoNum,jdbcType=INTEGER},
      CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      is_ignore = #{record.isIgnore,jdbcType=TINYINT},
      lease_id_old = #{record.leaseIdOld,jdbcType=INTEGER},
      LEASE_INNERAREA = #{record.leaseInnerarea,jdbcType=DECIMAL},
      HOUSE_BARGAIN = #{record.houseBargain,jdbcType=BIT},
      ENCODE_FLAG = #{record.encodeFlag,jdbcType=TINYINT},
      [LOCK] = #{record.lock,jdbcType=TINYINT},
      TRUE_FLAG = #{record.trueFlag,jdbcType=TINYINT},
      SENDTOTENCENT = #{record.sendtotencent,jdbcType=TINYINT},
      HOUSE_SOURCE_WAY = #{record.houseSourceWay,jdbcType=TINYINT},
      YOU_SHARE_FLAG = #{record.youShareFlag,jdbcType=TINYINT},
      YOU_SHARE_TIME = #{record.youShareTime,jdbcType=TIMESTAMP},
      YOU_BUY_COUNT = #{record.youBuyCount,jdbcType=INTEGER},
      OWNER_SEX = #{record.ownerSex,jdbcType=TINYINT},
      YOU_SHARE_ID = #{record.youShareId,jdbcType=INTEGER},
      THUMBPIC_VER = #{record.thumbpicVer,jdbcType=VARCHAR},
      PRIVATE_USER_ID = #{record.privateUserId,jdbcType=INTEGER},
      LEASE_ROOM_TYPE = #{record.leaseRoomType,jdbcType=TINYINT},
      LEASE_ROOM_CLASSIC = #{record.leaseRoomClassic,jdbcType=TINYINT},
      FLAT_SHARE_SEX = #{record.flatShareSex,jdbcType=TINYINT},
      ADDR_MD5 = #{record.addrMd5,jdbcType=VARCHAR},
      PANORAMA_MAP = #{record.panoramaMap,jdbcType=INTEGER},
      YOUJIA_STATISTIC_FLAG = #{record.youjiaStatisticFlag,jdbcType=TINYINT},
      ADS_FLAG = #{record.adsFlag,jdbcType=TINYINT},
      SYNC_TIME = #{record.syncTime,jdbcType=TIMESTAMP},
      VIDEO_REVIEW_FLAG = #{record.videoReviewFlag,jdbcType=TINYINT},
      HAS_PANORAMA = #{record.hasPanorama,jdbcType=TINYINT},
      BIDDING_FLAG = #{record.biddingFlag,jdbcType=BIT},
      COMPETE_END_TIME = #{record.competeEndTime,jdbcType=TIMESTAMP},
      COMPETE_PRICE = #{record.competePrice,jdbcType=NUMERIC},
      YOU_SHARE_MONEY_STATE = #{record.youShareMoneyState,jdbcType=TINYINT},
      SENDTO_WEIDIAN = #{record.sendtoWeidian,jdbcType=TINYINT},
      SENDTO_YOUYOU = #{record.sendtoYouyou,jdbcType=TINYINT},
      YOUYOU_DEAL = #{record.youyouDeal,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{record.specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{record.scheduleEndTime,jdbcType=TIMESTAMP},
      PROXY_URL = #{record.proxyUrl,jdbcType=VARCHAR},
      UPLOAD_PROXY_USER = #{record.uploadProxyUser,jdbcType=VARCHAR},
      CITY_SHARE_FLAG = #{record.cityShareFlag,jdbcType=TINYINT},
      BRAND_COMP_ID = #{record.brandCompId,jdbcType=INTEGER},
      CHECK_CODE_FUN = #{record.checkCodeFun,jdbcType=VARCHAR},
      OWNERSHIP_TYPE = #{record.ownershipType,jdbcType=TINYINT},
      EFFECTIVE_DATE = #{record.effectiveDate,jdbcType=TIMESTAMP},
      QZ_CODE_FUN = #{record.qzCodeFun,jdbcType=VARCHAR},
      FUNMANAGER_SALESTATUS = #{record.funmanagerSalestatus,jdbcType=TINYINT},
      HAS_FUNKAN = #{record.hasFunkan,jdbcType=TINYINT},
      JOINT_CELL_PHONE = #{record.jointCellPhone,jdbcType=VARCHAR},
      JOINT_USER_NAME = #{record.jointUserName,jdbcType=VARCHAR},
      JOINT_USER_SEX = #{record.jointUserSex,jdbcType=TINYINT},
      JOINT_ID_CARD = #{record.jointIdCard,jdbcType=VARCHAR},
      RESPITE_END_TIME = #{record.respiteEndTime,jdbcType=TIMESTAMP},
      SALE_LEASE_ID = #{record.saleLeaseId,jdbcType=INTEGER},
      IS_SALE_LEASE = #{record.isSaleLease,jdbcType=TINYINT},
      ENTRUST_END_TIME = #{record.entrustEndTime,jdbcType=TIMESTAMP},
      ENTRUST_CREATE_USER = #{record.entrustCreateUser,jdbcType=INTEGER},
      AVAILABLE_TIME = #{record.availableTime,jdbcType=TIMESTAMP},
      MODIFY_PRICE_END = #{record.modifyPriceEnd,jdbcType=TIMESTAMP},
      MODIFY_PRICE_TREND = #{record.modifyPriceTrend,jdbcType=TINYINT},
      LAST_DKAN_TIME = #{record.lastDkanTime,jdbcType=TIMESTAMP},
      OLD_TRUE_FLAG = #{record.oldTrueFlag,jdbcType=TINYINT},
      INNER_NO = #{record.innerNo,jdbcType=INTEGER},
      JOINT_ID_CARD_TYPE = #{record.jointIdCardType,jdbcType=INTEGER},
      ID_CARD_TYPE = #{record.idCardType,jdbcType=INTEGER},
      OFFICE_CHARACTER = #{record.officeCharacter,jdbcType=TINYINT},
      OFFICE_TAX = #{record.officeTax,jdbcType=BIT},
      LEASE_BAY = #{record.leaseBay,jdbcType=NUMERIC},
      LEASE_DEPTH = #{record.leaseDepth,jdbcType=NUMERIC},
      LEASE_STOREY = #{record.leaseStorey,jdbcType=NUMERIC},
      CHECK_TIME = #{record.checkTime,jdbcType=VARCHAR},
      FOCUS_TIME = #{record.focusTime,jdbcType=TIMESTAMP},
      USER_LEVEL = #{record.userLevel,jdbcType=INTEGER},
      TISSUE_LINE = #{record.tissueLine,jdbcType=VARCHAR},
      PARTNER_ID = #{record.partnerId,jdbcType=INTEGER},
      FUNKAN_USER_ID = #{record.funkanUserId,jdbcType=INTEGER},
      LEASE_KEY_USER_ID = #{record.leaseKeyUserId,jdbcType=INTEGER},
      FILE_CODING = #{record.fileCoding,jdbcType=VARCHAR},
      LESSOR = #{record.lessor,jdbcType=TINYINT},
      TRANSFER_FEE = #{record.transferFee,jdbcType=NUMERIC},
      RETURN_RATE = #{record.returnRate,jdbcType=NUMERIC},
      ML_RESERVED_COMP = #{record.mlReservedComp,jdbcType=VARCHAR},
      HOUSE_VERIFY = #{record.houseVerify,jdbcType=TINYINT},
      KITCHEN = #{record.kitchen,jdbcType=TINYINT},
      ML_WHOLE_LAYER = #{record.mlWholeLayer,jdbcType=TINYINT},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      LEASE_NATURE = #{record.leaseNature,jdbcType=TINYINT},
      LEASE_STRUCT = #{record.leaseStruct,jdbcType=TINYINT},
      LEASE_EXPIRATION_TIME = #{record.leaseExpirationTime,jdbcType=TIMESTAMP},
      HOUSE_SITUATION = #{record.houseSituation,jdbcType=TINYINT},
      CURRENT_RENT = #{record.currentRent,jdbcType=NUMERIC},
      TRANSACTION_STATUS = #{record.transactionStatus,jdbcType=TINYINT},
      LEASE_UNIT_PRICE = #{record.leaseUnitPrice,jdbcType=DECIMAL},
      HAS_RECORDED = #{record.hasRecorded,jdbcType=TINYINT},
      LEASE_ENTRUST_PRICE = #{record.leaseEntrustPrice,jdbcType=NUMERIC},
      HAS_ENTRUST = #{record.hasEntrust,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunLease">
    <!--@mbggenerated-->
    update FUN_LEASE
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createArchiveId != null">
        CREATE_ARCHIVE_ID = #{createArchiveId,jdbcType=INTEGER},
      </if>
      <if test="leaseNo != null">
        LEASE_NO = #{leaseNo,jdbcType=VARCHAR},
      </if>
      <if test="leaseSubject != null">
        LEASE_SUBJECT = #{leaseSubject,jdbcType=VARCHAR},
      </if>
      <if test="leaseOwner != null">
        LEASE_OWNER = #{leaseOwner,jdbcType=VARCHAR},
      </if>
      <if test="cellPhone != null">
        CELL_PHONE = #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        ID_CARD = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="buildCode != null">
        BUILD_CODE = #{buildCode,jdbcType=VARCHAR},
      </if>
      <if test="leaseReg != null">
        LEASE_REG = #{leaseReg,jdbcType=INTEGER},
      </if>
      <if test="regionName != null">
        REGION_NAME = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="sectionId != null">
        SECTION_ID = #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sectionName != null">
        SECTION_NAME = #{sectionName,jdbcType=VARCHAR},
      </if>
      <if test="leaseRound != null">
        LEASE_ROUND = #{leaseRound,jdbcType=TINYINT},
      </if>
      <if test="tradeAddr != null">
        TRADE_ADDR = #{tradeAddr,jdbcType=VARCHAR},
      </if>
      <if test="leaseRoof != null">
        LEASE_ROOF = #{leaseRoof,jdbcType=VARCHAR},
      </if>
      <if test="leaseUnit != null">
        LEASE_UNIT = #{leaseUnit,jdbcType=VARCHAR},
      </if>
      <if test="unitFloor != null">
        UNIT_FLOOR = #{unitFloor,jdbcType=VARCHAR},
      </if>
      <if test="leaseNum != null">
        LEASE_NUM = #{leaseNum,jdbcType=VARCHAR},
      </if>
      <if test="leaseRoofR != null">
        LEASE_ROOF_R = #{leaseRoofR,jdbcType=VARCHAR},
      </if>
      <if test="leaseUnitR != null">
        LEASE_UNIT_R = #{leaseUnitR,jdbcType=VARCHAR},
      </if>
      <if test="unitFloorR != null">
        UNIT_FLOOR_R = #{unitFloorR,jdbcType=VARCHAR},
      </if>
      <if test="leaseNumR != null">
        LEASE_NUM_R = #{leaseNumR,jdbcType=VARCHAR},
      </if>
      <if test="plateType != null">
        PLATE_TYPE = #{plateType,jdbcType=TINYINT},
      </if>
      <if test="leaseRoom != null">
        LEASE_ROOM = #{leaseRoom,jdbcType=TINYINT},
      </if>
      <if test="leaseHall != null">
        LEASE_HALL = #{leaseHall,jdbcType=TINYINT},
      </if>
      <if test="leaseWei != null">
        LEASE_WEI = #{leaseWei,jdbcType=TINYINT},
      </if>
      <if test="leaseYang != null">
        LEASE_YANG = #{leaseYang,jdbcType=TINYINT},
      </if>
      <if test="leaseLadder != null">
        LEASE_LADDER = #{leaseLadder,jdbcType=TINYINT},
      </if>
      <if test="leaseDoors != null">
        LEASE_DOORS = #{leaseDoors,jdbcType=INTEGER},
      </if>
      <if test="leaseType != null">
        LEASE_TYPE = #{leaseType,jdbcType=TINYINT},
      </if>
      <if test="leaseFloor != null">
        LEASE_FLOOR = #{leaseFloor,jdbcType=SMALLINT},
      </if>
      <if test="leaseFloors != null">
        LEASE_FLOORS = #{leaseFloors,jdbcType=INTEGER},
      </if>
      <if test="leaseFitment != null">
        LEASE_FITMENT = #{leaseFitment,jdbcType=TINYINT},
      </if>
      <if test="leaseDirect != null">
        LEASE_DIRECT = #{leaseDirect,jdbcType=TINYINT},
      </if>
      <if test="leaseYear != null">
        LEASE_YEAR = #{leaseYear,jdbcType=SMALLINT},
      </if>
      <if test="leaseUseage != null">
        LEASE_USEAGE = #{leaseUseage,jdbcType=TINYINT},
      </if>
      <if test="leaseStreet != null">
        LEASE_STREET = #{leaseStreet,jdbcType=BIT},
      </if>
      <if test="leaseAccount != null">
        LEASE_ACCOUNT = #{leaseAccount,jdbcType=INTEGER},
      </if>
      <if test="leaseArea != null">
        LEASE_AREA = #{leaseArea,jdbcType=NUMERIC},
      </if>
      <if test="leaseTotalPrice != null">
        LEASE_TOTAL_PRICE = #{leaseTotalPrice,jdbcType=NUMERIC},
      </if>
      <if test="priceUnit != null">
        PRICE_UNIT = #{priceUnit,jdbcType=TINYINT},
      </if>
      <if test="leaseLowestPrice != null">
        LEASE_LOWEST_PRICE = #{leaseLowestPrice,jdbcType=NUMERIC},
      </if>
      <if test="leaseProperty != null">
        LEASE_PROPERTY = #{leaseProperty,jdbcType=NUMERIC},
      </if>
      <if test="isSeperator != null">
        IS_SEPERATOR = #{isSeperator,jdbcType=BIT},
      </if>
      <if test="shopUsage != null">
        SHOP_USAGE = #{shopUsage,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        OWNER_TYPE = #{ownerType,jdbcType=TINYINT},
      </if>
      <if test="officeLevel != null">
        OFFICE_LEVEL = #{officeLevel,jdbcType=TINYINT},
      </if>
      <if test="leaseDeposit != null">
        LEASE_DEPOSIT = #{leaseDeposit,jdbcType=INTEGER},
      </if>
      <if test="leaseLeaveTime != null">
        LEASE_LEAVE_TIME = #{leaseLeaveTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseLimite != null">
        LEASE_LIMITE = #{leaseLimite,jdbcType=INTEGER},
      </if>
      <if test="hallStructure != null">
        HALL_STRUCTURE = #{hallStructure,jdbcType=TINYINT},
      </if>
      <if test="ugArea != null">
        UG_AREA = #{ugArea,jdbcType=NUMERIC},
      </if>
      <if test="ugType != null">
        UG_TYPE = #{ugType,jdbcType=INTEGER},
      </if>
      <if test="gardenArea != null">
        GARDEN_AREA = #{gardenArea,jdbcType=NUMERIC},
      </if>
      <if test="garageAmount != null">
        GARAGE_AMOUNT = #{garageAmount,jdbcType=INTEGER},
      </if>
      <if test="leaseSet != null">
        LEASE_SET = #{leaseSet,jdbcType=VARCHAR},
      </if>
      <if test="leaseCharact != null">
        LEASE_CHARACT = #{leaseCharact,jdbcType=VARCHAR},
      </if>
      <if test="leaseMemo != null">
        LEASE_MEMO = #{leaseMemo,jdbcType=VARCHAR},
      </if>
      <if test="leaseSource != null">
        LEASE_SOURCE = #{leaseSource,jdbcType=TINYINT},
      </if>
      <if test="leaseLevel != null">
        LEASE_LEVEL = #{leaseLevel,jdbcType=TINYINT},
      </if>
      <if test="leaseKey != null">
        LEASE_KEY = #{leaseKey,jdbcType=BIT},
      </if>
      <if test="leaseKeyNum != null">
        LEASE_KEY_NUM = #{leaseKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="keyTime != null">
        KEY_TIME = #{keyTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseExplrth != null">
        LEASE_EXPLRTH = #{leaseExplrth,jdbcType=BIT},
      </if>
      <if test="explrthDatetime != null">
        EXPLRTH_DATETIME = #{explrthDatetime,jdbcType=VARCHAR},
      </if>
      <if test="leaseConsign != null">
        LEASE_CONSIGN = #{leaseConsign,jdbcType=INTEGER},
      </if>
      <if test="leaseConsignNo != null">
        LEASE_CONSIGN_NO = #{leaseConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="weituoTime != null">
        WEITUO_TIME = #{weituoTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseCooperate != null">
        LEASE_COOPERATE = #{leaseCooperate,jdbcType=BIT},
      </if>
      <if test="cooperateTime != null">
        COOPERATE_TIME = #{cooperateTime,jdbcType=VARCHAR},
      </if>
      <if test="complaintFlag != null">
        COMPLAINT_FLAG = #{complaintFlag,jdbcType=BIT},
      </if>
      <if test="leasePublish != null">
        LEASE_PUBLISH = #{leasePublish,jdbcType=BIT},
      </if>
      <if test="publishTime != null">
        PUBLISH_TIME = #{publishTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseMap != null">
        LEASE_MAP = #{leaseMap,jdbcType=INTEGER},
      </if>
      <if test="photoTime != null">
        PHOTO_TIME = #{photoTime,jdbcType=VARCHAR},
      </if>
      <if test="leaseStatus != null">
        LEASE_STATUS = #{leaseStatus,jdbcType=INTEGER},
      </if>
      <if test="trackTime != null">
        TRACK_TIME = #{trackTime,jdbcType=VARCHAR},
      </if>
      <if test="trackTime2 != null">
        TRACK_TIME2 = #{trackTime2,jdbcType=VARCHAR},
      </if>
      <if test="actionTime != null">
        ACTION_TIME = #{actionTime,jdbcType=VARCHAR},
      </if>
      <if test="fromSoso != null">
        FROM_SOSO = #{fromSoso,jdbcType=BIT},
      </if>
      <if test="repeatFlag != null">
        REPEAT_FLAG = #{repeatFlag,jdbcType=INTEGER},
      </if>
      <if test="infoType != null">
        INFO_TYPE = #{infoType,jdbcType=TINYINT},
      </if>
      <if test="shareFlag != null">
        SHARE_FLAG = #{shareFlag,jdbcType=BIT},
      </if>
      <if test="friendHouse != null">
        FRIEND_HOUSE = #{friendHouse,jdbcType=BIT},
      </if>
      <if test="redFlag != null">
        RED_FLAG = #{redFlag,jdbcType=BIT},
      </if>
      <if test="orangeFlag != null">
        ORANGE_FLAG = #{orangeFlag,jdbcType=BIT},
      </if>
      <if test="publicCount != null">
        PUBLIC_COUNT = #{publicCount,jdbcType=INTEGER},
      </if>
      <if test="publicTime != null">
        PUBLIC_TIME = #{publicTime,jdbcType=VARCHAR},
      </if>
      <if test="dueTime != null">
        DUE_TIME = #{dueTime,jdbcType=VARCHAR},
      </if>
      <if test="specialTime != null">
        SPECIAL_TIME = #{specialTime,jdbcType=VARCHAR},
      </if>
      <if test="scheduleTime != null">
        SCHEDULE_TIME = #{scheduleTime,jdbcType=VARCHAR},
      </if>
      <if test="dealTime != null">
        DEAL_TIME = #{dealTime,jdbcType=VARCHAR},
      </if>
      <if test="writeoffTime != null">
        WRITEOFF_TIME = #{writeoffTime,jdbcType=VARCHAR},
      </if>
      <if test="secrecyTime != null">
        SECRECY_TIME = #{secrecyTime,jdbcType=VARCHAR},
      </if>
      <if test="commendTime != null">
        COMMEND_TIME = #{commendTime,jdbcType=VARCHAR},
      </if>
      <if test="privateTime != null">
        PRIVATE_TIME = #{privateTime,jdbcType=VARCHAR},
      </if>
      <if test="fromPublic != null">
        FROM_PUBLIC = #{fromPublic,jdbcType=BIT},
      </if>
      <if test="thumbUrl != null">
        THUMB_URL = #{thumbUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tagIds != null">
        TAG_IDS = #{tagIds,jdbcType=VARCHAR},
      </if>
      <if test="leaseCertTime != null">
        LEASE_CERT_TIME = #{leaseCertTime,jdbcType=VARCHAR},
      </if>
      <if test="publishSites != null">
        PUBLISH_SITES = #{publishSites,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="leaseRoofT != null">
        LEASE_ROOF_T = #{leaseRoofT,jdbcType=VARCHAR},
      </if>
      <if test="leaseNumT != null">
        LEASE_NUM_T = #{leaseNumT,jdbcType=VARCHAR},
      </if>
      <if test="leaseUnitT != null">
        LEASE_UNIT_T = #{leaseUnitT,jdbcType=VARCHAR},
      </if>
      <if test="leaseRight != null">
        LEASE_RIGHT = #{leaseRight,jdbcType=TINYINT},
      </if>
      <if test="videoNum != null">
        VIDEO_NUM = #{videoNum,jdbcType=INTEGER},
      </if>
      <if test="creatorUid != null">
        CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="isIgnore != null">
        is_ignore = #{isIgnore,jdbcType=TINYINT},
      </if>
      <if test="leaseIdOld != null">
        lease_id_old = #{leaseIdOld,jdbcType=INTEGER},
      </if>
      <if test="leaseInnerarea != null">
        LEASE_INNERAREA = #{leaseInnerarea,jdbcType=DECIMAL},
      </if>
      <if test="houseBargain != null">
        HOUSE_BARGAIN = #{houseBargain,jdbcType=BIT},
      </if>
      <if test="encodeFlag != null">
        ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="lock != null">
        [LOCK] = #{lock,jdbcType=TINYINT},
      </if>
      <if test="trueFlag != null">
        TRUE_FLAG = #{trueFlag,jdbcType=TINYINT},
      </if>
      <if test="sendtotencent != null">
        SENDTOTENCENT = #{sendtotencent,jdbcType=TINYINT},
      </if>
      <if test="houseSourceWay != null">
        HOUSE_SOURCE_WAY = #{houseSourceWay,jdbcType=TINYINT},
      </if>
      <if test="youShareFlag != null">
        YOU_SHARE_FLAG = #{youShareFlag,jdbcType=TINYINT},
      </if>
      <if test="youShareTime != null">
        YOU_SHARE_TIME = #{youShareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="youBuyCount != null">
        YOU_BUY_COUNT = #{youBuyCount,jdbcType=INTEGER},
      </if>
      <if test="ownerSex != null">
        OWNER_SEX = #{ownerSex,jdbcType=TINYINT},
      </if>
      <if test="youShareId != null">
        YOU_SHARE_ID = #{youShareId,jdbcType=INTEGER},
      </if>
      <if test="thumbpicVer != null">
        THUMBPIC_VER = #{thumbpicVer,jdbcType=VARCHAR},
      </if>
      <if test="privateUserId != null">
        PRIVATE_USER_ID = #{privateUserId,jdbcType=INTEGER},
      </if>
      <if test="leaseRoomType != null">
        LEASE_ROOM_TYPE = #{leaseRoomType,jdbcType=TINYINT},
      </if>
      <if test="leaseRoomClassic != null">
        LEASE_ROOM_CLASSIC = #{leaseRoomClassic,jdbcType=TINYINT},
      </if>
      <if test="flatShareSex != null">
        FLAT_SHARE_SEX = #{flatShareSex,jdbcType=TINYINT},
      </if>
      <if test="addrMd5 != null">
        ADDR_MD5 = #{addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="panoramaMap != null">
        PANORAMA_MAP = #{panoramaMap,jdbcType=INTEGER},
      </if>
      <if test="youjiaStatisticFlag != null">
        YOUJIA_STATISTIC_FLAG = #{youjiaStatisticFlag,jdbcType=TINYINT},
      </if>
      <if test="adsFlag != null">
        ADS_FLAG = #{adsFlag,jdbcType=TINYINT},
      </if>
      <if test="syncTime != null">
        SYNC_TIME = #{syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="videoReviewFlag != null">
        VIDEO_REVIEW_FLAG = #{videoReviewFlag,jdbcType=TINYINT},
      </if>
      <if test="hasPanorama != null">
        HAS_PANORAMA = #{hasPanorama,jdbcType=TINYINT},
      </if>
      <if test="biddingFlag != null">
        BIDDING_FLAG = #{biddingFlag,jdbcType=BIT},
      </if>
      <if test="competeEndTime != null">
        COMPETE_END_TIME = #{competeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="competePrice != null">
        COMPETE_PRICE = #{competePrice,jdbcType=NUMERIC},
      </if>
      <if test="youShareMoneyState != null">
        YOU_SHARE_MONEY_STATE = #{youShareMoneyState,jdbcType=TINYINT},
      </if>
      <if test="sendtoWeidian != null">
        SENDTO_WEIDIAN = #{sendtoWeidian,jdbcType=TINYINT},
      </if>
      <if test="sendtoYouyou != null">
        SENDTO_YOUYOU = #{sendtoYouyou,jdbcType=TINYINT},
      </if>
      <if test="youyouDeal != null">
        YOUYOU_DEAL = #{youyouDeal,jdbcType=TINYINT},
      </if>
      <if test="specialEndTime != null">
        SPECIAL_END_TIME = #{specialEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleEndTime != null">
        SCHEDULE_END_TIME = #{scheduleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proxyUrl != null">
        PROXY_URL = #{proxyUrl,jdbcType=VARCHAR},
      </if>
      <if test="uploadProxyUser != null">
        UPLOAD_PROXY_USER = #{uploadProxyUser,jdbcType=VARCHAR},
      </if>
      <if test="cityShareFlag != null">
        CITY_SHARE_FLAG = #{cityShareFlag,jdbcType=TINYINT},
      </if>
      <if test="brandCompId != null">
        BRAND_COMP_ID = #{brandCompId,jdbcType=INTEGER},
      </if>
      <if test="checkCodeFun != null">
        CHECK_CODE_FUN = #{checkCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="ownershipType != null">
        OWNERSHIP_TYPE = #{ownershipType,jdbcType=TINYINT},
      </if>
      <if test="effectiveDate != null">
        EFFECTIVE_DATE = #{effectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="qzCodeFun != null">
        QZ_CODE_FUN = #{qzCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="funmanagerSalestatus != null">
        FUNMANAGER_SALESTATUS = #{funmanagerSalestatus,jdbcType=TINYINT},
      </if>
      <if test="hasFunkan != null">
        HAS_FUNKAN = #{hasFunkan,jdbcType=TINYINT},
      </if>
      <if test="jointCellPhone != null">
        JOINT_CELL_PHONE = #{jointCellPhone,jdbcType=VARCHAR},
      </if>
      <if test="jointUserName != null">
        JOINT_USER_NAME = #{jointUserName,jdbcType=VARCHAR},
      </if>
      <if test="jointUserSex != null">
        JOINT_USER_SEX = #{jointUserSex,jdbcType=TINYINT},
      </if>
      <if test="jointIdCard != null">
        JOINT_ID_CARD = #{jointIdCard,jdbcType=VARCHAR},
      </if>
      <if test="respiteEndTime != null">
        RESPITE_END_TIME = #{respiteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleLeaseId != null">
        SALE_LEASE_ID = #{saleLeaseId,jdbcType=INTEGER},
      </if>
      <if test="isSaleLease != null">
        IS_SALE_LEASE = #{isSaleLease,jdbcType=TINYINT},
      </if>
      <if test="entrustEndTime != null">
        ENTRUST_END_TIME = #{entrustEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entrustCreateUser != null">
        ENTRUST_CREATE_USER = #{entrustCreateUser,jdbcType=INTEGER},
      </if>
      <if test="availableTime != null">
        AVAILABLE_TIME = #{availableTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPriceEnd != null">
        MODIFY_PRICE_END = #{modifyPriceEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPriceTrend != null">
        MODIFY_PRICE_TREND = #{modifyPriceTrend,jdbcType=TINYINT},
      </if>
      <if test="lastDkanTime != null">
        LAST_DKAN_TIME = #{lastDkanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldTrueFlag != null">
        OLD_TRUE_FLAG = #{oldTrueFlag,jdbcType=TINYINT},
      </if>
      <if test="innerNo != null">
        INNER_NO = #{innerNo,jdbcType=INTEGER},
      </if>
      <if test="jointIdCardType != null">
        JOINT_ID_CARD_TYPE = #{jointIdCardType,jdbcType=INTEGER},
      </if>
      <if test="idCardType != null">
        ID_CARD_TYPE = #{idCardType,jdbcType=INTEGER},
      </if>
      <if test="officeCharacter != null">
        OFFICE_CHARACTER = #{officeCharacter,jdbcType=TINYINT},
      </if>
      <if test="officeTax != null">
        OFFICE_TAX = #{officeTax,jdbcType=BIT},
      </if>
      <if test="leaseBay != null">
        LEASE_BAY = #{leaseBay,jdbcType=NUMERIC},
      </if>
      <if test="leaseDepth != null">
        LEASE_DEPTH = #{leaseDepth,jdbcType=NUMERIC},
      </if>
      <if test="leaseStorey != null">
        LEASE_STOREY = #{leaseStorey,jdbcType=NUMERIC},
      </if>
      <if test="checkTime != null">
        CHECK_TIME = #{checkTime,jdbcType=VARCHAR},
      </if>
      <if test="focusTime != null">
        FOCUS_TIME = #{focusTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLevel != null">
        USER_LEVEL = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="tissueLine != null">
        TISSUE_LINE = #{tissueLine,jdbcType=VARCHAR},
      </if>
      <if test="partnerId != null">
        PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="funkanUserId != null">
        FUNKAN_USER_ID = #{funkanUserId,jdbcType=INTEGER},
      </if>
      <if test="leaseKeyUserId != null">
        LEASE_KEY_USER_ID = #{leaseKeyUserId,jdbcType=INTEGER},
      </if>
      <if test="fileCoding != null">
        FILE_CODING = #{fileCoding,jdbcType=VARCHAR},
      </if>
      <if test="lessor != null">
        LESSOR = #{lessor,jdbcType=TINYINT},
      </if>
      <if test="transferFee != null">
        TRANSFER_FEE = #{transferFee,jdbcType=NUMERIC},
      </if>
      <if test="returnRate != null">
        RETURN_RATE = #{returnRate,jdbcType=NUMERIC},
      </if>
      <if test="mlReservedComp != null">
        ML_RESERVED_COMP = #{mlReservedComp,jdbcType=VARCHAR},
      </if>
      <if test="houseVerify != null">
        HOUSE_VERIFY = #{houseVerify,jdbcType=TINYINT},
      </if>
      <if test="kitchen != null">
        KITCHEN = #{kitchen,jdbcType=TINYINT},
      </if>
      <if test="mlWholeLayer != null">
        ML_WHOLE_LAYER = #{mlWholeLayer,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="leaseNature != null">
        LEASE_NATURE = #{leaseNature,jdbcType=TINYINT},
      </if>
      <if test="leaseStruct != null">
        LEASE_STRUCT = #{leaseStruct,jdbcType=TINYINT},
      </if>
      <if test="leaseExpirationTime != null">
        LEASE_EXPIRATION_TIME = #{leaseExpirationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="houseSituation != null">
        HOUSE_SITUATION = #{houseSituation,jdbcType=TINYINT},
      </if>
      <if test="currentRent != null">
        CURRENT_RENT = #{currentRent,jdbcType=NUMERIC},
      </if>
      <if test="transactionStatus != null">
        TRANSACTION_STATUS = #{transactionStatus,jdbcType=TINYINT},
      </if>
      <if test="leaseUnitPrice != null">
        LEASE_UNIT_PRICE = #{leaseUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="hasRecorded != null">
        HAS_RECORDED = #{hasRecorded,jdbcType=TINYINT},
      </if>
      <if test="leaseEntrustPrice != null">
        LEASE_ENTRUST_PRICE = #{leaseEntrustPrice,jdbcType=NUMERIC},
      </if>
      <if test="hasEntrust != null">
        HAS_ENTRUST = #{hasEntrust,jdbcType=TINYINT},
      </if>
      <if test="fuzzySearch != null">
        FUZZY_SEARCH = #{fuzzySearch,jdbcType=CLOB},
      </if>
    </set>
    where LEASE_ID = #{leaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myfun.repository.erpdb.po.ErpFunLease">
    <!--@mbggenerated-->
    update FUN_LEASE
    set COMP_ID = #{compId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      CREATE_ARCHIVE_ID = #{createArchiveId,jdbcType=INTEGER},
      LEASE_NO = #{leaseNo,jdbcType=VARCHAR},
      LEASE_SUBJECT = #{leaseSubject,jdbcType=VARCHAR},
      LEASE_OWNER = #{leaseOwner,jdbcType=VARCHAR},
      CELL_PHONE = #{cellPhone,jdbcType=VARCHAR},
      ID_CARD = #{idCard,jdbcType=VARCHAR},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      BUILD_CODE = #{buildCode,jdbcType=VARCHAR},
      LEASE_REG = #{leaseReg,jdbcType=INTEGER},
      REGION_NAME = #{regionName,jdbcType=VARCHAR},
      SECTION_ID = #{sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{sectionName,jdbcType=VARCHAR},
      LEASE_ROUND = #{leaseRound,jdbcType=TINYINT},
      TRADE_ADDR = #{tradeAddr,jdbcType=VARCHAR},
      LEASE_ROOF = #{leaseRoof,jdbcType=VARCHAR},
      LEASE_UNIT = #{leaseUnit,jdbcType=VARCHAR},
      UNIT_FLOOR = #{unitFloor,jdbcType=VARCHAR},
      LEASE_NUM = #{leaseNum,jdbcType=VARCHAR},
      LEASE_ROOF_R = #{leaseRoofR,jdbcType=VARCHAR},
      LEASE_UNIT_R = #{leaseUnitR,jdbcType=VARCHAR},
      UNIT_FLOOR_R = #{unitFloorR,jdbcType=VARCHAR},
      LEASE_NUM_R = #{leaseNumR,jdbcType=VARCHAR},
      PLATE_TYPE = #{plateType,jdbcType=TINYINT},
      LEASE_ROOM = #{leaseRoom,jdbcType=TINYINT},
      LEASE_HALL = #{leaseHall,jdbcType=TINYINT},
      LEASE_WEI = #{leaseWei,jdbcType=TINYINT},
      LEASE_YANG = #{leaseYang,jdbcType=TINYINT},
      LEASE_LADDER = #{leaseLadder,jdbcType=TINYINT},
      LEASE_DOORS = #{leaseDoors,jdbcType=INTEGER},
      LEASE_TYPE = #{leaseType,jdbcType=TINYINT},
      LEASE_FLOOR = #{leaseFloor,jdbcType=SMALLINT},
      LEASE_FLOORS = #{leaseFloors,jdbcType=INTEGER},
      LEASE_FITMENT = #{leaseFitment,jdbcType=TINYINT},
      LEASE_DIRECT = #{leaseDirect,jdbcType=TINYINT},
      LEASE_YEAR = #{leaseYear,jdbcType=SMALLINT},
      LEASE_USEAGE = #{leaseUseage,jdbcType=TINYINT},
      LEASE_STREET = #{leaseStreet,jdbcType=BIT},
      LEASE_ACCOUNT = #{leaseAccount,jdbcType=INTEGER},
      LEASE_AREA = #{leaseArea,jdbcType=NUMERIC},
      LEASE_TOTAL_PRICE = #{leaseTotalPrice,jdbcType=NUMERIC},
      PRICE_UNIT = #{priceUnit,jdbcType=TINYINT},
      LEASE_LOWEST_PRICE = #{leaseLowestPrice,jdbcType=NUMERIC},
      LEASE_PROPERTY = #{leaseProperty,jdbcType=NUMERIC},
      IS_SEPERATOR = #{isSeperator,jdbcType=BIT},
      SHOP_USAGE = #{shopUsage,jdbcType=VARCHAR},
      OWNER_TYPE = #{ownerType,jdbcType=TINYINT},
      OFFICE_LEVEL = #{officeLevel,jdbcType=TINYINT},
      LEASE_DEPOSIT = #{leaseDeposit,jdbcType=INTEGER},
      LEASE_LEAVE_TIME = #{leaseLeaveTime,jdbcType=VARCHAR},
      LEASE_LIMITE = #{leaseLimite,jdbcType=INTEGER},
      HALL_STRUCTURE = #{hallStructure,jdbcType=TINYINT},
      UG_AREA = #{ugArea,jdbcType=NUMERIC},
      UG_TYPE = #{ugType,jdbcType=INTEGER},
      GARDEN_AREA = #{gardenArea,jdbcType=NUMERIC},
      GARAGE_AMOUNT = #{garageAmount,jdbcType=INTEGER},
      LEASE_SET = #{leaseSet,jdbcType=VARCHAR},
      LEASE_CHARACT = #{leaseCharact,jdbcType=VARCHAR},
      LEASE_MEMO = #{leaseMemo,jdbcType=VARCHAR},
      LEASE_SOURCE = #{leaseSource,jdbcType=TINYINT},
      LEASE_LEVEL = #{leaseLevel,jdbcType=TINYINT},
      LEASE_KEY = #{leaseKey,jdbcType=BIT},
      LEASE_KEY_NUM = #{leaseKeyNum,jdbcType=VARCHAR},
      KEY_TIME = #{keyTime,jdbcType=VARCHAR},
      LEASE_EXPLRTH = #{leaseExplrth,jdbcType=BIT},
      EXPLRTH_DATETIME = #{explrthDatetime,jdbcType=VARCHAR},
      LEASE_CONSIGN = #{leaseConsign,jdbcType=INTEGER},
      LEASE_CONSIGN_NO = #{leaseConsignNo,jdbcType=VARCHAR},
      WEITUO_TIME = #{weituoTime,jdbcType=VARCHAR},
      LEASE_COOPERATE = #{leaseCooperate,jdbcType=BIT},
      COOPERATE_TIME = #{cooperateTime,jdbcType=VARCHAR},
      COMPLAINT_FLAG = #{complaintFlag,jdbcType=BIT},
      LEASE_PUBLISH = #{leasePublish,jdbcType=BIT},
      PUBLISH_TIME = #{publishTime,jdbcType=VARCHAR},
      LEASE_MAP = #{leaseMap,jdbcType=INTEGER},
      PHOTO_TIME = #{photoTime,jdbcType=VARCHAR},
      LEASE_STATUS = #{leaseStatus,jdbcType=INTEGER},
      TRACK_TIME = #{trackTime,jdbcType=VARCHAR},
      TRACK_TIME2 = #{trackTime2,jdbcType=VARCHAR},
      ACTION_TIME = #{actionTime,jdbcType=VARCHAR},
      FROM_SOSO = #{fromSoso,jdbcType=BIT},
      REPEAT_FLAG = #{repeatFlag,jdbcType=INTEGER},
      INFO_TYPE = #{infoType,jdbcType=TINYINT},
      SHARE_FLAG = #{shareFlag,jdbcType=BIT},
      FRIEND_HOUSE = #{friendHouse,jdbcType=BIT},
      RED_FLAG = #{redFlag,jdbcType=BIT},
      ORANGE_FLAG = #{orangeFlag,jdbcType=BIT},
      PUBLIC_COUNT = #{publicCount,jdbcType=INTEGER},
      PUBLIC_TIME = #{publicTime,jdbcType=VARCHAR},
      DUE_TIME = #{dueTime,jdbcType=VARCHAR},
      SPECIAL_TIME = #{specialTime,jdbcType=VARCHAR},
      SCHEDULE_TIME = #{scheduleTime,jdbcType=VARCHAR},
      DEAL_TIME = #{dealTime,jdbcType=VARCHAR},
      WRITEOFF_TIME = #{writeoffTime,jdbcType=VARCHAR},
      SECRECY_TIME = #{secrecyTime,jdbcType=VARCHAR},
      COMMEND_TIME = #{commendTime,jdbcType=VARCHAR},
      PRIVATE_TIME = #{privateTime,jdbcType=VARCHAR},
      FROM_PUBLIC = #{fromPublic,jdbcType=BIT},
      THUMB_URL = #{thumbUrl,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      TAG_IDS = #{tagIds,jdbcType=VARCHAR},
      LEASE_CERT_TIME = #{leaseCertTime,jdbcType=VARCHAR},
      PUBLISH_SITES = #{publishSites,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      LEASE_ROOF_T = #{leaseRoofT,jdbcType=VARCHAR},
      LEASE_NUM_T = #{leaseNumT,jdbcType=VARCHAR},
      LEASE_UNIT_T = #{leaseUnitT,jdbcType=VARCHAR},
      LEASE_RIGHT = #{leaseRight,jdbcType=TINYINT},
      VIDEO_NUM = #{videoNum,jdbcType=INTEGER},
      CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      is_ignore = #{isIgnore,jdbcType=TINYINT},
      lease_id_old = #{leaseIdOld,jdbcType=INTEGER},
      LEASE_INNERAREA = #{leaseInnerarea,jdbcType=DECIMAL},
      HOUSE_BARGAIN = #{houseBargain,jdbcType=BIT},
      ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      [LOCK] = #{lock,jdbcType=TINYINT},
      TRUE_FLAG = #{trueFlag,jdbcType=TINYINT},
      SENDTOTENCENT = #{sendtotencent,jdbcType=TINYINT},
      HOUSE_SOURCE_WAY = #{houseSourceWay,jdbcType=TINYINT},
      YOU_SHARE_FLAG = #{youShareFlag,jdbcType=TINYINT},
      YOU_SHARE_TIME = #{youShareTime,jdbcType=TIMESTAMP},
      YOU_BUY_COUNT = #{youBuyCount,jdbcType=INTEGER},
      OWNER_SEX = #{ownerSex,jdbcType=TINYINT},
      YOU_SHARE_ID = #{youShareId,jdbcType=INTEGER},
      THUMBPIC_VER = #{thumbpicVer,jdbcType=VARCHAR},
      PRIVATE_USER_ID = #{privateUserId,jdbcType=INTEGER},
      LEASE_ROOM_TYPE = #{leaseRoomType,jdbcType=TINYINT},
      LEASE_ROOM_CLASSIC = #{leaseRoomClassic,jdbcType=TINYINT},
      FLAT_SHARE_SEX = #{flatShareSex,jdbcType=TINYINT},
      ADDR_MD5 = #{addrMd5,jdbcType=VARCHAR},
      PANORAMA_MAP = #{panoramaMap,jdbcType=INTEGER},
      YOUJIA_STATISTIC_FLAG = #{youjiaStatisticFlag,jdbcType=TINYINT},
      ADS_FLAG = #{adsFlag,jdbcType=TINYINT},
      SYNC_TIME = #{syncTime,jdbcType=TIMESTAMP},
      VIDEO_REVIEW_FLAG = #{videoReviewFlag,jdbcType=TINYINT},
      HAS_PANORAMA = #{hasPanorama,jdbcType=TINYINT},
      BIDDING_FLAG = #{biddingFlag,jdbcType=BIT},
      COMPETE_END_TIME = #{competeEndTime,jdbcType=TIMESTAMP},
      COMPETE_PRICE = #{competePrice,jdbcType=NUMERIC},
      YOU_SHARE_MONEY_STATE = #{youShareMoneyState,jdbcType=TINYINT},
      SENDTO_WEIDIAN = #{sendtoWeidian,jdbcType=TINYINT},
      SENDTO_YOUYOU = #{sendtoYouyou,jdbcType=TINYINT},
      YOUYOU_DEAL = #{youyouDeal,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{scheduleEndTime,jdbcType=TIMESTAMP},
      PROXY_URL = #{proxyUrl,jdbcType=VARCHAR},
      UPLOAD_PROXY_USER = #{uploadProxyUser,jdbcType=VARCHAR},
      CITY_SHARE_FLAG = #{cityShareFlag,jdbcType=TINYINT},
      BRAND_COMP_ID = #{brandCompId,jdbcType=INTEGER},
      CHECK_CODE_FUN = #{checkCodeFun,jdbcType=VARCHAR},
      OWNERSHIP_TYPE = #{ownershipType,jdbcType=TINYINT},
      EFFECTIVE_DATE = #{effectiveDate,jdbcType=TIMESTAMP},
      QZ_CODE_FUN = #{qzCodeFun,jdbcType=VARCHAR},
      FUNMANAGER_SALESTATUS = #{funmanagerSalestatus,jdbcType=TINYINT},
      HAS_FUNKAN = #{hasFunkan,jdbcType=TINYINT},
      JOINT_CELL_PHONE = #{jointCellPhone,jdbcType=VARCHAR},
      JOINT_USER_NAME = #{jointUserName,jdbcType=VARCHAR},
      JOINT_USER_SEX = #{jointUserSex,jdbcType=TINYINT},
      JOINT_ID_CARD = #{jointIdCard,jdbcType=VARCHAR},
      RESPITE_END_TIME = #{respiteEndTime,jdbcType=TIMESTAMP},
      SALE_LEASE_ID = #{saleLeaseId,jdbcType=INTEGER},
      IS_SALE_LEASE = #{isSaleLease,jdbcType=TINYINT},
      ENTRUST_END_TIME = #{entrustEndTime,jdbcType=TIMESTAMP},
      ENTRUST_CREATE_USER = #{entrustCreateUser,jdbcType=INTEGER},
      AVAILABLE_TIME = #{availableTime,jdbcType=TIMESTAMP},
      MODIFY_PRICE_END = #{modifyPriceEnd,jdbcType=TIMESTAMP},
      MODIFY_PRICE_TREND = #{modifyPriceTrend,jdbcType=TINYINT},
      LAST_DKAN_TIME = #{lastDkanTime,jdbcType=TIMESTAMP},
      OLD_TRUE_FLAG = #{oldTrueFlag,jdbcType=TINYINT},
      INNER_NO = #{innerNo,jdbcType=INTEGER},
      JOINT_ID_CARD_TYPE = #{jointIdCardType,jdbcType=INTEGER},
      ID_CARD_TYPE = #{idCardType,jdbcType=INTEGER},
      OFFICE_CHARACTER = #{officeCharacter,jdbcType=TINYINT},
      OFFICE_TAX = #{officeTax,jdbcType=BIT},
      LEASE_BAY = #{leaseBay,jdbcType=NUMERIC},
      LEASE_DEPTH = #{leaseDepth,jdbcType=NUMERIC},
      LEASE_STOREY = #{leaseStorey,jdbcType=NUMERIC},
      CHECK_TIME = #{checkTime,jdbcType=VARCHAR},
      FOCUS_TIME = #{focusTime,jdbcType=TIMESTAMP},
      USER_LEVEL = #{userLevel,jdbcType=INTEGER},
      TISSUE_LINE = #{tissueLine,jdbcType=VARCHAR},
      PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      FUNKAN_USER_ID = #{funkanUserId,jdbcType=INTEGER},
      LEASE_KEY_USER_ID = #{leaseKeyUserId,jdbcType=INTEGER},
      FILE_CODING = #{fileCoding,jdbcType=VARCHAR},
      LESSOR = #{lessor,jdbcType=TINYINT},
      TRANSFER_FEE = #{transferFee,jdbcType=NUMERIC},
      RETURN_RATE = #{returnRate,jdbcType=NUMERIC},
      ML_RESERVED_COMP = #{mlReservedComp,jdbcType=VARCHAR},
      HOUSE_VERIFY = #{houseVerify,jdbcType=TINYINT},
      KITCHEN = #{kitchen,jdbcType=TINYINT},
      ML_WHOLE_LAYER = #{mlWholeLayer,jdbcType=TINYINT},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      LEASE_NATURE = #{leaseNature,jdbcType=TINYINT},
      LEASE_STRUCT = #{leaseStruct,jdbcType=TINYINT},
      LEASE_EXPIRATION_TIME = #{leaseExpirationTime,jdbcType=TIMESTAMP},
      HOUSE_SITUATION = #{houseSituation,jdbcType=TINYINT},
      CURRENT_RENT = #{currentRent,jdbcType=NUMERIC},
      TRANSACTION_STATUS = #{transactionStatus,jdbcType=TINYINT},
      LEASE_UNIT_PRICE = #{leaseUnitPrice,jdbcType=DECIMAL},
      HAS_RECORDED = #{hasRecorded,jdbcType=TINYINT},
      LEASE_ENTRUST_PRICE = #{leaseEntrustPrice,jdbcType=NUMERIC},
      HAS_ENTRUST = #{hasEntrust,jdbcType=TINYINT},
      FUZZY_SEARCH = #{fuzzySearch,jdbcType=CLOB}
    where LEASE_ID = #{leaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunLease">
    <!--@mbggenerated-->
    update FUN_LEASE
    set COMP_ID = #{compId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      CREATE_ARCHIVE_ID = #{createArchiveId,jdbcType=INTEGER},
      LEASE_NO = #{leaseNo,jdbcType=VARCHAR},
      LEASE_SUBJECT = #{leaseSubject,jdbcType=VARCHAR},
      LEASE_OWNER = #{leaseOwner,jdbcType=VARCHAR},
      CELL_PHONE = #{cellPhone,jdbcType=VARCHAR},
      ID_CARD = #{idCard,jdbcType=VARCHAR},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      BUILD_CODE = #{buildCode,jdbcType=VARCHAR},
      LEASE_REG = #{leaseReg,jdbcType=INTEGER},
      REGION_NAME = #{regionName,jdbcType=VARCHAR},
      SECTION_ID = #{sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{sectionName,jdbcType=VARCHAR},
      LEASE_ROUND = #{leaseRound,jdbcType=TINYINT},
      TRADE_ADDR = #{tradeAddr,jdbcType=VARCHAR},
      LEASE_ROOF = #{leaseRoof,jdbcType=VARCHAR},
      LEASE_UNIT = #{leaseUnit,jdbcType=VARCHAR},
      UNIT_FLOOR = #{unitFloor,jdbcType=VARCHAR},
      LEASE_NUM = #{leaseNum,jdbcType=VARCHAR},
      LEASE_ROOF_R = #{leaseRoofR,jdbcType=VARCHAR},
      LEASE_UNIT_R = #{leaseUnitR,jdbcType=VARCHAR},
      UNIT_FLOOR_R = #{unitFloorR,jdbcType=VARCHAR},
      LEASE_NUM_R = #{leaseNumR,jdbcType=VARCHAR},
      PLATE_TYPE = #{plateType,jdbcType=TINYINT},
      LEASE_ROOM = #{leaseRoom,jdbcType=TINYINT},
      LEASE_HALL = #{leaseHall,jdbcType=TINYINT},
      LEASE_WEI = #{leaseWei,jdbcType=TINYINT},
      LEASE_YANG = #{leaseYang,jdbcType=TINYINT},
      LEASE_LADDER = #{leaseLadder,jdbcType=TINYINT},
      LEASE_DOORS = #{leaseDoors,jdbcType=INTEGER},
      LEASE_TYPE = #{leaseType,jdbcType=TINYINT},
      LEASE_FLOOR = #{leaseFloor,jdbcType=SMALLINT},
      LEASE_FLOORS = #{leaseFloors,jdbcType=INTEGER},
      LEASE_FITMENT = #{leaseFitment,jdbcType=TINYINT},
      LEASE_DIRECT = #{leaseDirect,jdbcType=TINYINT},
      LEASE_YEAR = #{leaseYear,jdbcType=SMALLINT},
      LEASE_USEAGE = #{leaseUseage,jdbcType=TINYINT},
      LEASE_STREET = #{leaseStreet,jdbcType=BIT},
      LEASE_ACCOUNT = #{leaseAccount,jdbcType=INTEGER},
      LEASE_AREA = #{leaseArea,jdbcType=NUMERIC},
      LEASE_TOTAL_PRICE = #{leaseTotalPrice,jdbcType=NUMERIC},
      PRICE_UNIT = #{priceUnit,jdbcType=TINYINT},
      LEASE_LOWEST_PRICE = #{leaseLowestPrice,jdbcType=NUMERIC},
      LEASE_PROPERTY = #{leaseProperty,jdbcType=NUMERIC},
      IS_SEPERATOR = #{isSeperator,jdbcType=BIT},
      SHOP_USAGE = #{shopUsage,jdbcType=VARCHAR},
      OWNER_TYPE = #{ownerType,jdbcType=TINYINT},
      OFFICE_LEVEL = #{officeLevel,jdbcType=TINYINT},
      LEASE_DEPOSIT = #{leaseDeposit,jdbcType=INTEGER},
      LEASE_LEAVE_TIME = #{leaseLeaveTime,jdbcType=VARCHAR},
      LEASE_LIMITE = #{leaseLimite,jdbcType=INTEGER},
      HALL_STRUCTURE = #{hallStructure,jdbcType=TINYINT},
      UG_AREA = #{ugArea,jdbcType=NUMERIC},
      UG_TYPE = #{ugType,jdbcType=INTEGER},
      GARDEN_AREA = #{gardenArea,jdbcType=NUMERIC},
      GARAGE_AMOUNT = #{garageAmount,jdbcType=INTEGER},
      LEASE_SET = #{leaseSet,jdbcType=VARCHAR},
      LEASE_CHARACT = #{leaseCharact,jdbcType=VARCHAR},
      LEASE_MEMO = #{leaseMemo,jdbcType=VARCHAR},
      LEASE_SOURCE = #{leaseSource,jdbcType=TINYINT},
      LEASE_LEVEL = #{leaseLevel,jdbcType=TINYINT},
      LEASE_KEY = #{leaseKey,jdbcType=BIT},
      LEASE_KEY_NUM = #{leaseKeyNum,jdbcType=VARCHAR},
      KEY_TIME = #{keyTime,jdbcType=VARCHAR},
      LEASE_EXPLRTH = #{leaseExplrth,jdbcType=BIT},
      EXPLRTH_DATETIME = #{explrthDatetime,jdbcType=VARCHAR},
      LEASE_CONSIGN = #{leaseConsign,jdbcType=INTEGER},
      LEASE_CONSIGN_NO = #{leaseConsignNo,jdbcType=VARCHAR},
      WEITUO_TIME = #{weituoTime,jdbcType=VARCHAR},
      LEASE_COOPERATE = #{leaseCooperate,jdbcType=BIT},
      COOPERATE_TIME = #{cooperateTime,jdbcType=VARCHAR},
      COMPLAINT_FLAG = #{complaintFlag,jdbcType=BIT},
      LEASE_PUBLISH = #{leasePublish,jdbcType=BIT},
      PUBLISH_TIME = #{publishTime,jdbcType=VARCHAR},
      LEASE_MAP = #{leaseMap,jdbcType=INTEGER},
      PHOTO_TIME = #{photoTime,jdbcType=VARCHAR},
      LEASE_STATUS = #{leaseStatus,jdbcType=INTEGER},
      TRACK_TIME = #{trackTime,jdbcType=VARCHAR},
      TRACK_TIME2 = #{trackTime2,jdbcType=VARCHAR},
      ACTION_TIME = #{actionTime,jdbcType=VARCHAR},
      FROM_SOSO = #{fromSoso,jdbcType=BIT},
      REPEAT_FLAG = #{repeatFlag,jdbcType=INTEGER},
      INFO_TYPE = #{infoType,jdbcType=TINYINT},
      SHARE_FLAG = #{shareFlag,jdbcType=BIT},
      FRIEND_HOUSE = #{friendHouse,jdbcType=BIT},
      RED_FLAG = #{redFlag,jdbcType=BIT},
      ORANGE_FLAG = #{orangeFlag,jdbcType=BIT},
      PUBLIC_COUNT = #{publicCount,jdbcType=INTEGER},
      PUBLIC_TIME = #{publicTime,jdbcType=VARCHAR},
      DUE_TIME = #{dueTime,jdbcType=VARCHAR},
      SPECIAL_TIME = #{specialTime,jdbcType=VARCHAR},
      SCHEDULE_TIME = #{scheduleTime,jdbcType=VARCHAR},
      DEAL_TIME = #{dealTime,jdbcType=VARCHAR},
      WRITEOFF_TIME = #{writeoffTime,jdbcType=VARCHAR},
      SECRECY_TIME = #{secrecyTime,jdbcType=VARCHAR},
      COMMEND_TIME = #{commendTime,jdbcType=VARCHAR},
      PRIVATE_TIME = #{privateTime,jdbcType=VARCHAR},
      FROM_PUBLIC = #{fromPublic,jdbcType=BIT},
      THUMB_URL = #{thumbUrl,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      TAG_IDS = #{tagIds,jdbcType=VARCHAR},
      LEASE_CERT_TIME = #{leaseCertTime,jdbcType=VARCHAR},
      PUBLISH_SITES = #{publishSites,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      LEASE_ROOF_T = #{leaseRoofT,jdbcType=VARCHAR},
      LEASE_NUM_T = #{leaseNumT,jdbcType=VARCHAR},
      LEASE_UNIT_T = #{leaseUnitT,jdbcType=VARCHAR},
      LEASE_RIGHT = #{leaseRight,jdbcType=TINYINT},
      VIDEO_NUM = #{videoNum,jdbcType=INTEGER},
      CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      is_ignore = #{isIgnore,jdbcType=TINYINT},
      lease_id_old = #{leaseIdOld,jdbcType=INTEGER},
      LEASE_INNERAREA = #{leaseInnerarea,jdbcType=DECIMAL},
      HOUSE_BARGAIN = #{houseBargain,jdbcType=BIT},
      ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      [LOCK] = #{lock,jdbcType=TINYINT},
      TRUE_FLAG = #{trueFlag,jdbcType=TINYINT},
      SENDTOTENCENT = #{sendtotencent,jdbcType=TINYINT},
      HOUSE_SOURCE_WAY = #{houseSourceWay,jdbcType=TINYINT},
      YOU_SHARE_FLAG = #{youShareFlag,jdbcType=TINYINT},
      YOU_SHARE_TIME = #{youShareTime,jdbcType=TIMESTAMP},
      YOU_BUY_COUNT = #{youBuyCount,jdbcType=INTEGER},
      OWNER_SEX = #{ownerSex,jdbcType=TINYINT},
      YOU_SHARE_ID = #{youShareId,jdbcType=INTEGER},
      THUMBPIC_VER = #{thumbpicVer,jdbcType=VARCHAR},
      PRIVATE_USER_ID = #{privateUserId,jdbcType=INTEGER},
      LEASE_ROOM_TYPE = #{leaseRoomType,jdbcType=TINYINT},
      LEASE_ROOM_CLASSIC = #{leaseRoomClassic,jdbcType=TINYINT},
      FLAT_SHARE_SEX = #{flatShareSex,jdbcType=TINYINT},
      ADDR_MD5 = #{addrMd5,jdbcType=VARCHAR},
      PANORAMA_MAP = #{panoramaMap,jdbcType=INTEGER},
      YOUJIA_STATISTIC_FLAG = #{youjiaStatisticFlag,jdbcType=TINYINT},
      ADS_FLAG = #{adsFlag,jdbcType=TINYINT},
      SYNC_TIME = #{syncTime,jdbcType=TIMESTAMP},
      VIDEO_REVIEW_FLAG = #{videoReviewFlag,jdbcType=TINYINT},
      HAS_PANORAMA = #{hasPanorama,jdbcType=TINYINT},
      BIDDING_FLAG = #{biddingFlag,jdbcType=BIT},
      COMPETE_END_TIME = #{competeEndTime,jdbcType=TIMESTAMP},
      COMPETE_PRICE = #{competePrice,jdbcType=NUMERIC},
      YOU_SHARE_MONEY_STATE = #{youShareMoneyState,jdbcType=TINYINT},
      SENDTO_WEIDIAN = #{sendtoWeidian,jdbcType=TINYINT},
      SENDTO_YOUYOU = #{sendtoYouyou,jdbcType=TINYINT},
      YOUYOU_DEAL = #{youyouDeal,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{scheduleEndTime,jdbcType=TIMESTAMP},
      PROXY_URL = #{proxyUrl,jdbcType=VARCHAR},
      UPLOAD_PROXY_USER = #{uploadProxyUser,jdbcType=VARCHAR},
      CITY_SHARE_FLAG = #{cityShareFlag,jdbcType=TINYINT},
      BRAND_COMP_ID = #{brandCompId,jdbcType=INTEGER},
      CHECK_CODE_FUN = #{checkCodeFun,jdbcType=VARCHAR},
      OWNERSHIP_TYPE = #{ownershipType,jdbcType=TINYINT},
      EFFECTIVE_DATE = #{effectiveDate,jdbcType=TIMESTAMP},
      QZ_CODE_FUN = #{qzCodeFun,jdbcType=VARCHAR},
      FUNMANAGER_SALESTATUS = #{funmanagerSalestatus,jdbcType=TINYINT},
      HAS_FUNKAN = #{hasFunkan,jdbcType=TINYINT},
      JOINT_CELL_PHONE = #{jointCellPhone,jdbcType=VARCHAR},
      JOINT_USER_NAME = #{jointUserName,jdbcType=VARCHAR},
      JOINT_USER_SEX = #{jointUserSex,jdbcType=TINYINT},
      JOINT_ID_CARD = #{jointIdCard,jdbcType=VARCHAR},
      RESPITE_END_TIME = #{respiteEndTime,jdbcType=TIMESTAMP},
      SALE_LEASE_ID = #{saleLeaseId,jdbcType=INTEGER},
      IS_SALE_LEASE = #{isSaleLease,jdbcType=TINYINT},
      ENTRUST_END_TIME = #{entrustEndTime,jdbcType=TIMESTAMP},
      ENTRUST_CREATE_USER = #{entrustCreateUser,jdbcType=INTEGER},
      AVAILABLE_TIME = #{availableTime,jdbcType=TIMESTAMP},
      MODIFY_PRICE_END = #{modifyPriceEnd,jdbcType=TIMESTAMP},
      MODIFY_PRICE_TREND = #{modifyPriceTrend,jdbcType=TINYINT},
      LAST_DKAN_TIME = #{lastDkanTime,jdbcType=TIMESTAMP},
      OLD_TRUE_FLAG = #{oldTrueFlag,jdbcType=TINYINT},
      INNER_NO = #{innerNo,jdbcType=INTEGER},
      JOINT_ID_CARD_TYPE = #{jointIdCardType,jdbcType=INTEGER},
      ID_CARD_TYPE = #{idCardType,jdbcType=INTEGER},
      OFFICE_CHARACTER = #{officeCharacter,jdbcType=TINYINT},
      OFFICE_TAX = #{officeTax,jdbcType=BIT},
      LEASE_BAY = #{leaseBay,jdbcType=NUMERIC},
      LEASE_DEPTH = #{leaseDepth,jdbcType=NUMERIC},
      LEASE_STOREY = #{leaseStorey,jdbcType=NUMERIC},
      CHECK_TIME = #{checkTime,jdbcType=VARCHAR},
      FOCUS_TIME = #{focusTime,jdbcType=TIMESTAMP},
      USER_LEVEL = #{userLevel,jdbcType=INTEGER},
      TISSUE_LINE = #{tissueLine,jdbcType=VARCHAR},
      PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      FUNKAN_USER_ID = #{funkanUserId,jdbcType=INTEGER},
      LEASE_KEY_USER_ID = #{leaseKeyUserId,jdbcType=INTEGER},
      FILE_CODING = #{fileCoding,jdbcType=VARCHAR},
      LESSOR = #{lessor,jdbcType=TINYINT},
      TRANSFER_FEE = #{transferFee,jdbcType=NUMERIC},
      RETURN_RATE = #{returnRate,jdbcType=NUMERIC},
      ML_RESERVED_COMP = #{mlReservedComp,jdbcType=VARCHAR},
      HOUSE_VERIFY = #{houseVerify,jdbcType=TINYINT},
      KITCHEN = #{kitchen,jdbcType=TINYINT},
      ML_WHOLE_LAYER = #{mlWholeLayer,jdbcType=TINYINT},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      LEASE_NATURE = #{leaseNature,jdbcType=TINYINT},
      LEASE_STRUCT = #{leaseStruct,jdbcType=TINYINT},
      LEASE_EXPIRATION_TIME = #{leaseExpirationTime,jdbcType=TIMESTAMP},
      HOUSE_SITUATION = #{houseSituation,jdbcType=TINYINT},
      CURRENT_RENT = #{currentRent,jdbcType=NUMERIC},
      TRANSACTION_STATUS = #{transactionStatus,jdbcType=TINYINT},
      LEASE_UNIT_PRICE = #{leaseUnitPrice,jdbcType=DECIMAL},
      HAS_RECORDED = #{hasRecorded,jdbcType=TINYINT},
      LEASE_ENTRUST_PRICE = #{leaseEntrustPrice,jdbcType=NUMERIC},
      HAS_ENTRUST = #{hasEntrust,jdbcType=TINYINT}
    where LEASE_ID = #{leaseId,jdbcType=INTEGER}
  </update>
	<resultMap extends="BaseResultMap" id="ErpFunLeaseDto" type="com.myfun.repository.erpdb.dto.ErpFunLeaseDto" />
	<resultMap id="SosoViewDto" type="com.myfun.repository.searchdb.dto.SearchSosoViewDto">
		<result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
		<result column="LEASE_STATUS" jdbcType="TINYINT" property="leaseStatus" />
		<result column="LEASE_ROOM" jdbcType="TINYINT" property="leaseRoom" />
		<result column="LEASE_HALL" jdbcType="TINYINT" property="leaseHall" />
		<result column="LEASE_WEI" jdbcType="TINYINT" property="leaseWei" />
		<result column="LEASE_YANG" jdbcType="TINYINT" property="leaseYang" />
		<result column="CASE_TYPE" jdbcType="INTEGER" property="caseType" />
		<result column="USER_ID" jdbcType="INTEGER" property="userId" />
		<result column="LEASE_ID" jdbcType="INTEGER" property="leaseId" />
		<result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
		<result column="LEASE_FLOOR" jdbcType="INTEGER" property="leaseFloor" />
		<result column="LEASE_FLOORS" jdbcType="INTEGER" property="leaseFloors" />
		<result column="LEASE_DOORS" jdbcType="INTEGER" property="leaseDoors" />
		<result column="LEASE_TOTAL_PRICE" jdbcType="NUMERIC" property="leaseTotalPrice" />
		<result column="LEASE_AREA" jdbcType="NUMERIC" property="leaseArea" />
		<result column="PRICE_UNIT" jdbcType="TINYINT" property="priceUnit" />
	</resultMap>


  <resultMap id="ErpBulletHouseDto" type="com.myfun.repository.erpdb.dto.ErpBulletHouseDto">
    <id column="LEASE_ID" property="id" />
    <result column="REGION_NAME" property="regionName" />
    <result column="BUILD_NAME" property="buildName" />
    <result column="LEASE_FLOOR" property="caseFloor" />
    <result column="LEASE_FLOORS" property="caseFloors" />
    <result column="LEASE_ROOM" property="caseRoom" />
    <result column="LEASE_HALL" property="caseHall" />
    <result column="LEASE_WEI" property="caseWei" />
    <result column="LEASE_TOTAL_PRICE" property="caseTotalPrice" />
    <result column="LEASE_AREA" property="caseArea" />
    <result column="LEASE_CHARACT" property="charact" />
    <result column="LEASE_FITMENT" property="caseFitment" />
    <result column="LEASE_STREET" property="caseStreet" />
    <result column="LEASE_MAP" property="map" />
    <result column="USER_ID" property="userId" />
    <result column="COMP_ID" property="compId" />
    <result column="DEPT_ID" property="deptId" />
    <result column="LEASE_USEAGE" property="useage" />
    <result column="PRICE_UNIT" property="priceUnit" />
    </resultMap>
  
  <sql id="Query_Column_List">
    <!--chenwenchao-->
    LEASE_ID, COMP_ID, CITY_ID, REG_ID, DEPT_ID, GR_ID, USER_ID, ARCHIVE_ID, CREATION_TIME, 
    CREATE_ARCHIVE_ID, LEASE_NO, LEASE_SUBJECT, LEASE_OWNER, CELL_PHONE, ID_CARD, BUILD_ID, 
    BUILD_NAME, BUILD_CODE, LEASE_REG, REGION_NAME, SECTION_ID, SECTION_NAME, LEASE_ROUND, 
 	LEASE_ROOM, LEASE_HALL, LEASE_WEI, LEASE_YANG, LEASE_LADDER, LEASE_DOORS, LEASE_TYPE, 
 	LEASE_FLOOR, LEASE_FLOORS, LEASE_FITMENT, LEASE_DIRECT, LEASE_YEAR, LEASE_USEAGE, 
 	LEASE_STREET, LEASE_ACCOUNT, LEASE_AREA, LEASE_TOTAL_PRICE, PRICE_UNIT, LEASE_PROPERTY, 
 	IS_SEPERATOR, SHOP_USAGE, OWNER_TYPE, OFFICE_LEVEL, LEASE_DEPOSIT, LEASE_LEAVE_TIME, 
 	LEASE_LIMITE, HALL_STRUCTURE, UG_AREA, UG_TYPE, GARDEN_AREA, GARAGE_AMOUNT, LEASE_SET, 
 	LEASE_CHARACT, LEASE_COOPERATE, COMPLAINT_FLAG, LEASE_PUBLISH, LEASE_MAP,
    LEASE_STATUS, SHARE_FLAG, FRIEND_HOUSE, RED_FLAG, ORANGE_FLAG, PUBLIC_COUNT,
    FROM_PUBLIC, THUMB_URL, TAG_IDS, LEASE_CERT_TIME, AREA_ID, LEASE_RIGHT,VIDEO_NUM, 
    CREATOR_UID, LEASE_INNERAREA, HOUSE_BARGAIN, TRUE_FLAG, SENDTOTENCENT, HOUSE_SOURCE_WAY, 
    YOU_SHARE_FLAG, YOU_SHARE_ID, THUMBPIC_VER, PRIVATE_USER_ID, LEASE_ROOM_TYPE, LEASE_ROOM_CLASSIC,
    PANORAMA_MAP
  </sql>
  <select id="countShareHouse" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
    count(1) as attr
    from FUN_LEASE
    where COMP_ID = #{compId,jdbcType=INTEGER}
    AND (PLATE_TYPE='3' OR PLATE_TYPE='1')
  </select>

  <select id="countShareHouseByPartner" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1) as attr
    from FUN_LEASE
    where COMP_ID = #{compId,jdbcType=INTEGER}
      AND PARTNER_ID = #{partnerId}
      AND (PLATE_TYPE = '3' OR PLATE_TYPE = '1')
  </select>

  <update id="updateFunLeaseKeyNumById" parameterType="com.myfun.repository.erpdb.po.ErpFunLease">
    update FUN_LEASE
    set  LEASE_KEY = #{updateModel.leaseKey,jdbcType=BIT},
      LEASE_KEY_NUM = #{updateModel.leaseKeyNum,jdbcType=VARCHAR},
       KEY_TIME = #{updateModel.keyTime,jdbcType=VARCHAR}
    where LEASE_ID = #{updateModel.leaseId,jdbcType=INTEGER}
  </update>
  
   <resultMap id="BaseResultMapDto" type="com.myfun.repository.erpdb.dto.houseAuditDto">
  	   <result column="HOUSE_ID" jdbcType="VARCHAR" property="houseId" />
  	   <result column="HOUSE_NO" jdbcType="VARCHAR" property="houseNO" />
  	   <result column="HOUSE_NAME" jdbcType="VARCHAR" property="houseName" />
  	   <result column="HOUSE_DIRECT" jdbcType="VARCHAR" property="houseDirect" />
  	   <result column="HOUSE_YEAR" jdbcType="VARCHAR" property="houseYear" />
  	   <result column="HOUSE_FLOOR" jdbcType="VARCHAR" property="houseFloor" />
  	   <result column="HOUSE_FLOORS" jdbcType="VARCHAR" property="houseFloors" />
  	   <result column="HOUSE_ROOM" jdbcType="VARCHAR" property="houseRoom" />
  	   <result column="HOUSE_HALL" jdbcType="VARCHAR" property="houseHall" />
  	   <result column="HOUSE_WEI" jdbcType="VARCHAR" property="houseWei" />
  	   <result column="HOUSE_AREA" jdbcType="VARCHAR" property="houseArea" />
  	   <result column="HOUSE_USEAGE" jdbcType="VARCHAR" property="houseUseage" />
  	   <result column="HOUSE_TOTAL_PRICE" jdbcType="VARCHAR" property="houseTotalPrice" />
  	   <result column="HOUSE_UNIT_PRICE" jdbcType="VARCHAR" property="houseUnitPrice" />
  	   <result column="PRICE_UNIT" jdbcType="VARCHAR" property="priceUnit" />
  	   <result column="HOUSE_FITMENT" jdbcType="VARCHAR" property="houseFitment" />
  	   <result column="HOUSE_SUBJECT" jdbcType="VARCHAR" property="houseSubject" />
  	   <result column="CHECK_STATUS" jdbcType="VARCHAR" property="checkStatus" />
  	   <result column="PUBLISH_SITE" jdbcType="VARCHAR" property="publishSite" />
  	   <result column="CREATION_TIME" jdbcType="VARCHAR" property="creationTime" />
  	   <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
  	   <result column="CHECK_USER" jdbcType="VARCHAR" property="checkUser" />
  	   <result column="PUB_ID" jdbcType="VARCHAR" property="pubId" />
  	   <result column="CITY_ID" jdbcType="VARCHAR" property="cityId" />
  </resultMap>
  <!-- business -->
  <select id="getFunLeaseListForPage" parameterType="com.myfun.repository.support.param.DaoBaseParam" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from FUN_LEASE
    <where>
      <if test="preSyncTime != null">
        and UPDATE_TIME &gt;= #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="serverTime != null">
        and UPDATE_TIME &lt;= #{endTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    order by UPDATE_TIME desc
  </select>
  <select id="getFunLeaseListBySolrForPage" parameterType="com.myfun.repository.support.param.DaoBaseParam" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from FUN_LEASE
    <where>
      <if test="preSyncTime != null">
        and UPDATE_TIME &gt;= #{preSyncTime,jdbcType=TIMESTAMP}
      </if>
      <if test="serverTime != null">
        and UPDATE_TIME &lt;= #{serverTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    order by UPDATE_TIME desc
  </select>
  <select id="getHouseLease" parameterType="com.myfun.repository.erpdb.param.houseAuditParam" resultMap="BaseResultMapDto">
  	SELECT 
  		A.CITY_ID,
		A.LEASE_ID AS HOUSE_ID,
		A.LEASE_NO AS HOUSE_NO,
		A.BUILD_NAME AS HOUSE_NAME,
		A.LEASE_DIRECT AS HOUSE_DIRECT,
		A.LEASE_YEAR AS HOUSE_YEAR,
		A.LEASE_FLOOR AS HOUSE_FLOOR,
		A.LEASE_FLOORS AS HOUSE_FLOORS,
		A.LEASE_ROOM AS HOUSE_ROOM,
		A.LEASE_HALL AS HOUSE_HALL,
		A.LEASE_WEI AS HOUSE_WEI,
		A.LEASE_AREA AS HOUSE_AREA,
		LEASE_USEAGE AS HOUSE_USEAGE,
		A.LEASE_TOTAL_PRICE AS HOUSE_TOTAL_PRICE,
		A.LEASE_FITMENT AS HOUSE_FITMENT,
		A.LEASE_SUBJECT AS HOUSE_SUBJECT,
		A.PRICE_UNIT AS PRICE_UNIT,
		B.CHECK_STATUS AS CHECK_STATUS,
		B.PUBLISH_SITE AS PUBLISH_SITE,
		A.CREATION_TIME AS CREATION_TIME,
		B.UPDATE_TIME AS UPDATE_TIME,
		B.CHECK_USER AS CHECK_USER,
		B.PUB_ID AS PUB_ID
	FROM
		FUN_LEASE A
	RIGHT JOIN FUN_HOUSE_PUBLISH_STATUS B ON A.LEASE_ID = B.HOUSE_ID
	AND B.SALE_LEASE = 2
	AND A.LEASE_USEAGE = B.HOUSE_USEAGE
	WHERE
		1 = 1
	AND USER_ID IS NOT NULL
	AND LEASE_STATUS = 1
	<if test="house.buildText != null and house.buildText != ''">
		and (A.BUILD_NAME like '%${house.buildText}%' or A.BUILD_CODE like '%${house.buildText}%')
	</if>
	<if test="house.crmUser != null and house.crmUser != ''">
		 and B.CHECK_USER = #{house.crmUser}
	</if>
	<if test="house.publishId != null and house.publishId != '' and house.publishId == '-1'">
		and B.PUBLISH_SITE IN (-1,4,5)
	</if>
	<if test="house.publishId != null and house.publishId != '' and house.publishId != '-1'">
		and B.PUBLISH_SITE = #{house.publishId}
	</if>
	<if test="house.houseNo != null and house.houseNo != ''">
		and A.SALE_NO = #{house.houseNo}
	</if>
	<if test="house.userid != null and house.userid != ''">
		and A.USER_ID = #{house.userid}
	</if>
	order by A.CREATION_TIME DESC
  </select>
  <select id="getFunLeaseByCondition" parameterType="com.myfun.repository.erpdb.po.ErpFunLease" resultMap="BaseResultMap">
  		select <include refid="Base_Column_List" /> from FUN_LEASE
  		<where>
  			<if test="null != leaseId">
  				and LEASE_ID=#{leaseId}
  			</if>
  			<if test="null != cityId">
  				and CITY_ID=#{cityId}
  			</if>
  			<if test="null != leaseStatus">
  				and LEASE_STATUS = #{leaseStatus,jdbcType=TINYINT}
  			</if>
  			<if test="null != leasePublish">
  				and LEASE_PUBLISH = #{leasePublish,jdbcType=BIT}
  			</if>
  		</where>
  </select>
  <select id="getFunLeaseByLeaseId" resultMap="BaseResultMap">
  		select <include refid="Base_Column_List" /> from FUN_LEASE WHERE LEASE_ID = #{leaseId,jdbcType=INTEGER}
  </select>
  <update id="updateByUserId" parameterType="com.myfun.repository.erpdb.param.ErpFunLeaseParam">
  	update FUN_LEASE
    <set>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="manageUserId != null">
        USER_ID = #{manageUserId,jdbcType=INTEGER}
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByArchiveIdAndUserId" parameterType="com.myfun.repository.erpdb.param.ErpFunLeaseParam">
  	update FUN_LEASE
    <set>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER}
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER}
    	AND ARCHIVE_ID = #{archiveId,jdbcType=INTEGER}
  </update>
  
  
  <update id="updateCellPhoneByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunSale">
    update FUN_LEASE
    <set>
      <if test="cellPhone != null">
        CELL_PHONE = #{cellPhone,jdbcType=VARCHAR},
      </if>
    </set>
    where LEASE_ID = #{leaseId,jdbcType=INTEGER}
  </update>
  
  <!-- 用于优优数据的查询	陈文超定-其他的产品使用需谨慎 	开始 -->
  <!-- 过期房源时查询出两条信息 -->
  <select id="getFunLeaseList4YouYou" resultMap="BaseResultMap">
    select <include refid="Query_Column_List" />
    from FUN_LEASE where LEASE_PUBLISH = 1 and LEASE_STATUS = 1 order by TRACK_TIME desc
  </select>
  <select id="getFunLeaseByCondition4YouYou" parameterType="com.myfun.repository.erpdb.po.ErpFunLease" resultMap="BaseResultMap" useCache="true">
  		select <include refid="Query_Column_List" /> from FUN_LEASE
  		<where>
  			<if test="null != leaseId">
  				and LEASE_ID=#{leaseId}
  			</if>
  			<if test="null != cityId">
  				and CITY_ID=#{cityId}
  			</if>
  			<if test="null != leaseStatus">
  				and LEASE_STATUS = #{leaseStatus,jdbcType=TINYINT}
  			</if>
  			<if test="null != leasePublish">
  				and LEASE_PUBLISH = #{leasePublish,jdbcType=BIT}
  			</if>
  		</where>
  </select>
  <!-- 用于优优数据的查询			结束 -->
	<update id="updateTrueFlag">
		update FUN_LEASE set TRUE_FLAG = #{trueFlag}
		where LEASE_ID in 
		<foreach close=")" collection="leaseIds" item="val" open="(" separator=",">#{val}</foreach>
	</update>
	<update id="updateByUserDefineSql">
		#{sql}
	</update>
  <select id="getLeaseList" resultMap="BaseResultMap">
  	SELECT LEASE_ID,COMP_ID,DEPT_ID,LEASE_NO,LEASE_TYPE
  	from FUN_LEASE 
  	WHERE LEASE_ID in (${leaseIds})
  </select>
  <update id="updateCancleTrueHouse">
  		update a SET TRUE_FLAG = 2  from FUN_LEASE a
		LEFT JOIN FUN_TRUEHOUSE_RECORD b ON a.SALE_ID = b.CASE_ID and b.CASE_TYPE = 2
		WHERE b.LIGHT_TYPE = 2 and a.SALE_ID = #{leaseId}
  </update>
  
  
  <select id="getLeaseListForCreateBullet" resultMap="ErpBulletHouseDto">
  	SELECT REGION_NAME,BUILD_NAME,LEASE_FLOOR,LEASE_FLOORS,LEASE_ROOM,LEASE_HALL,LEASE_WEI,LEASE_TOTAL_PRICE,LEASE_AREA,LEASE_CHARACT,LEASE_FITMENT,LEASE_STREET,LEASE_MAP,USER_ID,COMP_ID,DEPT_ID,LEASE_USEAGE
  	FROM FUN_LEASE
  	WHERE LEASE_ID in 
  	<foreach close=")" collection="leaseIds" item="val" open="(" separator=",">#{val}</foreach>
	<if test="null != compId">
		and COMP_ID=#{compId}
	</if>
  </select>
	
	<select id="getBulletinHouseList" parameterType="com.myfun.repository.erpdb.param.ReqBulletinHouseListParam" resultMap="BaseResultMap">
		SELECT <include refid="Query_Column_List" />
		FROM FUN_LEASE
		<where>
			<if test="null != regionNames">
				REGION_NAME IN
				<foreach close=")" collection="regionNames" item="val" open="(" separator=",">#{val}</foreach>
			</if>
			<if test="null != buildNames">
				BUILD_NAME IN
				<foreach close=")" collection="buildNames" item="val" open="(" separator=",">#{val}</foreach>
			</if>
			<if test="null != caseAreas1">and LEASE_AREA &gt;= #{caseAreas1}</if>
			<if test="null != caseAreas2">and LEASE_AREA &lt;= #{caseAreas2}</if>
			<if test="null != caseRooms1">and LEASE_ROOM &gt;= #{caseRooms1}</if>
			<if test="null != caseRooms2">and LEASE_ROOM &lt;= #{caseRooms2}</if>
			<if test="null != compId">and COMP_ID = #{compId}</if>
			<if test="null != deptId">and DEPT_ID = #{deptId}</if>
			<if test="null != userId">and USER_ID = #{userId}</if>
			and LEASE_STATUS &lt;= 4
		</where>
		ORDER BY LEASE_ID DESC
	</select>

  <update id="updateOthersbyUserPauseToNormal">
    update FUN_LEASE  set TRACK_TIME = CASE WHEN DATEADD(DD, #{pMap.timeZone}, TRACK_TIME)    &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD, #{pMap.timeZone} , TRACK_TIME) END,
    SPECIAL_TIME  = CASE WHEN DATEADD(DD, #{pMap.timeZone} , SPECIAL_TIME)  &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , SPECIAL_TIME) END,
    SCHEDULE_TIME = CASE WHEN DATEADD(DD, #{pMap.timeZone} , SCHEDULE_TIME) &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , SCHEDULE_TIME) END,
    SECRECY_TIME  = CASE WHEN DATEADD(DD, #{pMap.timeZone} , SECRECY_TIME)  &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , SECRECY_TIME) END,
    COMMEND_TIME  = CASE WHEN DATEADD(DD, #{pMap.timeZone} , COMMEND_TIME)  &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , COMMEND_TIME) END,
    ACTION_TIME   = CASE WHEN DATEADD(DD, #{pMap.timeZone} , ACTION_TIME)   &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , ACTION_TIME) END,
    PRIVATE_TIME  = CASE WHEN DATEADD(DD, #{pMap.timeZone} , PRIVATE_TIME)  &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , PRIVATE_TIME) END
    where USER_ID = #{pMap.userId} and DEPT_ID = #{pMap.deptId} and COMP_ID = #{pMap.compId}

  </update>
  <update id="updateHouseForReg">
    update FUN_LEASE set AREA_ID = #{pMap.areaId}, REG_ID = #{pMap.regId}  where COMP_ID = #{pMap.compId} and DEPT_ID= #{pMap.deptId}
  </update>
  
  <update id="updateHouseOffCompId">
    update FUN_LEASE
    <set>
      <if test="updateModel.compId != null">
        COMP_ID = #{updateModel.compId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.cityId != null">
        CITY_ID = #{updateModel.cityId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.regId != null">
        REG_ID = #{updateModel.regId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.deptId != null">
        DEPT_ID = #{updateModel.deptId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.grId != null">
        GR_ID = #{updateModel.grId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.userId != null">
        USER_ID = #{updateModel.userId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.archiveId != null">
        ARCHIVE_ID = #{updateModel.archiveId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.creationTime != null">
        CREATION_TIME = #{updateModel.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.createArchiveId != null">
        CREATE_ARCHIVE_ID = #{updateModel.createArchiveId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseNo != null">
        LEASE_NO = #{updateModel.leaseNo,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseSubject != null">
        LEASE_SUBJECT = #{updateModel.leaseSubject,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseOwner != null">
        LEASE_OWNER = #{updateModel.leaseOwner,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.cellPhone != null">
        CELL_PHONE = #{updateModel.cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.idCard != null">
        ID_CARD = #{updateModel.idCard,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.buildId != null">
        BUILD_ID = #{updateModel.buildId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.buildName != null">
        BUILD_NAME = #{updateModel.buildName,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.buildCode != null">
        BUILD_CODE = #{updateModel.buildCode,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseReg != null">
        LEASE_REG = #{updateModel.leaseReg,jdbcType=INTEGER},
      </if>
      <if test="updateModel.regionName != null">
        REGION_NAME = #{updateModel.regionName,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.sectionId != null">
        SECTION_ID = #{updateModel.sectionId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.sectionName != null">
        SECTION_NAME = #{updateModel.sectionName,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseRound != null">
        LEASE_ROUND = #{updateModel.leaseRound,jdbcType=TINYINT},
      </if>
      <if test="updateModel.tradeAddr != null">
        TRADE_ADDR = #{updateModel.tradeAddr,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseRoof != null">
        LEASE_ROOF = #{updateModel.leaseRoof,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseUnit != null">
        LEASE_UNIT = #{updateModel.leaseUnit,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.unitFloor != null">
        UNIT_FLOOR = #{updateModel.unitFloor,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseNum != null">
        LEASE_NUM = #{updateModel.leaseNum,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseRoofR != null">
        LEASE_ROOF_R = #{updateModel.leaseRoofR,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseUnitR != null">
        LEASE_UNIT_R = #{updateModel.leaseUnitR,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.unitFloorR != null">
        UNIT_FLOOR_R = #{updateModel.unitFloorR,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseNumR != null">
        LEASE_NUM_R = #{updateModel.leaseNumR,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.plateType != null">
        PLATE_TYPE = #{updateModel.plateType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseRoom != null">
        LEASE_ROOM = #{updateModel.leaseRoom,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseHall != null">
        LEASE_HALL = #{updateModel.leaseHall,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseWei != null">
        LEASE_WEI = #{updateModel.leaseWei,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseYang != null">
        LEASE_YANG = #{updateModel.leaseYang,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseLadder != null">
        LEASE_LADDER = #{updateModel.leaseLadder,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseDoors != null">
        LEASE_DOORS = #{updateModel.leaseDoors,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseType != null">
        LEASE_TYPE = #{updateModel.leaseType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseFloor != null">
        LEASE_FLOOR = #{updateModel.leaseFloor,jdbcType=SMALLINT},
      </if>
      <if test="updateModel.leaseFloors != null">
        LEASE_FLOORS = #{updateModel.leaseFloors,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseFitment != null">
        LEASE_FITMENT = #{updateModel.leaseFitment,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseDirect != null">
        LEASE_DIRECT = #{updateModel.leaseDirect,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseYear != null">
        LEASE_YEAR = #{updateModel.leaseYear,jdbcType=SMALLINT},
      </if>
      <if test="updateModel.leaseUseage != null">
        LEASE_USEAGE = #{updateModel.leaseUseage,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseStreet != null">
        LEASE_STREET = #{updateModel.leaseStreet,jdbcType=BIT},
      </if>
      <if test="updateModel.leaseAccount != null">
        LEASE_ACCOUNT = #{updateModel.leaseAccount,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseArea != null">
        LEASE_AREA = #{updateModel.leaseArea,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.leaseTotalPrice != null">
        LEASE_TOTAL_PRICE = #{updateModel.leaseTotalPrice,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.priceUnit != null">
        PRICE_UNIT = #{updateModel.priceUnit,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseLowestPrice != null">
        LEASE_LOWEST_PRICE = #{updateModel.leaseLowestPrice,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.leaseProperty != null">
        LEASE_PROPERTY = #{updateModel.leaseProperty,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.isSeperator != null">
        IS_SEPERATOR = #{updateModel.isSeperator,jdbcType=BIT},
      </if>
      <if test="updateModel.shopUsage != null">
        SHOP_USAGE = #{updateModel.shopUsage,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.ownerType != null">
        OWNER_TYPE = #{updateModel.ownerType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.officeLevel != null">
        OFFICE_LEVEL = #{updateModel.officeLevel,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseDeposit != null">
        LEASE_DEPOSIT = #{updateModel.leaseDeposit,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseLeaveTime != null">
        LEASE_LEAVE_TIME = #{updateModel.leaseLeaveTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseLimite != null">
        LEASE_LIMITE = #{updateModel.leaseLimite,jdbcType=INTEGER},
      </if>
      <if test="updateModel.hallStructure != null">
        HALL_STRUCTURE = #{updateModel.hallStructure,jdbcType=TINYINT},
      </if>
      <if test="updateModel.ugArea != null">
        UG_AREA = #{updateModel.ugArea,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.ugType != null">
        UG_TYPE = #{updateModel.ugType,jdbcType=INTEGER},
      </if>
      <if test="updateModel.gardenArea != null">
        GARDEN_AREA = #{updateModel.gardenArea,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.garageAmount != null">
        GARAGE_AMOUNT = #{updateModel.garageAmount,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseSet != null">
        LEASE_SET = #{updateModel.leaseSet,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseCharact != null">
        LEASE_CHARACT = #{updateModel.leaseCharact,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseMemo != null">
        LEASE_MEMO = #{updateModel.leaseMemo,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseSource != null">
        LEASE_SOURCE = #{updateModel.leaseSource,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseLevel != null">
        LEASE_LEVEL = #{updateModel.leaseLevel,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseKey != null">
        LEASE_KEY = #{updateModel.leaseKey,jdbcType=BIT},
      </if>
      <if test="updateModel.leaseKeyNum != null">
        LEASE_KEY_NUM = #{updateModel.leaseKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.keyTime != null">
        KEY_TIME = #{updateModel.keyTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseExplrth != null">
        LEASE_EXPLRTH = #{updateModel.leaseExplrth,jdbcType=BIT},
      </if>
      <if test="updateModel.explrthDatetime != null">
        EXPLRTH_DATETIME = #{updateModel.explrthDatetime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseConsign != null">
        LEASE_CONSIGN = #{updateModel.leaseConsign,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseConsignNo != null">
        LEASE_CONSIGN_NO = #{updateModel.leaseConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.weituoTime != null">
        WEITUO_TIME = #{updateModel.weituoTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseCooperate != null">
        LEASE_COOPERATE = #{updateModel.leaseCooperate,jdbcType=BIT},
      </if>
      <if test="updateModel.cooperateTime != null">
        COOPERATE_TIME = #{updateModel.cooperateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.complaintFlag != null">
        COMPLAINT_FLAG = #{updateModel.complaintFlag,jdbcType=BIT},
      </if>
      <if test="updateModel.leasePublish != null">
        LEASE_PUBLISH = #{updateModel.leasePublish,jdbcType=BIT},
      </if>
      <if test="updateModel.publishTime != null">
        PUBLISH_TIME = #{updateModel.publishTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseMap != null">
        LEASE_MAP = #{updateModel.leaseMap,jdbcType=INTEGER},
      </if>
      <if test="updateModel.photoTime != null">
        PHOTO_TIME = #{updateModel.photoTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseStatus != null">
        LEASE_STATUS = #{updateModel.leaseStatus,jdbcType=INTEGER},
      </if>
      TRACK_TIME = #{updateModel.trackTime},
      <if test="updateModel.trackTime2 != null">
        TRACK_TIME2 = #{updateModel.trackTime2,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.actionTime != null">
        ACTION_TIME = #{updateModel.actionTime},
      </if>
      <if test="updateModel.fromSoso != null">
        FROM_SOSO = #{updateModel.fromSoso,jdbcType=BIT},
      </if>
      <if test="updateModel.repeatFlag != null">
        REPEAT_FLAG = #{updateModel.repeatFlag,jdbcType=INTEGER},
      </if>
      <if test="updateModel.infoType != null">
        INFO_TYPE = #{updateModel.infoType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.shareFlag != null">
        SHARE_FLAG = #{updateModel.shareFlag,jdbcType=BIT},
      </if>
      <if test="updateModel.friendHouse != null">
        FRIEND_HOUSE = #{updateModel.friendHouse,jdbcType=BIT},
      </if>
      <if test="updateModel.redFlag != null">
        RED_FLAG = #{updateModel.redFlag,jdbcType=BIT},
      </if>
      <if test="updateModel.orangeFlag != null">
        ORANGE_FLAG = #{updateModel.orangeFlag,jdbcType=BIT},
      </if>
      <if test="updateModel.publicCount != null">
        PUBLIC_COUNT = #{updateModel.publicCount,jdbcType=TINYINT},
      </if>
      <if test="updateModel.publicTime != null">
        PUBLIC_TIME = #{updateModel.publicTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.dueTime != null">
        DUE_TIME = #{updateModel.dueTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.specialTime != null">
        SPECIAL_TIME = #{updateModel.specialTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.scheduleTime != null">
        SCHEDULE_TIME = #{updateModel.scheduleTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.dealTime != null">
        DEAL_TIME = #{updateModel.dealTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.writeoffTime != null">
        WRITEOFF_TIME = #{updateModel.writeoffTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.secrecyTime != null">
        SECRECY_TIME = #{updateModel.secrecyTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.commendTime != null">
        COMMEND_TIME = #{updateModel.commendTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.privateTime != null">
        PRIVATE_TIME = #{updateModel.privateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.fromPublic != null">
        FROM_PUBLIC = #{updateModel.fromPublic,jdbcType=BIT},
      </if>
      <if test="updateModel.thumbUrl != null">
        THUMB_URL = #{updateModel.thumbUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.updateTime != null">
        UPDATE_TIME = #{updateModel.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.tagIds != null">
        TAG_IDS = #{updateModel.tagIds,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseCertTime != null">
        LEASE_CERT_TIME = #{updateModel.leaseCertTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.publishSites != null">
        PUBLISH_SITES = #{updateModel.publishSites,jdbcType=INTEGER},
      </if>
      <if test="updateModel.areaId != null">
        AREA_ID = #{updateModel.areaId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseRoofT != null">
        LEASE_ROOF_T = #{updateModel.leaseRoofT,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseNumT != null">
        LEASE_NUM_T = #{updateModel.leaseNumT,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseUnitT != null">
        LEASE_UNIT_T = #{updateModel.leaseUnitT,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.leaseRight != null">
        LEASE_RIGHT = #{updateModel.leaseRight,jdbcType=TINYINT},
      </if>
      <if test="updateModel.videoNum != null">
        VIDEO_NUM = #{updateModel.videoNum,jdbcType=INTEGER},
      </if>
      <if test="updateModel.creatorUid != null">
        CREATOR_UID = #{updateModel.creatorUid,jdbcType=INTEGER},
      </if>
      <if test="updateModel.isIgnore != null">
        is_ignore = #{updateModel.isIgnore,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseIdOld != null">
        lease_id_old = #{updateModel.leaseIdOld,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseInnerarea != null">
        LEASE_INNERAREA = #{updateModel.leaseInnerarea,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.houseBargain != null">
        HOUSE_BARGAIN = #{updateModel.houseBargain,jdbcType=BIT},
      </if>
      <if test="updateModel.encodeFlag != null">
        ENCODE_FLAG = #{updateModel.encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="updateModel.lock != null">
        LOCK = #{updateModel.lock,jdbcType=TINYINT},
      </if>
      <if test="updateModel.trueFlag != null">
        TRUE_FLAG = #{updateModel.trueFlag,jdbcType=TINYINT},
      </if>
      <if test="updateModel.sendtotencent != null">
        SENDTOTENCENT = #{updateModel.sendtotencent,jdbcType=TINYINT},
      </if>
      <if test="updateModel.houseSourceWay != null">
        HOUSE_SOURCE_WAY = #{updateModel.houseSourceWay,jdbcType=TINYINT},
      </if>
      <if test="updateModel.youShareFlag != null">
        YOU_SHARE_FLAG = #{updateModel.youShareFlag,jdbcType=TINYINT},
      </if>
      <if test="updateModel.youShareTime != null">
        YOU_SHARE_TIME = #{updateModel.youShareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.youBuyCount != null">
        YOU_BUY_COUNT = #{updateModel.youBuyCount,jdbcType=INTEGER},
      </if>
      <if test="updateModel.ownerSex != null">
        OWNER_SEX = #{updateModel.ownerSex,jdbcType=TINYINT},
      </if>
      <if test="updateModel.youShareId != null">
        YOU_SHARE_ID = #{updateModel.youShareId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.thumbpicVer != null">
        THUMBPIC_VER = #{updateModel.thumbpicVer,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.privateUserId != null">
        PRIVATE_USER_ID = #{updateModel.privateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.leaseRoomType != null">
        LEASE_ROOM_TYPE = #{updateModel.leaseRoomType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.leaseRoomClassic != null">
        LEASE_ROOM_CLASSIC = #{updateModel.leaseRoomClassic,jdbcType=TINYINT},
      </if>
      <if test="updateModel.flatShareSex != null">
        FLAT_SHARE_SEX = #{updateModel.flatShareSex,jdbcType=TINYINT},
      </if>
      <if test="updateModel.addrMd5 != null">
        ADDR_MD5 = #{updateModel.addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.panoramaMap != null">
        PANORAMA_MAP = #{updateModel.panoramaMap,jdbcType=INTEGER},
      </if>
      <if test="updateModel.youjiaStatisticFlag != null">
        YOUJIA_STATISTIC_FLAG = #{updateModel.youjiaStatisticFlag,jdbcType=TINYINT},
      </if>
    </set>
    where COMP_ID = #{conditionModel.compId,jdbcType=INTEGER}
      <if test="null != orgIds and orgIds.size &gt; 0">
        AND ORGANIZATION_ID IN
        <foreach close=")" collection="orgIds" item="orgId" open="(" separator=",">
          #{orgId}
        </foreach>
      </if>
      <if test="conditionModel.cityId != null">
      and  CITY_ID = #{conditionModel.cityId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.regId != null">
      and  REG_ID = #{conditionModel.regId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.deptId != null">
      and  DEPT_ID = #{conditionModel.deptId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.grId != null">
      and  GR_ID = #{conditionModel.grId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.userId != null">
      and  USER_ID = #{conditionModel.userId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.archiveId != null">
      and  ARCHIVE_ID = #{conditionModel.archiveId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.creationTime != null">
      and  CREATION_TIME = #{conditionModel.creationTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.createArchiveId != null">
      and  CREATE_ARCHIVE_ID = #{conditionModel.createArchiveId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseNo != null">
      and  LEASE_NO = #{conditionModel.leaseNo,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseSubject != null">
      and  LEASE_SUBJECT = #{conditionModel.leaseSubject,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseOwner != null">
      and  LEASE_OWNER = #{conditionModel.leaseOwner,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.cellPhone != null">
      and  CELL_PHONE = #{conditionModel.cellPhone,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.idCard != null">
      and  ID_CARD = #{conditionModel.idCard,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.buildId != null">
      and  BUILD_ID = #{conditionModel.buildId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.buildName != null">
      and  BUILD_NAME = #{conditionModel.buildName,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.buildCode != null">
      and  BUILD_CODE = #{conditionModel.buildCode,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseReg != null">
      and  LEASE_REG = #{conditionModel.leaseReg,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.regionName != null">
      and  REGION_NAME = #{conditionModel.regionName,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.sectionId != null">
      and  SECTION_ID = #{conditionModel.sectionId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.sectionName != null">
      and  SECTION_NAME = #{conditionModel.sectionName,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseRound != null">
      and  LEASE_ROUND = #{conditionModel.leaseRound,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.tradeAddr != null">
      and  TRADE_ADDR = #{conditionModel.tradeAddr,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseRoof != null">
      and  LEASE_ROOF = #{conditionModel.leaseRoof,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseUnit != null">
      and  LEASE_UNIT = #{conditionModel.leaseUnit,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.unitFloor != null">
      and  UNIT_FLOOR = #{conditionModel.unitFloor,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseNum != null">
      and  LEASE_NUM = #{conditionModel.leaseNum,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseRoofR != null">
      and  LEASE_ROOF_R = #{conditionModel.leaseRoofR,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseUnitR != null">
      and  LEASE_UNIT_R = #{conditionModel.leaseUnitR,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.unitFloorR != null">
      and  UNIT_FLOOR_R = #{conditionModel.unitFloorR,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseNumR != null">
      and  LEASE_NUM_R = #{conditionModel.leaseNumR,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.plateType != null">
      and  PLATE_TYPE = #{conditionModel.plateType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseRoom != null">
      and  LEASE_ROOM = #{conditionModel.leaseRoom,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseHall != null">
      and  LEASE_HALL = #{conditionModel.leaseHall,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseWei != null">
      and  LEASE_WEI = #{conditionModel.leaseWei,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseYang != null">
      and  LEASE_YANG = #{conditionModel.leaseYang,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseLadder != null">
      and  LEASE_LADDER = #{conditionModel.leaseLadder,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseDoors != null">
      and  LEASE_DOORS = #{conditionModel.leaseDoors,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseType != null">
      and  LEASE_TYPE = #{conditionModel.leaseType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseFloor != null">
      and  LEASE_FLOOR = #{conditionModel.leaseFloor,jdbcType=SMALLINT}
      </if>
      <if test="conditionModel.leaseFloors != null">
      and  LEASE_FLOORS = #{conditionModel.leaseFloors,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseFitment != null">
      and  LEASE_FITMENT = #{conditionModel.leaseFitment,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseDirect != null">
      and  LEASE_DIRECT = #{conditionModel.leaseDirect,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseYear != null">
      and  LEASE_YEAR = #{conditionModel.leaseYear,jdbcType=SMALLINT}
      </if>
      <if test="conditionModel.leaseUseage != null">
      and  LEASE_USEAGE = #{conditionModel.leaseUseage,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseStreet != null">
      and  LEASE_STREET = #{conditionModel.leaseStreet,jdbcType=BIT}
      </if>
      <if test="conditionModel.leaseAccount != null">
      and  LEASE_ACCOUNT = #{conditionModel.leaseAccount,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseArea != null">
      and  LEASE_AREA = #{conditionModel.leaseArea,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.leaseTotalPrice != null">
      and  LEASE_TOTAL_PRICE = #{conditionModel.leaseTotalPrice,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.priceUnit != null">
      and  PRICE_UNIT = #{conditionModel.priceUnit,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseLowestPrice != null">
      and  LEASE_LOWEST_PRICE = #{conditionModel.leaseLowestPrice,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.leaseProperty != null">
      and  LEASE_PROPERTY = #{conditionModel.leaseProperty,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.isSeperator != null">
      and  IS_SEPERATOR = #{conditionModel.isSeperator,jdbcType=BIT}
      </if>
      <if test="conditionModel.shopUsage != null">
      and  SHOP_USAGE = #{conditionModel.shopUsage,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.ownerType != null">
      and  OWNER_TYPE = #{conditionModel.ownerType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.officeLevel != null">
      and  OFFICE_LEVEL = #{conditionModel.officeLevel,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseDeposit != null">
      and  LEASE_DEPOSIT = #{conditionModel.leaseDeposit,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseLeaveTime != null">
      and  LEASE_LEAVE_TIME = #{conditionModel.leaseLeaveTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseLimite != null">
      and  LEASE_LIMITE = #{conditionModel.leaseLimite,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.hallStructure != null">
      and  HALL_STRUCTURE = #{conditionModel.hallStructure,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.ugArea != null">
      and  UG_AREA = #{conditionModel.ugArea,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.ugType != null">
      and  UG_TYPE = #{conditionModel.ugType,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.gardenArea != null">
      and  GARDEN_AREA = #{conditionModel.gardenArea,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.garageAmount != null">
      and  GARAGE_AMOUNT = #{conditionModel.garageAmount,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseSet != null">
      and  LEASE_SET = #{conditionModel.leaseSet,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseCharact != null">
      and  LEASE_CHARACT = #{conditionModel.leaseCharact,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseMemo != null">
      and  LEASE_MEMO = #{conditionModel.leaseMemo,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseSource != null">
      and  LEASE_SOURCE = #{conditionModel.leaseSource,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseLevel != null">
      and  LEASE_LEVEL = #{conditionModel.leaseLevel,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseKey != null">
      and  LEASE_KEY = #{conditionModel.leaseKey,jdbcType=BIT}
      </if>
      <if test="conditionModel.leaseKeyNum != null">
      and  LEASE_KEY_NUM = #{conditionModel.leaseKeyNum,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.keyTime != null">
      and  KEY_TIME = #{conditionModel.keyTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseExplrth != null">
      and  LEASE_EXPLRTH = #{conditionModel.leaseExplrth,jdbcType=BIT}
      </if>
      <if test="conditionModel.explrthDatetime != null">
      and  EXPLRTH_DATETIME = #{conditionModel.explrthDatetime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseConsign != null">
      and  LEASE_CONSIGN = #{conditionModel.leaseConsign,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseConsignNo != null">
      and  LEASE_CONSIGN_NO = #{conditionModel.leaseConsignNo,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.weituoTime != null">
      and  WEITUO_TIME = #{conditionModel.weituoTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseCooperate != null">
      and  LEASE_COOPERATE = #{conditionModel.leaseCooperate,jdbcType=BIT}
      </if>
      <if test="conditionModel.cooperateTime != null">
      and  COOPERATE_TIME = #{conditionModel.cooperateTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.complaintFlag != null">
      and  COMPLAINT_FLAG = #{conditionModel.complaintFlag,jdbcType=BIT}
      </if>
      <if test="conditionModel.leasePublish != null">
      and  LEASE_PUBLISH = #{conditionModel.leasePublish,jdbcType=BIT}
      </if>
      <if test="conditionModel.publishTime != null">
      and  PUBLISH_TIME = #{conditionModel.publishTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseMap != null">
      and  LEASE_MAP = #{conditionModel.leaseMap,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.photoTime != null">
      and  PHOTO_TIME = #{conditionModel.photoTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseStatus != null">
      and  LEASE_STATUS = #{conditionModel.leaseStatus,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.trackTime != null">
      and  TRACK_TIME = #{conditionModel.trackTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.trackTime2 != null">
      and  TRACK_TIME2 = #{conditionModel.trackTime2,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.actionTime != null">
      and  ACTION_TIME = #{conditionModel.actionTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.fromSoso != null">
      and  FROM_SOSO = #{conditionModel.fromSoso,jdbcType=BIT}
      </if>
      <if test="conditionModel.repeatFlag != null">
      and  REPEAT_FLAG = #{conditionModel.repeatFlag,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.infoType != null">
      and  INFO_TYPE = #{conditionModel.infoType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.shareFlag != null">
      and  SHARE_FLAG = #{conditionModel.shareFlag,jdbcType=BIT}
      </if>
      <if test="conditionModel.friendHouse != null">
      and  FRIEND_HOUSE = #{conditionModel.friendHouse,jdbcType=BIT}
      </if>
      <if test="conditionModel.redFlag != null">
      and  RED_FLAG = #{conditionModel.redFlag,jdbcType=BIT}
      </if>
      <if test="conditionModel.orangeFlag != null">
      and  ORANGE_FLAG = #{conditionModel.orangeFlag,jdbcType=BIT}
      </if>
      <if test="conditionModel.publicCount != null">
      and  PUBLIC_COUNT = #{conditionModel.publicCount,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.publicTime != null">
      and  PUBLIC_TIME = #{conditionModel.publicTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.dueTime != null">
      and  DUE_TIME = #{conditionModel.dueTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.specialTime != null">
      and  SPECIAL_TIME = #{conditionModel.specialTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.scheduleTime != null">
      and  SCHEDULE_TIME = #{conditionModel.scheduleTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.dealTime != null">
      and  DEAL_TIME = #{conditionModel.dealTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.writeoffTime != null">
      and  WRITEOFF_TIME = #{conditionModel.writeoffTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.secrecyTime != null">
      and  SECRECY_TIME = #{conditionModel.secrecyTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.commendTime != null">
      and  COMMEND_TIME = #{conditionModel.commendTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.privateTime != null">
      and  PRIVATE_TIME = #{conditionModel.privateTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.fromPublic != null">
      and  FROM_PUBLIC = #{conditionModel.fromPublic,jdbcType=BIT}
      </if>
      <if test="conditionModel.thumbUrl != null">
      and  THUMB_URL = #{conditionModel.thumbUrl,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.updateTime != null">
      and  UPDATE_TIME = #{conditionModel.updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.tagIds != null">
      and  TAG_IDS = #{conditionModel.tagIds,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseCertTime != null">
      and  LEASE_CERT_TIME = #{conditionModel.leaseCertTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.publishSites != null">
      and  PUBLISH_SITES = #{conditionModel.publishSites,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.areaId != null">
      and  AREA_ID = #{conditionModel.areaId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseRoofT != null">
      and  LEASE_ROOF_T = #{conditionModel.leaseRoofT,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseNumT != null">
      and  LEASE_NUM_T = #{conditionModel.leaseNumT,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseUnitT != null">
      and  LEASE_UNIT_T = #{conditionModel.leaseUnitT,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.leaseRight != null">
      and  LEASE_RIGHT = #{conditionModel.leaseRight,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.videoNum != null">
      and  VIDEO_NUM = #{conditionModel.videoNum,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.creatorUid != null">
      and  CREATOR_UID = #{conditionModel.creatorUid,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.isIgnore != null">
      and  is_ignore = #{conditionModel.isIgnore,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseIdOld != null">
      and  lease_id_old = #{conditionModel.leaseIdOld,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseInnerarea != null">
      and  LEASE_INNERAREA = #{conditionModel.leaseInnerarea,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.houseBargain != null">
      and  HOUSE_BARGAIN = #{conditionModel.houseBargain,jdbcType=BIT}
      </if>
      <if test="conditionModel.encodeFlag != null">
      and  ENCODE_FLAG = #{conditionModel.encodeFlag,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.lock != null">
      and  LOCK = #{conditionModel.lock,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.trueFlag != null">
      and  TRUE_FLAG = #{conditionModel.trueFlag,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.sendtotencent != null">
      and  SENDTOTENCENT = #{conditionModel.sendtotencent,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.houseSourceWay != null">
      and  HOUSE_SOURCE_WAY = #{conditionModel.houseSourceWay,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.youShareFlag != null">
      and  YOU_SHARE_FLAG = #{conditionModel.youShareFlag,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.youShareTime != null">
      and  YOU_SHARE_TIME = #{conditionModel.youShareTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.youBuyCount != null">
      and  YOU_BUY_COUNT = #{conditionModel.youBuyCount,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.ownerSex != null">
      and  OWNER_SEX = #{conditionModel.ownerSex,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.youShareId != null">
      and  YOU_SHARE_ID = #{conditionModel.youShareId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.thumbpicVer != null">
      and  THUMBPIC_VER = #{conditionModel.thumbpicVer,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.privateUserId != null">
      and  PRIVATE_USER_ID = #{conditionModel.privateUserId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.leaseRoomType != null">
      and  LEASE_ROOM_TYPE = #{conditionModel.leaseRoomType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.leaseRoomClassic != null">
      and  LEASE_ROOM_CLASSIC = #{conditionModel.leaseRoomClassic,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.flatShareSex != null">
      and  FLAT_SHARE_SEX = #{conditionModel.flatShareSex,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.addrMd5 != null">
      and  ADDR_MD5 = #{conditionModel.addrMd5,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.panoramaMap != null">
      and  PANORAMA_MAP = #{conditionModel.panoramaMap,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.youjiaStatisticFlag != null">
      and  YOUJIA_STATISTIC_FLAG = #{conditionModel.youjiaStatisticFlag,jdbcType=TINYINT}
      </if>
</update>

  <select id="getFunLeaseList" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
    FROM FUN_LEASE
    WHERE LEASE_ID in (${leaseIds})
  </select>

	<select id="getNeedUpdateHouseUnitList" resultMap="BaseResultMap">
		SELECT TOP ${pageSize} CITY_ID,COMP_ID,BUILD_ID,LEASE_USEAGE,TRADE_ADDR,ADDR_MD5,LEASE_ID,LEASE_ROOF,LEASE_UNIT,UNIT_FLOOR,LEASE_NUM
		FROM FUN_LEASE
		<where>
			LOCK = #{lock}
			<if test="null != limitDate and '' != limitDate">
				AND CREATION_TIME &lt;= #{limitDate}
			</if>
		</where>
	</select>
	
	<select id="getUnitNotEqDecryptList" resultMap="BaseResultMap">
		SELECT TOP ${pageSize} CITY_ID,COMP_ID,BUILD_ID,LEASE_USEAGE,TRADE_ADDR,ADDR_MD5,LEASE_ID,LEASE_ROOF,LEASE_UNIT,UNIT_FLOOR,LEASE_NUM
		FROM FUN_LEASE
		WHERE
		(
			(LEASE_ROOF_T IS NULL AND LEASE_ROOF IS NOT NULL)
			OR (LEASE_UNIT_T IS NULL AND LEASE_UNIT IS NOT NULL)
			OR (LEASE_NUM_T IS NULL AND LEASE_NUM IS NOT NULL)
		)
		<if test="null != compId and '' != compId">
			AND COMP_ID = #{compId}
		</if>
	</select>
	
	<update id="updateMd5AndUnit">
		UPDATE FUN_LEASE SET ADDR_MD5 = #{addrMd5},LOCK=#{lock} WHERE LEASE_ID=#{leaseId}
	</update>
	
	<select id="selectColumnById" resultMap="BaseResultMap">
		SELECT
		<foreach collection="columns" item="column" separator=",">
			${column}
		</foreach>
		FROM FUN_LEASE
		WHERE COMP_ID=#{compId} AND LEASE_ID=#{leaseId}
	</select>
	
	<select id="getMatchHouseCustList" resultMap="BaseResultMap">
		SELECT
		LEASE_NO,BUILD_NAME,LEASE_USEAGE,LEASE_TOTAL_PRICE,LEASE_AREA,
		LEASE_ROOM,LEASE_HALL,LEASE_WEI,LEASE_DIRECT,LEASE_FITMENT,USER_ID,
		LEASE_ID,DEPT_ID,THUMB_URL,PRICE_UNIT,COMP_ID,YOU_SHARE_FLAG,
		LEASE_COOPERATE,YOU_SHARE_ID,CITY_SHARE_FLAG,
		LEASE_ROUND, LEASE_ROOM, LEASE_HALL, LEASE_FLOOR, LEASE_FLOORS
		FROM FUN_LEASE WHERE
		CITY_ID = #{shardCityId} AND LEASE_STATUS = '1'
		<choose>
			<when test="null != compId">
				and ${operRange} = #{operRangeId} AND COMP_ID=#{compId}
			</when>
			<when test="null != rentCust.youShareFlag and 1 == rentCust.youShareFlag">
				and YOU_SHARE_FLAG = #{rentCust.youShareFlag}
			</when>
			<when test="null != rentCust.cooperateFlag and 1 == rentCust.cooperateFlag">
				and LEASE_COOPERATE = #{rentCust.cooperateFlag}
			</when>
			<otherwise>
				and ${operRange} = #{operRangeId} AND COMP_ID=#{compId}
			</otherwise>
		</choose>
		<if test="null != rentCust.userId">and USER_ID = #{rentCust.userId}</if>
		<if test="null != regIds">AND LEASE_REG in (${regIds})</if>
		<if test="null != rentCust.trackTime">AND TRACK_TIME &gt;= #{rentCust.trackTime}</if>
		<if test="null != useages">AND LEASE_USEAGE in (${useages})</if>
		<if test="null != rentCust.houseFloorLow">AND LEASE_FLOOR &gt;= #{rentCust.houseFloorLow}</if>
		<if test="null != rentCust.houseFloorHigh">AND LEASE_FLOOR &lt;= #{rentCust.houseFloorHigh}</if>
		<if test="null != rentCust.houseRoom">AND LEASE_ROOM &gt;= #{rentCust.houseRoom}</if>
		<if test="null != rentCust.houseRoom1">AND LEASE_ROOM &lt;= #{rentCust.houseRoom1}</if>
		<if test="null != rentCust.houseAreaLow">AND LEASE_AREA &gt;= #{rentCust.houseAreaLow}</if>
		<if test="null != rentCust.houseAreaHigh">AND LEASE_AREA &lt;= #{rentCust.houseAreaHigh}</if>
		<if test="null != rentCust.housePriceLow">AND LEASE_TOTAL_PRICE &gt;= #{rentCust.housePriceLow}</if>
		<if test="null != rentCust.housePriceHigh">AND LEASE_TOTAL_PRICE &lt;= #{rentCust.housePriceHigh}</if>
	</select>
	
	<select id="getBuildHouseCount" resultType="java.util.Map">
		SELECT COUNT(1) as totalCount,sum(iif(LEASE_MAP&gt;=3 and LEASE_PUBLISH=1,1,0)) as canPublishCount FROM FUN_LEASE WHERE USER_ID=#{userId} AND BUILD_ID=#{buildId}
	</select>
	
	<select id="getNoFunPhoneData" resultMap="BaseResultMap">
		SELECT TOP 10
		A.CELL_PHONE, A.LEASE_ID, A.CITY_ID, A.COMP_ID, A.AREA_ID, A.REG_ID, A.DEPT_ID,
		A.GR_ID, A.USER_ID, A.ARCHIVE_ID
		FROM FUN_LEASE A LEFT JOIN FUN_PHONE B ON B.CASE_TYPE=2 AND B.CASE_ID=A.LEASE_ID
		WHERE A.UPDATE_TIME &gt;= '2017-05-26' AND LEN(A.CELL_PHONE) &gt; 3 AND B.PHONE IS NULL
	</select>
	
	<select id="getCellPhone" resultMap="BaseResultMap">
		SELECT CELL_PHONE,JOINT_CELL_PHONE
		FROM FUN_LEASE WHERE LEASE_ID=#{leaseId}
	</select>
	
	<update id="updateThumbUrl">
		update FUN_LEASE set THUMB_URL = #{thumbUrl}
		<if test="videoNum != null">
			,VIDEO_NUM = #{videoNum}
		</if>
		<if test="videoReviewFlag != null">
			,VIDEO_REVIEW_FLAG = #{videoReviewFlag}
		</if>
		where LEASE_ID = #{leaseId}
	</update>
	
	<update id="updateFunAsdleaseHouse">
	update FUN_LEASE set ADS_FLAG = #{adsFlag,jdbcType=INTEGER} 
	where LEASE_ID = #{adsContentIds,jdbcType=INTEGER})
	</update>
	<update id="updateFunAsdleaseHouseList">
	update FUN_LEASE set ADS_FLAG = #{adsFlag,jdbcType=INTEGER} 
	where LEASE_ID in 
	<foreach close=")" collection="caseIdList" index="index" item="caseIdList" open="(" separator=",">
    	#{caseIdList}
     </foreach>
	</update>
	
    <select id="getFlowAnalysisCountList" resultType="java.util.Map">
    select LEASE_STATUS AS caseStatus,COUNT(1) AS statusCount,DATEPART(MONTH,CREATION_TIME) AS monthofyear
    from FUN_LEASE
    <where>
      AND COMP_ID = #{compId}
      AND CREATION_TIME &gt;= #{startTime}
      AND CREATION_TIME &lt;= #{endTime}
      <if test="null != areaId">
		AND AREA_ID = #{areaId}
      </if>
      <if test="null != regId">
		AND REG_ID = #{regId}
      </if>
      <if test="null != deptId">
		AND DEPT_ID = #{deptId}
      </if>
      <if test="null != userId">
		AND USER_ID = #{userId}
      </if>
    </where>
    GROUP BY LEASE_STATUS,DATEPART(MONTH, CREATION_TIME) 
    ORDER BY LEASE_STATUS ASC,DATEPART(MONTH, CREATION_TIME) ASC
    </select>
    <select id="getHouseBottomInfoForStatus" resultType="java.util.Map">
	SELECT
	COUNT (*) AS counts,
	SUM (IIF(LEASE_KEY = '1', 1, 0)) AS keyCount,
	SUM (IIF(LEASE_EXPLRTH = 1, 1, 0)) AS explrthCount,
	SUM (IIF(LEASE_PUBLISH = '1', 1, 0)) AS publishCount,
	SUM (IIF(TRUE_FLAG = '1', 1, 0)) AS trueCount,
	SUM (IIF(LEASE_MAP &gt; '0', 1, 0)) AS photoCount,
	SUM (IIF(VIDEO_NUM &gt; '0', 1, 0)) AS voidoCount,
	SUM (IIF(PANORAMA_MAP &gt; '0', 1, 0)) AS panoramaCount,
	SUM (IIF(LEASE_STATUS = '4', 1, 0)) AS scheduleCount
	FROM FUN_LEASE
    <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlLeaseStatusIn">
		AND LEASE_STATUS IN
		<foreach close=")" collection="param.sqlLeaseStatusIn" index="index" item="leaseStatus" open="(" separator=",">
    	#{leaseStatus}
		</foreach>
      </if>
    </where>
    </select>
    
    <select id="getHouseBottomInfoForSourceConsign" resultType="java.util.Map">
    select COUNT(*) AS counts,
	LEASE_CONSIGN as houseConsign
    from FUN_LEASE
    <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlLeaseStatusIn">
		AND LEASE_STATUS IN
		<foreach close=")" collection="param.sqlLeaseStatusIn" index="index" item="leaseStatus" open="(" separator=",">
    	#{leaseStatus}
		</foreach>
      </if>
    </where>
    GROUP BY LEASE_CONSIGN 
    ORDER BY counts desc
    </select>
	
   <select id="getHouseBottomInfoForSourceLevel" resultType="java.util.Map">
    select COUNT(*) AS counts,
	LEASE_LEVEL as houseLevel
    from FUN_LEASE
    <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlLeaseStatusIn">
		AND LEASE_STATUS IN
		<foreach close=")" collection="param.sqlLeaseStatusIn" index="index" item="leaseStatus" open="(" separator=",">
    	#{leaseStatus}
		</foreach>
      </if>
    </where>
    GROUP BY LEASE_LEVEL
    ORDER BY counts desc
    </select>
    
   <select id="getHouseBottomInfoForSourceFitment" resultType="java.util.Map">
    select COUNT(*) AS counts,
	LEASE_FITMENT as houseFitment
    from FUN_LEASE
    <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlLeaseStatusIn">
		AND LEASE_STATUS IN
		<foreach close=")" collection="param.sqlLeaseStatusIn" index="index" item="leaseStatus" open="(" separator=",">
    	#{leaseStatus}
		</foreach>
      </if>
    </where>
    GROUP BY LEASE_FITMENT 
    ORDER BY counts desc
    </select>
    
    <select id="getHouseBottomInfoForRegionRound" resultType="java.util.Map">
    select COUNT(*) AS counts,
	LEASE_ROUND as houseRound
    from FUN_LEASE
     <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlLeaseStatusIn">
		AND LEASE_STATUS IN
		<foreach close=")" collection="param.sqlLeaseStatusIn" index="index" item="leaseStatus" open="(" separator=",">
    	#{leaseStatus}
		</foreach>
      </if>
    </where>
    GROUP BY LEASE_ROUND 
    ORDER BY counts desc
    </select>
    
   <select id="getHouseBottomInfoForRegionSection" resultType="java.util.Map">
    select COUNT(*) AS counts,
	SECTION_ID as sectionId
    from FUN_LEASE
     <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlLeaseStatusIn">
		AND LEASE_STATUS IN
		<foreach close=")" collection="param.sqlLeaseStatusIn" index="index" item="leaseStatus" open="(" separator=",">
    	#{leaseStatus}
		</foreach>
      </if>
    </where>
    GROUP BY SECTION_ID 
    ORDER BY counts desc
    </select>
    
    <select id="getHouseBottomInfoForUseage" resultType="java.util.Map">
    select COUNT(*) AS counts,
	LEASE_USEAGE as houseUseage,
	LEASE_TYPE as houseType
    from FUN_LEASE
     <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlLeaseStatusIn">
		AND LEASE_STATUS IN
		<foreach close=")" collection="param.sqlLeaseStatusIn" index="index" item="leaseStatus" open="(" separator=",">
    	#{leaseStatus}
		</foreach>
      </if>
    </where>
	GROUP BY LEASE_USEAGE,LEASE_TYPE
	ORDER BY LEASE_USEAGE,counts desc
	</select>
	
	<select id="selectLeaseListByIds" resultMap="BaseResultMap">
		select
		<foreach collection="queryColumn" item="column" separator=",">
			${column}
		</foreach>
		FROM FUN_LEASE WHERE
		COMP_ID = #{compId}
		AND LEASE_ID IN
		<foreach close=")" collection="queryIds" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</select>
	
	<select id="getHouseCustStatusData" resultType="java.util.Map">
		select 
		sum(iif(CREATION_TIME &gt;= #{weekTime},1,0)) as xzHouseWeek,
		sum(1) as xzHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and LEASE_STATUS=4,1,0)) as ydHouseWeek,
		sum(iif(LEASE_STATUS=4,1,0)) as ydHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and LEASE_STATUS=2,1,0)) as fpHouseWeek,
		sum(iif(LEASE_STATUS=2,1,0)) as fpHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and LEASE_STATUS=5,1,0)) as ncjHouseWeek,
		sum(iif(LEASE_STATUS=5,1,0)) as ncjHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and LEASE_STATUS=6,1,0)) as wcjHouseWeek,
		sum(iif(LEASE_STATUS=6,1,0)) as wcjHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and LEASE_STATUS=7,1,0)) as zxhouseWeek,
		sum(iif(LEASE_STATUS=7,1,0)) as zxhouseMonth
				
		from FUN_LEASE 
		where CREATION_TIME &gt;= #{monthTime} and COMP_ID = #{compId}
	</select>

	<select id="countAvailableHouse" resultType="java.lang.Integer">
		select count(1) as houseCount
		from FUN_LEASE
		where LEASE_STATUS IN (1,2,4) and COMP_ID = #{compId}
	</select>

	<select id="countByBuildIds" resultType="java.util.Map">
		select top 4 count(1) buildHouseCount from FUN_LEASE
		where BUILD_ID IN
		<foreach close=")" collection="param.buildIds" index="index" item="buildId" open="(" separator=",">
			#{buildId}
		</foreach>
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
		AND COMP_ID = #{param.compId}
		GROUP BY BUILD_ID
	</select>

	<select id="countBySectionIds" resultType="java.util.Map">
		select top 4 count(1) sectionHouseCount from FUN_LEASE
		where SECTION_ID IN
		<foreach close=")" collection="param.sectionIds" index="index" item="sectionId" open="(" separator=",">
			#{sectionId}
		</foreach>
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
		AND COMP_ID = #{param.compId}
		GROUP BY SECTION_ID
	</select>
	
	<sql id="getStoreDataAnalysisQueryDimSql">
		<if test="param.queryDim == 'STATUS'">LEASE_STATUS</if><!-- 状态 -->
		<if test="param.queryDim == 'PRICE'">${param.housePriceSql}</if><!-- 价格 -->
		<if test="param.queryDim == 'AREA'">${param.houseAreaSql}</if><!-- 面积 -->
		<if test="param.queryDim == 'ROOM'">LEASE_ROOM</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">LEASE_REG</if><!-- 行政区 -->
		<if test="param.queryDim == 'SECTION'">CONCAT(LEASE_REG,'_',SECTION_ID)</if><!-- 商圈 -->
		<if test="param.queryDim == 'USEAGE'">LEASE_USEAGE</if><!-- 用途 -->
		<if test="param.queryDim == 'BELONG'">LEASE_USEAGE</if><!-- 所属TODO -->
	</sql>

	<select id="getStoreDataAnalysis" resultType="java.util.Map">
		SELECT
		<if test="param.topCount">TOP ${param.topCount}</if>
		COUNT(1) AS counts,
		<choose>
			<when test="param.queryDim == 'BELONG'"><!-- 所属 -->
				${param.dimensionColumnSql} AS dim
			</when>
			<otherwise>
				<include refid="getStoreDataAnalysisQueryDimSql" /> AS dim
			</otherwise>
		</choose>
		FROM FUN_LEASE
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.regionId != null and param.regionId != ''">AND REG_ID = #{param.regionId}</if><!-- 行政区域 -->
		<if test="param.sectionId != null and param.sectionId != ''">AND SECTION_ID = #{param.sectionId}</if><!-- 商圈 -->
		GROUP BY
		<choose>
			<when test="param.queryDim == 'BELONG'"><!-- 所属 -->
				${param.dimensionGroupSql}
			</when>
			<otherwise>
				<include refid="getStoreDataAnalysisQueryDimSql" />
			</otherwise>
		</choose>
		having COUNT(1) &gt; 0
		ORDER BY COUNT(1) DESC
	</select>

	<select id="getStoreDataCount" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM FUN_LEASE
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
	</select>
	
	<select id="getStoreDataDaiKan" resultType="java.util.Map">
		select sum(iif(LEASE_EXPLRTH is null or LEASE_EXPLRTH=0,1,0)) notFk,sum(iif(LEASE_EXPLRTH=1,1,0)) isFk
		from FUN_LEASE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.regionId != null and param.regionId != ''">AND REG_ID = #{param.regionId}</if><!-- 行政区域 -->
		<if test="param.sectionId != null and param.sectionId != ''">AND SECTION_ID = #{param.sectionId}</if><!-- 商圈 -->
	</select>
	
	<sql id="getStoreDataAnalysisSql">
		<if test="param.queryDim == 'PRICE'">${param.housePriceSql}</if><!-- 价格 -->
		<if test="param.queryDim == 'AREA'">${param.houseAreaSql}</if><!-- 面积 -->
		<if test="param.queryDim == 'ROOM'">LEASE_ROOM</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">LEASE_REG</if><!-- 行政区 -->
	</sql>
	
	<select id="getStoreDataAnalysisByPrice" resultType="java.util.Map">
		select 
		count(1) counts,${param.housePriceSql} byName,
		<include refid="getStoreDataAnalysisSql" /> as dim
		from FUN_LEASE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.queryDim == 'ROOM'">AND LEASE_ROOM is not null</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">AND LEASE_REG is not null</if><!-- 行政区 -->
		GROUP BY ${param.housePriceSql},
		<include refid="getStoreDataAnalysisSql" />
		ORDER BY count(1) desc
	</select>
	
	<select id="getStoreDataAnalysisByArea" resultType="java.util.Map">
		select 
		count(1) counts,${param.houseAreaSql} byName,
		<include refid="getStoreDataAnalysisSql" /> as dim
		from FUN_LEASE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.queryDim == 'ROOM'">AND LEASE_ROOM is not null</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">AND LEASE_REG is not null</if><!-- 行政区 -->
		GROUP BY ${param.houseAreaSql},
		<include refid="getStoreDataAnalysisSql" />
		ORDER BY count(1) desc
	</select>
	
	<select id="getStoreDataAnalysisByRoom" resultType="java.util.Map">
		select 
		count(1) counts,LEASE_ROOM byName,
		<include refid="getStoreDataAnalysisSql" /> as dim
		from FUN_LEASE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.queryDim == 'ROOM'">AND LEASE_ROOM is not null</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">AND LEASE_REG is not null</if><!-- 行政区 -->
		GROUP BY LEASE_ROOM,
		<include refid="getStoreDataAnalysisSql" />
		ORDER BY count(1) desc
	</select>
	
	<select id="getStoreDataAnalysisByUseage" resultType="java.util.Map">
		select top 10 count(1) counts,LEASE_TYPE byName
		from FUN_LEASE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		and UNIT_FLOOR in 
		<foreach close=")" collection="param.idSet" item="item" open="(" separator=",">
			#{item}
		</foreach>
		<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.useage == 1">AND LEASE_USEAGE = 1</if><!-- 住宅 -->
		<if test="param.useage == 2">AND LEASE_USEAGE = 3</if><!-- 商铺 -->
		<if test="param.useage == 3">AND LEASE_USEAGE = 4</if><!-- 写字 -->
		group by LEASE_TYPE
		order by count(1) desc
	</select>
	
	<select id="getStoreDataRanking" resultType="java.util.Map">
		with t1 as (
			select count(1) counts,
			<choose>
				<when test="param.rankType == 1">user_id</when>
				<otherwise>dept_id</otherwise>
			</choose>
			as rankId from FUN_LEASE 
			WHERE COMP_ID=#{param.compId}
			AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
			<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
			<choose>
				<when test="param.rankType == 1">
					and user_id &gt; 0 group by user_id
				</when>
				<otherwise>group by dept_id</otherwise>
			</choose>
		),t2 as (
			select top 15 count(1) counts,
			<choose>
				<when test="param.rankType == 1">user_id</when>
				<otherwise>dept_id</otherwise>
			</choose>
			as rankId from FUN_RENT_CUSTOMER 
			WHERE COMP_ID=#{param.compId}
			AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
			<if test="param.statusType == 1">AND RENT_CUST_STATUS IN (1,2,4)</if><!-- 有效 -->
			<choose>
				<when test="param.rankType == 1">
					and user_id &gt; 0 group by user_id
				</when>
				<otherwise>group by dept_id</otherwise>
			</choose>
		)
		select top 15 t1.counts house,t2.counts cust,t1.rankId,t1.counts + t2.counts as totalCounts
		from t1 join t2 on t1.rankId=t2.rankId
		where t1.counts + t2.counts &gt; 0
		order by t1.counts + t2.counts desc
	</select>
	
	<select id="getHouseCustBasicStatus" resultType="java.util.Map">
		select COUNT (1) AS totalCounts,
		SUM (IIF(LEASE_KEY = '1', 1, 0)) AS keyCount,
		SUM (IIF(LEASE_EXPLRTH = 1, 1, 0)) AS explrthCount,
		SUM (IIF(TRUE_FLAG = '1', 1, 0)) AS trueCount,
		SUM (IIF(LEASE_MAP &gt; '0', 1, 0)) AS photoCount,
		SUM (IIF(VIDEO_NUM &gt; '0', 1, 0)) AS voidoCount,
		SUM (IIF(PANORAMA_MAP &gt; '0', 1, 0)) AS panoramaCount
		from FUN_LEASE
		<where>
			AND COMP_ID = #{param.compId}
			AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
			<if test="param.statusType == 1">AND LEASE_STATUS IN (1,2,4)</if><!-- 有效 -->
		</where>
	</select>
	
	<select id="getHouseBuyingPowerData" resultType="java.util.Map">
		SELECT count(1) house,${caseWhenSql} as price
		FROM FUN_LEASE
		WHERE COMP_ID = #{compId} AND LEASE_STATUS IN (1,2,4)
		GROUP BY ${caseWhenSql}
		ORDER BY count(1) desc
	</select>

    <!--没必要查询全部的字段-->
    <select id="getHouseBaseInfo" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      SELECT
      SALE_LEASE_ID,IS_SALE_LEASE,CELL_PHONE,JOINT_CELL_PHONE,SECTION_ID,
      LEASE_STATUS,CITY_SHARE_FLAG, COMP_ID,BUILD_ID,BUILD_NAME,LEASE_OWNER,LEASE_AREA,LEASE_TOTAL_PRICE,PRICE_UNIT,LEASE_ROOM,LEASE_HALL,LEASE_WEI
      FROM FUN_LEASE
      WHERE LEASE_ID = #{leaseId,jdbcType=INTEGER}
    </select>

	<update id="updateModelData">
		UPDATE FUN_LEASE
		<set>
			<if test="param.availableTime != null">AVAILABLE_TIME = #{param.availableTime},</if>
			<if test="param.trackTime != null">TRACK_TIME = #{param.trackTime},</if>
			<if test="param.houseBargain != null">HOUSE_BARGAIN = #{param.houseBargain},</if>
			<if test="param.orangeFlag != null">ORANGE_FLAG = #{param.orangeFlag},</if>
			<if test="param.leaseStatus != null">LEASE_STATUS = #{param.leaseStatus},</if>
			<if test="param.leaseLevel != null">LEASE_LEVEL = #{param.leaseLevel},</if>
			<if test="param.grId != null">GR_ID = #{param.grId},</if>
			<if test="param.deptId != null">DEPT_ID = #{param.deptId},</if>
			<if test="param.regId != null">REG_ID = #{param.regId},</if>
			<if test="param.areaId != null">AREA_ID = #{param.areaId},</if>
			<if test="param.userId != null">USER_ID = #{param.userId},</if>
			<if test="param.archiveId != null">ARCHIVE_ID = #{param.archiveId},</if>
			<if test="param.actionTime != null">ACTION_TIME = #{param.actionTime},</if>
			<if test="param.plateType != null">PLATE_TYPE = #{param.plateType},</if>
			<if test="param.specialTime != null">SPECIAL_TIME = #{param.specialTime},</if>
			<if test="param.specialEndTime!= null">SPECIAL_END_TIME = #{param.specialEndTime},</if>
			<if test="param.scheduleTime != null">SCHEDULE_TIME = #{param.scheduleTime},</if>
			<if test="param.scheduleEndTime != null">SCHEDULE_END_TIME = #{param.scheduleEndTime},</if>
			<if test="param.respiteEndTime != null">RESPITE_END_TIME = #{param.respiteEndTime},</if>
			<if test="param.dealTime != null">DEAL_TIME = #{param.dealTime},</if>
			<if test="param.privateTime!= null">PRIVATE_TIME = #{param.privateTime},</if>
			<if test="param.privateUserId!= null">PRIVATE_USER_ID = #{param.privateUserId},</if>
			<if test="param.isSaleLease != null">IS_SALE_LEASE = #{param.isSaleLease},</if>
			<if test="param.writeoffTime!= null">WRITEOFF_TIME = #{param.writeoffTime},</if>
			<if test="param.redFlag!= null">RED_FLAG = #{param.redFlag},</if>
			<if test="param.trueFlag != null">TRUE_FLAG = #{param.trueFlag},</if>
			<if test="param.leasePublish!= null">LEASE_PUBLISH = #{param.leasePublish},</if>
			<if test="param.cityShareFlag != null">CITY_SHARE_FLAG = #{param.cityShareFlag},</if>
			<if test="param.fromPublic != null">FROM_PUBLIC = #{param.fromPublic},</if>
			<if test="param.publicCount != null">PUBLIC_COUNT = #{param.publicCount},</if>
			UPDATE_TIME = getDate()
		</set>
		WHERE LEASE_ID = #{caseId}
		<if test="plateType != null">AND PLATE_TYPE=#{plateType}</if>
	</update>
	
	<select id="getLevelCounts" resultType="java.util.Map">
		SELECT sum(iif(LEASE_LEVEL=2,1,0)) as commendLevel, sum(iif(LEASE_LEVEL=3,1,0)) as passwordLevel
		FROM FUN_LEASE
		WHERE USER_ID = #{infoOwnerUserId} AND COMP_ID = #{compId} 
			AND DEPT_ID =#{deptId} AND LEASE_LEVEL IN (2, 3) and lease_id != #{caseId}
	</select>


  <resultMap extends="BaseResultMap" id="extResultMap" type="com.myfun.repository.erpdb.dto.ErpFunLeaseDto">
    <result column="BUILD_ADDR" jdbcType="VARCHAR" property="buildAddr" />
  </resultMap>

  <select id="getDkErpLease" resultMap="extResultMap">
		SELECT
            a.BUILD_NAME, b.BUILD_ADDR,LEASE_ID,LEASE_NO,
    LEASE_USEAGE,LEASE_HALL,LEASE_ROOM,LEASE_WEI,LEASE_TOTAL_PRICE,PRICE_UNIT,REGION_NAME,LEASE_ROUND,LEASE_AREA,a.BUILD_ID,a.LEASE_REG
		FROM FUN_LEASE a
        JOIN BUILDING_INFO b on a.build_id = b.build_id
		WHERE a.COMP_ID = #{compId} AND LEASE_ID IN <foreach close=")" collection="targetIds" item="val" open="(" separator=",">#{val}</foreach>
	</select>
	
	<select id="getAddrRepetList" resultType="java.util.Map">
		SELECT
		A.COMP_ID compId, A.AREA_ID areaId, A.REG_ID regId, A.DEPT_ID deptId, A.GR_ID grId,
		A.LEASE_USEAGE AS useage, A.LEASE_ID AS caseId, A.LEASE_STATUS AS status, A.LEASE_NO AS caseNo
		FROM FUN_LEASE A LEFT JOIN FUN_CORE_INFO B ON A.LEASE_ID=B.CASE_ID AND B.CASE_TYPE=2
		WHERE A.COMP_ID = #{compId}
		<if test="userId != null">AND A.USER_ID = #{userId}</if>
		AND A.BUILD_ID = #{buildId}
		<choose>
			<when test="tradeAddrCon != null or numCon != null">
				<choose>
					<when test="tradeAddrCon != null and numCon != null">AND (A.TRADE_ADDR = #{tradeAddrCon} OR A.LEASE_NUM = #{numCon})</when>
					<when test="tradeAddrCon != null">AND A.TRADE_ADDR = #{tradeAddrCon}</when>
					<when test="numCon != null">AND A.LEASE_NUM = #{numCon}</when>
				</choose>
			</when>
			<otherwise>
				AND B.ADDR_MD5 IN
				<foreach close=")" collection="md5StrList" item="val" open="(" separator=",">#{val}</foreach>
			</otherwise>
		</choose>
		<if test="useageArr != null">
			AND A.LEASE_USEAGE IN
			<foreach close=")" collection="useageArr" item="val" open="(" separator=",">#{val}</foreach>
		</if>
	</select>
	
	<select id="getPhoneRepeatList" resultType="java.util.Map">
		SELECT
			AREA_ID areaId, REG_ID regId, DEPT_ID deptId, GR_ID grId, LEASE_ID caseId,
			LEASE_STATUS AS status, LEASE_NO AS caseNo,
			LEASE_USEAGE AS useage
		FROM FUN_LEASE
		WHERE LEASE_ID IN(
			SELECT CASE_ID FROM
				FUN_PHONE
			WHERE
				COMP_ID = #{compId}
			<if test="userId != null">AND USER_ID = #{userId}</if>
			AND CASE_TYPE = 2
			AND PHONE IN 
			<foreach close=")" collection="phoneArr" item="val" open="(" separator=",">#{val}</foreach>
			GROUP BY CASE_ID
		)
		ORDER BY CREATION_TIME ASC
	</select>

  <select id="generatorLeaseNo" resultType="java.lang.String">
    EXEC  proc_GenHouseCustNo 'FUN_LEASE',#{compNo}
  </select>


  <select id="countRangeRepeatHouse" resultType="java.lang.Integer">
    SELECT count(a.LEASE_ID) from FUN_LEASE a
    JOIN FUN_CORE_INFO b on a.LEASE_ID=b.case_id and b.case_type=2
    <where>
      <if test="1==1">
        and a.comp_id=#{compId} and b.ADDR_MD5 in <foreach close=")" collection="addrMd5" item="md5" open="(" separator=",">
            #{md5}
          </foreach>
      </if>
      <if test="useage.size() &gt; 0">
          and lease_useage in <foreach close=")" collection="useage" item="leaseUseage" open="(" separator=",">
            #{leaseUseage}
        </foreach>
      </if>
      <if test="null != buildId">
          and a.build_id=#{buildId}
      </if>
      <choose>
        <when test="repeatRange == '1'">
          and a.comp_id=#{compId}
        </when>
        <when test="repeatRange == '2'">
          and a.AREA_ID=#{areaId}
        </when>
        <when test="repeatRange == '3'">
          and a.REG_ID=#{regId}
        </when>
        <when test="repeatRange == '4'">
          and a.DEPT_ID=#{deptId}
        </when>
        <when test="repeatRange == '5'">
          and a.GR_ID=#{regId}
        </when>
      </choose>
    </where>

  </select>
  <select id="getLeaseCountByLeaseUnit" resultType="java.util.Map">
    SELECT LEASE_NUM_T caseNum, COUNT (LEASE_ID) count
    FROM
    FUN_LEASE
    WHERE
    comp_id =#{compId}
    AND BUILD_ID =#{buildId}
    AND LEASE_ROOF_T = #{caseRoof}
    AND LEASE_UNIT_T = #{caseUnit}
    AND LEASE_status NOT IN (5, 6, 7)
    group by LEASE_NUM_T
  </select>

  <select id="getLeaseHouseBuildCountData" resultType="java.util.Map">
    select SUM(iif(LEASE_STATUS not in (5,6,7), 1, 0 )) notLeased, SUM(iif(LEASE_STATUS = 5, 1, 0 )) hasLeased
    from FUN_LEASE
    <where>
    <if test="1==1">
      and BUILD_ID=#{buildId} and COMP_ID=#{compId}
    </if>
    <if test="null != caseRoof and '' != caseRoof">
      AND LEASE_ROOF_T = #{caseRoof}
    </if>
    <if test="null != caseUnit and '' != caseUnit">
      AND LEASE_UNIT_T = #{caseUnit}
    </if>
  </where>
  </select>

  <select id="getLeaseListByRoomId" resultMap="BaseResultMap">
    SELECT b.* from FUN_CORE_INFO a
    JOIN FUN_LEASE b on a.CASE_ID=b.lease_id and a.CASE_TYPE=2
    WHERE b.comp_id=#{compId} and a.ROOM_ID=#{param.roomId} and b.LEASE_STATUS not in (5,6,7)
    AND b.build_id = #{param.buildId} and a.HOUSE_ROOF=#{param.caseRoof} and a.HOUSE_UNIT=#{param.caseUnit} and a.HOUSE_FLOOR=#{param.caseFloor}
  </select>
  <select id="getOldLeaseUnitList" resultMap="BaseResultMap">
    select top 1000 a.* from fun_lease a
    JOIN FUN_CORE_INFO b on a.lease_id=b.CASE_ID and b.case_type=2
    WHERE b.HOUSE_FLOOR = a.UNIT_FLOOR and a.UNIT_FLOOR is not null and and a.UNIT_FLOOR != ''
  </select>
	
	<select id="getNeedDealUnitList" resultMap="BaseResultMap">
		<!-- 这里用LEASE_ID保存了B表的ID -->
		SELECT TOP 500 A.UNIT_FLOOR,B.ID AS LEASE_ID
		FROM FUN_LEASE A
		JOIN FUN_CORE_INFO B ON B.CASE_ID=A.LEASE_ID AND B.CASE_TYPE=2
		WHERE A.UNIT_FLOOR=B.HOUSE_FLOOR AND LEN(A.UNIT_FLOOR) &gt; 0
		AND A.LEASE_NUM_T NOT LIKE '%,%'
	</select>
	
	<select id="getLeaseCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_LEASE WHERE COMP_ID=#{compId} AND USER_ID=#{userId}
	</select>
	
	<select id="getLeaseCountByFlag" resultType="java.util.Map">
		SELECT sum(iif(RED_FLAG = 1 OR ORANGE_FLAG = 1,1,0)) as needTrackHouse
		,sum(iif(PANORAMA_MAP = 0 AND LEASE_MAP = 0 AND VIDEO_NUM = 0,1,0)) as
		needImprove FROM FUN_LEASE WHERE COMP_ID = #{compId}
        <if test="null != partnerId">
           and PARTNER_ID =#{partnerId}
        </if>
        <!-- 新版组织机构不用 manageLevel 层级了 -->
        <choose>
          <when test="newOrganizationType">
            AND (
            <foreach collection="rangeIds" index="index" item="item" separator="OR">
              TISSUE_LINE LIKE CONCAT('%:', #{item}, ':%')
            </foreach>
            )
          </when>
          <otherwise>
            <choose>
              <when test="rangeType == 2">AND AREA_ID</when>
              <when test="rangeType == 3">AND REG_ID</when>
              <when test="rangeType == 4">AND DEPT_ID</when>
              <when test="rangeType == 5">AND GR_ID</when>
              <when test="rangeType == 6">AND USER_ID</when>
            </choose>
            <if test="rangeType != 1">
              in
              <foreach close=")" collection="rangeIds" index="index" item="rangeId" open="(" separator=",">
                #{rangeId}
              </foreach>
            </if>
          </otherwise>
        </choose>
		AND LEASE_STATUS IN (1, 2, 4) 
	</select>
	
	<select id="getModifyPriceEndCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_LEASE 
		WHERE MODIFY_PRICE_END &gt;= #{nowDate} 
		AND COMP_ID =#{compId}
		AND LEASE_STATUS != 7
		AND DEPT_ID = #{deptId}
		AND USER_ID = #{userId}
	</select>

    <select id="getModifyPriceEndCountByOrg" resultType="java.lang.Integer">
      SELECT COUNT(1) FROM FUN_LEASE
      WHERE MODIFY_PRICE_END &gt;= #{nowDate}
        AND COMP_ID =#{compId}
        AND LEASE_STATUS != 7
        AND TISSUE_LINE LIKE CONCAT('%:', #{organizationId}, ':%')
        AND USER_ID = #{userId}
    </select>
	
	<select id="selectHotIncrementByDeptId" resultType="java.lang.Integer">
		select COUNT(1) from FUN_LEASE where COMP_ID = #{compId}
		<if test="null != deptId">
			and DEPT_ID = #{deptId} 
		</if>
		<if test="null != nowDate">
			and CREATION_TIME &gt;= #{nowDate}
		</if>
		<if test="null != privateTime">
			and PUBLIC_TIME &gt;= #{privateTime}
		</if>
		<if test="null != plateType">
			and PLATE_TYPE = #{plateType}
		</if>
		<if test="null != houseLevel">
			and LEASE_LEVEL = #{houseLevel}
		</if>
        <if test="null != partnerId">
           and PARTNER_ID =#{partnerId}
        </if>
	</select>

    <select id="selectHotIncrementByOrgId" resultType="java.lang.Integer">
      select COUNT(1) from FUN_LEASE where COMP_ID = #{compId}
      <if test="null != organizationId and '' != organizationId">
        and TISSUE_LINE LIKE CONCAT('%:', #{organizationId}, ':%')
      </if>
      <if test="null != nowDate">
        and CREATION_TIME &gt;= #{nowDate}
      </if>
      <if test="null != privateTime">
        and PUBLIC_TIME &gt;= #{privateTime}
      </if>
      <if test="null != plateType">
        and PLATE_TYPE = #{plateType}
      </if>
      <if test="null != houseLevel">
        and LEASE_LEVEL = #{houseLevel}
      </if>
      <if test="null != partnerId">
        and PARTNER_ID =#{partnerId}
      </if>
    </select>
	
	<select id="testLeaseSql" resultType="java.util.Map">
		SELECT
		<choose>
			<when test="allColumn != null and allColumn == 1">
				LEASE_ID,COMP_ID,CITY_ID,GR_ID,REG_ID,DEPT_ID,USER_ID,ARCHIVE_ID,CREATION_TIME,LEASE_NO
				LEASE_SUBJECT,LOCK,BUILD_ID,BUILD_NAME,BUILD_CODE,LEASE_REG,REGION_NAME,SECTION_ID,SECTION_NAME
				LEASE_ROUND,TRADE_ADDR,PLATE_TYPE,LEASE_ROOM,LEASE_HALL,LEASE_WEI,LEASE_YANG,LEASE_TYPE,LEASE_FLOOR
				LEASE_FLOORS,LEASE_FITMENT,LEASE_DIRECT,LEASE_YEAR,LEASE_USEAGE,LEASE_STREET,LEASE_AREA
				LEASE_TOTAL_PRICE,PRICE_UNIT,LEASE_SOURCE,LEASE_LEVEL,LEASE_KEY,KEY_TIME,LEASE_EXPLRTH
				LEASE_CONSIGN,LEASE_COOPERATE,COMPLAINT_FLAG,LEASE_PUBLISH,LEASE_MAP,LEASE_STATUS,TRACK_TIME
				TRACK_TIME2,ACTION_TIME,FROM_SOSO,REPEAT_FLAG,FRIEND_HOUSE,RED_FLAG,ORANGE_FLAG,PUBLIC_COUNT
				PUBLIC_TIME,DUE_TIME,SPECIAL_TIME,SCHEDULE_TIME,DEAL_TIME,WRITEOFF_TIME,SECRECY_TIME,COMMEND_TIME
				PRIVATE_TIME,FROM_PUBLIC,THUMB_URL,UPDATE_TIME,LEASE_CERT_TIME,PUBLISH_SITES,AREA_ID,LEASE_ROOF_T
				LEASE_NUM_T,LEASE_UNIT_T,VIDEO_NUM,CREATOR_UID,LEASE_INNERAREA,SENDTOTENCENT,HOUSE_SOURCE_WAY
				TRUE_FLAG,YOU_SHARE_FLAG,YOU_SHARE_TIME,YOU_BUY_COUNT,OWNER_SEX,YOU_SHARE_ID,THUMBPIC_VER
				PRIVATE_USER_ID,LEASE_ROOM_TYPE,LEASE_ROOM_CLASSIC,FLAT_SHARE_SEX,ADDR_MD5,PANORAMA_MAP
				VIDEO_REVIEW_FLAG,YOUJIA_STATISTIC_FLAG,ADS_FLAG,SYNC_TIME,COMPETE_END_TIME,COMPETE_PRICE
				YOU_SHARE_MONEY_STATE,SENDTO_WEIDIAN,SENDTO_YOUYOU,PROXY_URL,UPLOAD_PROXY_USER,CITY_SHARE_FLAG
				CHECK_CODE_FUN,OWNERSHIP_TYPE,QZ_CODE_FUN,EFFECTIVE_DATE,FUNMANAGER_SALESTATUS,HAS_FUNKAN
				JOINT_CELL_PHONE,JOINT_USER_NAME,JOINT_USER_SEX,JOINT_ID_CARD,SALE_LEASE_ID,IS_SALE_LEASE
				ENTRUST_END_TIME,ENTRUST_CREATE_USER,AVAILABLE_TIME,MODIFY_PRICE_END,MODIFY_PRICE_TREND
			</when>
			<otherwise>
				LEASE_ID
			</otherwise>
		</choose>
		FROM FUN_LEASE WHERE COMP_ID = '10213' AND CREATION_TIME &gt;= '2017-01-24 00:00:00'
		AND CREATION_TIME &lt;= '2018-01-24 23:59:59' AND LEASE_STATUS &lt;= '4'
		ORDER BY (CASE WHEN LEASE_LEVEL = 2 THEN 1 ELSE 2 END) ASC, CREATION_TIME DESC
		OFFSET 0 ROW FETCH NEXT 50 ROWS ONLY
	</select>

	<select id="getLeaseAddCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_LEASE WHERE COMP_ID = #{compId}
        <if test="null != partnerId">
           and PARTNER_ID =#{partnerId}
        </if>
		<if test="null != startTime and '' != startTime">
		AND CREATION_TIME &gt;= #{startTime} 
		</if>
		<if test="null != dealTime and '' != dealTime">
		AND DEAL_TIME &gt;= #{dealTime} 
		</if>
		<if test="null != trackTime and '' != trackTime">
		AND WRITEOFF_TIME &gt;= #{trackTime} 
		</if>
		<if test="null != leaseStatus and '' != leaseStatus">
		AND LEASE_STATUS = #{leaseStatus} 
		</if>
		AND
		<choose>
			<when test="manageLevel == 1">COMP_ID</when>
			<when test="manageLevel == 2">AREA_ID</when>
			<when test="manageLevel == 3">REG_ID</when>
			<when test="manageLevel == 4">DEPT_ID</when>
			<when test="manageLevel == 5">GR_ID</when>
		</choose>
		IN
		<foreach close=")" collection="manageRangIds" item="rangeId" open="(" separator=",">
			#{rangeId}
		</foreach>
	</select>

	<select id="getLeaseZhAddCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_LEASE
		WHERE COMP_ID = #{compId}
        <if test="null != partnerId">
            and PARTNER_ID =#{partnerId}
        </if>
		AND
		<choose>
			<when test="manageLevel == 1">COMP_ID</when>
			<when test="manageLevel == 2">AREA_ID</when>
			<when test="manageLevel == 3">REG_ID</when>
			<when test="manageLevel == 4">DEPT_ID</when>
			<when test="manageLevel == 5">GR_ID</when>
		</choose>
		IN
		<foreach close=")" collection="manageRangIds" item="rangeId" open="(" separator=",">
			#{rangeId}
		</foreach>
		AND LEASE_STATUS = #{leaseStatus}
		AND LEASE_ID IN 
		<foreach close=")" collection="leaseIds" index="index" item="leaseId" open="(" separator=",">
			#{leaseId}
		</foreach>
	</select>

  <select id="getPubNumLeaseNumber" resultType="java.lang.Integer">
    select COUNT(1) AS NUMBER
    from FUN_LEASE A
    WHERE A.COMP_ID=#{compId} and A.CITY_ID=#{shardCityId} AND A.ARCHIVE_ID=#{archiveId} AND LEASE_PUBLISH=1 AND A.LEASE_STATUS=1
    <if test="sendToYouYou != null">
      AND A.SENDTO_YOUYOU = #{sendToYouYou}
    </if>
    <if test="buildIdFlag">
      AND A.BUILD_ID != -1
    </if>
  </select>

  <select id="getTopFunLease" resultMap="BaseResultMap">
    select top ${num} LEASE_ID,LEASE_NO,YOU_SHARE_FLAG,TRUE_FLAG,ARCHIVE_ID
    from FUN_LEASE
    where COMP_ID=#{compId} and DEPT_ID=#{deptId}
    <if test="userId != null">
      and USER_ID=#{userId}
    </if>
    <if test="plateType != null">
      and PLATE_TYPE=#{plateType}
    </if>
  </select>

  <select id="countByUserId" resultType="java.lang.Integer">
    select COUNT (*)
    from FUN_LEASE
    where COMP_ID = #{compId} and USER_ID = #{userId}
  </select>

	<select id="getLeaseHouseStatusCount" resultType="com.myfun.repository.erpdb.dto.ErpFunLeaseDto">
		select COUNT(*) AS counts,SUM(IIF(LEASE_KEY='1',1,0)) AS keyCount,SUM(IIF(LEASE_EXPLRTH=1,1,0)) AS explrthCount,SUM(IIF(LEASE_PUBLISH='1',1,0)) AS publishCount,
		SUM(IIF(TRUE_FLAG='1',1,0)) AS trueCount,SUM(IIF(LEASE_MAP&gt;'0',1,0)) AS photoCount,SUM(IIF(VIDEO_NUM&gt;'0',1,0)) AS voidoCount,
		SUM (IIF(PANORAMA_MAP &gt; '0', 1, 0)) AS panoramaCount,SUM(IIF(LEASE_STATUS = '4', 1, 0)) AS scheduleCount
		from FUN_LEASE
		where COMP_ID = #{param.compId}
		<if test="param.perVerUid != null">
			and USER_ID = #{param.perVerUid}
		</if>
		<if test="param.serchRange != null and param.serchRangeId != null">
			and ${param.serchRange} = #{param.serchRangeId}
		</if>
		<if test="param.status = 1">
			and LEASE_STATUS IN ('1','2','3','4')
		</if>
	</select>


	<select id="getLeaseHouseFromCount" resultType="com.myfun.repository.erpdb.dto.ErpFunLeaseDto">
		select COUNT(*) AS counts
		<if test="param.groupBy == 'LEASE_CONSIGN'">
			,LEASE_CONSIGN as houseConsign
		</if>
		<if test="param.groupBy == 'LEASE_LEVEL'">
			,LEASE_LEVEL as houseLeve
		</if>
		<if test="param.groupBy == 'LEASE_FITMENT'">
			,LEASE_FITMENT as houseFitment
		</if>
		from FUN_LEASE
		where COMP_ID = #{param.compId}
		<if test="param.perVerUid != null">
			and USER_ID = #{param.perVerUid}
		</if>
		<if test="param.serchRange != null and param.serchRangeId != null">
			and ${param.serchRange} = #{param.serchRangeId}
		</if>
		<if test="param.status = 1">
			and LEASE_STATUS IN ('1','2','3','4')
		</if>
		group by ${param.groupBy}
		order by COUNTS desc
	</select>

	<select id="getLeaseHouseRegionCount" resultType="com.myfun.repository.erpdb.dto.ErpFunLeaseDto">
		select COUNT(*) AS counts
		<if test="param.groupBy == 'LEASE_ROUND'">
			,LEASE_ROUND as houseRound
		</if>
		<if test="param.groupBy == 'SECTION_ID'">
			,SECTION_ID as sectionId
		</if>
		from FUN_LEASE
		where COMP_ID = #{param.compId}
		<if test="param.perVerUid != null">
			and USER_ID = #{param.perVerUid}
		</if>
		<if test="param.serchRange != null and param.serchRangeId != null">
			and ${param.serchRange} = #{param.serchRangeId}
		</if>
		<if test="param.status = 1">
			and LEASE_STATUS IN ('1','2','3','4')
		</if>
		group by ${param.groupBy}
		order by COUNTS desc
	</select>

	<select id="getLeaseHouseSaleCount" resultType="com.myfun.repository.erpdb.dto.ErpFunLeaseDto">
		select COUNT(*) AS counts,LEASE_USEAGE as houseUseage,LEASE_TYPE as houseType
		from FUN_LEASE
		where COMP_ID = #{param.compId}
		<if test="param.perVerUid != null">
			and USER_ID = #{param.perVerUid}
		</if>
		<if test="param.serchRange != null and param.serchRangeId != null">
			and ${param.serchRange} = #{param.serchRangeId}
		</if>
		<if test="param.status = 1">
			and LEASE_STATUS IN ('1','2','3','4')
		</if>
		group by ${param.groupBy}
		order by LEASE_USEAGE,COUNTS desc
	</select>

	<select id="getPriceUnitLease" resultMap="BaseResultMap">
		select  LEASE_ID,LEASE_NO,PRICE_UNIT
		from FUN_LEASE
		where  COMP_ID = #{compId} and LEASE_ID in
		<foreach close=")" collection="houseIds" item="listItem" open="(" separator=",">
			#{listItem}
		</foreach>
	</select>
	
	<select id="getSpecialListCount" resultType="com.myfun.repository.erpdb.dto.ErpFunLeaseDto">
		select LEASE_LEVEL as LEVEL,count(*) as ATTRNAME
		from FUN_LEASE
		where COMP_ID = #{compId} and DEPT_ID = #{deptId} and USER_ID = #{userId}
		and LEASE_LEVEL in (2,3)
		group by LEASE_LEVEL
	</select>
	
	<select id="getFunLeaseListByIds" resultMap="BaseResultMap">
		select  LEASE_ID,BUILD_NAME
		from FUN_LEASE
		where COMP_ID = #{compId} and LEASE_ID in
		<foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
			#{caseId}
		</foreach>
		order by ${timeColumn} desc
	</select>

	<select id="getMatchLeaseList" resultMap="ErpFunLeaseDto">
		select <include refid="Base_Column_List" /> from FUN_LEASE
		WHERE LEASE_STATUS = 1
		<if test="null != param.plateType">AND PLATE_TYPE = #{param.plateType}</if>
		<if test="null != param.date and param.date != ''">
			AND ${param.custTimeColumn} &gt;= #{param.creationTime1}
			AND ${param.custTimeColumn} &lt;= #{param.creationTime2}
		</if>
		<choose>
			<when test="&quot;EXACT_MATCH&quot; == param.matchType">
				<if test="param.orList !=null and param.orList.size()&gt;0">
					and
					<foreach close=")" collection="param.orList" item="item" open="(" separator="or">
						${item}
					</foreach>
				</if>
				<if test="null != param.leaseUsage">
					and LEASE_USEAGE IN
					<foreach close=")" collection="param.leaseUsage" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</if>
				<if test="param.houseAreaLow != null">
					and LEASE_AREA &gt;= #{param.houseAreaLow}
				</if>
				<if test="param.houseAreaHigh != null">
					and LEASE_AREA &lt;= #{param.houseAreaHigh}
				</if>
				<if test="param.houseFloorLow != null">
					and LEASE_FLOOR &gt;= #{param.houseFloorLow}
				</if>
				<if test="param.houseFloorHigh != null">
					and LEASE_FLOOR &lt;= #{param.houseFloorHigh}
				</if>
				<if test="param.housePriceLow != null">
					and LEASE_TOTAL_PRICE &gt;= #{param.housePriceLow}
				</if>
				<if test="param.housePriceHigh != null">
					and LEASE_TOTAL_PRICE &lt;= #{param.housePriceHigh}
				</if>
				<if test="param.houseRoom != null">
					and LEASE_ROOM &gt;= #{param.houseRoom}
				</if>
				<if test="param.houseRoom1 != null">
					and LEASE_ROOM &lt;= #{param.houseRoom1}
				</if>
			</when>
			<otherwise>
				<if test="null != param.buildId and param.buildId.size &gt;0">
					and BUILD_ID IN
					<foreach close=")" collection="param.buildId" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</if>
			</otherwise>
		</choose>
		<choose>
			<when test=" 0 == param.bound or null == param.bound">
				AND COMP_ID = #{param.currentCompId}
				<choose>
					<when test="null != param.grId and param.grId != '' ">
						AND GR_ID = #{param.grId}
					</when>
					<when test="null != param.deptId and param.deptId != '' ">
						AND DEPT_ID = #{param.deptId}
					</when>
					<when test="null != param.areaId and param.areaId != ''">
						AND AREA_ID = #{param.areaId}
					</when>
					<when test="null != param.regId and param.regId != ''">
						AND REG_ID = #{param.regId}
					</when>
				</choose>
				<if test="param.isRegSectionControllStr != null and param.isRegSectionControllStr=='1' ">
					<if test="param.queryRange != null and param.queryRange != queryRangeId">
						and ${param.queryRange}=#{param.queryRange}
					</if>
					<if test="param.regSectionflag == '1' ">
						or
						<foreach close=")" collection="param.orList2" item="item" open="(" separator="or">
							#{item}
						</foreach>
					</if>
					<if test="param.regSectionflag == '2' ">
						and
						<foreach close=")" collection="param.orList2" item="item" open="(" separator="or">
							#{item}
						</foreach>
					</if>
				</if>
			</when>
			<when test="param.bound== 1">
				and CITY_SHARE_FLAG = 1 and USER_ID &gt; 0
				<if test="null != param.compIds and param.compIds.size()&gt;0">
					and COMP_ID IN
					<foreach close=")" collection="param.compIds" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</if>
				and CITY_ID = #{param.cityId}
			</when>
			<when test="param.bound== 2">
				and CITY_SHARE_FLAG = 1 and USER_ID &gt; 0 and CITY_ID = #{param.cityId}
			</when>
			<when test="param.bound== 'CITY_SHARE'">
				and CITY_ID = #{param.cityId} and CITY_SHARE_FLAG = 1 and COMP_ID !=#{param.currentCompId} and
				deptId={param.currentDeptId}
			</when>
		</choose>
		ORDER BY ${param.orderBy}
	</select>
	
	<select id="getFunLeaseListByParam" resultMap="BaseResultMap">
		select TOP 10 BUILD_ID
		from FUN_LEASE
		where LEASE_PUBLISH = 1 and LEASE_MAP &gt;= 3 and USER_ID = #{userId} and BUILD_ID in
		<foreach close=")" collection="buildIds" item="buildId" open="(" separator=",">
			#{buildId}
		</foreach>
		group by BUILD_ID
	</select>
	
	<select id="selectOneByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunLeaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    TOP 1
    <include refid="Base_Column_List" />
    from FUN_LEASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

	<select id="getFunLeaseListByCompIdAndCaseIds" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" />
		FROM FUN_LEASE
		WHERE COMP_ID = #{compId} AND LEASE_ID IN
			<foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
				#{caseId}
			</foreach>
			ORDER BY CREATION_TIME DESC
	</select>
	
	<select id="getSosoViewDataList" resultMap="SosoViewDto">
		SELECT 
		A.BUILD_NAME,A.BUILD_ID,A.LEASE_STATUS,A.LEASE_FLOOR,A.LEASE_FLOORS,A.LEASE_DOORS,A.LEASE_ID,
		A.LEASE_ROOM,A.LEASE_HALL,A.LEASE_WEI,A.LEASE_YANG,A.LEASE_AREA,A.LEASE_TOTAL_PRICE,A.USER_ID,A.PRICE_UNIT
		<if test="null != phone and phone != ''">
			,B.CASE_TYPE
		</if>
		FROM FUN_LEASE A
		<choose>
			<when test="null != phone and phone != ''">
			JOIN FUN_PHONE B ON A.LEASE_ID = B.CASE_ID AND B.CASE_TYPE = 2 AND PHONE = #{phone}
			</when>
			<otherwise>
				<if test="null != caseIds and caseIds.size &gt; 0">
					WHERE A.LEASE_ID IN
					<foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
						#{caseId}
					</foreach>
				</if>
			</otherwise>
		</choose>
		AND A.COMP_ID = #{compId}
		<if test="2 == trueViewRang"> and A.AREA_ID = #{areaId}</if>
		<if test="3 == trueViewRang"> and A.REG_ID = #{regId}</if>
		<if test="4 == trueViewRang"> and A.DEPT_ID = #{deptId}</if>
		<if test="5 == trueViewRang"> and A.GR_ID = #{grId}</if>
		<if test="6 == trueViewRang"> and A.USER_ID = #{userId}</if>
		ORDER BY A.CREATION_TIME DESC
	</select>
	<select id="getCompLeaseAddCountByDate" resultType="java.util.Map">
		SELECT  convert(nvarchar(10),CREATION_TIME,120) AS date ,ISNULL(COUNT(*),0) data
		FROM FUN_LEASE WHERE  COMP_ID= #{compId} and LEASE_STATUS &lt;= 4 AND CREATION_TIME &gt;= #{startTime}
		GROUP BY convert(nvarchar(10),CREATION_TIME,120)
	</select>
	<select id="getLeaseCountGoupByDept" resultType="java.util.Map">
		SELECT  DEPT_ID deptId,ISNULL(count(*),0) data
		from FUN_SALE WHERE COMP_ID=#{compId} and SALE_STATUS &lt;= 4 GROUP BY DEPT_ID
	</select>
  <update id="updatePassRealNamePublish" parameterType="map">
  	  update FUN_LEASE set LEASE_PUBLISH = LEASE_PUBLISH where COMP_ID = #{compId} and DEPT_ID = #{deptId} and USER_ID = #{userId} and LEASE_PUBLISH = 1
  	</update>
	
	<select id="getAppAchieveMonthStatisticsRankDetailHouseAdd" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM FUN_LEASE
		WHERE COMP_ID = #{compId} 
		<if test="2 == trueViewRang"> AND AREA_ID = #{trueViewRangId}</if>
		<if test="3 == trueViewRang"> AND REG_ID = #{trueViewRangId}</if>
		<if test="4 == trueViewRang"> AND DEPT_ID = #{trueViewRangId}</if>
		<if test="5 == trueViewRang"> AND GR_ID = #{trueViewRangId}</if>
		<if test="6 == trueViewRang"> AND USER_ID = #{trueViewRangId}</if>
		<if test="5 == trueViewRang and deptId != null">
			AND DEPT_ID = #{deptId}
		</if>
		AND LEASE_ID IN
		<foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
			#{caseId}
		</foreach>
		ORDER BY CREATION_TIME DESC
	</select>
    <select id="getAppAchieveMonthStatisticsRankDetailHouseForOrg" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM FUN_LEASE
		WHERE COMP_ID = #{compId}
        <if test="orgLikeWhereCause!=null and orgLikeWhereCause!=''">
          and ${orgLikeWhereCause}
        </if>
		AND LEASE_ID IN
		<foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
			#{caseId}
		</foreach>
		ORDER BY CREATION_TIME DESC
	</select>

  <select id="getLeaseSaleInfo" resultMap="BaseResultMap">
    select IS_SALE_LEASE,SALE_LEASE_ID
    from FUN_LEASE WHERE LEASE_ID = #{leaseId,jdbcType=INTEGER}
  </select>
  
  	 <select id="getHouseByIds" resultMap="BaseResultMap">
		SELECT
		LEASE_AREA,BUILD_NAME,LEASE_HALL,LEASE_ID,THUMB_URL,LEASE_TOTAL_PRICE,REGION_NAME,SECTION_NAME,
		LEASE_ROOM,LEASE_SUBJECT,COMP_ID,TAG_IDS,CITY_ID,PRICE_UNIT,LEASE_WEI,LEASE_USEAGE,
		BUILD_ID,LEASE_ROOF,LEASE_UNIT,LEASE_NUM,UNIT_FLOOR,USER_ID,ARCHIVE_ID,LEASE_STATUS,TRACK_TIME
		FROM FUN_LEASE
		WHERE 
		CITY_ID=#{shardCityId}
		AND LEASE_ID IN
		<foreach close=")" collection="saleIds" item="leaseId" open="(" separator=",">
			#{leaseId}
		</foreach>
	</select>

  <select id="getFunLeaseListByCaseIds" resultMap="BaseResultMap">
    SELECT
    LEASE_ID, LEASE_NO, LEASE_TOTAL_PRICE, PRICE_UNIT, LEASE_STATUS, LEASE_ROOM, LEASE_AREA, LEASE_DIRECT, ORGANIZATION_ID, LESSOR 
    FROM FUN_LEASE
    WHERE COMP_ID = #{compId} AND BUILD_ID = #{buildId}
    <if test="null != caseIds and caseIds.size &gt; 0">
      AND LEASE_ID IN
      <foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
        #{caseId}
      </foreach>
    </if>
  </select>

  <select id="getFunListByCaseIds" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM FUN_LEASE
    WHERE COMP_ID = #{compId}
    AND LEASE_ID IN
    <foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
      #{caseId}
    </foreach>
    ORDER BY CREATION_TIME DESC
  </select>
  <select id="selectLeaseByCaseNo" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM FUN_LEASE
    WHERE LEASE_NO=#{caseNo}
  </select>
  
  <select id="selectHouseInfoListByIds" resultType="com.myfun.erpWeb.managecenter.transaction.vo.HouseInfoVO">
    SELECT
   LEASE_ROOM as houseRoom,LEASE_HALL as houseHall, LEASE_WEI as houseWei,LEASE_AREA as houseArea,LEASE_ID as houseId,USER_ID as houseUserId,LEASE_OWNER as ownerName,BUILD_NAME as buildName,LEASE_TOTAL_PRICE as housePrice,PRICE_UNIT as housePriceUnit,ID_CARD as houseIdCard,ID_CARD_TYPE as houseIdCardType,CELL_PHONE as houseCellPhone  
    FROM FUN_LEASE
    WHERE COMP_ID = #{compId}
    AND LEASE_ID IN
    <foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
      #{caseId}
    </foreach>
  </select>

  <update id="transDataForDeleteUser" parameterType="map">
  	update FUN_LEASE set
  	USER_ID = NULL,
  	ARCHIVE_ID =  NUll,
  	LEASE_SOURCE = 5 ,
  	LEASE_LEVEL = 1 ,
  	UPDATE_TIME = #{paramMap.now} ,
  	SYNC_TIME = #{paramMap.now} ,
  	ACTION_TIME = #{paramMap.now} ,
  	TRACK_TIME = #{paramMap.now} ,
  	TRACK_TIME2 = #{paramMap.now} ,
  	SENDTOTENCENT = 0 ,
  	AREA_ID = #{paramMap.areaId} ,
  	REG_ID = #{paramMap.regId} ,
  	DEPT_ID = #{paramMap.deptId} ,
  	GR_ID = #{paramMap.grId} ,
  	PLATE_TYPE = 3 ,
  	ORANGE_FLAG = 0 ,
  	LEASE_COOPERATE = 0 ,
  	CITY_SHARE_FLAG = 0 where USER_ID = #{paramMap.userId}
  </update>
  
    <!-- 新增的离职用户移交房源 -->
  <update id="transLeaseData" parameterType="map">
  	update FUN_LEASE set
  	USER_ID = NULL,
  	ARCHIVE_ID =  NUll,
  	LEASE_SOURCE = 5 ,
  	LEASE_LEVEL = 1 ,
  	UPDATE_TIME = #{paramMap.now} ,
  	SYNC_TIME = #{paramMap.now} ,
  	ACTION_TIME = #{paramMap.now} ,
  	TRACK_TIME = #{paramMap.now} ,
  	TRACK_TIME2 = #{paramMap.now} ,
  	SENDTOTENCENT = 0 ,
  	PLATE_TYPE = 3 ,
  	ORANGE_FLAG = 0 ,
  	LEASE_COOPERATE = 0 ,
  	CITY_SHARE_FLAG = 0 ,
  	ORGANIZATION_ID = #{paramMap.organizationId},
  	USER_LEVEL = #{paramMap.userLevel},
  	TISSUE_LINE = #{paramMap.tissueLineHouse}
  	where USER_ID = #{paramMap.userId}
  </update>

  <update id="cleanEntrustInfoByLeaseId">
    update FUN_LEASE set HAS_RECORDED = 0, LEASE_ENTRUST_PRICE = NULL, HAS_ENTRUST = 0 where LEASE_ID = #{leaseId}
  </update>

  <update id="setEntrustInfoByLeaseId">
    update FUN_LEASE set HAS_RECORDED = #{record}, HAS_ENTRUST = #{hasEntrust}, LEASE_ENTRUST_PRICE = #{leaseEntrustPrice} where LEASE_ID = #{leaseId}
  </update>
  
</mapper>                                                      
