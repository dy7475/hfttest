<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunLoanBankMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunLoanBank">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="BANK_NAME" jdbcType="VARCHAR" property="bankName" />
    <result column="BANK_STATUS" jdbcType="TINYINT" property="bankStatus" />
    <result column="SEQ_NO" jdbcType="INTEGER" property="seqNo" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="SYSTEM_SET" jdbcType="TINYINT" property="systemSet" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, BANK_NAME, BANK_STATUS, SEQ_NO, CREATION_TIME, SYSTEM_SET
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunLoanBankExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_LOAN_BANK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_LOAN_BANK
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_LOAN_BANK
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunLoanBankExample">
    <!--@mbggenerated-->
    delete from FUN_LOAN_BANK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunLoanBank" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_LOAN_BANK (COMP_ID, BANK_NAME, BANK_STATUS, 
      SEQ_NO, CREATION_TIME, SYSTEM_SET
      )
    values (#{compId,jdbcType=INTEGER}, #{bankName,jdbcType=VARCHAR}, #{bankStatus,jdbcType=TINYINT}, 
      #{seqNo,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP}, #{systemSet,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunLoanBank" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_LOAN_BANK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="bankName != null">
        BANK_NAME,
      </if>
      <if test="bankStatus != null">
        BANK_STATUS,
      </if>
      <if test="seqNo != null">
        SEQ_NO,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="systemSet != null">
        SYSTEM_SET,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankStatus != null">
        #{bankStatus,jdbcType=TINYINT},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemSet != null">
        #{systemSet,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunLoanBankExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_LOAN_BANK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_LOAN_BANK
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.bankName != null">
        BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankStatus != null">
        BANK_STATUS = #{record.bankStatus,jdbcType=TINYINT},
      </if>
      <if test="record.seqNo != null">
        SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.systemSet != null">
        SYSTEM_SET = #{record.systemSet,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_LOAN_BANK
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
      BANK_STATUS = #{record.bankStatus,jdbcType=TINYINT},
      SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      SYSTEM_SET = #{record.systemSet,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunLoanBank">
    <!--@mbggenerated-->
    update FUN_LOAN_BANK
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        BANK_NAME = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankStatus != null">
        BANK_STATUS = #{bankStatus,jdbcType=TINYINT},
      </if>
      <if test="seqNo != null">
        SEQ_NO = #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemSet != null">
        SYSTEM_SET = #{systemSet,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunLoanBank">
    <!--@mbggenerated-->
    update FUN_LOAN_BANK
    set COMP_ID = #{compId,jdbcType=INTEGER},
      BANK_NAME = #{bankName,jdbcType=VARCHAR},
      BANK_STATUS = #{bankStatus,jdbcType=TINYINT},
      SEQ_NO = #{seqNo,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      SYSTEM_SET = #{systemSet,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="getList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from FUN_LOAN_BANK
    where comp_id=#{compId} and BANK_STATUS = 1
    <if test="bkNameSet.size &gt; 0">
      AND
        <foreach close=")" collection="bkNameSet" item="bkName" open="(" separator="or">
           BANK_NAME like '%${bkName}%'
       </foreach>

    </if>
    order by seq_no desc
  </select>
  
  <insert id="initLoadBankList">
    insert FUN_LOAN_BANK(COMP_ID, BANK_NAME, BANK_STATUS, SEQ_NO,CREATION_TIME, SYSTEM_SET)
    select #{compId}, BANK_NAME, BANK_STATUS, SEQ_NO , GETDATE(), SYSTEM_SET from FUN_LOAN_BANK where COMP_ID=0 and BANK_STATUS=1
  </insert>
</mapper>