<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunDepositMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunDeposit">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="CREATE_USER_ID" jdbcType="INTEGER" property="createUserId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="RECEIPT_MONEY" jdbcType="NUMERIC" property="receiptMoney" />
    <result column="RECEIPT_DEPT_ID" jdbcType="INTEGER" property="receiptDeptId" />
    <result column="RECEIPT_USER_ID" jdbcType="INTEGER" property="receiptUserId" />
    <result column="RECEIPT_TIME" jdbcType="TIMESTAMP" property="receiptTime" />
    <result column="PAYMENT_TYPE" jdbcType="VARCHAR" property="paymentType" />
    <result column="AUDIT_DEPT_ID" jdbcType="INTEGER" property="auditDeptId" />
    <result column="AUDIT_USER_ID" jdbcType="INTEGER" property="auditUserId" />
    <result column="AUDIT_TIME" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="CUST_NO" jdbcType="VARCHAR" property="custNo" />
    <result column="CUST_ID" jdbcType="INTEGER" property="custId" />
    <result column="CUST_TYPE" jdbcType="TINYINT" property="custType" />
    <result column="REFUND_DEPT_ID" jdbcType="INTEGER" property="refundDeptId" />
    <result column="REFUND_USER_ID" jdbcType="INTEGER" property="refundUserId" />
    <result column="REFUND_EXPLAIN" jdbcType="VARCHAR" property="refundExplain" />
    <result column="REFUND_TIME" jdbcType="TIMESTAMP" property="refundTime" />
    <result column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="DEAL_NO" jdbcType="VARCHAR" property="dealNo" />
    <result column="BILL_CODE_ID" jdbcType="INTEGER" property="billCodeId" />
    <result column="BILL_CODE_NO" jdbcType="VARCHAR" property="billCodeNo" />
    <result column="BILL_WAY" jdbcType="TINYINT" property="billWay" />
    <result column="BILL_PHOTO" jdbcType="VARCHAR" property="billPhoto" />
    <result column="IS_PRINT" jdbcType="TINYINT" property="isPrint" />
    <result column="DEPOSIT_STATUS" jdbcType="TINYINT" property="depositStatus" />
    <result column="DEPOSIT_REMARK" jdbcType="VARCHAR" property="depositRemark" />
    <result column="OPERATION_TYPE" jdbcType="TINYINT" property="operationType" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="INTELLIGENT_SEARCH" jdbcType="VARCHAR" property="intelligentSearch" />
    <result column="CUST_NAME" jdbcType="VARCHAR" property="custName" />
    <result column="PROPERTY_ADDRESS" jdbcType="VARCHAR" property="propertyAddress" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="CUST_MOBILE" jdbcType="VARCHAR" property="custMobile" />
    <result column="CUST_IDCARD" jdbcType="VARCHAR" property="custIdcard" />
    <result column="CUST_ID_CARD_TYPE" jdbcType="TINYINT" property="custIdCardType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, DEPT_ID, CREATE_USER_ID, CREATE_TIME, RECEIPT_MONEY, RECEIPT_DEPT_ID, 
    RECEIPT_USER_ID, RECEIPT_TIME, PAYMENT_TYPE, AUDIT_DEPT_ID, AUDIT_USER_ID, AUDIT_TIME, 
    BUILD_ID, CASE_ID, CASE_NO, CASE_TYPE, CUST_NO, CUST_ID, CUST_TYPE, REFUND_DEPT_ID, 
    REFUND_USER_ID, REFUND_EXPLAIN, REFUND_TIME, DEAL_ID, DEAL_NO, BILL_CODE_ID, BILL_CODE_NO, 
    BILL_WAY, BILL_PHOTO, IS_PRINT, DEPOSIT_STATUS, DEPOSIT_REMARK, OPERATION_TYPE, IS_DEL, 
    UPDATE_TIME, INTELLIGENT_SEARCH, CUST_NAME, PROPERTY_ADDRESS, BUILD_NAME, CUST_MOBILE, 
    CUST_IDCARD, CUST_ID_CARD_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDepositExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_DEPOSIT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_DEPOSIT
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_DEPOSIT
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDepositExample">
    <!--@mbggenerated-->
    delete from FUN_DEPOSIT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunDeposit" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_DEPOSIT (COMP_ID, DEPT_ID, CREATE_USER_ID, 
      CREATE_TIME, RECEIPT_MONEY, RECEIPT_DEPT_ID, 
      RECEIPT_USER_ID, RECEIPT_TIME, PAYMENT_TYPE, 
      AUDIT_DEPT_ID, AUDIT_USER_ID, AUDIT_TIME, 
      BUILD_ID, CASE_ID, CASE_NO, 
      CASE_TYPE, CUST_NO, CUST_ID, 
      CUST_TYPE, REFUND_DEPT_ID, REFUND_USER_ID, 
      REFUND_EXPLAIN, REFUND_TIME, DEAL_ID, 
      DEAL_NO, BILL_CODE_ID, BILL_CODE_NO, 
      BILL_WAY, BILL_PHOTO, IS_PRINT, 
      DEPOSIT_STATUS, DEPOSIT_REMARK, OPERATION_TYPE, 
      IS_DEL, UPDATE_TIME, INTELLIGENT_SEARCH, 
      CUST_NAME, PROPERTY_ADDRESS, BUILD_NAME, 
      CUST_MOBILE, CUST_IDCARD, CUST_ID_CARD_TYPE
      )
    values (#{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{receiptMoney,jdbcType=NUMERIC}, #{receiptDeptId,jdbcType=INTEGER}, 
      #{receiptUserId,jdbcType=INTEGER}, #{receiptTime,jdbcType=TIMESTAMP}, #{paymentType,jdbcType=VARCHAR}, 
      #{auditDeptId,jdbcType=INTEGER}, #{auditUserId,jdbcType=INTEGER}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{buildId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{caseNo,jdbcType=VARCHAR}, 
      #{caseType,jdbcType=TINYINT}, #{custNo,jdbcType=VARCHAR}, #{custId,jdbcType=INTEGER}, 
      #{custType,jdbcType=TINYINT}, #{refundDeptId,jdbcType=INTEGER}, #{refundUserId,jdbcType=INTEGER}, 
      #{refundExplain,jdbcType=VARCHAR}, #{refundTime,jdbcType=TIMESTAMP}, #{dealId,jdbcType=INTEGER}, 
      #{dealNo,jdbcType=VARCHAR}, #{billCodeId,jdbcType=INTEGER}, #{billCodeNo,jdbcType=VARCHAR}, 
      #{billWay,jdbcType=TINYINT}, #{billPhoto,jdbcType=VARCHAR}, #{isPrint,jdbcType=TINYINT}, 
      #{depositStatus,jdbcType=TINYINT}, #{depositRemark,jdbcType=VARCHAR}, #{operationType,jdbcType=TINYINT}, 
      #{isDel,jdbcType=TINYINT}, #{updateTime,jdbcType=TIMESTAMP}, #{intelligentSearch,jdbcType=VARCHAR}, 
      #{custName,jdbcType=VARCHAR}, #{propertyAddress,jdbcType=VARCHAR}, #{buildName,jdbcType=VARCHAR}, 
      #{custMobile,jdbcType=VARCHAR}, #{custIdcard,jdbcType=VARCHAR}, #{custIdCardType,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunDeposit" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_DEPOSIT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="receiptMoney != null">
        RECEIPT_MONEY,
      </if>
      <if test="receiptDeptId != null">
        RECEIPT_DEPT_ID,
      </if>
      <if test="receiptUserId != null">
        RECEIPT_USER_ID,
      </if>
      <if test="receiptTime != null">
        RECEIPT_TIME,
      </if>
      <if test="paymentType != null">
        PAYMENT_TYPE,
      </if>
      <if test="auditDeptId != null">
        AUDIT_DEPT_ID,
      </if>
      <if test="auditUserId != null">
        AUDIT_USER_ID,
      </if>
      <if test="auditTime != null">
        AUDIT_TIME,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="caseNo != null">
        CASE_NO,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="custNo != null">
        CUST_NO,
      </if>
      <if test="custId != null">
        CUST_ID,
      </if>
      <if test="custType != null">
        CUST_TYPE,
      </if>
      <if test="refundDeptId != null">
        REFUND_DEPT_ID,
      </if>
      <if test="refundUserId != null">
        REFUND_USER_ID,
      </if>
      <if test="refundExplain != null">
        REFUND_EXPLAIN,
      </if>
      <if test="refundTime != null">
        REFUND_TIME,
      </if>
      <if test="dealId != null">
        DEAL_ID,
      </if>
      <if test="dealNo != null">
        DEAL_NO,
      </if>
      <if test="billCodeId != null">
        BILL_CODE_ID,
      </if>
      <if test="billCodeNo != null">
        BILL_CODE_NO,
      </if>
      <if test="billWay != null">
        BILL_WAY,
      </if>
      <if test="billPhoto != null">
        BILL_PHOTO,
      </if>
      <if test="isPrint != null">
        IS_PRINT,
      </if>
      <if test="depositStatus != null">
        DEPOSIT_STATUS,
      </if>
      <if test="depositRemark != null">
        DEPOSIT_REMARK,
      </if>
      <if test="operationType != null">
        OPERATION_TYPE,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="intelligentSearch != null">
        INTELLIGENT_SEARCH,
      </if>
      <if test="custName != null">
        CUST_NAME,
      </if>
      <if test="propertyAddress != null">
        PROPERTY_ADDRESS,
      </if>
      <if test="buildName != null">
        BUILD_NAME,
      </if>
      <if test="custMobile != null">
        CUST_MOBILE,
      </if>
      <if test="custIdcard != null">
        CUST_IDCARD,
      </if>
      <if test="custIdCardType != null">
        CUST_ID_CARD_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiptMoney != null">
        #{receiptMoney,jdbcType=NUMERIC},
      </if>
      <if test="receiptDeptId != null">
        #{receiptDeptId,jdbcType=INTEGER},
      </if>
      <if test="receiptUserId != null">
        #{receiptUserId,jdbcType=INTEGER},
      </if>
      <if test="receiptTime != null">
        #{receiptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="auditDeptId != null">
        #{auditDeptId,jdbcType=INTEGER},
      </if>
      <if test="auditUserId != null">
        #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseNo != null">
        #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="custNo != null">
        #{custNo,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="custType != null">
        #{custType,jdbcType=TINYINT},
      </if>
      <if test="refundDeptId != null">
        #{refundDeptId,jdbcType=INTEGER},
      </if>
      <if test="refundUserId != null">
        #{refundUserId,jdbcType=INTEGER},
      </if>
      <if test="refundExplain != null">
        #{refundExplain,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealId != null">
        #{dealId,jdbcType=INTEGER},
      </if>
      <if test="dealNo != null">
        #{dealNo,jdbcType=VARCHAR},
      </if>
      <if test="billCodeId != null">
        #{billCodeId,jdbcType=INTEGER},
      </if>
      <if test="billCodeNo != null">
        #{billCodeNo,jdbcType=VARCHAR},
      </if>
      <if test="billWay != null">
        #{billWay,jdbcType=TINYINT},
      </if>
      <if test="billPhoto != null">
        #{billPhoto,jdbcType=VARCHAR},
      </if>
      <if test="isPrint != null">
        #{isPrint,jdbcType=TINYINT},
      </if>
      <if test="depositStatus != null">
        #{depositStatus,jdbcType=TINYINT},
      </if>
      <if test="depositRemark != null">
        #{depositRemark,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        #{operationType,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="intelligentSearch != null">
        #{intelligentSearch,jdbcType=VARCHAR},
      </if>
      <if test="custName != null">
        #{custName,jdbcType=VARCHAR},
      </if>
      <if test="propertyAddress != null">
        #{propertyAddress,jdbcType=VARCHAR},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="custMobile != null">
        #{custMobile,jdbcType=VARCHAR},
      </if>
      <if test="custIdcard != null">
        #{custIdcard,jdbcType=VARCHAR},
      </if>
      <if test="custIdCardType != null">
        #{custIdCardType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDepositExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_DEPOSIT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEPOSIT
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null">
        CREATE_USER_ID = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiptMoney != null">
        RECEIPT_MONEY = #{record.receiptMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.receiptDeptId != null">
        RECEIPT_DEPT_ID = #{record.receiptDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.receiptUserId != null">
        RECEIPT_USER_ID = #{record.receiptUserId,jdbcType=INTEGER},
      </if>
      <if test="record.receiptTime != null">
        RECEIPT_TIME = #{record.receiptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentType != null">
        PAYMENT_TYPE = #{record.paymentType,jdbcType=VARCHAR},
      </if>
      <if test="record.auditDeptId != null">
        AUDIT_DEPT_ID = #{record.auditDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.auditUserId != null">
        AUDIT_USER_ID = #{record.auditUserId,jdbcType=INTEGER},
      </if>
      <if test="record.auditTime != null">
        AUDIT_TIME = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseNo != null">
        CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
      <if test="record.custNo != null">
        CUST_NO = #{record.custNo,jdbcType=VARCHAR},
      </if>
      <if test="record.custId != null">
        CUST_ID = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.custType != null">
        CUST_TYPE = #{record.custType,jdbcType=TINYINT},
      </if>
      <if test="record.refundDeptId != null">
        REFUND_DEPT_ID = #{record.refundDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.refundUserId != null">
        REFUND_USER_ID = #{record.refundUserId,jdbcType=INTEGER},
      </if>
      <if test="record.refundExplain != null">
        REFUND_EXPLAIN = #{record.refundExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.refundTime != null">
        REFUND_TIME = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealId != null">
        DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      </if>
      <if test="record.dealNo != null">
        DEAL_NO = #{record.dealNo,jdbcType=VARCHAR},
      </if>
      <if test="record.billCodeId != null">
        BILL_CODE_ID = #{record.billCodeId,jdbcType=INTEGER},
      </if>
      <if test="record.billCodeNo != null">
        BILL_CODE_NO = #{record.billCodeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.billWay != null">
        BILL_WAY = #{record.billWay,jdbcType=TINYINT},
      </if>
      <if test="record.billPhoto != null">
        BILL_PHOTO = #{record.billPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.isPrint != null">
        IS_PRINT = #{record.isPrint,jdbcType=TINYINT},
      </if>
      <if test="record.depositStatus != null">
        DEPOSIT_STATUS = #{record.depositStatus,jdbcType=TINYINT},
      </if>
      <if test="record.depositRemark != null">
        DEPOSIT_REMARK = #{record.depositRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.operationType != null">
        OPERATION_TYPE = #{record.operationType,jdbcType=TINYINT},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.intelligentSearch != null">
        INTELLIGENT_SEARCH = #{record.intelligentSearch,jdbcType=VARCHAR},
      </if>
      <if test="record.custName != null">
        CUST_NAME = #{record.custName,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyAddress != null">
        PROPERTY_ADDRESS = #{record.propertyAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.buildName != null">
        BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.custMobile != null">
        CUST_MOBILE = #{record.custMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.custIdcard != null">
        CUST_IDCARD = #{record.custIdcard,jdbcType=VARCHAR},
      </if>
      <if test="record.custIdCardType != null">
        CUST_ID_CARD_TYPE = #{record.custIdCardType,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEPOSIT
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      CREATE_USER_ID = #{record.createUserId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      RECEIPT_MONEY = #{record.receiptMoney,jdbcType=NUMERIC},
      RECEIPT_DEPT_ID = #{record.receiptDeptId,jdbcType=INTEGER},
      RECEIPT_USER_ID = #{record.receiptUserId,jdbcType=INTEGER},
      RECEIPT_TIME = #{record.receiptTime,jdbcType=TIMESTAMP},
      PAYMENT_TYPE = #{record.paymentType,jdbcType=VARCHAR},
      AUDIT_DEPT_ID = #{record.auditDeptId,jdbcType=INTEGER},
      AUDIT_USER_ID = #{record.auditUserId,jdbcType=INTEGER},
      AUDIT_TIME = #{record.auditTime,jdbcType=TIMESTAMP},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      CUST_NO = #{record.custNo,jdbcType=VARCHAR},
      CUST_ID = #{record.custId,jdbcType=INTEGER},
      CUST_TYPE = #{record.custType,jdbcType=TINYINT},
      REFUND_DEPT_ID = #{record.refundDeptId,jdbcType=INTEGER},
      REFUND_USER_ID = #{record.refundUserId,jdbcType=INTEGER},
      REFUND_EXPLAIN = #{record.refundExplain,jdbcType=VARCHAR},
      REFUND_TIME = #{record.refundTime,jdbcType=TIMESTAMP},
      DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      DEAL_NO = #{record.dealNo,jdbcType=VARCHAR},
      BILL_CODE_ID = #{record.billCodeId,jdbcType=INTEGER},
      BILL_CODE_NO = #{record.billCodeNo,jdbcType=VARCHAR},
      BILL_WAY = #{record.billWay,jdbcType=TINYINT},
      BILL_PHOTO = #{record.billPhoto,jdbcType=VARCHAR},
      IS_PRINT = #{record.isPrint,jdbcType=TINYINT},
      DEPOSIT_STATUS = #{record.depositStatus,jdbcType=TINYINT},
      DEPOSIT_REMARK = #{record.depositRemark,jdbcType=VARCHAR},
      OPERATION_TYPE = #{record.operationType,jdbcType=TINYINT},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      INTELLIGENT_SEARCH = #{record.intelligentSearch,jdbcType=VARCHAR},
      CUST_NAME = #{record.custName,jdbcType=VARCHAR},
      PROPERTY_ADDRESS = #{record.propertyAddress,jdbcType=VARCHAR},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      CUST_MOBILE = #{record.custMobile,jdbcType=VARCHAR},
      CUST_IDCARD = #{record.custIdcard,jdbcType=VARCHAR},
      CUST_ID_CARD_TYPE = #{record.custIdCardType,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunDeposit">
    <!--@mbggenerated-->
    update FUN_DEPOSIT
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiptMoney != null">
        RECEIPT_MONEY = #{receiptMoney,jdbcType=NUMERIC},
      </if>
      <if test="receiptDeptId != null">
        RECEIPT_DEPT_ID = #{receiptDeptId,jdbcType=INTEGER},
      </if>
      <if test="receiptUserId != null">
        RECEIPT_USER_ID = #{receiptUserId,jdbcType=INTEGER},
      </if>
      <if test="receiptTime != null">
        RECEIPT_TIME = #{receiptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentType != null">
        PAYMENT_TYPE = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="auditDeptId != null">
        AUDIT_DEPT_ID = #{auditDeptId,jdbcType=INTEGER},
      </if>
      <if test="auditUserId != null">
        AUDIT_USER_ID = #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        AUDIT_TIME = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseNo != null">
        CASE_NO = #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="custNo != null">
        CUST_NO = #{custNo,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        CUST_ID = #{custId,jdbcType=INTEGER},
      </if>
      <if test="custType != null">
        CUST_TYPE = #{custType,jdbcType=TINYINT},
      </if>
      <if test="refundDeptId != null">
        REFUND_DEPT_ID = #{refundDeptId,jdbcType=INTEGER},
      </if>
      <if test="refundUserId != null">
        REFUND_USER_ID = #{refundUserId,jdbcType=INTEGER},
      </if>
      <if test="refundExplain != null">
        REFUND_EXPLAIN = #{refundExplain,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null">
        REFUND_TIME = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealId != null">
        DEAL_ID = #{dealId,jdbcType=INTEGER},
      </if>
      <if test="dealNo != null">
        DEAL_NO = #{dealNo,jdbcType=VARCHAR},
      </if>
      <if test="billCodeId != null">
        BILL_CODE_ID = #{billCodeId,jdbcType=INTEGER},
      </if>
      <if test="billCodeNo != null">
        BILL_CODE_NO = #{billCodeNo,jdbcType=VARCHAR},
      </if>
      <if test="billWay != null">
        BILL_WAY = #{billWay,jdbcType=TINYINT},
      </if>
      <if test="billPhoto != null">
        BILL_PHOTO = #{billPhoto,jdbcType=VARCHAR},
      </if>
      <if test="isPrint != null">
        IS_PRINT = #{isPrint,jdbcType=TINYINT},
      </if>
      <if test="depositStatus != null">
        DEPOSIT_STATUS = #{depositStatus,jdbcType=TINYINT},
      </if>
      <if test="depositRemark != null">
        DEPOSIT_REMARK = #{depositRemark,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        OPERATION_TYPE = #{operationType,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="intelligentSearch != null">
        INTELLIGENT_SEARCH = #{intelligentSearch,jdbcType=VARCHAR},
      </if>
      <if test="custName != null">
        CUST_NAME = #{custName,jdbcType=VARCHAR},
      </if>
      <if test="propertyAddress != null">
        PROPERTY_ADDRESS = #{propertyAddress,jdbcType=VARCHAR},
      </if>
      <if test="buildName != null">
        BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="custMobile != null">
        CUST_MOBILE = #{custMobile,jdbcType=VARCHAR},
      </if>
      <if test="custIdcard != null">
        CUST_IDCARD = #{custIdcard,jdbcType=VARCHAR},
      </if>
      <if test="custIdCardType != null">
        CUST_ID_CARD_TYPE = #{custIdCardType,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunDeposit">
    <!--@mbggenerated-->
    update FUN_DEPOSIT
    set COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      CREATE_USER_ID = #{createUserId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      RECEIPT_MONEY = #{receiptMoney,jdbcType=NUMERIC},
      RECEIPT_DEPT_ID = #{receiptDeptId,jdbcType=INTEGER},
      RECEIPT_USER_ID = #{receiptUserId,jdbcType=INTEGER},
      RECEIPT_TIME = #{receiptTime,jdbcType=TIMESTAMP},
      PAYMENT_TYPE = #{paymentType,jdbcType=VARCHAR},
      AUDIT_DEPT_ID = #{auditDeptId,jdbcType=INTEGER},
      AUDIT_USER_ID = #{auditUserId,jdbcType=INTEGER},
      AUDIT_TIME = #{auditTime,jdbcType=TIMESTAMP},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_NO = #{caseNo,jdbcType=VARCHAR},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      CUST_NO = #{custNo,jdbcType=VARCHAR},
      CUST_ID = #{custId,jdbcType=INTEGER},
      CUST_TYPE = #{custType,jdbcType=TINYINT},
      REFUND_DEPT_ID = #{refundDeptId,jdbcType=INTEGER},
      REFUND_USER_ID = #{refundUserId,jdbcType=INTEGER},
      REFUND_EXPLAIN = #{refundExplain,jdbcType=VARCHAR},
      REFUND_TIME = #{refundTime,jdbcType=TIMESTAMP},
      DEAL_ID = #{dealId,jdbcType=INTEGER},
      DEAL_NO = #{dealNo,jdbcType=VARCHAR},
      BILL_CODE_ID = #{billCodeId,jdbcType=INTEGER},
      BILL_CODE_NO = #{billCodeNo,jdbcType=VARCHAR},
      BILL_WAY = #{billWay,jdbcType=TINYINT},
      BILL_PHOTO = #{billPhoto,jdbcType=VARCHAR},
      IS_PRINT = #{isPrint,jdbcType=TINYINT},
      DEPOSIT_STATUS = #{depositStatus,jdbcType=TINYINT},
      DEPOSIT_REMARK = #{depositRemark,jdbcType=VARCHAR},
      OPERATION_TYPE = #{operationType,jdbcType=TINYINT},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      INTELLIGENT_SEARCH = #{intelligentSearch,jdbcType=VARCHAR},
      CUST_NAME = #{custName,jdbcType=VARCHAR},
      PROPERTY_ADDRESS = #{propertyAddress,jdbcType=VARCHAR},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      CUST_MOBILE = #{custMobile,jdbcType=VARCHAR},
      CUST_IDCARD = #{custIdcard,jdbcType=VARCHAR},
      CUST_ID_CARD_TYPE = #{custIdCardType,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="VoBaseResultMap" type="com.myfun.erpWeb.managecenter.transaction.vo.DepositVO">
     <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="CREATE_USER_ID" jdbcType="INTEGER" property="createUserId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="RECEIPT_MONEY" jdbcType="NUMERIC" property="receiptMoney" />
    <result column="RECEIPT_DEPT_ID" jdbcType="INTEGER" property="receiptDeptId" />
    <result column="RECEIPT_USER_ID" jdbcType="INTEGER" property="receiptUserId" />
    <result column="RECEIPT_TIME" jdbcType="TIMESTAMP" property="receiptTime" />
    <result column="PAYMENT_TYPE" jdbcType="VARCHAR" property="paymentType" />
    <result column="AUDIT_DEPT_ID" jdbcType="INTEGER" property="auditDeptId" />
    <result column="AUDIT_USER_ID" jdbcType="INTEGER" property="auditUserId" />
    <result column="AUDIT_TIME" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="CUST_NO" jdbcType="VARCHAR" property="custNo" />
    <result column="CUST_ID" jdbcType="INTEGER" property="custId" />
    <result column="CUST_TYPE" jdbcType="TINYINT" property="custType" />
    <result column="REFUND_DEPT_ID" jdbcType="INTEGER" property="refundDeptId" />
    <result column="REFUND_USER_ID" jdbcType="INTEGER" property="refundUserId" />
    <result column="REFUND_EXPLAIN" jdbcType="VARCHAR" property="refundExplain" />
    <result column="REFUND_TIME" jdbcType="TIMESTAMP" property="refundTime" />
    <result column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="DEAL_NO" jdbcType="INTEGER" property="dealNo" />
    <result column="BILL_CODE_ID" jdbcType="INTEGER" property="billCodeId" />
    <result column="BILL_CODE_NO" jdbcType="VARCHAR" property="billCodeNo" />
    <result column="BILL_WAY" jdbcType="TINYINT" property="billWay" />
    <result column="BILL_PHOTO" jdbcType="VARCHAR" property="billPhoto" />
    <result column="IS_PRINT" jdbcType="TINYINT" property="isPrint" />
    <result column="DEPOSIT_STATUS" jdbcType="TINYINT" property="depositStatus" />
    <result column="DEPOSIT_REMARK" jdbcType="VARCHAR" property="depositRemark" />
    <result column="OPERATION_TYPE" jdbcType="TINYINT" property="operationType" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CUST_NAME" jdbcType="VARCHAR" property="custName" />
    <result column="PROPERTY_ADDRESS" jdbcType="VARCHAR" property="propertyAddress" />
     <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="CUST_MOBILE" jdbcType="VARCHAR" property="custMobile" />
    <result column="CUST_IDCARD" jdbcType="VARCHAR" property="custIdcard" />
    <result column="CUST_ID_CARD_TYPE" jdbcType="TINYINT" property="custIdCardType" />
  </resultMap>
  
  <select id="selectDepositList" resultMap="VoBaseResultMap">
    select 
   	A.ID, A.COMP_ID, A.DEPT_ID, A.CREATE_USER_ID, A.CREATE_TIME, A.RECEIPT_MONEY, A.RECEIPT_DEPT_ID, 
    A.RECEIPT_USER_ID, A.RECEIPT_TIME, A.PAYMENT_TYPE, A.AUDIT_DEPT_ID, A.AUDIT_USER_ID, A.AUDIT_TIME, 
    A.BUILD_ID, A.CASE_ID, A.CASE_NO, A.CASE_TYPE, A.CUST_NO, A.CUST_ID, A.CUST_TYPE, A.REFUND_DEPT_ID, 
    A.REFUND_USER_ID, A.REFUND_EXPLAIN, A.REFUND_TIME, A.DEAL_ID, A.DEAL_NO, A.BILL_CODE_ID, A.BILL_CODE_NO, 
    A.BILL_WAY, A.BILL_PHOTO, A.IS_PRINT, A.DEPOSIT_STATUS, A.DEPOSIT_REMARK, A.OPERATION_TYPE, A.IS_DEL, 
    A.UPDATE_TIME, A.INTELLIGENT_SEARCH, A.CUST_NAME,A.PROPERTY_ADDRESS,A.BUILD_NAME,A.CUST_MOBILE,A.CUST_IDCARD,A.CUST_ID_CARD_TYPE    from FUN_DEPOSIT A
    <if test="'CREATE'==param.userType">
    JOIN FUN_USERS C ON C.USER_ID=A.CREATE_USER_ID
    </if>    
    <if test="'RECEIPT'==param.userType">
    JOIN FUN_USERS C ON C.USER_ID=A.RECEIPT_USER_ID
    </if>    
    <if test="'AUDIT'==param.userType">
    JOIN FUN_USERS C ON C.USER_ID=A.AUDIT_USER_ID
    </if>    
    where A.COMP_ID = #{param.compId,jdbcType=INTEGER}
    <if test="param.receiptNo != null and ''!=param.receiptNo">
    and  A.INTELLIGENT_SEARCH like #{param.receiptNo}
    </if>
    <if test="param.userId !=null">
      <choose>
	    <when test="param.operLevel !=null">
	   	  	<if test="param.operLevel ==0">
	   	 		 and  C.USER_ID = #{param.userId,jdbcType=INTEGER}
	   		</if>
	   		<if test="param.operLevel ==1">
	   	 		and C.TISSUE_LINE like '%:${param.userId}:%' AND C.USER_LEVEL &lt;= #{param.userLevel}
	   		</if>
	   		<if test="param.operLevel ==2">
	   	 		and C.TISSUE_LINE like '%:${param.userId}:%'  
	   		</if>
	     </when>
	     <otherwise>
	     	 and  C.USER_ID = #{param.userId,jdbcType=INTEGER}
	     </otherwise>
     </choose>
    </if>
    <if test="param.isNewOrganization != true ">
	    <if test="param.areaId !=null">
	     and  C.AREA_ID = #{param.areaId,jdbcType=INTEGER}
	    </if>
	    <if test="param.regId !=null">
	     and  C.REG_ID = #{param.regId,jdbcType=INTEGER}
	    </if>
	    <if test="param.deptId !=null">
	     and  C.DEPT_ID = #{param.deptId,jdbcType=INTEGER}
	    </if>
	    <if test="param.grId !=null">
	     and  C.GR_ID = #{param.grId,jdbcType=INTEGER}
	    </if>
	</if>
    <if test="param.isNewOrganization == true ">
	    <if test="param.organizationId != null and param.organizationId != 0">
			and C.TISSUE_LINE LIKE '%:${param.organizationId}:%'
		</if>
    </if>
    <if test="param.buildIds !=null">
     and  A.BUILD_ID IN <foreach close=")" collection="param.buildIds" item="buildId" open="(" separator=",">#{buildId}</foreach>
    </if>
    <if test="param.status !=null">
     and  A.DEPOSIT_STATUS = #{param.status,jdbcType=TINYINT}
     <if test="param.status == 1">
     	 and  A.OPERATION_TYPE = 0
     </if>
    </if>
    <if test="param.dealStatus !=null">
    	<if test="param.dealStatus == 0">
         and  A.DEAL_ID is null
        </if>
        <if test="param.dealStatus == 1">
         and  A.DEAL_ID > 0
        </if>
    </if>
    <if test="param.custName !=null">
     and  A.CUST_NAME = #{param.custName}
    </if>
    <if test="param.typeList !=null">
     and  A.OPERATION_TYPE in 
      <foreach close=")" collection="param.typeList" item="type" open="(" separator=",">
      	#{type}
      </foreach>
    </if>
    <if test="param.startTime !=null and ''!=param.startTime">
      and ${param.dateType} &gt;= #{param.startTime}
    </if>
    <if test="param.endTime !=null and ''!=param.endTime">
      and ${param.dateType} &lt;= #{param.endTime}
    </if>
    and A.IS_DEL = 0
    order by ${param.orderBy} 
  </select>
  
  <select id="selectDepositListByDealId" resultMap="VoBaseResultMap">
    select 
    ID, COMP_ID, DEPT_ID, CREATE_USER_ID, CREATE_TIME, RECEIPT_MONEY, RECEIPT_DEPT_ID, 
    RECEIPT_USER_ID, RECEIPT_TIME, PAYMENT_TYPE, AUDIT_DEPT_ID, AUDIT_USER_ID, AUDIT_TIME, 
    BUILD_ID, CASE_ID, CASE_NO, CASE_TYPE, CUST_NO, CUST_ID, CUST_TYPE, REFUND_DEPT_ID, 
    REFUND_USER_ID, REFUND_EXPLAIN, REFUND_TIME, DEAL_ID, DEAL_NO, BILL_CODE_ID, BILL_CODE_NO, 
    BILL_WAY, BILL_PHOTO, IS_PRINT, DEPOSIT_STATUS, DEPOSIT_REMARK, OPERATION_TYPE, IS_DEL, 
    UPDATE_TIME, INTELLIGENT_SEARCH, CUST_NAME ,PROPERTY_ADDRESS,BUILD_NAME,CUST_MOBILE,CUST_IDCARD,CUST_ID_CARD_TYPE    from FUN_DEPOSIT 
    where COMP_ID = #{compId}
    and DEAL_ID = #{dealId}
    <if test="id!=null">
    	and ID != #{id}
    </if>
    and IS_DEL = 0
    order by UPDATE_TIME DESC
  </select>
  
  <select id="selectDepositListByHouseCustId" resultMap="VoBaseResultMap">
    select 
    ID, COMP_ID, DEPT_ID, CREATE_USER_ID, CREATE_TIME, RECEIPT_MONEY, RECEIPT_DEPT_ID, 
    RECEIPT_USER_ID, RECEIPT_TIME, PAYMENT_TYPE, AUDIT_DEPT_ID, AUDIT_USER_ID, AUDIT_TIME, 
    BUILD_ID, CASE_ID, CASE_NO, CASE_TYPE, CUST_NO, CUST_ID, CUST_TYPE, REFUND_DEPT_ID, 
    REFUND_USER_ID, REFUND_EXPLAIN, REFUND_TIME, DEAL_ID, DEAL_NO, BILL_CODE_ID, BILL_CODE_NO, 
    BILL_WAY, BILL_PHOTO, IS_PRINT, DEPOSIT_STATUS, DEPOSIT_REMARK, OPERATION_TYPE, IS_DEL, 
    UPDATE_TIME, INTELLIGENT_SEARCH, CUST_NAME ,PROPERTY_ADDRESS ,BUILD_NAME,CUST_MOBILE,CUST_IDCARD,CUST_ID_CARD_TYPE     from FUN_DEPOSIT 
    where COMP_ID = #{compId}
    and CUST_ID = #{custId}
    and CUST_TYPE = #{custType}
    and CASE_ID = #{caseId}
    and CASE_TYPE = #{caseType}
    <if test="id!=null">
    	and ID != #{id}
    </if>
    AND DEAL_ID is null
    and IS_DEL = 0
    order by UPDATE_TIME DESC
  </select>
  
  <select id="countDepositListByDealId" resultType="_int">
    select 
    count(*) from FUN_DEPOSIT 
    where COMP_ID = #{compId}
    and DEAL_ID = #{dealId}
    and IS_DEL = 0
    and DEPOSIT_STATUS = 0
  </select>
  
  <select id="countDepositListByHouseCustId" resultType="_int">
    select 
     count(*) from FUN_DEPOSIT 
    where COMP_ID = #{compId}
    and CUST_ID = #{custId}
    and CUST_TYPE = #{custType}
    and CASE_ID = #{caseId}
    and CASE_TYPE = #{caseType}
    AND DEAL_ID is null
    and IS_DEL = 0
    and DEPOSIT_STATUS = 0
  </select>
  
  <update id="updateDealInfoByIds">
    update FUN_DEPOSIT
    set
      DEAL_ID = #{dealId,jdbcType=INTEGER},
      DEAL_NO = #{dealNo,jdbcType=VARCHAR}
    where 
    COMP_ID = #{compId}
    and ID in 
    <foreach collection="depositIds" item="depositId" open="(" separator="," close=")">
    	#{depositId}
    </foreach>
  </update>
  
  <update id="delBillPhoto">
  	update FUN_DEPOSIT set BILL_PHOTO = null where ID = #{depositId,jdbcType=INTEGER}
  </update>
  
  <update id="updateDepositBillPhoto">
  	update FUN_DEPOSIT set BILL_PHOTO = #{photoUrl} where ID = #{depositId,jdbcType=INTEGER}
  </update>
  <update id="clearAuditInfo">
  	update FUN_DEPOSIT set AUDIT_DEPT_ID=null, AUDIT_USER_ID=null, AUDIT_TIME=null where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>