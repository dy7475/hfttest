<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpCountDoneMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpCountDone" >
    <!--@mbggenerated-->
    <id column="S_ID" property="sId" jdbcType="INTEGER" />
    <id column="SALE_LEASE" property="saleLease" jdbcType="TINYINT" />
    <id column="HOUSE_ID" property="houseId" jdbcType="INTEGER" />
    <id column="HOUSE_USEAGE" property="houseUseage" jdbcType="INTEGER" />
    <result column="STATU_NOW" property="statuNow" jdbcType="INTEGER" />
    <result column="SITE_HOUSE_ID" property="siteHouseId" jdbcType="VARCHAR" />
    <result column="LAST_DONE_TIME" property="lastDoneTime" jdbcType="TIMESTAMP" />
    <result column="EDIT_ID" property="editId" jdbcType="VARCHAR" />
    <result column="DELETE_ID" property="deleteId" jdbcType="VARCHAR" />
    <result column="SYNRAND" property="synrand" jdbcType="SMALLINT" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="COMP_NO" property="compNo" jdbcType="VARCHAR" />
    <result column="ACTION_OPER" property="actionOper" jdbcType="TINYINT" />
    <result column="TASK_ID" property="taskId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    S_ID, SALE_LEASE, HOUSE_ID, HOUSE_USEAGE, STATU_NOW, SITE_HOUSE_ID, LAST_DONE_TIME, 
    EDIT_ID, DELETE_ID, SYNRAND, CITY_ID, COMP_ID, COMP_NO, ACTION_OPER, TASK_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpCountDoneExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from COUNT_DONE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from COUNT_DONE
    where S_ID = #{sId,jdbcType=INTEGER}
      and SALE_LEASE = #{saleLease,jdbcType=TINYINT}
      and HOUSE_ID = #{houseId,jdbcType=INTEGER}
      and HOUSE_USEAGE = #{houseUseage,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    <!--@mbggenerated-->
    delete from COUNT_DONE
    where S_ID = #{sId,jdbcType=INTEGER}
      and SALE_LEASE = #{saleLease,jdbcType=TINYINT}
      and HOUSE_ID = #{houseId,jdbcType=INTEGER}
      and HOUSE_USEAGE = #{houseUseage,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpCountDoneExample" >
    <!--@mbggenerated-->
    delete from COUNT_DONE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpCountDone" >
    <!--@mbggenerated-->
    insert into COUNT_DONE (S_ID, SALE_LEASE, HOUSE_ID, 
      HOUSE_USEAGE, STATU_NOW, SITE_HOUSE_ID, 
      LAST_DONE_TIME, EDIT_ID, DELETE_ID, 
      SYNRAND, CITY_ID, COMP_ID, 
      COMP_NO, ACTION_OPER, TASK_ID
      )
    values (#{sId,jdbcType=INTEGER}, #{saleLease,jdbcType=TINYINT}, #{houseId,jdbcType=INTEGER}, 
      #{houseUseage,jdbcType=INTEGER}, #{statuNow,jdbcType=INTEGER}, #{siteHouseId,jdbcType=VARCHAR}, 
      #{lastDoneTime,jdbcType=TIMESTAMP}, #{editId,jdbcType=VARCHAR}, #{deleteId,jdbcType=VARCHAR}, 
      #{synrand,jdbcType=SMALLINT}, #{cityId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, 
      #{compNo,jdbcType=VARCHAR}, #{actionOper,jdbcType=TINYINT}, #{taskId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpCountDone" >
    <!--@mbggenerated-->
    insert into COUNT_DONE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sId != null" >
        S_ID,
      </if>
      <if test="saleLease != null" >
        SALE_LEASE,
      </if>
      <if test="houseId != null" >
        HOUSE_ID,
      </if>
      <if test="houseUseage != null" >
        HOUSE_USEAGE,
      </if>
      <if test="statuNow != null" >
        STATU_NOW,
      </if>
      <if test="siteHouseId != null" >
        SITE_HOUSE_ID,
      </if>
      <if test="lastDoneTime != null" >
        LAST_DONE_TIME,
      </if>
      <if test="editId != null" >
        EDIT_ID,
      </if>
      <if test="deleteId != null" >
        DELETE_ID,
      </if>
      <if test="synrand != null" >
        SYNRAND,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="compNo != null" >
        COMP_NO,
      </if>
      <if test="actionOper != null" >
        ACTION_OPER,
      </if>
      <if test="taskId != null" >
        TASK_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sId != null" >
        #{sId,jdbcType=INTEGER},
      </if>
      <if test="saleLease != null" >
        #{saleLease,jdbcType=TINYINT},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="houseUseage != null" >
        #{houseUseage,jdbcType=INTEGER},
      </if>
      <if test="statuNow != null" >
        #{statuNow,jdbcType=INTEGER},
      </if>
      <if test="siteHouseId != null" >
        #{siteHouseId,jdbcType=VARCHAR},
      </if>
      <if test="lastDoneTime != null" >
        #{lastDoneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editId != null" >
        #{editId,jdbcType=VARCHAR},
      </if>
      <if test="deleteId != null" >
        #{deleteId,jdbcType=VARCHAR},
      </if>
      <if test="synrand != null" >
        #{synrand,jdbcType=SMALLINT},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null" >
        #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="actionOper != null" >
        #{actionOper,jdbcType=TINYINT},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpCountDoneExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from COUNT_DONE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update COUNT_DONE
    <set >
      <if test="record.sId != null" >
        S_ID = #{record.sId,jdbcType=INTEGER},
      </if>
      <if test="record.saleLease != null" >
        SALE_LEASE = #{record.saleLease,jdbcType=TINYINT},
      </if>
      <if test="record.houseId != null" >
        HOUSE_ID = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.houseUseage != null" >
        HOUSE_USEAGE = #{record.houseUseage,jdbcType=INTEGER},
      </if>
      <if test="record.statuNow != null" >
        STATU_NOW = #{record.statuNow,jdbcType=INTEGER},
      </if>
      <if test="record.siteHouseId != null" >
        SITE_HOUSE_ID = #{record.siteHouseId,jdbcType=VARCHAR},
      </if>
      <if test="record.lastDoneTime != null" >
        LAST_DONE_TIME = #{record.lastDoneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.editId != null" >
        EDIT_ID = #{record.editId,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteId != null" >
        DELETE_ID = #{record.deleteId,jdbcType=VARCHAR},
      </if>
      <if test="record.synrand != null" >
        SYNRAND = #{record.synrand,jdbcType=SMALLINT},
      </if>
      <if test="record.cityId != null" >
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.compNo != null" >
        COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      </if>
      <if test="record.actionOper != null" >
        ACTION_OPER = #{record.actionOper,jdbcType=TINYINT},
      </if>
      <if test="record.taskId != null" >
        TASK_ID = #{record.taskId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update COUNT_DONE
    set S_ID = #{record.sId,jdbcType=INTEGER},
      SALE_LEASE = #{record.saleLease,jdbcType=TINYINT},
      HOUSE_ID = #{record.houseId,jdbcType=INTEGER},
      HOUSE_USEAGE = #{record.houseUseage,jdbcType=INTEGER},
      STATU_NOW = #{record.statuNow,jdbcType=INTEGER},
      SITE_HOUSE_ID = #{record.siteHouseId,jdbcType=VARCHAR},
      LAST_DONE_TIME = #{record.lastDoneTime,jdbcType=TIMESTAMP},
      EDIT_ID = #{record.editId,jdbcType=VARCHAR},
      DELETE_ID = #{record.deleteId,jdbcType=VARCHAR},
      SYNRAND = #{record.synrand,jdbcType=SMALLINT},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      ACTION_OPER = #{record.actionOper,jdbcType=TINYINT},
      TASK_ID = #{record.taskId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpCountDone" >
    <!--@mbggenerated-->
    update COUNT_DONE
    <set >
      <if test="statuNow != null" >
        STATU_NOW = #{statuNow,jdbcType=INTEGER},
      </if>
      <if test="siteHouseId != null" >
        SITE_HOUSE_ID = #{siteHouseId,jdbcType=VARCHAR},
      </if>
      <if test="lastDoneTime != null" >
        LAST_DONE_TIME = #{lastDoneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editId != null" >
        EDIT_ID = #{editId,jdbcType=VARCHAR},
      </if>
      <if test="deleteId != null" >
        DELETE_ID = #{deleteId,jdbcType=VARCHAR},
      </if>
      <if test="synrand != null" >
        SYNRAND = #{synrand,jdbcType=SMALLINT},
      </if>
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null" >
        COMP_NO = #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="actionOper != null" >
        ACTION_OPER = #{actionOper,jdbcType=TINYINT},
      </if>
      <if test="taskId != null" >
        TASK_ID = #{taskId,jdbcType=VARCHAR},
      </if>
    </set>
    where S_ID = #{sId,jdbcType=INTEGER}
      and SALE_LEASE = #{saleLease,jdbcType=TINYINT}
      and HOUSE_ID = #{houseId,jdbcType=INTEGER}
      and HOUSE_USEAGE = #{houseUseage,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpCountDone" >
    <!--@mbggenerated-->
    update COUNT_DONE
    set STATU_NOW = #{statuNow,jdbcType=INTEGER},
      SITE_HOUSE_ID = #{siteHouseId,jdbcType=VARCHAR},
      LAST_DONE_TIME = #{lastDoneTime,jdbcType=TIMESTAMP},
      EDIT_ID = #{editId,jdbcType=VARCHAR},
      DELETE_ID = #{deleteId,jdbcType=VARCHAR},
      SYNRAND = #{synrand,jdbcType=SMALLINT},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      COMP_NO = #{compNo,jdbcType=VARCHAR},
      ACTION_OPER = #{actionOper,jdbcType=TINYINT},
      TASK_ID = #{taskId,jdbcType=VARCHAR}
    where S_ID = #{sId,jdbcType=INTEGER}
      and SALE_LEASE = #{saleLease,jdbcType=TINYINT}
      and HOUSE_ID = #{houseId,jdbcType=INTEGER}
      and HOUSE_USEAGE = #{houseUseage,jdbcType=INTEGER}
  </update>
   <resultMap extends = "BaseResultMap" id ="BaseResultMapDto" type= "com.myfun.repository.erpdb.dto.ErpCountDoneDto">
    <result column="SITE_ID" property="siteId" jdbcType="INTEGER" />
  </resultMap>
   <select id = "getHouseCountDoneList" resultMap = "BaseResultMapDto">
		SELECT HOUSE_ID ,S_ID  FROM COUNT_DONE 
		WHERE S_ID IN 
		<foreach collection="sIds" index="index" item="sId" open="(" separator="," close=")">
			#{sId}
		</foreach>
		AND HOUSE_ID IN
		<foreach collection="caseIds" index="index" item="houseId" open="(" separator="," close=")">
			#{houseId}
		</foreach>
		AND SALE_LEASE= #{caseType}
		AND SITE_HOUSE_ID IS NOT NULL
		ORDER BY HOUSE_ID
	</select>
</mapper>