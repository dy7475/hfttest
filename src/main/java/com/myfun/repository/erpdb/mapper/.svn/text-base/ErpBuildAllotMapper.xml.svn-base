<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpBuildAllotMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpBuildAllot">
    <!--@mbggenerated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="build_id" jdbcType="INTEGER" property="buildId" />
    <result column="comp_id" jdbcType="INTEGER" property="compId" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    id, build_id, comp_id, dept_id, create_time, is_del, create_user, create_user_id, 
    dept_name
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildAllotExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from build_allot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from build_allot
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from build_allot
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildAllotExample">
    <!--@mbggenerated-->
    delete from build_allot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpBuildAllot" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into build_allot (build_id, comp_id, dept_id, 
      create_time, is_del, create_user, 
      create_user_id, dept_name)
    values (#{buildId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=TINYINT}, #{createUser,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpBuildAllot" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into build_allot
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="buildId != null">
        build_id,
      </if>
      <if test="compId != null">
        comp_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="deptName != null">
        dept_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildAllotExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from build_allot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update build_allot
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null">
        build_id = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        comp_id = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.deptName != null">
        dept_name = #{record.deptName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update build_allot
    set id = #{record.id,jdbcType=INTEGER},
      build_id = #{record.buildId,jdbcType=INTEGER},
      comp_id = #{record.compId,jdbcType=INTEGER},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=TINYINT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      dept_name = #{record.deptName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpBuildAllot">
    <!--@mbggenerated-->
    update build_allot
    <set>
      <if test="buildId != null">
        build_id = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        comp_id = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpBuildAllot">
    <!--@mbggenerated-->
    update build_allot
    set build_id = #{buildId,jdbcType=INTEGER},
      comp_id = #{compId,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      dept_name = #{deptName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteBeforConfigBuild">
    DELETE  FROM build_allot WHERE  COMP_ID = #{compId} AND BUILD_ID = #{buildId}
  </delete>
</mapper>