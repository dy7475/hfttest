<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpKpiUserAssociateConfigMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpKpiUserAssociateConfig" >
    <!--@mbggenerated-->
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="CONFIG_ID" property="configId" jdbcType="INTEGER" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="CONFIG_TYPE" property="configType" jdbcType="INTEGER" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, CONFIG_ID, CITY_ID, COMP_ID, USER_ID, CONFIG_TYPE, IS_DEL, UPDATE_TIME, [STATUS]
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpKpiUserAssociateConfigExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from KPI_USER_ASSOCIATE_CONFIG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpKpiUserAssociateConfigExample" >
    <!--@mbggenerated-->
    delete from KPI_USER_ASSOCIATE_CONFIG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpKpiUserAssociateConfig" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into KPI_USER_ASSOCIATE_CONFIG (CONFIG_ID, CITY_ID, COMP_ID, 
      USER_ID, CONFIG_TYPE, IS_DEL, 
      UPDATE_TIME, [STATUS])
    values (#{configId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{configType,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpKpiUserAssociateConfig" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into KPI_USER_ASSOCIATE_CONFIG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="configId != null" >
        CONFIG_ID,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="configType != null" >
        CONFIG_TYPE,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="status != null" >
        [STATUS],
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="configId != null" >
        #{configId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="configType != null" >
        #{configType,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpKpiUserAssociateConfigExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from KPI_USER_ASSOCIATE_CONFIG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update KPI_USER_ASSOCIATE_CONFIG
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.configId != null" >
        CONFIG_ID = #{record.configId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.configType != null" >
        CONFIG_TYPE = #{record.configType,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null" >
        IS_DEL = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        [STATUS] = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update KPI_USER_ASSOCIATE_CONFIG
    set ID = #{record.id,jdbcType=INTEGER},
      CONFIG_ID = #{record.configId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      CONFIG_TYPE = #{record.configType,jdbcType=INTEGER},
      IS_DEL = #{record.isDel,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      [STATUS] = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <insert id="insertHalfKPITarget">
    if not exists (select 1 from KPI_HALF_SCORE_USER where user_id = #{userId} and ACTIVITY_MONTH = #{month})
    BEGIN
    INSERT INTO [KPI_HALF_SCORE_USER]([ID_NO], [ACTIVITY_MONTH], [ACYIVITY_TYPE], [CREATE_TIME],USER_ID) VALUES ( #{idNo}, #{month}, #{activeType}, #{now}, #{userId})
    end
  </insert>

  <insert id="notExistThenInsert">
    if not exists (select 1 from KPI_USER_ASSOCIATE_CONFIG where user_id = #{po.userId} and is_del = 0)
    BEGIN
      insert into KPI_USER_ASSOCIATE_CONFIG (CONFIG_ID, CITY_ID, COMP_ID,
        USER_ID, CONFIG_TYPE, IS_DEL,
        UPDATE_TIME, [STATUS],create_time)
      values (#{po.configId,jdbcType=INTEGER}, #{shardCityId,jdbcType=INTEGER}, #{po.compId,jdbcType=INTEGER},
        #{po.userId,jdbcType=INTEGER}, #{po.configType,jdbcType=INTEGER}, 0,
        #{po.updateTime,jdbcType=TIMESTAMP}, #{po.status,jdbcType=INTEGER},getdate())
    end
  </insert>
  <insert id="initKpiStatisticRecord">
    MERGE INTO hft_erpdb_CD.dbo.KPI_STATISTIC_BROKER_QUALIFICATION A
    USING (
    SELECT FA.ARCHIVE_ID, FA.USER_MOBILE, FA.USER_NAME, FU.USER_ID
    FROM hft_admindb..FUN_ARCHIVE FA LEFT JOIN hft_erpdb_CD.dbo.FUN_USERS FU
    ON FA.ARCHIVE_ID=FU.ARCHIVE_ID WHERE FU.USER_WRITEOFF=0 AND FU.USER_ID = #{userId}
    ) B
    ON (A.ARCHIVE_ID = B.ARCHIVE_ID AND A.HFT_USER_ID = B.USER_ID)
    WHEN NOT MATCHED THEN
    INSERT(ID_NO, USER_MOBILE, USER_NAME, CREATE_TIME, HFT_USER_ID, ARCHIVE_ID, STATUS)
    VALUES (B.USER_ID, B.USER_MOBILE, B.USER_NAME, GETDATE(), B.USER_ID, B.ARCHIVE_ID, 1);

    UPDATE A SET A.USER_MOBILE = B.MOBILE, A.USER_NAME = B.NAME, A.STATUS = B.EMP_STATUS, A.QUIT_TIME = B.LEAVE_DATE, A.UPDATE_TIME = GETDATE(), A.ID_NO= B.CERT_NO,
    A.USER_NO = B.Badge
    FROM hft_erpdb_CD.dbo.KPI_STATISTIC_BROKER_QUALIFICATION A
    LEFT JOIN hft_admindb..ML_USER B ON A.HFT_USER_ID = B.HFT_USER_ID
    WHERE B.HFT_USER_ID IS NOT NULL AND B.CERT_NO IS NOT NULL AND B.CERT_NO &lt;>'' AND B.EMP_STATUS=1 AND A.STATUS=1 AND A.HFT_USER_ID = #{userId};

    MERGE INTO hft_erpdb_CD.dbo.KPI_STATISTIC_BROKER_PERFORMANCE A
    USING (
    SELECT D.ID_NO,E.CITY_ID,E.COMP_ID,D.HFT_USER_ID,D.USER_MOBILE,D.USER_NAME
    FROM hft_erpdb_CD.dbo.KPI_STATISTIC_BROKER_QUALIFICATION D
    JOIN hft_erpdb_CD.dbo.FUN_USERS E
    ON D.HFT_USER_ID=E.USER_ID
    WHERE (E.USER_WRITEOFF=0  OR (E.USER_WRITEOFF=1 AND WRITEOFF_TIME > #{monthStart})) and E.USER_ID = #{userId}
    ) B
    ON (A.USER_ID = B.HFT_USER_ID AND A.CREATE_TIME = #{currentDayStart})
    WHEN NOT MATCHED THEN
    INSERT(ID_NO, CITY_ID, COMP_ID, USER_ID, USER_MOBILE, USER_NAME, CREATE_TIME)
    VALUES (B.ID_NO, B.CITY_ID, B.COMP_ID, B.HFT_USER_ID, B.USER_MOBILE, B.USER_NAME, #{currentDayStart});
  </insert>

  <update id="invalidUserKpiConfig">
    update KPI_USER_ASSOCIATE_CONFIG
    set is_del = 1 , status = 0,update_time = #{updateTime}
    where user_id = #{userId} and is_del = 0
  </update>
</mapper>