<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunRegionMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunRegion">
    <!--@mbggenerated-->
    <id column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="REG_NAME" jdbcType="VARCHAR" property="regName" />
    <result column="SEQ_NO" jdbcType="INTEGER" property="seqNo" />
    <result column="ADMIN_USER" jdbcType="INTEGER" property="adminUser" />
    <result column="REG_ADMIN" jdbcType="VARCHAR" property="regAdmin" />
    <result column="REG_TELE" jdbcType="VARCHAR" property="regTele" />
    <result column="REG_DESC" jdbcType="VARCHAR" property="regDesc" />
    <result column="UPDATE_UID" jdbcType="INTEGER" property="updateUid" />
    <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    REG_ID, COMP_ID, REG_NAME, SEQ_NO, ADMIN_USER, REG_ADMIN, REG_TELE, REG_DESC, UPDATE_UID, 
    UPDATE_TIME, AREA_ID, IS_DEL
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRegionExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_REGION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_REGION
    where REG_ID = #{regId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_REGION
    where REG_ID = #{regId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRegionExample">
    <!--@mbggenerated-->
    delete from FUN_REGION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunRegion">
    <!--@mbggenerated-->
    <selectKey keyProperty="regId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_REGION_REG_ID
    </selectKey>
    insert into FUN_REGION (REG_ID, COMP_ID, REG_NAME, 
      SEQ_NO, ADMIN_USER, REG_ADMIN, 
      REG_TELE, REG_DESC, UPDATE_UID, 
      UPDATE_TIME, AREA_ID, IS_DEL
      )
    values (#{regId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{regName,jdbcType=VARCHAR}, 
      #{seqNo,jdbcType=INTEGER}, #{adminUser,jdbcType=INTEGER}, #{regAdmin,jdbcType=VARCHAR}, 
      #{regTele,jdbcType=VARCHAR}, #{regDesc,jdbcType=VARCHAR}, #{updateUid,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=VARCHAR}, #{areaId,jdbcType=INTEGER}, #{isDel,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunRegion">
    <!--@mbggenerated-->
    <selectKey keyProperty="regId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_REGION_REG_ID
    </selectKey>
    insert into FUN_REGION
    <trim prefix="(" suffix=")" suffixOverrides=",">
      REG_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="regName != null">
        REG_NAME,
      </if>
      <if test="seqNo != null">
        SEQ_NO,
      </if>
      <if test="adminUser != null">
        ADMIN_USER,
      </if>
      <if test="regAdmin != null">
        REG_ADMIN,
      </if>
      <if test="regTele != null">
        REG_TELE,
      </if>
      <if test="regDesc != null">
        REG_DESC,
      </if>
      <if test="updateUid != null">
        UPDATE_UID,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{regId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="regName != null">
        #{regName,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="adminUser != null">
        #{adminUser,jdbcType=INTEGER},
      </if>
      <if test="regAdmin != null">
        #{regAdmin,jdbcType=VARCHAR},
      </if>
      <if test="regTele != null">
        #{regTele,jdbcType=VARCHAR},
      </if>
      <if test="regDesc != null">
        #{regDesc,jdbcType=VARCHAR},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRegionExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_REGION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_REGION
    <set>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.regName != null">
        REG_NAME = #{record.regName,jdbcType=VARCHAR},
      </if>
      <if test="record.seqNo != null">
        SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      </if>
      <if test="record.adminUser != null">
        ADMIN_USER = #{record.adminUser,jdbcType=INTEGER},
      </if>
      <if test="record.regAdmin != null">
        REG_ADMIN = #{record.regAdmin,jdbcType=VARCHAR},
      </if>
      <if test="record.regTele != null">
        REG_TELE = #{record.regTele,jdbcType=VARCHAR},
      </if>
      <if test="record.regDesc != null">
        REG_DESC = #{record.regDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUid != null">
        UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_REGION
    set REG_ID = #{record.regId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      REG_NAME = #{record.regName,jdbcType=VARCHAR},
      SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      ADMIN_USER = #{record.adminUser,jdbcType=INTEGER},
      REG_ADMIN = #{record.regAdmin,jdbcType=VARCHAR},
      REG_TELE = #{record.regTele,jdbcType=VARCHAR},
      REG_DESC = #{record.regDesc,jdbcType=VARCHAR},
      UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      IS_DEL = #{record.isDel,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunRegion">
    <!--@mbggenerated-->
    update FUN_REGION
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="regName != null">
        REG_NAME = #{regName,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        SEQ_NO = #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="adminUser != null">
        ADMIN_USER = #{adminUser,jdbcType=INTEGER},
      </if>
      <if test="regAdmin != null">
        REG_ADMIN = #{regAdmin,jdbcType=VARCHAR},
      </if>
      <if test="regTele != null">
        REG_TELE = #{regTele,jdbcType=VARCHAR},
      </if>
      <if test="regDesc != null">
        REG_DESC = #{regDesc,jdbcType=VARCHAR},
      </if>
      <if test="updateUid != null">
        UPDATE_UID = #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
    </set>
    where REG_ID = #{regId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunRegion">
    <!--@mbggenerated-->
    update FUN_REGION
    set COMP_ID = #{compId,jdbcType=INTEGER},
      REG_NAME = #{regName,jdbcType=VARCHAR},
      SEQ_NO = #{seqNo,jdbcType=INTEGER},
      ADMIN_USER = #{adminUser,jdbcType=INTEGER},
      REG_ADMIN = #{regAdmin,jdbcType=VARCHAR},
      REG_TELE = #{regTele,jdbcType=VARCHAR},
      REG_DESC = #{regDesc,jdbcType=VARCHAR},
      UPDATE_UID = #{updateUid,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      IS_DEL = #{isDel,jdbcType=TINYINT}
    where REG_ID = #{regId,jdbcType=INTEGER}
  </update>
  <resultMap extends="BaseResultMap" id="ErpFunRegionDtoMap" type="com.myfun.repository.erpdb.dto.ErpFunRegionDto">
  
  </resultMap>
  <!-- business -->
   <select id="selectByCompId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from FUN_REGION
    where COMP_ID = #{compId,jdbcType=INTEGER}
  </select>
   <select id="selectByCompIdOne" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select TOP 1
    <include refid="Base_Column_List" />
    from FUN_REGION
    where COMP_ID = #{compId,jdbcType=INTEGER}
    ORDER BY REG_ID ASC
  </select>
  
	<select id="selectListByCondition" parameterType="com.myfun.repository.erpdb.po.ErpFunRegion" resultMap="ErpFunRegionDtoMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM FUN_REGION
		where COMP_ID = #{compId}
		<if test="null != isDel">AND IS_DEL = #{isDel}</if>
		<if test="null != areaId">AND AREA_ID = #{areaId}</if>
		ORDER BY SEQ_NO DESC
	</select>
	
	<select id="getAllRegCount" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM FUN_REGION
		WHERE IS_DEL = 0 and COMP_ID = #{compId}
	</select>

    <select id="getRegListByAreaId" resultMap="BaseResultMap">
      SELECT <include refid="Base_Column_List" /> FROM FUN_REGION WHERE COMP_ID=#{compId} and AREA_ID = #{areaId} and IS_DEL=0
    </select>

	<select id="getRegListByAreaIds" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" /> FROM FUN_REGION WHERE COMP_ID=#{compId} and IS_DEL=0 and
		<choose>
			<when test="null != rangeIds">
				AREA_ID IN
				<foreach close=")" collection="rangeIds" index="index" item="rangeId" open="(" separator=",">
					#{rangeId}
				</foreach>
			</when>
			<otherwise>
				AREA_ID = #{selfAreaId}
			</otherwise>
		</choose>
	</select>

  <select id="selectRegList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from FUN_REGION where comp_id=#{compId}
	and (is_del=0
      <if test="null != updateTime and updateTime != ''">
      	OR ( UPDATE_TIME &gt;= #{updateTime} AND is_del = 1) 
      </if>
      )
    AND
    <choose>
      <when test="manageRangeRangeType == 1">COMP_ID </when>
      <when test="manageRangeRangeType == 2">AREA_ID </when>
      <when test="manageRangeRangeType == 3">REG_ID </when>
    </choose>
    IN
    <foreach close=")" collection="userManageRangeIds" item="userManageRangeId" open="(" separator=",">
      #{userManageRangeId}
    </foreach>
  </select>
  
  <select id="selectRegListRank" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from FUN_REGION where comp_id=#{compId} and is_del=0
    AND AREA_ID = #{areaId}
  </select>
  <select id="getCacheableRegionListByAreaId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from FUN_REGION
    where COMP_ID=#{compId} and IS_DEL = 0
    order by SEQ_NO DESC
  </select>
  
  <select id="getDataById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from FUN_REGION
    where REG_ID = #{regId}
  </select>
  
  <update id="updateRegforArea">
    update FUN_REGION
    set AREA_ID=#{areaId} ,UPDATE_TIME = GETDATE()
    where COMP_ID=#{compId} AND REG_ID = #{regId}
  </update>
  
  <update id="deleteByCompIdAndRegId">
    update FUN_REGION
    set IS_DEL = 1
    where REG_ID = #{regId} AND COMP_ID=#{compId}
  </update>
  
  <select id="countRegionByRegName" resultType="java.lang.Integer">
    select count (*)
    from FUN_REGION
    where COMP_ID=#{compId} and IS_DEL='0' and AREA_ID=#{areaId} and REG_NAME = #{regName}
  </select>
  
  <select id="selectByRegId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from FUN_REGION
    where COMP_ID=#{compId} and IS_DEL='0'
	  <if test="areaId!=null">
		  and AREA_ID=#{areaId}
	  </if>
	  <if test="regId!=null">
		  and REG_ID = #{regId}
	  </if>
  </select>
	
	<update id="updateAreaByRegChange">
		UPDATE FUN_REGION SET AREA_ID=#{areaId} ,UPDATE_TIME = GETDATE() WHERE COMP_ID=#{compId} AND REG_ID = #{regId};
		UPDATE FUN_DEPTS SET AREA_ID=#{areaId} ,UPDATE_TIME = GETDATE() WHERE COMP_ID=#{compId} AND REG_ID = #{regId};
		UPDATE FUN_USERS SET AREA_ID=#{areaId} ,UPDATE_TIME = GETDATE() WHERE COMP_ID=#{compId} AND REG_ID = #{regId};
		UPDATE FUN_DEAL SET AREA_ID=#{areaId} WHERE COMP_ID=#{compId} AND REG_ID = #{regId};
		UPDATE FUN_SALE SET AREA_ID=#{areaId} WHERE COMP_ID=#{compId} AND REG_ID = #{regId};
		UPDATE FUN_LEASE SET AREA_ID=#{areaId} WHERE COMP_ID=#{compId} AND REG_ID = #{regId};
		UPDATE FUN_RENT_CUSTOMER SET AREA_ID=#{areaId} WHERE COMP_ID=#{compId} AND REG_ID = #{regId};
		UPDATE FUN_BUY_CUSTOMER SET AREA_ID=#{areaId} WHERE COMP_ID=#{compId} AND REG_ID = #{regId};
	</update>

  <select id="getRegionListBynamicId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from FUN_REGION
    where comp_id=#{compId} and ${columnName} = #{columnValue}
  </select>
  
  <update id="updateByAdminUser">
	UPDATE FUN_REGION SET ADMIN_USER = null, REG_ADMIN = NULL WHERE COMP_ID = #{compId} AND AREA_ID = #{areaId} AND REG_ID = #{regId} 
  </update>
</mapper>