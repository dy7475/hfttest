<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunEcardsMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunEcards">
    <!--@mbggenerated-->
    <id column="ECARD_ID" jdbcType="INTEGER" property="ecardId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="ECARDS_NAME" jdbcType="VARCHAR" property="ecardsName" />
    <result column="ECARDS_SEX" jdbcType="BIT" property="ecardsSex" />
    <result column="ECARDS_POST" jdbcType="VARCHAR" property="ecardsPost" />
    <result column="ECARDS_MAIL" jdbcType="VARCHAR" property="ecardsMail" />
    <result column="ECARDS_QQ" jdbcType="VARCHAR" property="ecardsQq" />
    <result column="ECARDS_TEL" jdbcType="VARCHAR" property="ecardsTel" />
    <result column="ECARDS_COMP" jdbcType="VARCHAR" property="ecardsComp" />
    <result column="ECARDS_POS" jdbcType="VARCHAR" property="ecardsPos" />
    <result column="COMP_ADD" jdbcType="VARCHAR" property="compAdd" />
    <result column="COMP_URL" jdbcType="VARCHAR" property="compUrl" />
    <result column="ECARDS_REMARKS" jdbcType="VARCHAR" property="ecardsRemarks" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="IS_PUBLIC" jdbcType="BIT" property="isPublic" />
    <result column="ECARDS_ARCHIVE_ID" jdbcType="INTEGER" property="ecardsArchiveId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ECARD_ID, COMP_ID, DEPT_ID, ARCHIVE_ID, ECARDS_NAME, ECARDS_SEX, ECARDS_POST, ECARDS_MAIL, 
    ECARDS_QQ, ECARDS_TEL, ECARDS_COMP, ECARDS_POS, COMP_ADD, COMP_URL, ECARDS_REMARKS, 
    CREATE_TIME, IS_PUBLIC, ECARDS_ARCHIVE_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunEcardsExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_ECARDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_ECARDS
    where ECARD_ID = #{ecardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_ECARDS
    where ECARD_ID = #{ecardId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunEcardsExample">
    <!--@mbggenerated-->
    delete from FUN_ECARDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunEcards">
    <!--@mbggenerated-->
    <selectKey keyProperty="ecardId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_ECARDS_ECARD_ID
    </selectKey>
    insert into FUN_ECARDS (ECARD_ID, COMP_ID, DEPT_ID, 
      ARCHIVE_ID, ECARDS_NAME, ECARDS_SEX, 
      ECARDS_POST, ECARDS_MAIL, ECARDS_QQ, 
      ECARDS_TEL, ECARDS_COMP, ECARDS_POS, 
      COMP_ADD, COMP_URL, ECARDS_REMARKS, 
      CREATE_TIME, IS_PUBLIC, ECARDS_ARCHIVE_ID
      )
    values (#{ecardId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{archiveId,jdbcType=INTEGER}, #{ecardsName,jdbcType=VARCHAR}, #{ecardsSex,jdbcType=BIT}, 
      #{ecardsPost,jdbcType=VARCHAR}, #{ecardsMail,jdbcType=VARCHAR}, #{ecardsQq,jdbcType=VARCHAR}, 
      #{ecardsTel,jdbcType=VARCHAR}, #{ecardsComp,jdbcType=VARCHAR}, #{ecardsPos,jdbcType=VARCHAR}, 
      #{compAdd,jdbcType=VARCHAR}, #{compUrl,jdbcType=VARCHAR}, #{ecardsRemarks,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{isPublic,jdbcType=BIT}, #{ecardsArchiveId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunEcards">
    <!--@mbggenerated-->
    <selectKey keyProperty="ecardId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_ECARDS_ECARD_ID
    </selectKey>
    insert into FUN_ECARDS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ECARD_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="ecardsName != null">
        ECARDS_NAME,
      </if>
      <if test="ecardsSex != null">
        ECARDS_SEX,
      </if>
      <if test="ecardsPost != null">
        ECARDS_POST,
      </if>
      <if test="ecardsMail != null">
        ECARDS_MAIL,
      </if>
      <if test="ecardsQq != null">
        ECARDS_QQ,
      </if>
      <if test="ecardsTel != null">
        ECARDS_TEL,
      </if>
      <if test="ecardsComp != null">
        ECARDS_COMP,
      </if>
      <if test="ecardsPos != null">
        ECARDS_POS,
      </if>
      <if test="compAdd != null">
        COMP_ADD,
      </if>
      <if test="compUrl != null">
        COMP_URL,
      </if>
      <if test="ecardsRemarks != null">
        ECARDS_REMARKS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="isPublic != null">
        IS_PUBLIC,
      </if>
      <if test="ecardsArchiveId != null">
        ECARDS_ARCHIVE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{ecardId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="ecardsName != null">
        #{ecardsName,jdbcType=VARCHAR},
      </if>
      <if test="ecardsSex != null">
        #{ecardsSex,jdbcType=BIT},
      </if>
      <if test="ecardsPost != null">
        #{ecardsPost,jdbcType=VARCHAR},
      </if>
      <if test="ecardsMail != null">
        #{ecardsMail,jdbcType=VARCHAR},
      </if>
      <if test="ecardsQq != null">
        #{ecardsQq,jdbcType=VARCHAR},
      </if>
      <if test="ecardsTel != null">
        #{ecardsTel,jdbcType=VARCHAR},
      </if>
      <if test="ecardsComp != null">
        #{ecardsComp,jdbcType=VARCHAR},
      </if>
      <if test="ecardsPos != null">
        #{ecardsPos,jdbcType=VARCHAR},
      </if>
      <if test="compAdd != null">
        #{compAdd,jdbcType=VARCHAR},
      </if>
      <if test="compUrl != null">
        #{compUrl,jdbcType=VARCHAR},
      </if>
      <if test="ecardsRemarks != null">
        #{ecardsRemarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="isPublic != null">
        #{isPublic,jdbcType=BIT},
      </if>
      <if test="ecardsArchiveId != null">
        #{ecardsArchiveId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunEcardsExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_ECARDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ECARDS
    <set>
      <if test="record.ecardId != null">
        ECARD_ID = #{record.ecardId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.ecardsName != null">
        ECARDS_NAME = #{record.ecardsName,jdbcType=VARCHAR},
      </if>
      <if test="record.ecardsSex != null">
        ECARDS_SEX = #{record.ecardsSex,jdbcType=BIT},
      </if>
      <if test="record.ecardsPost != null">
        ECARDS_POST = #{record.ecardsPost,jdbcType=VARCHAR},
      </if>
      <if test="record.ecardsMail != null">
        ECARDS_MAIL = #{record.ecardsMail,jdbcType=VARCHAR},
      </if>
      <if test="record.ecardsQq != null">
        ECARDS_QQ = #{record.ecardsQq,jdbcType=VARCHAR},
      </if>
      <if test="record.ecardsTel != null">
        ECARDS_TEL = #{record.ecardsTel,jdbcType=VARCHAR},
      </if>
      <if test="record.ecardsComp != null">
        ECARDS_COMP = #{record.ecardsComp,jdbcType=VARCHAR},
      </if>
      <if test="record.ecardsPos != null">
        ECARDS_POS = #{record.ecardsPos,jdbcType=VARCHAR},
      </if>
      <if test="record.compAdd != null">
        COMP_ADD = #{record.compAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.compUrl != null">
        COMP_URL = #{record.compUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.ecardsRemarks != null">
        ECARDS_REMARKS = #{record.ecardsRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isPublic != null">
        IS_PUBLIC = #{record.isPublic,jdbcType=BIT},
      </if>
      <if test="record.ecardsArchiveId != null">
        ECARDS_ARCHIVE_ID = #{record.ecardsArchiveId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ECARDS
    set ECARD_ID = #{record.ecardId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      ECARDS_NAME = #{record.ecardsName,jdbcType=VARCHAR},
      ECARDS_SEX = #{record.ecardsSex,jdbcType=BIT},
      ECARDS_POST = #{record.ecardsPost,jdbcType=VARCHAR},
      ECARDS_MAIL = #{record.ecardsMail,jdbcType=VARCHAR},
      ECARDS_QQ = #{record.ecardsQq,jdbcType=VARCHAR},
      ECARDS_TEL = #{record.ecardsTel,jdbcType=VARCHAR},
      ECARDS_COMP = #{record.ecardsComp,jdbcType=VARCHAR},
      ECARDS_POS = #{record.ecardsPos,jdbcType=VARCHAR},
      COMP_ADD = #{record.compAdd,jdbcType=VARCHAR},
      COMP_URL = #{record.compUrl,jdbcType=VARCHAR},
      ECARDS_REMARKS = #{record.ecardsRemarks,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      IS_PUBLIC = #{record.isPublic,jdbcType=BIT},
      ECARDS_ARCHIVE_ID = #{record.ecardsArchiveId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunEcards">
    <!--@mbggenerated-->
    update FUN_ECARDS
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="ecardsName != null">
        ECARDS_NAME = #{ecardsName,jdbcType=VARCHAR},
      </if>
      <if test="ecardsSex != null">
        ECARDS_SEX = #{ecardsSex,jdbcType=BIT},
      </if>
      <if test="ecardsPost != null">
        ECARDS_POST = #{ecardsPost,jdbcType=VARCHAR},
      </if>
      <if test="ecardsMail != null">
        ECARDS_MAIL = #{ecardsMail,jdbcType=VARCHAR},
      </if>
      <if test="ecardsQq != null">
        ECARDS_QQ = #{ecardsQq,jdbcType=VARCHAR},
      </if>
      <if test="ecardsTel != null">
        ECARDS_TEL = #{ecardsTel,jdbcType=VARCHAR},
      </if>
      <if test="ecardsComp != null">
        ECARDS_COMP = #{ecardsComp,jdbcType=VARCHAR},
      </if>
      <if test="ecardsPos != null">
        ECARDS_POS = #{ecardsPos,jdbcType=VARCHAR},
      </if>
      <if test="compAdd != null">
        COMP_ADD = #{compAdd,jdbcType=VARCHAR},
      </if>
      <if test="compUrl != null">
        COMP_URL = #{compUrl,jdbcType=VARCHAR},
      </if>
      <if test="ecardsRemarks != null">
        ECARDS_REMARKS = #{ecardsRemarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="isPublic != null">
        IS_PUBLIC = #{isPublic,jdbcType=BIT},
      </if>
      <if test="ecardsArchiveId != null">
        ECARDS_ARCHIVE_ID = #{ecardsArchiveId,jdbcType=INTEGER},
      </if>
    </set>
    where ECARD_ID = #{ecardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunEcards">
    <!--@mbggenerated-->
    update FUN_ECARDS
    set COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      ECARDS_NAME = #{ecardsName,jdbcType=VARCHAR},
      ECARDS_SEX = #{ecardsSex,jdbcType=BIT},
      ECARDS_POST = #{ecardsPost,jdbcType=VARCHAR},
      ECARDS_MAIL = #{ecardsMail,jdbcType=VARCHAR},
      ECARDS_QQ = #{ecardsQq,jdbcType=VARCHAR},
      ECARDS_TEL = #{ecardsTel,jdbcType=VARCHAR},
      ECARDS_COMP = #{ecardsComp,jdbcType=VARCHAR},
      ECARDS_POS = #{ecardsPos,jdbcType=VARCHAR},
      COMP_ADD = #{compAdd,jdbcType=VARCHAR},
      COMP_URL = #{compUrl,jdbcType=VARCHAR},
      ECARDS_REMARKS = #{ecardsRemarks,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      IS_PUBLIC = #{isPublic,jdbcType=BIT},
      ECARDS_ARCHIVE_ID = #{ecardsArchiveId,jdbcType=INTEGER}
    where ECARD_ID = #{ecardId,jdbcType=INTEGER}
  </update>
  <resultMap id="DtoBaseResultMap" type="com.myfun.repository.erpdb.dto.ErpFunEcardsDto">
    <id column="ECARD_ID" jdbcType="INTEGER" property="ecardId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="ECARDS_NAME" jdbcType="VARCHAR" property="ecardsName" />
    <result column="ECARDS_SEX" jdbcType="BIT" property="ecardsSex" />
    <result column="ECARDS_POST" jdbcType="VARCHAR" property="ecardsPost" />
    <result column="ECARDS_MAIL" jdbcType="VARCHAR" property="ecardsMail" />
    <result column="ECARDS_QQ" jdbcType="VARCHAR" property="ecardsQq" />
    <result column="ECARDS_TEL" jdbcType="VARCHAR" property="ecardsTel" />
    <result column="ECARDS_COMP" jdbcType="VARCHAR" property="ecardsComp" />
    <result column="ECARDS_POS" jdbcType="VARCHAR" property="ecardsPos" />
    <result column="COMP_ADD" jdbcType="VARCHAR" property="compAdd" />
    <result column="COMP_URL" jdbcType="VARCHAR" property="compUrl" />
    <result column="ECARDS_REMARKS" jdbcType="VARCHAR" property="ecardsRemarks" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="IS_PUBLIC" jdbcType="BIT" property="isPublic" />
    <result column="ECARDS_ARCHIVE_ID" jdbcType="INTEGER" property="ecardsArchiveId" />
    <result column="USER_NAME" property="userName" />
  </resultMap>
	<select id="getBusinessTooleCardList" resultMap="DtoBaseResultMap">
		select
		(SELECT TOP 1 USER_NAME FROM FUN_USERS WHERE FUN_USERS.ARCHIVE_ID =
		FUN_ECARDS.ARCHIVE_ID AND FUN_USERS.USER_WRITEOFF = 0) AS USER_NAME,
		<include refid="Base_Column_List" />
		from FUN_ECARDS
		where
		<choose>
			<when test="conditionModel.isPerLogin==false">
				COMP_ID = #{conditionModel.compId,jdbcType=INTEGER}
				<if test="conditionModel.deptId != null">
					and DEPT_ID = #{conditionModel.deptId,jdbcType=INTEGER}
				</if>
				<if test="conditionModel.isPublic==false">
					and IS_PUBLIC = #{conditionModel.isPublic,jdbcType=BIT}
				</if>
			</when>
			<otherwise>
				ARCHIVE_ID = #{conditionModel.archiveId}
			</otherwise>
		</choose>
		<if test="conditionModel.ecardsComp != null and conditionModel.ecardsComp !=''">
			and ECARDS_COMP like #{conditionModel.ecardsComp,jdbcType=VARCHAR}
		</if>
		<if test="conditionModel.ecardsName != null and conditionModel.ecardsName !=''">
			and ECARDS_NAME like #{conditionModel.ecardsName,jdbcType=VARCHAR}
		</if>
		<if test="conditionModel.ecardsTel != null and conditionModel.ecardsTel !=''">
			and ECARDS_TEL like #{conditionModel.ecardsTel,jdbcType=VARCHAR}
		</if>
		<if test="conditionModel.ecardsPost != null and conditionModel.ecardsPost !=''">
			and ECARDS_POST like #{conditionModel.ecardsPost,jdbcType=VARCHAR}
		</if>
		order by ${conditionModel.orderBy}
	</select>
	<update id="updateById" parameterType="com.myfun.repository.erpdb.po.ErpFunEcards">
		update FUN_ECARDS
		set
		ECARDS_NAME = #{ecardsName},
		ECARDS_SEX = #{ecardsSex},
		ECARDS_POST = #{ecardsPost},
		ECARDS_TEL = #{ecardsTel},
		ECARDS_MAIL = #{ecardsMail},
		ECARDS_QQ = #{ecardsQq},
		ECARDS_COMP = #{ecardsComp},
		COMP_URL = #{compUrl},
		COMP_ADD = #{compAdd},
		ECARDS_REMARKS = #{ecardsRemarks}
		where ECARD_ID = #{ecardId}
	</update>
	
	<update id="updateCompAndRole">
		UPDATE FUN_ECARDS
		SET ECARDS_COMP = #{deptName}, ECARDS_POST = #{roleName}
		where ECARDS_ARCHIVE_ID = #{archiveId} AND COMP_ID=#{compId}
	</update>
	
	<select id="getEcardsLists" resultMap="DtoBaseResultMap">
		select
		(SELECT TOP 1 USER_NAME FROM FUN_USERS WHERE FUN_USERS.ARCHIVE_ID =
		FUN_ECARDS.ARCHIVE_ID AND FUN_USERS.USER_WRITEOFF = 0 AND FUN_USERS.COMP_ID = #{compId}) AS USER_NAME,
		<include refid="Base_Column_List" />
		from FUN_ECARDS
		where ARCHIVE_ID = #{archiveId} AND COMP_ID =#{compId}
		<if test="null != param.queryKey and param.queryKey != ''">
			<choose>
				<when test="null != param.ecardsComp and param.ecardsComp != ''">
					ECARDS_COMP LIKE #{param.ecardsComp}
				</when>
				<when test="null != param.ecardsName and param.ecardsName != ''">
					ECARDS_NAME LIKE #{param.ecardsName}
				</when>
				<when test="null != param.ecardsTel and param.ecardsTel != ''">
					ECARDS_TEL LIKE #{param.ecardsComp}
				</when>
				<otherwise>
					ECARDS_POST LIKE #{param.ecardsPost}
				</otherwise>
			</choose>
		</if>
		ORDER BY ${param.orderBy}
	</select>
</mapper>