<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunUserManageRangeMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunUserManageRange">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="RANGE_TYPE" jdbcType="INTEGER" property="rangeType" />
    <result column="RANGE_ID" jdbcType="INTEGER" property="rangeId" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="MANAGE_TYPE" jdbcType="TINYINT" property="manageType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, USER_ID, RANGE_TYPE, RANGE_ID, CREATION_TIME, COMP_ID, ROLE_ID, MANAGE_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUserManageRangeExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_USER_MANAGE_RANGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_USER_MANAGE_RANGE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_USER_MANAGE_RANGE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUserManageRangeExample">
    <!--@mbggenerated-->
    delete from FUN_USER_MANAGE_RANGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunUserManageRange" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_USER_MANAGE_RANGE (USER_ID, RANGE_TYPE, RANGE_ID, 
      CREATION_TIME, COMP_ID, ROLE_ID, 
      MANAGE_TYPE)
    values (#{userId,jdbcType=INTEGER}, #{rangeType,jdbcType=INTEGER}, #{rangeId,jdbcType=INTEGER}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{compId,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, 
      #{manageType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunUserManageRange" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_USER_MANAGE_RANGE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="rangeType != null">
        RANGE_TYPE,
      </if>
      <if test="rangeId != null">
        RANGE_ID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="manageType != null">
        MANAGE_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="rangeType != null">
        #{rangeType,jdbcType=INTEGER},
      </if>
      <if test="rangeId != null">
        #{rangeId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="manageType != null">
        #{manageType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUserManageRangeExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_USER_MANAGE_RANGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_USER_MANAGE_RANGE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.rangeType != null">
        RANGE_TYPE = #{record.rangeType,jdbcType=INTEGER},
      </if>
      <if test="record.rangeId != null">
        RANGE_ID = #{record.rangeId,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.manageType != null">
        MANAGE_TYPE = #{record.manageType,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_USER_MANAGE_RANGE
    set ID = #{record.id,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      RANGE_TYPE = #{record.rangeType,jdbcType=INTEGER},
      RANGE_ID = #{record.rangeId,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      MANAGE_TYPE = #{record.manageType,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunUserManageRange">
    <!--@mbggenerated-->
    update FUN_USER_MANAGE_RANGE
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="rangeType != null">
        RANGE_TYPE = #{rangeType,jdbcType=INTEGER},
      </if>
      <if test="rangeId != null">
        RANGE_ID = #{rangeId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="manageType != null">
        MANAGE_TYPE = #{manageType,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunUserManageRange">
    <!--@mbggenerated-->
    update FUN_USER_MANAGE_RANGE
    set USER_ID = #{userId,jdbcType=INTEGER},
      RANGE_TYPE = #{rangeType,jdbcType=INTEGER},
      RANGE_ID = #{rangeId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      COMP_ID = #{compId,jdbcType=INTEGER},
      ROLE_ID = #{roleId,jdbcType=VARCHAR},
      MANAGE_TYPE = #{manageType,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
	
	<select id="getListByUserId" resultMap="BaseResultMap">
		select USER_ID, RANGE_TYPE, RANGE_ID
		from FUN_USER_MANAGE_RANGE
		WHERE COMP_ID=#{compId} AND USER_ID IN
		<foreach close=")" collection="userIds" item="item" open="(" separator=",">#{item}</foreach>
		<if test="null != manageType"> and MANAGE_TYPE = #{manageType,jdbcType=TINYINT} </if>
	</select>
	
	<delete id="deleteByUserId">
		DELETE FROM FUN_USER_MANAGE_RANGE
		where COMP_ID=#{compId} AND USER_ID = #{userId}
	</delete>
	
	<insert id="insertList">
		insert into FUN_USER_MANAGE_RANGE(COMP_ID, USER_ID, ROLE_ID, RANGE_TYPE, RANGE_ID, CREATION_TIME, MANAGE_TYPE) VALUES
		<foreach collection="rangeList" item="item" separator=",">
			(
			#{item.compId}, #{item.userId}, #{item.roleId}, #{item.rangeType}, #{item.rangeId}, #{item.creationTime}, #{item.manageType}
			)
		</foreach>
	</insert>
	
	<select id="getManageUserByUp" resultType="java.lang.Integer">
		SELECT TOP 1 A.USER_ID
		FROM FUN_USER_MANAGE_RANGE A
		JOIN FUN_USERS B ON B.USER_ID=A.USER_ID
		WHERE
		A.COMP_ID=#{compId} AND A.ROLE_ID=#{roleId}
		AND B.USER_WRITEOFF=0
		AND (
			(A.RANGE_TYPE=1 AND A.RANGE_ID=#{compId})
			OR (A.RANGE_TYPE=2 AND A.RANGE_ID=#{areaId})
			OR (A.RANGE_TYPE=3 AND A.RANGE_ID=#{regId})
			OR (A.RANGE_TYPE=4 AND A.RANGE_ID=#{deptId})
			<if test="grId != null and grId != 0">
				OR (A.RANGE_TYPE=5 AND A.RANGE_ID=#{grId})
			</if>
		)
		ORDER BY A.RANGE_TYPE DESC
	</select>
	
	<select id="getAllManageRange" resultType="java.lang.Integer">
		SELECT USER_ID FROM FUN_USER_MANAGE_RANGE
		WHERE COMP_ID=#{compId} and ROLE_ID=#{roleId}
	</select>
	
	<select id="getManageUserList" resultType="java.lang.Integer">
		SELECT DISTINCT A.USER_ID
		FROM FUN_USER_MANAGE_RANGE A
		JOIN FUN_USERS B ON B.USER_ID=A.USER_ID
		WHERE
		A.COMP_ID=#{compId} AND A.ROLE_ID=#{roleId}
		AND B.USER_WRITEOFF=0
		AND (
			(A.RANGE_TYPE=1 and A.RANGE_ID=#{compId})
			OR (A.RANGE_TYPE=2 and A.RANGE_ID=#{areaId})
			OR (A.RANGE_TYPE=3 and A.RANGE_ID=#{regId})
			OR (A.RANGE_TYPE=4 and A.RANGE_ID=#{deptId})
			<if test="grId != null and grId != 0">
				OR (A.RANGE_TYPE=5 and A.RANGE_ID=#{grId})
			</if>
		)
	</select>

    <select id="getUserManageRange" resultMap="BaseResultMap">
      SELECT <include refid="Base_Column_List" />
      FROM FUN_USER_MANAGE_RANGE where COMP_ID=#{compId} and USER_ID=#{userId}
    </select>

  <select id="getManageAssessmentDataList" resultType="java.util.Map">
    SELECT a.USER_ID userId,a.RANGE_ID rangeId ,a.RANGE_TYPE rangeType,b.id roleWageConfigId, CASE_TYPE caseType
    from FUN_USER_MANAGE_RANGE a
    JOIN FUN_ROLE_WAGE_CONFIG b on a.ROLE_ID=b.ROLE_ID
    LEFT join FUN_ROLE_WAGE_WORKCOUNT c on b.id=c.ROLE_WAGE_CONFIG_ID
    LEFT join FUN_ROLE_WAGE_PROFIT d on b.id=d.ROLE_WAGE_CONFIG_ID
    <where>
      1 = 1
      <if test="null != param.compId">
        and a.COMP_ID = #{param.compId} and (c.id is not null or d.id is not null)
      </if>
      <if test="null != param.areaId">
        and AREA_ID = #{param.areaId}
      </if>
      <if test="null != param.regId">
        and REG_ID = #{param.regId}
      </if>
      <if test="null != param.deptId">
        and DEPT_ID = #{param.deptId}
      </if>
      <if test="null != param.grId">
        and GR_ID = #{param.grId}
      </if>
      <if test="null != param.userId">
        and a.USER_ID = #{param.userId}
      </if>
      <if test="null != startTime">
        and b.create_time &gt;= #{startTime}
      </if>
      <if test="null != endTime">
        and  b.create_time &lt; #{endTime}
      </if>
    </where>
    GROUP by a.ID,a.USER_ID,a.RANGE_ID ,a.RANGE_TYPE,b.id, CASE_TYPE
    ORDER by a.ID
  </select>

  <select id="selectByCompIdAndUserId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM FUN_USER_MANAGE_RANGE
    WHERE
    COMP_ID=#{compId} AND USER_ID=#{userId}
  </select>

</mapper>