<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunScheduleMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunSchedule" >
    <!--@mbggenerated-->
    <id column="SCHEDULE_ID" jdbcType="INTEGER" property="scheduleId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="SCHEDULE_TYPE" jdbcType="TINYINT" property="scheduleType" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="JSON" jdbcType="VARCHAR" property="json" />
    <result column="ISCOMPLETE" jdbcType="TINYINT" property="iscomplete" />
    <result column="ORGANIZATION_PATH" jdbcType="VARCHAR" property="organizationPath" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    SCHEDULE_ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, USER_ID, ARCHIVE_ID, SCHEDULE_TYPE, 
    CREATION_TIME, UPDATE_TIME, CASE_ID, CASE_TYPE, JSON, ISCOMPLETE, ORGANIZATION_PATH
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpFunScheduleExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_SCHEDULE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_SCHEDULE
    where SCHEDULE_ID = #{scheduleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_SCHEDULE
    where SCHEDULE_ID = #{scheduleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunScheduleExample" >
    <!--@mbggenerated-->
    delete from FUN_SCHEDULE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunSchedule" useGeneratedKeys="true" keyProperty="scheduleId" >
    <!--@mbggenerated-->
    insert into FUN_SCHEDULE (COMP_ID, AREA_ID, REG_ID, 
      DEPT_ID, GR_ID, USER_ID, 
      ARCHIVE_ID, SCHEDULE_TYPE, CREATION_TIME, 
      UPDATE_TIME, CASE_ID, CASE_TYPE, 
      JSON, ISCOMPLETE, ORGANIZATION_PATH
      )
    values (#{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{regId,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{archiveId,jdbcType=INTEGER}, #{scheduleType,jdbcType=TINYINT}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{caseId,jdbcType=INTEGER}, #{caseType,jdbcType=TINYINT}, 
      #{json,jdbcType=VARCHAR}, #{iscomplete,jdbcType=TINYINT}, #{organizationPath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunSchedule" useGeneratedKeys="true" keyProperty="scheduleId" >
    <!--@mbggenerated-->
    insert into FUN_SCHEDULE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="areaId != null" >
        AREA_ID,
      </if>
      <if test="regId != null" >
        REG_ID,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="grId != null" >
        GR_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="scheduleType != null" >
        SCHEDULE_TYPE,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="caseId != null" >
        CASE_ID,
      </if>
      <if test="caseType != null" >
        CASE_TYPE,
      </if>
      <if test="json != null" >
        JSON,
      </if>
      <if test="iscomplete != null" >
        ISCOMPLETE,
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null" >
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null" >
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="scheduleType != null" >
        #{scheduleType,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="json != null" >
        #{json,jdbcType=VARCHAR},
      </if>
      <if test="iscomplete != null" >
        #{iscomplete,jdbcType=TINYINT},
      </if>
      <if test="organizationPath != null">
        #{organizationPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunScheduleExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from FUN_SCHEDULE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_SCHEDULE
    <set >
      <if test="record.scheduleId != null" >
        SCHEDULE_ID = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null" >
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null" >
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null" >
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null" >
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleType != null" >
        SCHEDULE_TYPE = #{record.scheduleType,jdbcType=TINYINT},
      </if>
      <if test="record.creationTime != null" >
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.caseId != null" >
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null" >
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
      <if test="record.json != null" >
        JSON = #{record.json,jdbcType=VARCHAR},
      </if>
      <if test="record.iscomplete != null" >
        ISCOMPLETE = #{record.iscomplete,jdbcType=TINYINT},
      </if>
      <if test="record.organizationPath != null">
        ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_SCHEDULE
    set SCHEDULE_ID = #{record.scheduleId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      SCHEDULE_TYPE = #{record.scheduleType,jdbcType=TINYINT},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      JSON = #{record.json,jdbcType=VARCHAR},
      ISCOMPLETE = #{record.iscomplete,jdbcType=TINYINT},
      ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunSchedule" >
    <!--@mbggenerated-->
    update FUN_SCHEDULE
    <set >
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null" >
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null" >
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="scheduleType != null" >
        SCHEDULE_TYPE = #{scheduleType,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="caseId != null" >
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="json != null" >
        JSON = #{json,jdbcType=VARCHAR},
      </if>
      <if test="iscomplete != null" >
        ISCOMPLETE = #{iscomplete,jdbcType=TINYINT},
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    where SCHEDULE_ID = #{scheduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunSchedule" >
    <!--@mbggenerated-->
    update FUN_SCHEDULE
    set COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      SCHEDULE_TYPE = #{scheduleType,jdbcType=TINYINT},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      JSON = #{json,jdbcType=VARCHAR},
      ISCOMPLETE = #{iscomplete,jdbcType=TINYINT},
      ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR}
    where SCHEDULE_ID = #{scheduleId,jdbcType=INTEGER}
  </update>
  
  
  <select id="findByContion" resultMap="BaseResultMap">
  
select  top 1  <include refid="Base_Column_List" />
    from FUN_SCHEDULE
    
     where  ISCOMPLETE = 0  and DateDiff(dd,CREATION_TIME,getdate())=0
  	
  	
  		  <if test="compId != null">
       and   COMP_ID = #{compId,jdbcType=INTEGER}
      </if>
     
      <if test="userId != null">
          and    USER_ID = #{userId,jdbcType=INTEGER}
      </if>
    
      <if test="workType != null">
           and   SCHEDULE_TYPE = #{workType,jdbcType=TINYINT}
      </if>
     
      <if test="caseId != null">
           and   CASE_ID = #{caseId,jdbcType=INTEGER}
      </if>
      <if test="caseType != null">
           and   CASE_TYPE = #{caseType,jdbcType=TINYINT}
      </if>
     
    order by CREATION_TIME
  	
  </select>
  
</mapper>