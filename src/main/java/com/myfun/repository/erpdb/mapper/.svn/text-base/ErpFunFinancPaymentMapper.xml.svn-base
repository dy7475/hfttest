<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunFinancPaymentMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunFinancPayment">
    <!--@mbggenerated-->
    <id column="PAYMENT_ID" jdbcType="INTEGER" property="paymentId" />
    <result column="PAYMENT_NAME" jdbcType="VARCHAR" property="paymentName" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="SEQ_NO" jdbcType="INTEGER" property="seqNo" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="CAN_DEL" jdbcType="INTEGER" property="canDel" />
    <result column="IS_PROFIT" jdbcType="TINYINT" property="isProfit" />
    <result column="EN_NAME" jdbcType="VARCHAR" property="enName" />
    <result column="PERFORMANCE_TYPE" jdbcType="TINYINT" property="performanceType" />
    <result column="BENEFICIARY" jdbcType="TINYINT" property="beneficiary" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    PAYMENT_ID, PAYMENT_NAME, COMP_ID, SEQ_NO, CREATE_TIME, IS_DEL, CAN_DEL, IS_PROFIT, 
    EN_NAME, PERFORMANCE_TYPE, BENEFICIARY
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunFinancPaymentExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_FINANC_PAYMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_FINANC_PAYMENT
    where PAYMENT_ID = #{paymentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_FINANC_PAYMENT
    where PAYMENT_ID = #{paymentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunFinancPaymentExample">
    <!--@mbggenerated-->
    delete from FUN_FINANC_PAYMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="paymentId" parameterType="com.myfun.repository.erpdb.po.ErpFunFinancPayment" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_FINANC_PAYMENT (PAYMENT_NAME, COMP_ID, SEQ_NO, 
      CREATE_TIME, IS_DEL, CAN_DEL, 
      IS_PROFIT, EN_NAME, PERFORMANCE_TYPE, 
      BENEFICIARY)
    values (#{paymentName,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, #{seqNo,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=TINYINT}, #{canDel,jdbcType=INTEGER}, 
      #{isProfit,jdbcType=TINYINT}, #{enName,jdbcType=VARCHAR}, #{performanceType,jdbcType=TINYINT}, 
      #{beneficiary,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="paymentId" parameterType="com.myfun.repository.erpdb.po.ErpFunFinancPayment" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_FINANC_PAYMENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentName != null">
        PAYMENT_NAME,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="seqNo != null">
        SEQ_NO,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="canDel != null">
        CAN_DEL,
      </if>
      <if test="isProfit != null">
        IS_PROFIT,
      </if>
      <if test="enName != null">
        EN_NAME,
      </if>
      <if test="performanceType != null">
        PERFORMANCE_TYPE,
      </if>
      <if test="beneficiary != null">
        BENEFICIARY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentName != null">
        #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="canDel != null">
        #{canDel,jdbcType=INTEGER},
      </if>
      <if test="isProfit != null">
        #{isProfit,jdbcType=TINYINT},
      </if>
      <if test="enName != null">
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="performanceType != null">
        #{performanceType,jdbcType=TINYINT},
      </if>
      <if test="beneficiary != null">
        #{beneficiary,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunFinancPaymentExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_FINANC_PAYMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_FINANC_PAYMENT
    <set>
      <if test="record.paymentId != null">
        PAYMENT_ID = #{record.paymentId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentName != null">
        PAYMENT_NAME = #{record.paymentName,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.seqNo != null">
        SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.canDel != null">
        CAN_DEL = #{record.canDel,jdbcType=INTEGER},
      </if>
      <if test="record.isProfit != null">
        IS_PROFIT = #{record.isProfit,jdbcType=TINYINT},
      </if>
      <if test="record.enName != null">
        EN_NAME = #{record.enName,jdbcType=VARCHAR},
      </if>
      <if test="record.performanceType != null">
        PERFORMANCE_TYPE = #{record.performanceType,jdbcType=TINYINT},
      </if>
      <if test="record.beneficiary != null">
        BENEFICIARY = #{record.beneficiary,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_FINANC_PAYMENT
    set PAYMENT_ID = #{record.paymentId,jdbcType=INTEGER},
      PAYMENT_NAME = #{record.paymentName,jdbcType=VARCHAR},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      CAN_DEL = #{record.canDel,jdbcType=INTEGER},
      IS_PROFIT = #{record.isProfit,jdbcType=TINYINT},
      EN_NAME = #{record.enName,jdbcType=VARCHAR},
      PERFORMANCE_TYPE = #{record.performanceType,jdbcType=TINYINT},
      BENEFICIARY = #{record.beneficiary,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunFinancPayment">
    <!--@mbggenerated-->
    update FUN_FINANC_PAYMENT
    <set>
      <if test="paymentName != null">
        PAYMENT_NAME = #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="seqNo != null">
        SEQ_NO = #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="canDel != null">
        CAN_DEL = #{canDel,jdbcType=INTEGER},
      </if>
      <if test="isProfit != null">
        IS_PROFIT = #{isProfit,jdbcType=TINYINT},
      </if>
      <if test="enName != null">
        EN_NAME = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="performanceType != null">
        PERFORMANCE_TYPE = #{performanceType,jdbcType=TINYINT},
      </if>
      <if test="beneficiary != null">
        BENEFICIARY = #{beneficiary,jdbcType=TINYINT},
      </if>
    </set>
    where PAYMENT_ID = #{paymentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunFinancPayment">
    <!--@mbggenerated-->
    update FUN_FINANC_PAYMENT
    set PAYMENT_NAME = #{paymentName,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      SEQ_NO = #{seqNo,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      CAN_DEL = #{canDel,jdbcType=INTEGER},
      IS_PROFIT = #{isProfit,jdbcType=TINYINT},
      EN_NAME = #{enName,jdbcType=VARCHAR},
      PERFORMANCE_TYPE = #{performanceType,jdbcType=TINYINT},
      BENEFICIARY = #{beneficiary,jdbcType=TINYINT}
    where PAYMENT_ID = #{paymentId,jdbcType=INTEGER}
  </update>

  <insert id="createCompTempleteFinancPaymentList">
     INSERT INTO FUN_FINANC_PAYMENT(PAYMENT_NAME,COMP_ID,SEQ_NO,CREATE_TIME,IS_DEL,CAN_DEL,IS_PROFIT,PERFORMANCE_TYPE)
     SELECT PAYMENT_NAME,#{compId},SEQ_NO,CREATE_TIME,IS_DEL,CAN_DEL,IS_PROFIT,PERFORMANCE_TYPE
     FROM FUN_FINANC_PAYMENT
     WHERE COMP_ID=0
  </insert>

  <select id="buildSystemDefinitionFinancPayment" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from FUN_FINANC_PAYMENT
    WHERE COMP_ID = #{compId} AND IS_DEL = 0 AND CAN_DEL = 0
    AND EN_NAME IN ('COMMISSION','MORTGAGE_AGENCY_FEE','TRANSFER_FEE')
  </select>

  <select id="getPaymentIdsList" resultType="java.lang.Integer">
    select PAYMENT_ID
    from FUN_FINANC_PAYMENT
    WHERE COMP_ID = #{compId} AND CAN_DEL = 0
    AND PAYMENT_NAME IN ('佣金','佣金包段','佣金全包')
  </select>
</mapper>