<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunDealTaxesSubMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunDealTaxesSub">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="FATHER_ID" jdbcType="INTEGER" property="fatherId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="SEQ_NO" jdbcType="INTEGER" property="seqNo" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="TAXES_FIXED_AMOUNT" jdbcType="VARCHAR" property="taxesFixedAmount" />
    <result column="TAXES_FIXED_UNIT" jdbcType="TINYINT" property="taxesFixedUnit" />
    <result column="CAN_DEL" jdbcType="TINYINT" property="canDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, FATHER_ID, [NAME], COMP_ID, SEQ_NO, IS_DEL, TAXES_FIXED_AMOUNT, TAXES_FIXED_UNIT, 
    CAN_DEL
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesSubExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_DEAL_TAXES_SUB
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_DEAL_TAXES_SUB
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_DEAL_TAXES_SUB
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesSubExample">
    <!--@mbggenerated-->
    delete from FUN_DEAL_TAXES_SUB
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesSub">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_DEAL_TAXES_SUB (FATHER_ID, [NAME], COMP_ID, 
      SEQ_NO, IS_DEL, TAXES_FIXED_AMOUNT, 
      TAXES_FIXED_UNIT, CAN_DEL)
    values (#{fatherId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, 
      #{seqNo,jdbcType=INTEGER}, #{isDel,jdbcType=TINYINT}, #{taxesFixedAmount,jdbcType=VARCHAR}, 
      #{taxesFixedUnit,jdbcType=TINYINT}, #{canDel,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesSub">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_DEAL_TAXES_SUB
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fatherId != null">
        FATHER_ID,
      </if>
      <if test="name != null">
        [NAME],
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="seqNo != null">
        SEQ_NO,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="taxesFixedAmount != null">
        TAXES_FIXED_AMOUNT,
      </if>
      <if test="taxesFixedUnit != null">
        TAXES_FIXED_UNIT,
      </if>
      <if test="canDel != null">
        CAN_DEL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fatherId != null">
        #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="taxesFixedAmount != null">
        #{taxesFixedAmount,jdbcType=VARCHAR},
      </if>
      <if test="taxesFixedUnit != null">
        #{taxesFixedUnit,jdbcType=TINYINT},
      </if>
      <if test="canDel != null">
        #{canDel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesSubExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_DEAL_TAXES_SUB
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEAL_TAXES_SUB
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fatherId != null">
        FATHER_ID = #{record.fatherId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        [NAME] = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.seqNo != null">
        SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.taxesFixedAmount != null">
        TAXES_FIXED_AMOUNT = #{record.taxesFixedAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.taxesFixedUnit != null">
        TAXES_FIXED_UNIT = #{record.taxesFixedUnit,jdbcType=TINYINT},
      </if>
      <if test="record.canDel != null">
        CAN_DEL = #{record.canDel,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEAL_TAXES_SUB
    set ID = #{record.id,jdbcType=INTEGER},
      FATHER_ID = #{record.fatherId,jdbcType=INTEGER},
      [NAME] = #{record.name,jdbcType=VARCHAR},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      TAXES_FIXED_AMOUNT = #{record.taxesFixedAmount,jdbcType=VARCHAR},
      TAXES_FIXED_UNIT = #{record.taxesFixedUnit,jdbcType=TINYINT},
      CAN_DEL = #{record.canDel,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesSub">
    <!--@mbggenerated-->
    update FUN_DEAL_TAXES_SUB
    <set>
      <if test="fatherId != null">
        FATHER_ID = #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        [NAME] = #{name,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="seqNo != null">
        SEQ_NO = #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="taxesFixedAmount != null">
        TAXES_FIXED_AMOUNT = #{taxesFixedAmount,jdbcType=VARCHAR},
      </if>
      <if test="taxesFixedUnit != null">
        TAXES_FIXED_UNIT = #{taxesFixedUnit,jdbcType=TINYINT},
      </if>
      <if test="canDel != null">
        CAN_DEL = #{canDel,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesSub">
    <!--@mbggenerated-->
    update FUN_DEAL_TAXES_SUB
    set FATHER_ID = #{fatherId,jdbcType=INTEGER},
      [NAME] = #{name,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      SEQ_NO = #{seqNo,jdbcType=INTEGER},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      TAXES_FIXED_AMOUNT = #{taxesFixedAmount,jdbcType=VARCHAR},
      TAXES_FIXED_UNIT = #{taxesFixedUnit,jdbcType=TINYINT},
      CAN_DEL = #{canDel,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <!-- buniess -->
  <insert id="insertTaxesSubComp" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesSub">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_DEAL_TAXES_SUB(FATHER_ID,NAME,COMP_ID,SEQ_NO,IS_DEL) 
    values(#{id},'公证费',#{erpCompId},null,null),
		(#{id},'交易费',#{erpCompId},null,null),
		(#{id},'调档费',#{erpCompId},null,null),
		(#{id},'维修基金',#{erpCompId},null,null),
		(#{id},'契税',#{erpCompId},null,null),
		(#{id},'合同费',#{erpCompId},null,null),
		(#{id},'个税',#{erpCompId},null,null),
		(#{id},'营业税',#{erpCompId},null,null);
  </insert>
  <insert id="insertTaxesSubCompTax" parameterType="com.myfun.repository.erpdb.po.ErpFunDealTaxesSub">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_DEAL_TAXES_SUB(FATHER_ID,NAME,COMP_ID,SEQ_NO,IS_DEL) 
    values(#{id},'个税',#{erpCompId},null,null),
	    (#{id},'营业税',#{erpCompId},null,null),
	    (#{id},'补契税',#{erpCompId},null,null),
	    (#{id},'佣金',#{erpCompId},null,null);
  </insert>

  <insert id="insertBathList">
    insert into FUN_DEAL_TAXES_SUB(FATHER_ID,NAME,COMP_ID,SEQ_NO,IS_DEL, TAXES_FIXED_AMOUNT,TAXES_FIXED_UNIT)
    values
    <foreach collection="subList" item="item" separator=",">
      (#{item.fatherId}, #{item.name}, #{item.compId}, #{item.seqNo},#{item.isDel},#{item.taxesFixedAmount},#{item.taxesFixedUnit})
    </foreach>
  </insert>
</mapper>