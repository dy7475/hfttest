<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunBrokerageIncomeMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunBrokerageIncome">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="COMMION_TYPE" jdbcType="TINYINT" property="commionType" />
    <result column="HOUSE_RATE" jdbcType="NUMERIC" property="houseRate" />
    <result column="CUSTOMER_RATE" jdbcType="NUMERIC" property="customerRate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, CREATION_TIME, COMMION_TYPE, HOUSE_RATE, CUSTOMER_RATE
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunBrokerageIncomeExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_BROKERAGE_INCOME
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_BROKERAGE_INCOME
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_BROKERAGE_INCOME
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunBrokerageIncomeExample">
    <!--@mbggenerated-->
    delete from FUN_BROKERAGE_INCOME
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunBrokerageIncome" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_BROKERAGE_INCOME (COMP_ID, CREATION_TIME, COMMION_TYPE, 
      HOUSE_RATE, CUSTOMER_RATE)
    values (#{compId,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP}, #{commionType,jdbcType=TINYINT}, 
      #{houseRate,jdbcType=NUMERIC}, #{customerRate,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunBrokerageIncome" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_BROKERAGE_INCOME
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="commionType != null">
        COMMION_TYPE,
      </if>
      <if test="houseRate != null">
        HOUSE_RATE,
      </if>
      <if test="customerRate != null">
        CUSTOMER_RATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commionType != null">
        #{commionType,jdbcType=TINYINT},
      </if>
      <if test="houseRate != null">
        #{houseRate,jdbcType=NUMERIC},
      </if>
      <if test="customerRate != null">
        #{customerRate,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunBrokerageIncomeExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_BROKERAGE_INCOME
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_BROKERAGE_INCOME
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commionType != null">
        COMMION_TYPE = #{record.commionType,jdbcType=TINYINT},
      </if>
      <if test="record.houseRate != null">
        HOUSE_RATE = #{record.houseRate,jdbcType=NUMERIC},
      </if>
      <if test="record.customerRate != null">
        CUSTOMER_RATE = #{record.customerRate,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_BROKERAGE_INCOME
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      COMMION_TYPE = #{record.commionType,jdbcType=TINYINT},
      HOUSE_RATE = #{record.houseRate,jdbcType=NUMERIC},
      CUSTOMER_RATE = #{record.customerRate,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunBrokerageIncome">
    <!--@mbggenerated-->
    update FUN_BROKERAGE_INCOME
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commionType != null">
        COMMION_TYPE = #{commionType,jdbcType=TINYINT},
      </if>
      <if test="houseRate != null">
        HOUSE_RATE = #{houseRate,jdbcType=NUMERIC},
      </if>
      <if test="customerRate != null">
        CUSTOMER_RATE = #{customerRate,jdbcType=NUMERIC},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunBrokerageIncome">
    <!--@mbggenerated-->
    update FUN_BROKERAGE_INCOME
    set COMP_ID = #{compId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      COMMION_TYPE = #{commionType,jdbcType=TINYINT},
      HOUSE_RATE = #{houseRate,jdbcType=NUMERIC},
      CUSTOMER_RATE = #{customerRate,jdbcType=NUMERIC}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <insert id ="insertBatch" parameterType="java.util.List" >
    insert into FUN_BROKERAGE_INCOME
    (COMP_ID, CREATION_TIME, COMMION_TYPE, HOUSE_RATE,CUSTOMER_RATE)
    values
    <foreach collection ="paramList" item="funBrokerageIncome" index= "index" separator =",">
      (
          #{funBrokerageIncome.compId}, #{funBrokerageIncome.creationTime},
          #{funBrokerageIncome.commionType},#{funBrokerageIncome.houseRate},
          #{funBrokerageIncome.customerRate}
      )
    </foreach >
  </insert >

</mapper>