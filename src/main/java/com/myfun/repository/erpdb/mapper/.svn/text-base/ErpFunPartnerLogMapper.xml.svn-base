<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunPartnerLogMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunPartnerLog" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="PARTNER_ID" property="partnerId" jdbcType="INTEGER" />
    <result column="MODULAR" property="modular" jdbcType="TINYINT" />
    <result column="CREATE_UID" property="createUid" jdbcType="INTEGER" />
    <result column="LOG_CONTENT" property="logContent" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.myfun.repository.erpdb.po.ErpFunPartnerLog" extends="BaseResultMap" >
    <!--@mbggenerated-->
    <result column="BEFORE_MODIFICATION" property="beforeModification" jdbcType="CLOB" />
    <result column="AFTER_MODIFICATION" property="afterModification" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, COMP_ID, PARTNER_ID, MODULAR, CREATE_UID, LOG_CONTENT, CREATE_TIME
  </sql>
  <sql id="Blob_Column_List" >
    <!--@mbggenerated-->
    BEFORE_MODIFICATION, AFTER_MODIFICATION
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.myfun.repository.erpdb.po.ErpFunPartnerLogExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_PARTNER_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpFunPartnerLogExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_PARTNER_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_PARTNER_LOG
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_PARTNER_LOG
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPartnerLogExample" >
    <!--@mbggenerated-->
    delete from FUN_PARTNER_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunPartnerLog" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_PARTNER_LOG (COMP_ID, PARTNER_ID, MODULAR, 
      CREATE_UID, LOG_CONTENT, CREATE_TIME, 
      BEFORE_MODIFICATION, AFTER_MODIFICATION)
    values (#{compId,jdbcType=INTEGER}, #{partnerId,jdbcType=INTEGER}, #{modular,jdbcType=TINYINT}, 
      #{createUid,jdbcType=INTEGER}, #{logContent,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{beforeModification,jdbcType=CLOB}, #{afterModification,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunPartnerLog" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_PARTNER_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="partnerId != null" >
        PARTNER_ID,
      </if>
      <if test="modular != null" >
        MODULAR,
      </if>
      <if test="createUid != null" >
        CREATE_UID,
      </if>
      <if test="logContent != null" >
        LOG_CONTENT,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="beforeModification != null" >
        BEFORE_MODIFICATION,
      </if>
      <if test="afterModification != null" >
        AFTER_MODIFICATION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="partnerId != null" >
        #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="modular != null" >
        #{modular,jdbcType=TINYINT},
      </if>
      <if test="createUid != null" >
        #{createUid,jdbcType=INTEGER},
      </if>
      <if test="logContent != null" >
        #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="beforeModification != null" >
        #{beforeModification,jdbcType=CLOB},
      </if>
      <if test="afterModification != null" >
        #{afterModification,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPartnerLogExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from FUN_PARTNER_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_PARTNER_LOG
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.partnerId != null" >
        PARTNER_ID = #{record.partnerId,jdbcType=INTEGER},
      </if>
      <if test="record.modular != null" >
        MODULAR = #{record.modular,jdbcType=TINYINT},
      </if>
      <if test="record.createUid != null" >
        CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      </if>
      <if test="record.logContent != null" >
        LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.beforeModification != null" >
        BEFORE_MODIFICATION = #{record.beforeModification,jdbcType=CLOB},
      </if>
      <if test="record.afterModification != null" >
        AFTER_MODIFICATION = #{record.afterModification,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_PARTNER_LOG
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      PARTNER_ID = #{record.partnerId,jdbcType=INTEGER},
      MODULAR = #{record.modular,jdbcType=TINYINT},
      CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      BEFORE_MODIFICATION = #{record.beforeModification,jdbcType=CLOB},
      AFTER_MODIFICATION = #{record.afterModification,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_PARTNER_LOG
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      PARTNER_ID = #{record.partnerId,jdbcType=INTEGER},
      MODULAR = #{record.modular,jdbcType=TINYINT},
      CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunPartnerLog" >
    <!--@mbggenerated-->
    update FUN_PARTNER_LOG
    <set >
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="partnerId != null" >
        PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="modular != null" >
        MODULAR = #{modular,jdbcType=TINYINT},
      </if>
      <if test="createUid != null" >
        CREATE_UID = #{createUid,jdbcType=INTEGER},
      </if>
      <if test="logContent != null" >
        LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="beforeModification != null" >
        BEFORE_MODIFICATION = #{beforeModification,jdbcType=CLOB},
      </if>
      <if test="afterModification != null" >
        AFTER_MODIFICATION = #{afterModification,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myfun.repository.erpdb.po.ErpFunPartnerLog" >
    <!--@mbggenerated-->
    update FUN_PARTNER_LOG
    set COMP_ID = #{compId,jdbcType=INTEGER},
      PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      MODULAR = #{modular,jdbcType=TINYINT},
      CREATE_UID = #{createUid,jdbcType=INTEGER},
      LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      BEFORE_MODIFICATION = #{beforeModification,jdbcType=CLOB},
      AFTER_MODIFICATION = #{afterModification,jdbcType=CLOB}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunPartnerLog" >
    <!--@mbggenerated-->
    update FUN_PARTNER_LOG
    set COMP_ID = #{compId,jdbcType=INTEGER},
      PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      MODULAR = #{modular,jdbcType=TINYINT},
      CREATE_UID = #{createUid,jdbcType=INTEGER},
      LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>