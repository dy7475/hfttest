<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunRewardPunishmentMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunRewardPunishment">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="REWARD_PUNISHMENT_TYPE" jdbcType="TINYINT" property="rewardPunishmentType" />
    <result column="REWARD_PUNISHMENT_CLASS" jdbcType="INTEGER" property="rewardPunishmentClass" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="OCCURRENCE_TIME" jdbcType="TIMESTAMP" property="occurrenceTime" />
    <result column="AMOUNT" jdbcType="NUMERIC" property="amount" />
    <result column="CREATE_UID" jdbcType="INTEGER" property="createUid" />
    <result column="AUDIT_UID" jdbcType="INTEGER" property="auditUid" />
    <result column="AUDIT_TIME" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="AUDIT_STATUS" jdbcType="TINYINT" property="auditStatus" />
    <result column="REMARKS" jdbcType="VARCHAR" property="remarks" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="DEL_TIME" jdbcType="TIMESTAMP" property="delTime" />
    <result column="DEL_UID" jdbcType="INTEGER" property="delUid" />
    <result column="UPDATE_UID" jdbcType="INTEGER" property="updateUid" />
    <result column="ASSESSMENT_MONTH" jdbcType="VARCHAR" property="assessmentMonth" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, REWARD_PUNISHMENT_TYPE, REWARD_PUNISHMENT_CLASS, 
    CREATE_TIME, OCCURRENCE_TIME, AMOUNT, CREATE_UID, AUDIT_UID, AUDIT_TIME, AUDIT_STATUS, 
    REMARKS, USER_ID, UPDATE_TIME, IS_DEL, DEL_TIME, DEL_UID, UPDATE_UID, ASSESSMENT_MONTH
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_REWARD_PUNISHMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_REWARD_PUNISHMENT
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_REWARD_PUNISHMENT
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentExample">
    <!--@mbggenerated-->
    delete from FUN_REWARD_PUNISHMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishment" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_REWARD_PUNISHMENT (COMP_ID, AREA_ID, REG_ID, 
      DEPT_ID, GR_ID, REWARD_PUNISHMENT_TYPE, 
      REWARD_PUNISHMENT_CLASS, CREATE_TIME, OCCURRENCE_TIME, 
      AMOUNT, CREATE_UID, AUDIT_UID, 
      AUDIT_TIME, AUDIT_STATUS, REMARKS, 
      USER_ID, UPDATE_TIME, IS_DEL, 
      DEL_TIME, DEL_UID, UPDATE_UID, 
      ASSESSMENT_MONTH)
    values (#{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{regId,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, #{rewardPunishmentType,jdbcType=TINYINT}, 
      #{rewardPunishmentClass,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{occurrenceTime,jdbcType=TIMESTAMP}, 
      #{amount,jdbcType=NUMERIC}, #{createUid,jdbcType=INTEGER}, #{auditUid,jdbcType=INTEGER}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{auditStatus,jdbcType=TINYINT}, #{remarks,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=TINYINT}, 
      #{delTime,jdbcType=TIMESTAMP}, #{delUid,jdbcType=INTEGER}, #{updateUid,jdbcType=INTEGER}, 
      #{assessmentMonth,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishment" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_REWARD_PUNISHMENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="rewardPunishmentType != null">
        REWARD_PUNISHMENT_TYPE,
      </if>
      <if test="rewardPunishmentClass != null">
        REWARD_PUNISHMENT_CLASS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="occurrenceTime != null">
        OCCURRENCE_TIME,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="createUid != null">
        CREATE_UID,
      </if>
      <if test="auditUid != null">
        AUDIT_UID,
      </if>
      <if test="auditTime != null">
        AUDIT_TIME,
      </if>
      <if test="auditStatus != null">
        AUDIT_STATUS,
      </if>
      <if test="remarks != null">
        REMARKS,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="delTime != null">
        DEL_TIME,
      </if>
      <if test="delUid != null">
        DEL_UID,
      </if>
      <if test="updateUid != null">
        UPDATE_UID,
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="rewardPunishmentType != null">
        #{rewardPunishmentType,jdbcType=TINYINT},
      </if>
      <if test="rewardPunishmentClass != null">
        #{rewardPunishmentClass,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="occurrenceTime != null">
        #{occurrenceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=NUMERIC},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=INTEGER},
      </if>
      <if test="auditUid != null">
        #{auditUid,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="delTime != null">
        #{delTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delUid != null">
        #{delUid,jdbcType=INTEGER},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="assessmentMonth != null">
        #{assessmentMonth,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_REWARD_PUNISHMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_REWARD_PUNISHMENT
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardPunishmentType != null">
        REWARD_PUNISHMENT_TYPE = #{record.rewardPunishmentType,jdbcType=TINYINT},
      </if>
      <if test="record.rewardPunishmentClass != null">
        REWARD_PUNISHMENT_CLASS = #{record.rewardPunishmentClass,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.occurrenceTime != null">
        OCCURRENCE_TIME = #{record.occurrenceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=NUMERIC},
      </if>
      <if test="record.createUid != null">
        CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      </if>
      <if test="record.auditUid != null">
        AUDIT_UID = #{record.auditUid,jdbcType=INTEGER},
      </if>
      <if test="record.auditTime != null">
        AUDIT_TIME = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditStatus != null">
        AUDIT_STATUS = #{record.auditStatus,jdbcType=TINYINT},
      </if>
      <if test="record.remarks != null">
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.delTime != null">
        DEL_TIME = #{record.delTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delUid != null">
        DEL_UID = #{record.delUid,jdbcType=INTEGER},
      </if>
      <if test="record.updateUid != null">
        UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
      </if>
      <if test="record.assessmentMonth != null">
        ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_REWARD_PUNISHMENT
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      REWARD_PUNISHMENT_TYPE = #{record.rewardPunishmentType,jdbcType=TINYINT},
      REWARD_PUNISHMENT_CLASS = #{record.rewardPunishmentClass,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      OCCURRENCE_TIME = #{record.occurrenceTime,jdbcType=TIMESTAMP},
      AMOUNT = #{record.amount,jdbcType=NUMERIC},
      CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      AUDIT_UID = #{record.auditUid,jdbcType=INTEGER},
      AUDIT_TIME = #{record.auditTime,jdbcType=TIMESTAMP},
      AUDIT_STATUS = #{record.auditStatus,jdbcType=TINYINT},
      REMARKS = #{record.remarks,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      DEL_TIME = #{record.delTime,jdbcType=TIMESTAMP},
      DEL_UID = #{record.delUid,jdbcType=INTEGER},
      UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
      ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishment">
    <!--@mbggenerated-->
    update FUN_REWARD_PUNISHMENT
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="rewardPunishmentType != null">
        REWARD_PUNISHMENT_TYPE = #{rewardPunishmentType,jdbcType=TINYINT},
      </if>
      <if test="rewardPunishmentClass != null">
        REWARD_PUNISHMENT_CLASS = #{rewardPunishmentClass,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="occurrenceTime != null">
        OCCURRENCE_TIME = #{occurrenceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=NUMERIC},
      </if>
      <if test="createUid != null">
        CREATE_UID = #{createUid,jdbcType=INTEGER},
      </if>
      <if test="auditUid != null">
        AUDIT_UID = #{auditUid,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        AUDIT_TIME = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditStatus != null">
        AUDIT_STATUS = #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="remarks != null">
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="delTime != null">
        DEL_TIME = #{delTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delUid != null">
        DEL_UID = #{delUid,jdbcType=INTEGER},
      </if>
      <if test="updateUid != null">
        UPDATE_UID = #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishment">
    <!--@mbggenerated-->
    update FUN_REWARD_PUNISHMENT
    set COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      REWARD_PUNISHMENT_TYPE = #{rewardPunishmentType,jdbcType=TINYINT},
      REWARD_PUNISHMENT_CLASS = #{rewardPunishmentClass,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      OCCURRENCE_TIME = #{occurrenceTime,jdbcType=TIMESTAMP},
      AMOUNT = #{amount,jdbcType=NUMERIC},
      CREATE_UID = #{createUid,jdbcType=INTEGER},
      AUDIT_UID = #{auditUid,jdbcType=INTEGER},
      AUDIT_TIME = #{auditTime,jdbcType=TIMESTAMP},
      AUDIT_STATUS = #{auditStatus,jdbcType=TINYINT},
      REMARKS = #{remarks,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      DEL_TIME = #{delTime,jdbcType=TIMESTAMP},
      DEL_UID = #{delUid,jdbcType=INTEGER},
      UPDATE_UID = #{updateUid,jdbcType=INTEGER},
      ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <resultMap extends="BaseResultMap" id="extBaseResultMap" type="com.myfun.repository.erpdb.dto.ErpFunRewardPunishmentDto">
    <result column="CLASS_NAME" jdbcType="VARCHAR" property="className" />
    <result column="USER_POSITION" jdbcType="VARCHAR" property="userPosition" />
  </resultMap>

  <select id="getRewardPunishmentList" resultMap="extBaseResultMap">
      SELECT a.*, b.CLASS_NAME,c.USER_POSITION  from FUN_REWARD_PUNISHMENT a
      LEFT JOIN FUN_REWARD_PUNISHMENT_CLASS b on a.REWARD_PUNISHMENT_CLASS = b.id
      JOIN FUN_USERS c on a.USER_ID = c.USER_ID
      <where>
          <if test="!param.newOrganization">
	          <if test="null != param.compId">
	              and a.COMP_ID=#{param.compId} and a.IS_DEL=0
	          </if>
	          <if test="null != param.areaId">
	          	and c.AREA_ID=#{param.areaId}
	          </if>
	          <if test="null != param.regId">
	          	and c.REG_ID=#{param.regId}
	          </if>
	          <if test="null != param.deptId">
	          	and c.DEPT_ID=#{param.deptId}
	          </if>
	          <if test="null != param.grId">
	          	and c.GR_ID=#{param.grId}
	          </if>
          </if>
          <if test="param.newOrganization">
	          <if test="null != param.organizationId and param.organizationId &gt; 0">
	          	and C.TISSUE_LINE LIKE '%:${param.organizationId}:%'
	          </if>
          </if>
          
          <if test="null != param.userId">
              and a.USER_ID=#{param.userId}
          </if>
          <if test="null != param.rewardPunishmentType">
              and a.REWARD_PUNISHMENT_TYPE=#{param.rewardPunishmentType}
          </if>
          <if test="null != param.rewardPunishmentClass">
              and a.REWARD_PUNISHMENT_CLASS=#{param.rewardPunishmentClass}
          </if>
          <if test="null != param.occMonth and '' != param.occMonth">
              and ASSESSMENT_MONTH=#{param.occMonth}
          </if>

          <if test="null != param.startTimeDate and null != param.endTimeDate">
            <choose>
              <when test="param.timeType == 1">
                  and a.CREATE_TIME &gt;= #{param.startTimeDate} and a.CREATE_TIME &lt;= #{param.endTimeDate}
              </when>
              <when test="param.timeType == 2">
                  and a.UPDATE_TIME &gt;= #{param.startTimeDate} and a.UPDATE_TIME &lt;= #{param.endTimeDate}
              </when>
            </choose>
          </if>

      </where>
      ORDER BY a.id desc
  </select>

  <select id="summaryRewardPunishmentList" resultType="java.util.Map">
    SELECT  ASSESSMENT_MONTH assessmentMonth, sum(iif(REWARD_PUNISHMENT_TYPE=1, AMOUNT, 0)) rewardAmount,
      sum(iif(REWARD_PUNISHMENT_TYPE=2, AMOUNT, 0)) punishmentAmount,
      <if test="'AREA' == param.dimension">
        b.AREA_ID areaId
      </if>
      <if test="'REG' == param.dimension">
        b.REG_ID regId
      </if>
      <if test="'DEPT' == param.dimension">
        b.DEPT_Id deptId
      </if>
      <if test="'GROUP' == param.dimension">
        b.GR_ID grId, b.DEPT_ID deptId
      </if>
      <if test="'USER' == param.dimension">
        b.DEPT_ID deptId,b.USER_POSITION userPosition, a.USER_ID userId
      </if>
    FROM FUN_REWARD_PUNISHMENT a
    JOIN FUN_USERS b on a.USER_ID = b.USER_ID
    <where>
        <if test="null != param.compId">
            and a.COMP_ID=#{param.compId} and a.IS_DEL=0
        </if>
        <if test="null != param.areaId">
            and b.AREA_ID=#{param.areaId}
        </if>
        <if test="null != param.regId">
            and b.REG_ID=#{param.regId}
        </if>
        <if test="null != param.deptId">
            and b.DEPT_ID=#{param.deptId}
        </if>
        <if test="null != param.grId">
            and b.GR_ID=#{param.grId}
        </if>
        <if test="null != param.userId">
            and b.USER_ID=#{param.userId}
        </if>
        <if test="null != param.rewardPunishmentType">
          and a.REWARD_PUNISHMENT_TYPE=#{param.rewardPunishmentType}
        </if>
        <if test="null != param.rewardPunishmentClass">
          and a.REWARD_PUNISHMENT_CLASS=#{param.rewardPunishmentClass}
        </if>
        <if test="null != param.occMonth and '' != param.occMonth">
          and ASSESSMENT_MONTH=#{param.occMonth}
        </if>
        <if test="null != param.startTime and '' != param.startTime and null != param.endTime and '' != param.endTime">
          <choose>
            <when test="param.timeType == 1">
              and a.CREATE_TIME &gt;= #{param.startTime} and  a.CREATE_TIME &lt;= #{param.endTime}
            </when>
            <when test="param.timeType == 2">
              and a.UPDATE_TIME &gt;= #{param.startTime} and  a.UPDATE_TIME &lt;= #{param.endTime}
            </when>
            <when test="param.timeType == 3">
              and a.AUDIT_TIME &gt;= #{param.startTime} and  a.AUDIT_TIME &lt;= #{param.endTime}
            </when>
          </choose>
        </if>
    </where>
    GROUP BY ASSESSMENT_MONTH,
	    <if test="'AREA' == param.dimension">
	      b.AREA_ID
	    </if>
	    <if test="'REG' == param.dimension">
	      b.REG_ID
	    </if>
	    <if test="'DEPT' == param.dimension">
	      b.DEPT_ID
	    </if>
	    <if test="'GROUP' == param.dimension">
	      b.GR_ID, b.DEPT_ID
	    </if>
	    <if test="'USER' == param.dimension">
	      b.DEPT_ID ,b.USER_POSITION , a.USER_ID
	    </if>
    order by
      <if test="'AREA' == param.dimension">
        b.area_id
      </if>
      <if test="'REG' == param.dimension">
        b.reg_id
      </if>
      <if test="'DEPT' == param.dimension">
        b.dept_id
      </if>
      <if test="'GROUP' == param.dimension">
        b.gr_id
      </if>
      <if test="'USER' == param.dimension">
        a.user_id
      </if>
     DESC
  </select>

    <select id="summaryRewardPunishmentCount" resultType="java.lang.Long">
        with t as (
            SELECT 
              <if test="'AREA' == param.dimension">
                b.AREA_ID areaId
              </if>
              <if test="'REG' == param.dimension">
                b.REG_ID regId
              </if>
              <if test="'DEPT' == param.dimension">
                b.DEPT_Id deptId
              </if>
              <if test="'GROUP' == param.dimension">
                b.GR_ID grId, b.DEPT_ID deptId
              </if>
              <if test="'USER' == param.dimension">
                b.DEPT_ID deptId,b.USER_POSITION userPosition, a.USER_ID userId
              </if>
            FROM FUN_REWARD_PUNISHMENT a
            JOIN FUN_USERS b on a.USER_ID = b.USER_ID
            where  a.COMP_ID=#{param.compId} and a.IS_DEL=0

              <if test="null != param.areaId">
                and b.AREA_ID=#{param.areaId}
              </if>
              <if test="null != param.regId">
                and b.REG_ID=#{param.regId}
              </if>
              <if test="null != param.deptId">
                and b.DEPT_ID=#{param.deptId}
              </if>
              <if test="null != param.grId">
                and b.GR_ID=#{param.grId}
              </if>
            <if test="null != param.userId">
              and b.USER_ID=#{param.userId}
            </if>
            <if test="null != param.rewardPunishmentType">
              and a.REWARD_PUNISHMENT_TYPE=#{param.rewardPunishmentType}
            </if>
            <if test="null != param.rewardPunishmentClass">
              and a.REWARD_PUNISHMENT_CLASS=#{param.rewardPunishmentClass}
            </if>
            <if test="null != param.occMonth and '' != param.occMonth">
              and ASSESSMENT_MONTH = #{param.occMonth}
            </if>
            <if test="null != param.startTime and '' != param.startTime and null != param.endTime and '' != param.endTime">
              <choose>
                <when test="param.timeType == 1">
                  and a.CREATE_TIME &gt;= #{param.startTime} and  a.CREATE_TIME &lt;= #{param.endTime}
                </when>
                <when test="param.timeType == 2">
                  and a.UPDATE_TIME &gt;= #{param.startTime} and  a.UPDATE_TIME &lt;= #{param.endTime}
                </when>
                <when test="param.timeType == 3">
                  and a.AUDIT_TIME &gt;= #{param.startTime} and  a.AUDIT_TIME &lt;= #{param.endTime}
                </when>
              </choose>
            </if>
            GROUP by ASSESSMENT_MONTH,
              <if test="'AREA' == param.dimension">
                b.AREA_ID
              </if>
              <if test="'REG' == param.dimension">
                b.REG_ID
              </if>
              <if test="'DEPT' == param.dimension">
                b.DEPT_ID
              </if>
              <if test="'GROUP' == param.dimension">
                b.GR_ID, b.DEPT_ID
              </if>
              <if test="'USER' == param.dimension">
                b.DEPT_ID ,b.USER_POSITION , a.USER_ID
              </if>
        ) select  count(1) from t
    </select>
  <insert id="insertBatch">
    INSERT INTO FUN_REWARD_PUNISHMENT(comp_id, AREA_ID, REG_ID, DEPT_ID, GR_ID, USER_ID,REWARD_PUNISHMENT_TYPE,REWARD_PUNISHMENT_CLASS
        ,CREATE_TIME, AMOUNT,CREATE_UID,REMARKS, ASSESSMENT_MONTH, OCCURRENCE_TIME)
    SELECT COMP_ID, AREA_ID, REG_ID, DEPT_ID,GR_ID, USER_ID, #{param.rewardPunishmentType},#{param.rewardPunishmentClass},GETDATE(),
   #{param.amount}, #{createUid}, #{param.remarks},#{param.assessmentMonth}, #{param.occurrenceTime}
    FROM FUN_USERS
    <where>
      <if test="null != compId">
        and COMP_ID=#{compId} and USER_WRITEOFF=0
      </if>
      <if test="null != param.userId">
        and USER_ID=#{param.userId}
      </if>
      <if test="null != param.grId">
        and GR_ID=#{param.grId}
      </if>
      <if test="null != param.deptId">
        and DEPT_ID=#{param.deptId}
      </if>
      <if test="null != param.regId">
        and REG_ID=#{param.regId}
      </if>
      <if test="null != param.areaId">
        and AREA_ID=#{param.areaId}
      </if>
      <if test="null != param.userPosition and ''!= param.userPosition">
        and USER_POSITION=#{param.userPosition}
      </if>
      <if test="null != param.userIdList">
        and USER_ID in <foreach collection="param.userIdList" separator="," open="(" item="userId" close=")">
        #{userId}
      </foreach>
      </if>
    </where>
  </insert>
  <select id="getAllUserRewardPuishmentData" resultType="com.myfun.repository.erpdb.dto.FunWageTmpDataDto">
    SELECT USER_ID userId, sum(iif(REWARD_PUNISHMENT_TYPE=1, AMOUNT, 0)) amount1, sum(iif(REWARD_PUNISHMENT_TYPE=2, AMOUNT, 0)) amount2
    FROM FUN_REWARD_PUNISHMENT
    <where>
      <if test="null != compId">
          and comp_id=#{compId} and IS_DEL=0
      </if>
      <if test="null != assmonthSet">
        and ASSESSMENT_MONTH in <foreach collection="assmonthSet" item="assessmentMonth" close=")" open="(" separator=",">
        #{assessmentMonth}
      </foreach>
      </if>
      <if test="userIds.size > 0">
        and user_id in <foreach collection="userIds" separator="," open="(" close=")" item="userId">
           #{userId}
        </foreach>
      </if>
    </where>
    GROUP BY USER_ID
  </select>
  
  <!-- new Organization begin -->
  <select id="summaryRewardPunishmentCountNewOrg" resultType="java.lang.Long">
        with t as (
            SELECT  ASSESSMENT_MONTH,${param.selectColumnStr} 
            FROM FUN_REWARD_PUNISHMENT a
            JOIN FUN_USERS b on a.USER_ID = b.USER_ID
            where  a.COMP_ID=#{param.compId} and a.IS_DEL=0
            <if test="param.dimension == 'ORGANIZATION'">
	          and b.${param.rangeColumn} = #{param.serchRangeId}
	        </if>
            <if test="null != param.userId">
              and b.USER_ID=#{param.userId}
            </if>
            <if test="null != param.rewardPunishmentType">
              and a.REWARD_PUNISHMENT_TYPE=#{param.rewardPunishmentType}
            </if>
            <if test="null != param.rewardPunishmentClass">
              and a.REWARD_PUNISHMENT_CLASS=#{param.rewardPunishmentClass}
            </if>
            <if test="null != param.occMonth and '' != param.occMonth">
              and ASSESSMENT_MONTH = #{param.occMonth}
            </if>
            <if test="null != param.startTime and '' != param.startTime and null != param.endTime and '' != param.endTime">
              <choose>
                <when test="param.timeType == 1">
                  and a.CREATE_TIME &gt;= #{param.startTime} and  a.CREATE_TIME &lt;= #{param.endTime}
                </when>
                <when test="param.timeType == 2">
                  and a.UPDATE_TIME &gt;= #{param.startTime} and  a.UPDATE_TIME &lt;= #{param.endTime}
                </when>
                <when test="param.timeType == 3">
                  and a.AUDIT_TIME &gt;= #{param.startTime} and  a.AUDIT_TIME &lt;= #{param.endTime}
                </when>
              </choose>
            </if>
            GROUP by ASSESSMENT_MONTH,${param.groupColumn}
        ) select  count(1) from t
    </select>
    
    <select id="summaryRewardPunishmentListNewOrg" resultType="java.util.Map">
	    SELECT  ASSESSMENT_MONTH assessmentMonth, sum(iif(REWARD_PUNISHMENT_TYPE=1, AMOUNT, 0)) rewardAmount,
      	sum(iif(REWARD_PUNISHMENT_TYPE=2, AMOUNT, 0)) punishmentAmount,
      	${param.selectColumnStr} 
	    FROM FUN_REWARD_PUNISHMENT a
	    JOIN FUN_USERS b on a.USER_ID = b.USER_ID
	    <where>
	        <if test="null != param.compId">
	            and a.COMP_ID=#{param.compId} and a.IS_DEL=0
	        </if>
	        <if test="null != param.userId">
	            and b.USER_ID=#{param.userId}
	        </if>
	        <if test="null != param.rewardPunishmentType">
	          and a.REWARD_PUNISHMENT_TYPE=#{param.rewardPunishmentType}
	        </if>
	        <if test="null != param.rewardPunishmentClass">
	          and a.REWARD_PUNISHMENT_CLASS=#{param.rewardPunishmentClass}
	        </if>
	        <if test="null != param.occMonth and '' != param.occMonth">
	          and ASSESSMENT_MONTH=#{param.occMonth}
	        </if>
	        <if test="null != param.startTime and '' != param.startTime and null != param.endTime and '' != param.endTime">
	          <choose>
	            <when test="param.timeType == 1">
	              and a.CREATE_TIME &gt;= #{param.startTime} and  a.CREATE_TIME &lt;= #{param.endTime}
	            </when>
	            <when test="param.timeType == 2">
	              and a.UPDATE_TIME &gt;= #{param.startTime} and  a.UPDATE_TIME &lt;= #{param.endTime}
	            </when>
	            <when test="param.timeType == 3">
	              and a.AUDIT_TIME &gt;= #{param.startTime} and  a.AUDIT_TIME &lt;= #{param.endTime}
	            </when>
	          </choose>
	        </if>
	        <if test="param.dimension == 'ORGANIZATION'">
	          and b.${param.rangeColumn} = #{param.serchRangeId}
	        </if>
	    </where>
	    GROUP BY ASSESSMENT_MONTH, ${param.groupColumn}
	    order by ${param.groupColumn} DESC
	  </select>
	  
		  
	  <select id="getRewardPunishmentListNewOrg" resultMap="extBaseResultMap">
	      SELECT a.*, b.CLASS_NAME,c.USER_POSITION  from FUN_REWARD_PUNISHMENT a
	      LEFT JOIN FUN_REWARD_PUNISHMENT_CLASS b on a.REWARD_PUNISHMENT_CLASS = b.id
	      JOIN FUN_USERS c on a.USER_ID = c.USER_ID
	      <where>
	          <if test="null != param.organizationId and param.organizationId &gt; 0">
	          	and c.TISSUE_LINE LIKE '%:${param.organizationId}:%'
	          </if>
	          <if test="null != param.compId">
	              and a.COMP_ID=#{param.compId} and a.IS_DEL=0
	          </if>
	          <if test="null != param.userId">
	              and a.USER_ID=#{param.userId}
	          </if>
	          <if test="null != param.rewardPunishmentType">
	              and a.REWARD_PUNISHMENT_TYPE=#{param.rewardPunishmentType}
	          </if>
	          <if test="null != param.rewardPunishmentClass">
	              and a.REWARD_PUNISHMENT_CLASS=#{param.rewardPunishmentClass}
	          </if>
	          <if test="null != param.occMonth and '' != param.occMonth">
	              and ASSESSMENT_MONTH=#{param.occMonth}
	          </if>
	
	          <if test="null != param.startTimeDate and null != param.endTimeDate">
	            <choose>
	              <when test="param.timeType == 1">
	                  and a.CREATE_TIME &gt;= #{param.startTimeDate} and a.CREATE_TIME &lt;= #{param.endTimeDate}
	              </when>
	              <when test="param.timeType == 2">
	                  and a.UPDATE_TIME &gt;= #{param.startTimeDate} and a.UPDATE_TIME &lt;= #{param.endTimeDate}
	              </when>
	            </choose>
	          </if>
	
	      </where>
	      ORDER BY a.id desc
	  </select>
	  
	<insert id="insertBatchNewOrg">
	    INSERT INTO FUN_REWARD_PUNISHMENT(comp_id, DEPT_ID, GR_ID, USER_ID,REWARD_PUNISHMENT_TYPE,REWARD_PUNISHMENT_CLASS
	        ,CREATE_TIME, AMOUNT,CREATE_UID,REMARKS, ASSESSMENT_MONTH, OCCURRENCE_TIME)
	    SELECT COMP_ID, DEPT_ID,GR_ID, USER_ID, #{param.rewardPunishmentType},#{param.rewardPunishmentClass},GETDATE(),
	   #{param.amount}, #{createUid}, #{param.remarks},#{param.assessmentMonth}, #{param.occurrenceTime}
	    FROM FUN_USERS
	    <where>
	      <if test="null != compId">
	        and COMP_ID=#{compId} and USER_WRITEOFF=0
	      </if>
	      <if test="null != param.userId">
	        and USER_ID=#{param.userId}
	      </if>
	      <if test="null != param.grId">
	        and GR_ID=#{param.grId}
	      </if>
	      <if test="null != param.deptId">
	        and DEPT_ID=#{param.deptId}
	      </if>
	      <if test="null != param.userPosition and ''!= param.userPosition">
	        and USER_POSITION=#{param.userPosition}
	      </if>
	      <if test="null != param.userIdList">
	        and USER_ID in 
	        <foreach collection="param.userIdList" separator="," open="(" item="userId" close=")">
	        #{userId}
	      </foreach>
	      </if>
	      <if test="null != param.organizationId and param.organizationId &gt; 0">
	       	and TISSUE_LINE LIKE '%:${param.organizationId}:%'
	      </if>
	    </where>
	</insert>
	  
	  
</mapper>