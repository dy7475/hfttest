<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunUserResumeMapper">
	<resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunUserResume">
		<!--@mbggenerated-->
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="COMP_ID" jdbcType="INTEGER" property="compId" />
		<result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
		<result column="USER_ID" jdbcType="INTEGER" property="userId" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="CREATE_UID" jdbcType="INTEGER" property="createUid" />
		<result column="OCCURRENCE_TIME" jdbcType="TIMESTAMP" property="occurrenceTime" />
		<result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
		<result column="EVENT_EXPLAIN" jdbcType="VARCHAR" property="eventExplain" />
	</resultMap>
	
	<resultMap extends="BaseResultMap" id="BaseResultMapDto" type="com.myfun.repository.erpdb.dto.ErpFunUserResumeDto">
		<result column="USER_PHOTO" jdbcType="VARCHAR" property="userPhoto" />
	</resultMap>
	
	<sql id="Example_Where_Clause">
		<!--@mbggenerated-->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!--@mbggenerated-->
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!--@mbggenerated-->
		ID, COMP_ID, ARCHIVE_ID, USER_ID, CREATE_TIME, CREATE_UID, OCCURRENCE_TIME, UPDATE_TIME,
		IS_DEL, EVENT_EXPLAIN
	</sql>
	<select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUserResumeExample" resultMap="BaseResultMap">
		<!--@mbggenerated-->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from FUN_USER_RESUME
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		<!--@mbggenerated-->
		select
		<include refid="Base_Column_List" />
		from FUN_USER_RESUME
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!--@mbggenerated-->
		delete from FUN_USER_RESUME
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUserResumeExample">
		<!--@mbggenerated-->
		delete from FUN_USER_RESUME
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunUserResume" useGeneratedKeys="true">
		<!--@mbggenerated-->
		insert into FUN_USER_RESUME (COMP_ID, ARCHIVE_ID, USER_ID,
		CREATE_TIME, CREATE_UID, OCCURRENCE_TIME,
		UPDATE_TIME, IS_DEL, EVENT_EXPLAIN
		)
		values (#{compId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP}, #{createUid,jdbcType=INTEGER}, #{occurrenceTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=TINYINT}, #{eventExplain,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunUserResume" useGeneratedKeys="true">
		<!--@mbggenerated-->
		insert into FUN_USER_RESUME
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="compId != null">
				COMP_ID,
			</if>
			<if test="archiveId != null">
				ARCHIVE_ID,
			</if>
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="createUid != null">
				CREATE_UID,
			</if>
			<if test="occurrenceTime != null">
				OCCURRENCE_TIME,
			</if>
			<if test="updateTime != null">
				UPDATE_TIME,
			</if>
			<if test="isDel != null">
				IS_DEL,
			</if>
			<if test="eventExplain != null">
				EVENT_EXPLAIN,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="compId != null">
				#{compId,jdbcType=INTEGER},
			</if>
			<if test="archiveId != null">
				#{archiveId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUid != null">
				#{createUid,jdbcType=INTEGER},
			</if>
			<if test="occurrenceTime != null">
				#{occurrenceTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDel != null">
				#{isDel,jdbcType=TINYINT},
			</if>
			<if test="eventExplain != null">
				#{eventExplain,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUserResumeExample" resultType="java.lang.Integer">
		<!--@mbggenerated-->
		select count(*) from FUN_USER_RESUME
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!--@mbggenerated-->
		update FUN_USER_RESUME
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.compId != null">
				COMP_ID = #{record.compId,jdbcType=INTEGER},
			</if>
			<if test="record.archiveId != null">
				ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				USER_ID = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.createUid != null">
				CREATE_UID = #{record.createUid,jdbcType=INTEGER},
			</if>
			<if test="record.occurrenceTime != null">
				OCCURRENCE_TIME = #{record.occurrenceTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.isDel != null">
				IS_DEL = #{record.isDel,jdbcType=TINYINT},
			</if>
			<if test="record.eventExplain != null">
				EVENT_EXPLAIN = #{record.eventExplain,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!--@mbggenerated-->
		update FUN_USER_RESUME
		set ID = #{record.id,jdbcType=INTEGER},
		COMP_ID = #{record.compId,jdbcType=INTEGER},
		ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
		USER_ID = #{record.userId,jdbcType=INTEGER},
		CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
		CREATE_UID = #{record.createUid,jdbcType=INTEGER},
		OCCURRENCE_TIME = #{record.occurrenceTime,jdbcType=TIMESTAMP},
		UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
		IS_DEL = #{record.isDel,jdbcType=TINYINT},
		EVENT_EXPLAIN = #{record.eventExplain,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunUserResume">
		<!--@mbggenerated-->
		update FUN_USER_RESUME
		<set>
			<if test="compId != null">
				COMP_ID = #{compId,jdbcType=INTEGER},
			</if>
			<if test="archiveId != null">
				ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				USER_ID = #{userId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUid != null">
				CREATE_UID = #{createUid,jdbcType=INTEGER},
			</if>
			<if test="occurrenceTime != null">
				OCCURRENCE_TIME = #{occurrenceTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDel != null">
				IS_DEL = #{isDel,jdbcType=TINYINT},
			</if>
			<if test="eventExplain != null">
				EVENT_EXPLAIN = #{eventExplain,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunUserResume">
		<!--@mbggenerated-->
		update FUN_USER_RESUME
		set COMP_ID = #{compId,jdbcType=INTEGER},
		ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
		USER_ID = #{userId,jdbcType=INTEGER},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		CREATE_UID = #{createUid,jdbcType=INTEGER},
		OCCURRENCE_TIME = #{occurrenceTime,jdbcType=TIMESTAMP},
		UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
		IS_DEL = #{isDel,jdbcType=TINYINT},
		EVENT_EXPLAIN = #{eventExplain,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	
	<select id="getUserResumeList" resultMap="BaseResultMapDto">
		select
		<include refid="Base_Column_List"/>
		from FUN_USER_RESUME
		where COMP_ID = #{compId} and USER_ID = #{userId} and IS_DEL = 0
		order by OCCURRENCE_TIME desc,CREATE_TIME desc
	</select>
	<select id="getUserResumeListByIds" resultMap="BaseResultMap">
		SELECT a.ARCHIVE_ID, a.OCCURRENCE_TIME, a.EVENT_EXPLAIN 
		FROM (SELECT ARCHIVE_ID, OCCURRENCE_TIME, EVENT_EXPLAIN, ROW_NUMBER() OVER(PARTITION BY ARCHIVE_ID ORDER BY OCCURRENCE_TIME) AS n 
				FROM FUN_USER_RESUME WHERE COMP_ID = #{compId} AND IS_DEL = 0 
				AND ARCHIVE_ID IN 
				<foreach close=")" collection="archiveIds" item="archiveId" open="(" separator=",">
					#{archiveId}
				</foreach>
				) a
		WHERE n > 0
	</select>
</mapper>