<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunCoreInfoMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunCoreInfo" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="CASE_ID" property="caseId" jdbcType="INTEGER" />
    <result column="CASE_TYPE" property="caseType" jdbcType="INTEGER" />
    <result column="BUILD_ID" property="buildId" jdbcType="INTEGER" />
    <result column="HOUSE_ROOF" property="houseRoof" jdbcType="VARCHAR" />
    <result column="HOUSE_UNIT" property="houseUnit" jdbcType="VARCHAR" />
    <result column="HOUSE_FLOOR" property="houseFloor" jdbcType="VARCHAR" />
    <result column="ROOM_ID" property="roomId" jdbcType="VARCHAR" />
    <result column="ADDR_MD5" property="addrMd5" jdbcType="VARCHAR" />
    <result column="CREATION_TIME" property="creationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, COMP_ID, CASE_ID, CASE_TYPE, BUILD_ID, HOUSE_ROOF, HOUSE_UNIT, HOUSE_FLOOR, ROOM_ID, 
    ADDR_MD5, CREATION_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpFunCoreInfoExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_CORE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_CORE_INFO
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_CORE_INFO
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunCoreInfoExample" >
    <!--@mbggenerated-->
    delete from FUN_CORE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunCoreInfo" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_CORE_INFO (COMP_ID, CASE_ID, CASE_TYPE, 
      BUILD_ID, HOUSE_ROOF, HOUSE_UNIT, 
      HOUSE_FLOOR, ROOM_ID, ADDR_MD5, 
      CREATION_TIME)
    values (#{compId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{caseType,jdbcType=INTEGER}, 
      #{buildId,jdbcType=INTEGER}, #{houseRoof,jdbcType=VARCHAR}, #{houseUnit,jdbcType=VARCHAR}, 
      #{houseFloor,jdbcType=VARCHAR}, #{roomId,jdbcType=VARCHAR}, #{addrMd5,jdbcType=VARCHAR}, 
      #{creationTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunCoreInfo" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_CORE_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="caseId != null" >
        CASE_ID,
      </if>
      <if test="caseType != null" >
        CASE_TYPE,
      </if>
      <if test="buildId != null" >
        BUILD_ID,
      </if>
      <if test="houseRoof != null" >
        HOUSE_ROOF,
      </if>
      <if test="houseUnit != null" >
        HOUSE_UNIT,
      </if>
      <if test="houseFloor != null" >
        HOUSE_FLOOR,
      </if>
      <if test="roomId != null" >
        ROOM_ID,
      </if>
      <if test="addrMd5 != null" >
        ADDR_MD5,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        #{caseType,jdbcType=INTEGER},
      </if>
      <if test="buildId != null" >
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="houseRoof != null" >
        #{houseRoof,jdbcType=VARCHAR},
      </if>
      <if test="houseUnit != null" >
        #{houseUnit,jdbcType=VARCHAR},
      </if>
      <if test="houseFloor != null" >
        #{houseFloor,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="addrMd5 != null" >
        #{addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunCoreInfoExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from FUN_CORE_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_CORE_INFO
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null" >
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null" >
        CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null" >
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.houseRoof != null" >
        HOUSE_ROOF = #{record.houseRoof,jdbcType=VARCHAR},
      </if>
      <if test="record.houseUnit != null" >
        HOUSE_UNIT = #{record.houseUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.houseFloor != null" >
        HOUSE_FLOOR = #{record.houseFloor,jdbcType=VARCHAR},
      </if>
      <if test="record.roomId != null" >
        ROOM_ID = #{record.roomId,jdbcType=VARCHAR},
      </if>
      <if test="record.addrMd5 != null" >
        ADDR_MD5 = #{record.addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.creationTime != null" >
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_CORE_INFO
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      HOUSE_ROOF = #{record.houseRoof,jdbcType=VARCHAR},
      HOUSE_UNIT = #{record.houseUnit,jdbcType=VARCHAR},
      HOUSE_FLOOR = #{record.houseFloor,jdbcType=VARCHAR},
      ROOM_ID = #{record.roomId,jdbcType=VARCHAR},
      ADDR_MD5 = #{record.addrMd5,jdbcType=VARCHAR},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunCoreInfo" >
    <!--@mbggenerated-->
    update FUN_CORE_INFO
    <set >
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        CASE_TYPE = #{caseType,jdbcType=INTEGER},
      </if>
      <if test="buildId != null" >
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="houseRoof != null" >
        HOUSE_ROOF = #{houseRoof,jdbcType=VARCHAR},
      </if>
      <if test="houseUnit != null" >
        HOUSE_UNIT = #{houseUnit,jdbcType=VARCHAR},
      </if>
      <if test="houseFloor != null" >
        HOUSE_FLOOR = #{houseFloor,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        ROOM_ID = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="addrMd5 != null" >
        ADDR_MD5 = #{addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunCoreInfo" >
    <!--@mbggenerated-->
    update FUN_CORE_INFO
    set COMP_ID = #{compId,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=INTEGER},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      HOUSE_ROOF = #{houseRoof,jdbcType=VARCHAR},
      HOUSE_UNIT = #{houseUnit,jdbcType=VARCHAR},
      HOUSE_FLOOR = #{houseFloor,jdbcType=VARCHAR},
      ROOM_ID = #{roomId,jdbcType=VARCHAR},
      ADDR_MD5 = #{addrMd5,jdbcType=VARCHAR},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>

   <select id="getSaleLeaseCount" resultType="java.util.Map">
    SELECT ROOM_ID roomId,HOUSE_FLOOR houseFloor,CASE_TYPE caseType,count(1) count
    FROM
          FUN_CORE_INFO a
    LEFT JOIN FUN_SALE b on a.case_id=b.SALE_ID and a.case_type=1 and sale_status not in (5,6,7)
    LEFT JOIN FUN_LEASE c on a.case_id=c.LEASE_ID and a.case_type=2 and lease_status not in (5,6,7)
     where
        a.comp_id =#{compId} AND a.BUILD_ID =#{buildId}
        AND HOUSE_UNIT = #{caseUnit} and (  b.sale_id is not null or  c.LEASE_ID is not null)
      <if test="null != caseRoof">
        AND HOUSE_ROOF = #{caseRoof}
      </if>
    group by ROOM_ID,HOUSE_FLOOR,CASE_TYPE

   </select>
	
	<update id="updateByCaseInfo">
		UPDATE FUN_CORE_INFO SET
		HOUSE_ROOF = #{houseRoof},
		HOUSE_UNIT = #{houseUnit},
		HOUSE_FLOOR = #{houseFloor},
		ROOM_ID = #{roomId}
		WHERE CASE_ID = #{caseId} AND CASE_TYPE = #{caseType}
	</update>
	
</mapper>

