<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpCityshareHouseMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpCityshareHouse" >
    <!--@mbggenerated-->
    <id column="SHAREHOUSE_ID" property="sharehouseId" jdbcType="INTEGER" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="CASE_ID" property="caseId" jdbcType="INTEGER" />
    <result column="CASE_TYPE" property="caseType" jdbcType="TINYINT" />
    <result column="DOWN_TIME" property="downTime" jdbcType="TIMESTAMP" />
    <result column="DOWN_TYPE" property="downType" jdbcType="TINYINT" />
    <result column="COOPERATION_TYPE" property="cooperationType" jdbcType="TINYINT" />
    <result column="COMMISSION_RATE" property="commissionRate" jdbcType="INTEGER" />
    <result column="CREATION_TIME" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="CONTACT_AMOUNT" property="contactAmount" jdbcType="NUMERIC" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="COMPLAIN_FLAG" property="complainFlag" jdbcType="TINYINT" />
    <result column="IS_COMPLAIN" property="isComplain" jdbcType="TINYINT" />
    <result column="LAST_COMPLAIN_TIME" property="lastComplainTime" jdbcType="TIMESTAMP" />
    <result column="HOUSE_STATE" property="houseState" jdbcType="TINYINT" />
    <result column="CASE_NO" property="caseNo" jdbcType="VARCHAR" />
    <result column="IS_WUYE_DATA" property="isWuyeData" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    SHAREHOUSE_ID, CITY_ID, COMP_ID, USER_ID, ARCHIVE_ID, CASE_ID, CASE_TYPE, DOWN_TIME, 
    DOWN_TYPE, COOPERATION_TYPE, COMMISSION_RATE, CREATION_TIME, CONTACT_AMOUNT, DEPT_ID, 
    COMPLAIN_FLAG, IS_COMPLAIN, LAST_COMPLAIN_TIME, HOUSE_STATE, CASE_NO, IS_WUYE_DATA
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpCityshareHouseExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CITYSHARE_HOUSE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from CITYSHARE_HOUSE
    where SHAREHOUSE_ID = #{sharehouseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from CITYSHARE_HOUSE
    where SHAREHOUSE_ID = #{sharehouseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpCityshareHouseExample" >
    <!--@mbggenerated-->
    delete from CITYSHARE_HOUSE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpCityshareHouse" useGeneratedKeys="true" keyProperty="sharehouseId" >
    <!--@mbggenerated-->
    insert into CITYSHARE_HOUSE (CITY_ID, COMP_ID, USER_ID, 
      ARCHIVE_ID, CASE_ID, CASE_TYPE, 
      DOWN_TIME, DOWN_TYPE, COOPERATION_TYPE, 
      COMMISSION_RATE, CREATION_TIME, CONTACT_AMOUNT, 
      DEPT_ID, COMPLAIN_FLAG, IS_COMPLAIN, 
      LAST_COMPLAIN_TIME, HOUSE_STATE, CASE_NO, 
      IS_WUYE_DATA)
    values (#{cityId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{archiveId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{caseType,jdbcType=TINYINT}, 
      #{downTime,jdbcType=TIMESTAMP}, #{downType,jdbcType=TINYINT}, #{cooperationType,jdbcType=TINYINT}, 
      #{commissionRate,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP}, #{contactAmount,jdbcType=NUMERIC}, 
      #{deptId,jdbcType=INTEGER}, #{complainFlag,jdbcType=TINYINT}, #{isComplain,jdbcType=TINYINT}, 
      #{lastComplainTime,jdbcType=TIMESTAMP}, #{houseState,jdbcType=TINYINT}, #{caseNo,jdbcType=VARCHAR}, 
      #{isWuyeData,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpCityshareHouse" useGeneratedKeys="true" keyProperty="sharehouseId" >
    <!--@mbggenerated-->
    insert into CITYSHARE_HOUSE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="caseId != null" >
        CASE_ID,
      </if>
      <if test="caseType != null" >
        CASE_TYPE,
      </if>
      <if test="downTime != null" >
        DOWN_TIME,
      </if>
      <if test="downType != null" >
        DOWN_TYPE,
      </if>
      <if test="cooperationType != null" >
        COOPERATION_TYPE,
      </if>
      <if test="commissionRate != null" >
        COMMISSION_RATE,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
      <if test="contactAmount != null" >
        CONTACT_AMOUNT,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="complainFlag != null" >
        COMPLAIN_FLAG,
      </if>
      <if test="isComplain != null" >
        IS_COMPLAIN,
      </if>
      <if test="lastComplainTime != null" >
        LAST_COMPLAIN_TIME,
      </if>
      <if test="houseState != null" >
        HOUSE_STATE,
      </if>
      <if test="caseNo != null" >
        CASE_NO,
      </if>
      <if test="isWuyeData != null" >
        IS_WUYE_DATA,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="downTime != null" >
        #{downTime,jdbcType=TIMESTAMP},
      </if>
      <if test="downType != null" >
        #{downType,jdbcType=TINYINT},
      </if>
      <if test="cooperationType != null" >
        #{cooperationType,jdbcType=TINYINT},
      </if>
      <if test="commissionRate != null" >
        #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contactAmount != null" >
        #{contactAmount,jdbcType=NUMERIC},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="complainFlag != null" >
        #{complainFlag,jdbcType=TINYINT},
      </if>
      <if test="isComplain != null" >
        #{isComplain,jdbcType=TINYINT},
      </if>
      <if test="lastComplainTime != null" >
        #{lastComplainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="houseState != null" >
        #{houseState,jdbcType=TINYINT},
      </if>
      <if test="caseNo != null" >
        #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="isWuyeData != null" >
        #{isWuyeData,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpCityshareHouseExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from CITYSHARE_HOUSE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update CITYSHARE_HOUSE
    <set >
      <if test="record.sharehouseId != null" >
        SHAREHOUSE_ID = #{record.sharehouseId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null" >
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null" >
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null" >
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
      <if test="record.downTime != null" >
        DOWN_TIME = #{record.downTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.downType != null" >
        DOWN_TYPE = #{record.downType,jdbcType=TINYINT},
      </if>
      <if test="record.cooperationType != null" >
        COOPERATION_TYPE = #{record.cooperationType,jdbcType=TINYINT},
      </if>
      <if test="record.commissionRate != null" >
        COMMISSION_RATE = #{record.commissionRate,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null" >
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contactAmount != null" >
        CONTACT_AMOUNT = #{record.contactAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.complainFlag != null" >
        COMPLAIN_FLAG = #{record.complainFlag,jdbcType=TINYINT},
      </if>
      <if test="record.isComplain != null" >
        IS_COMPLAIN = #{record.isComplain,jdbcType=TINYINT},
      </if>
      <if test="record.lastComplainTime != null" >
        LAST_COMPLAIN_TIME = #{record.lastComplainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.houseState != null" >
        HOUSE_STATE = #{record.houseState,jdbcType=TINYINT},
      </if>
      <if test="record.caseNo != null" >
        CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.isWuyeData != null" >
        IS_WUYE_DATA = #{record.isWuyeData,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update CITYSHARE_HOUSE
    set SHAREHOUSE_ID = #{record.sharehouseId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      DOWN_TIME = #{record.downTime,jdbcType=TIMESTAMP},
      DOWN_TYPE = #{record.downType,jdbcType=TINYINT},
      COOPERATION_TYPE = #{record.cooperationType,jdbcType=TINYINT},
      COMMISSION_RATE = #{record.commissionRate,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      CONTACT_AMOUNT = #{record.contactAmount,jdbcType=NUMERIC},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      COMPLAIN_FLAG = #{record.complainFlag,jdbcType=TINYINT},
      IS_COMPLAIN = #{record.isComplain,jdbcType=TINYINT},
      LAST_COMPLAIN_TIME = #{record.lastComplainTime,jdbcType=TIMESTAMP},
      HOUSE_STATE = #{record.houseState,jdbcType=TINYINT},
      CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      IS_WUYE_DATA = #{record.isWuyeData,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpCityshareHouse" >
    <!--@mbggenerated-->
    update CITYSHARE_HOUSE
    <set >
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="downTime != null" >
        DOWN_TIME = #{downTime,jdbcType=TIMESTAMP},
      </if>
      <if test="downType != null" >
        DOWN_TYPE = #{downType,jdbcType=TINYINT},
      </if>
      <if test="cooperationType != null" >
        COOPERATION_TYPE = #{cooperationType,jdbcType=TINYINT},
      </if>
      <if test="commissionRate != null" >
        COMMISSION_RATE = #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contactAmount != null" >
        CONTACT_AMOUNT = #{contactAmount,jdbcType=NUMERIC},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="complainFlag != null" >
        COMPLAIN_FLAG = #{complainFlag,jdbcType=TINYINT},
      </if>
      <if test="isComplain != null" >
        IS_COMPLAIN = #{isComplain,jdbcType=TINYINT},
      </if>
      <if test="lastComplainTime != null" >
        LAST_COMPLAIN_TIME = #{lastComplainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="houseState != null" >
        HOUSE_STATE = #{houseState,jdbcType=TINYINT},
      </if>
      <if test="caseNo != null" >
        CASE_NO = #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="isWuyeData != null" >
        IS_WUYE_DATA = #{isWuyeData,jdbcType=TINYINT},
      </if>
    </set>
    where SHAREHOUSE_ID = #{sharehouseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpCityshareHouse" >
    <!--@mbggenerated-->
    update CITYSHARE_HOUSE
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      DOWN_TIME = #{downTime,jdbcType=TIMESTAMP},
      DOWN_TYPE = #{downType,jdbcType=TINYINT},
      COOPERATION_TYPE = #{cooperationType,jdbcType=TINYINT},
      COMMISSION_RATE = #{commissionRate,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      CONTACT_AMOUNT = #{contactAmount,jdbcType=NUMERIC},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      COMPLAIN_FLAG = #{complainFlag,jdbcType=TINYINT},
      IS_COMPLAIN = #{isComplain,jdbcType=TINYINT},
      LAST_COMPLAIN_TIME = #{lastComplainTime,jdbcType=TIMESTAMP},
      HOUSE_STATE = #{houseState,jdbcType=TINYINT},
      CASE_NO = #{caseNo,jdbcType=VARCHAR},
      IS_WUYE_DATA = #{isWuyeData,jdbcType=TINYINT}
    where SHAREHOUSE_ID = #{sharehouseId,jdbcType=INTEGER}
  </update>

	<select id="getCityShareSaleDetail">
		SELECT

		FROM
		CITYSHARE_HOUSE A JOIN FUN_SALE B ON B.SALE_ID=A.CASE_ID
		ORDER BY A.CREATION_TIME DESC
	</select>
	
	<select id="getHouseByCaseIds" resultMap="BaseResultMap">
		SELECT CASE_ID, COMMISSION_RATE 
		FROM CITYSHARE_HOUSE CASE_TYPE = #{caseType}
		AND CASE_ID IN
		<foreach collection="caseIds" index="index" item="caseId" open="(" separator="," close=")">
			#{caseId}
		</foreach>
	</select>
	
	<update id="transDataByCaseId">
		UPDATE CITYSHARE_HOUSE 
		SET USER_ID = #{param.userId},ARCHIVE_ID = #{param.archiveId},DEPT_ID = #{param.deptId}
		WHERE CASE_ID = #{param.caseId} AND CASE_TYPE = #{param.caseType}
	</update>
</mapper>