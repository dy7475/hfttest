<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpRoleOpersMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpRoleOpers">
    <!--@mbggenerated-->
    <id column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <id column="OPER_ID" jdbcType="VARCHAR" property="operId" />
    <result column="OPER_TYPE" jdbcType="BIT" property="operType" />
    <result column="PRO_ROLE" jdbcType="BIT" property="proRole" />
    <result column="WY_ROLE" jdbcType="BIT" property="wyRole" />
    <result column="SMP_ROLE" jdbcType="BIT" property="smpRole" />
    <result column="PARTNER_OPER" jdbcType="TINYINT" property="partnerOper" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ROLE_ID, OPER_ID, OPER_TYPE, PRO_ROLE, WY_ROLE, SMP_ROLE, PARTNER_OPER
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpRoleOpersExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ROLE_OPERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from ROLE_OPERS
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
      and OPER_ID = #{operId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--@mbggenerated-->
    delete from ROLE_OPERS
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
      and OPER_ID = #{operId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpRoleOpersExample">
    <!--@mbggenerated-->
    delete from ROLE_OPERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpRoleOpers">
    <!--@mbggenerated-->
    insert into ROLE_OPERS (ROLE_ID, OPER_ID, OPER_TYPE, 
      PRO_ROLE, WY_ROLE, SMP_ROLE, PARTNER_OPER
      )
    values (#{roleId,jdbcType=VARCHAR}, #{operId,jdbcType=VARCHAR}, #{operType,jdbcType=BIT}, 
      #{proRole,jdbcType=BIT}, #{wyRole,jdbcType=BIT}, #{smpRole,jdbcType=BIT}, #{partnerOper,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpRoleOpers">
    <!--@mbggenerated-->
    insert into ROLE_OPERS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="operId != null">
        OPER_ID,
      </if>
      <if test="operType != null">
        OPER_TYPE,
      </if>
      <if test="proRole != null">
        PRO_ROLE,
      </if>
      <if test="wyRole != null">
        WY_ROLE,
      </if>
      <if test="smpRole != null">
        SMP_ROLE,
      </if>
      <if test="partnerOper != null">
        PARTNER_OPER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="operId != null">
        #{operId,jdbcType=VARCHAR},
      </if>
      <if test="operType != null">
        #{operType,jdbcType=BIT},
      </if>
      <if test="proRole != null">
        #{proRole,jdbcType=BIT},
      </if>
      <if test="wyRole != null">
        #{wyRole,jdbcType=BIT},
      </if>
      <if test="smpRole != null">
        #{smpRole,jdbcType=BIT},
      </if>
      <if test="partnerOper != null">
        #{partnerOper,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpRoleOpersExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from ROLE_OPERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update ROLE_OPERS
    <set>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.operId != null">
        OPER_ID = #{record.operId,jdbcType=VARCHAR},
      </if>
      <if test="record.operType != null">
        OPER_TYPE = #{record.operType,jdbcType=BIT},
      </if>
      <if test="record.proRole != null">
        PRO_ROLE = #{record.proRole,jdbcType=BIT},
      </if>
      <if test="record.wyRole != null">
        WY_ROLE = #{record.wyRole,jdbcType=BIT},
      </if>
      <if test="record.smpRole != null">
        SMP_ROLE = #{record.smpRole,jdbcType=BIT},
      </if>
      <if test="record.partnerOper != null">
        PARTNER_OPER = #{record.partnerOper,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update ROLE_OPERS
    set ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      OPER_ID = #{record.operId,jdbcType=VARCHAR},
      OPER_TYPE = #{record.operType,jdbcType=BIT},
      PRO_ROLE = #{record.proRole,jdbcType=BIT},
      WY_ROLE = #{record.wyRole,jdbcType=BIT},
      SMP_ROLE = #{record.smpRole,jdbcType=BIT},
      PARTNER_OPER = #{record.partnerOper,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpRoleOpers">
    <!--@mbggenerated-->
    update ROLE_OPERS
    <set>
      <if test="operType != null">
        OPER_TYPE = #{operType,jdbcType=BIT},
      </if>
      <if test="proRole != null">
        PRO_ROLE = #{proRole,jdbcType=BIT},
      </if>
      <if test="wyRole != null">
        WY_ROLE = #{wyRole,jdbcType=BIT},
      </if>
      <if test="smpRole != null">
        SMP_ROLE = #{smpRole,jdbcType=BIT},
      </if>
      <if test="partnerOper != null">
        PARTNER_OPER = #{partnerOper,jdbcType=TINYINT},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
      and OPER_ID = #{operId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpRoleOpers">
    <!--@mbggenerated-->
    update ROLE_OPERS
    set OPER_TYPE = #{operType,jdbcType=BIT},
      PRO_ROLE = #{proRole,jdbcType=BIT},
      WY_ROLE = #{wyRole,jdbcType=BIT},
      SMP_ROLE = #{smpRole,jdbcType=BIT},
      PARTNER_OPER = #{partnerOper,jdbcType=TINYINT}
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
      and OPER_ID = #{operId,jdbcType=VARCHAR}
  </update>
	
	<select id="getEpDataListById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ROLE_OPERS
		where ROLE_ID = #{roleId} and OPER_TYPE = 0
	</select>
	
	<select id="getProDataListById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ROLE_OPERS
		where ROLE_ID = #{roleId} and OPER_TYPE = 0 and PRO_ROLE = 1
	</select>
	
	<select id="getSmpDataListById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ROLE_OPERS
		where ROLE_ID = #{roleId} and OPER_TYPE = 0 and SMP_ROLE = 1
	</select>
 
 
</mapper>