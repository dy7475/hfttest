<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpPosPaymentOrderMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpPosPaymentOrder">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="FINANCE_TYPE" jdbcType="TINYINT" property="financeType" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="FINANCE_ID" jdbcType="INTEGER" property="financeId" />
    <result column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="PAYMENT_TIME" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="PAY_STATUS" jdbcType="TINYINT" property="payStatus" />
    <result column="CASE_TYPE" jdbcType="INTEGER" property="caseType" />
    <result column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="FINANCE_MONEY" jdbcType="NUMERIC" property="financeMoney" />
    <result column="FINANCE_NAME" jdbcType="VARCHAR" property="financeName" />
    <result column="PAY_ACCOUNT" jdbcType="VARCHAR" property="payAccount" />
    <result column="PAY_USER_NAME" jdbcType="VARCHAR" property="payUserName" />
    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
    <result column="POS_MACHINE_ID" jdbcType="VARCHAR" property="posMachineId" />
    <result column="CREATE_UID" jdbcType="INTEGER" property="createUid" />
    <result column="PAYMENT_ID" jdbcType="INTEGER" property="paymentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, FINANCE_TYPE, CREATION_TIME, FINANCE_ID, ORDER_NO, COMP_ID, DEPT_ID, PAYMENT_TIME, 
    PAY_STATUS, CASE_TYPE, DEAL_ID, FINANCE_MONEY, FINANCE_NAME, PAY_ACCOUNT, PAY_USER_NAME, 
    CASE_NO, POS_MACHINE_ID, CREATE_UID, PAYMENT_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpPosPaymentOrderExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from POS_PAYMENT_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from POS_PAYMENT_ORDER
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from POS_PAYMENT_ORDER
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpPosPaymentOrderExample">
    <!--@mbggenerated-->
    delete from POS_PAYMENT_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpPosPaymentOrder" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into POS_PAYMENT_ORDER (FINANCE_TYPE, CREATION_TIME, FINANCE_ID, 
      ORDER_NO, COMP_ID, DEPT_ID, 
      PAYMENT_TIME, PAY_STATUS, CASE_TYPE, 
      DEAL_ID, FINANCE_MONEY, FINANCE_NAME, 
      PAY_ACCOUNT, PAY_USER_NAME, CASE_NO, 
      POS_MACHINE_ID, CREATE_UID, PAYMENT_ID
      )
    values (#{financeType,jdbcType=TINYINT}, #{creationTime,jdbcType=TIMESTAMP}, #{financeId,jdbcType=INTEGER}, 
      #{orderNo,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=TINYINT}, #{caseType,jdbcType=INTEGER}, 
      #{dealId,jdbcType=INTEGER}, #{financeMoney,jdbcType=NUMERIC}, #{financeName,jdbcType=VARCHAR}, 
      #{payAccount,jdbcType=VARCHAR}, #{payUserName,jdbcType=VARCHAR}, #{caseNo,jdbcType=VARCHAR}, 
      #{posMachineId,jdbcType=VARCHAR}, #{createUid,jdbcType=INTEGER}, #{paymentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpPosPaymentOrder" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into POS_PAYMENT_ORDER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="financeType != null">
        FINANCE_TYPE,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="financeId != null">
        FINANCE_ID,
      </if>
      <if test="orderNo != null">
        ORDER_NO,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="paymentTime != null">
        PAYMENT_TIME,
      </if>
      <if test="payStatus != null">
        PAY_STATUS,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="dealId != null">
        DEAL_ID,
      </if>
      <if test="financeMoney != null">
        FINANCE_MONEY,
      </if>
      <if test="financeName != null">
        FINANCE_NAME,
      </if>
      <if test="payAccount != null">
        PAY_ACCOUNT,
      </if>
      <if test="payUserName != null">
        PAY_USER_NAME,
      </if>
      <if test="caseNo != null">
        CASE_NO,
      </if>
      <if test="posMachineId != null">
        POS_MACHINE_ID,
      </if>
      <if test="createUid != null">
        CREATE_UID,
      </if>
      <if test="paymentId != null">
        PAYMENT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="financeType != null">
        #{financeType,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="financeId != null">
        #{financeId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=INTEGER},
      </if>
      <if test="dealId != null">
        #{dealId,jdbcType=INTEGER},
      </if>
      <if test="financeMoney != null">
        #{financeMoney,jdbcType=NUMERIC},
      </if>
      <if test="financeName != null">
        #{financeName,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null">
        #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="payUserName != null">
        #{payUserName,jdbcType=VARCHAR},
      </if>
      <if test="caseNo != null">
        #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="posMachineId != null">
        #{posMachineId,jdbcType=VARCHAR},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null">
        #{paymentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpPosPaymentOrderExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from POS_PAYMENT_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update POS_PAYMENT_ORDER
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.financeType != null">
        FINANCE_TYPE = #{record.financeType,jdbcType=TINYINT},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.financeId != null">
        FINANCE_ID = #{record.financeId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentTime != null">
        PAYMENT_TIME = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        PAY_STATUS = #{record.payStatus,jdbcType=TINYINT},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      </if>
      <if test="record.dealId != null">
        DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      </if>
      <if test="record.financeMoney != null">
        FINANCE_MONEY = #{record.financeMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.financeName != null">
        FINANCE_NAME = #{record.financeName,jdbcType=VARCHAR},
      </if>
      <if test="record.payAccount != null">
        PAY_ACCOUNT = #{record.payAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.payUserName != null">
        PAY_USER_NAME = #{record.payUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.caseNo != null">
        CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.posMachineId != null">
        POS_MACHINE_ID = #{record.posMachineId,jdbcType=VARCHAR},
      </if>
      <if test="record.createUid != null">
        CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      </if>
      <if test="record.paymentId != null">
        PAYMENT_ID = #{record.paymentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update POS_PAYMENT_ORDER
    set ID = #{record.id,jdbcType=INTEGER},
      FINANCE_TYPE = #{record.financeType,jdbcType=TINYINT},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      FINANCE_ID = #{record.financeId,jdbcType=INTEGER},
      ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      PAYMENT_TIME = #{record.paymentTime,jdbcType=TIMESTAMP},
      PAY_STATUS = #{record.payStatus,jdbcType=TINYINT},
      CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      FINANCE_MONEY = #{record.financeMoney,jdbcType=NUMERIC},
      FINANCE_NAME = #{record.financeName,jdbcType=VARCHAR},
      PAY_ACCOUNT = #{record.payAccount,jdbcType=VARCHAR},
      PAY_USER_NAME = #{record.payUserName,jdbcType=VARCHAR},
      CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      POS_MACHINE_ID = #{record.posMachineId,jdbcType=VARCHAR},
      CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      PAYMENT_ID = #{record.paymentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpPosPaymentOrder">
    <!--@mbggenerated-->
    update POS_PAYMENT_ORDER
    <set>
      <if test="financeType != null">
        FINANCE_TYPE = #{financeType,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="financeId != null">
        FINANCE_ID = #{financeId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        PAYMENT_TIME = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        PAY_STATUS = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=INTEGER},
      </if>
      <if test="dealId != null">
        DEAL_ID = #{dealId,jdbcType=INTEGER},
      </if>
      <if test="financeMoney != null">
        FINANCE_MONEY = #{financeMoney,jdbcType=NUMERIC},
      </if>
      <if test="financeName != null">
        FINANCE_NAME = #{financeName,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null">
        PAY_ACCOUNT = #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="payUserName != null">
        PAY_USER_NAME = #{payUserName,jdbcType=VARCHAR},
      </if>
      <if test="caseNo != null">
        CASE_NO = #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="posMachineId != null">
        POS_MACHINE_ID = #{posMachineId,jdbcType=VARCHAR},
      </if>
      <if test="createUid != null">
        CREATE_UID = #{createUid,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null">
        PAYMENT_ID = #{paymentId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpPosPaymentOrder">
    <!--@mbggenerated-->
    update POS_PAYMENT_ORDER
    set FINANCE_TYPE = #{financeType,jdbcType=TINYINT},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      FINANCE_ID = #{financeId,jdbcType=INTEGER},
      ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      PAYMENT_TIME = #{paymentTime,jdbcType=TIMESTAMP},
      PAY_STATUS = #{payStatus,jdbcType=TINYINT},
      CASE_TYPE = #{caseType,jdbcType=INTEGER},
      DEAL_ID = #{dealId,jdbcType=INTEGER},
      FINANCE_MONEY = #{financeMoney,jdbcType=NUMERIC},
      FINANCE_NAME = #{financeName,jdbcType=VARCHAR},
      PAY_ACCOUNT = #{payAccount,jdbcType=VARCHAR},
      PAY_USER_NAME = #{payUserName,jdbcType=VARCHAR},
      CASE_NO = #{caseNo,jdbcType=VARCHAR},
      POS_MACHINE_ID = #{posMachineId,jdbcType=VARCHAR},
      CREATE_UID = #{createUid,jdbcType=INTEGER},
      PAYMENT_ID = #{paymentId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>


  <resultMap extends="BaseResultMap" id="extBaseResultMap" type="com.myfun.repository.erpdb.dto.ErpPosPaymentOrderDto">
    <result column="SELL_DEAL_MONEY" jdbcType="NUMERIC" property="sellDealMoney" />
    <result column="RENT_DEAL_MONEY" jdbcType="NUMERIC" property="rentDealMoney" />
    <result column="RENT_PRICE_UNIT" jdbcType="TINYINT" property="rentPriceUnit" />
    <result column="AREA" jdbcType="NUMERIC" property="area" />
    <result column="CONTRACT_NO" jdbcType="VARCHAR" property="contractNo" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="CREATOR_UID" jdbcType="INTEGER" property="creatorUid" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="DEAL_TYPE" jdbcType="INTEGER" property="dealType" />
  </resultMap>
  <select id="getPosOrderList" resultMap="extBaseResultMap">
    SELECT a.PAY_USER_NAME,b.CONTRACT_NO,b.SELL_DEAL_MONEY,b.RENT_DEAL_MONEY,b.RENT_PRICE_UNIT,
    b.AREA,b.BUILD_NAME,b.CREATOR_UID,b.COMP_ID,a.DEAL_ID,ID,PAY_STATUS,PAYMENT_TIME,b.DEAL_TYPE,a.FINANCE_TYPE,
       FINANCE_MONEY ,PAY_ACCOUNT,FINANCE_NAME,FINANCE_ID,ORDER_NO,a.DEPT_ID, a.CREATE_UID,a.CREATION_TIME
    FROM POS_PAYMENT_ORDER a
    left join FUN_DEAL b on a.DEAL_ID = b.DEAL_ID and a.FINANCE_TYPE=2
      <where>
          <if test="null != deptId">
              and a.DEPT_ID=#{deptId}
          </if>
          <if test="null != payStatus">
              and PAY_STATUS=#{payStatus}
          </if>
          <if test="null != paymentId">
              and PAYMENT_ID=#{paymentId}
          </if>
          <if test="null != keyWords">
              and (a.CASE_NO like '%${keyWords}%' or a.PAY_USER_NAME like '%${keyWords}%')
          </if>
          <choose>
            <when test="1 == queryTimeType">
              and PAYMENT_TIME BETWEEN #{queryTimeStart} and #{queryTimeEnd}
            </when>
            <when test="2 == queryTimeType">
              and b.SIGN_DATE BETWEEN #{queryTimeStart} and #{queryTimeEnd}
            </when>
            <otherwise>
              and a.CREATION_TIME BETWEEN #{queryTimeStart} and #{queryTimeEnd}
            </otherwise>
          </choose>
      </where>
      <choose>
        <when test="null != isGroupByContract and 1==isGroupByContract">
            GROUP BY a.DEAL_ID,ID,CREATION_TIME,PAY_STATUS,PAYMENT_TIME,FINANCE_MONEY ,PAY_ACCOUNT,FINANCE_NAME,FINANCE_ID,b.CONTRACT_NO,b.SELL_DEAL_MONEY,b.RENT_DEAL_MONEY,b.RENT_PRICE_UNIT,b.AREA,b.BUILD_NAME,b.CREATOR_UID,b.COMP_ID,b.CONTRACT_NO,a.ORDER_NO,a.PAY_USER_NAME,b.DEAL_TYPE,a.FINANCE_TYPE,a.DEPT_ID, a.CREATE_UID,a.CREATION_TIME
            ORDER by a.DEAL_ID desc,ID, CREATION_TIME,PAY_STATUS,PAYMENT_TIME,FINANCE_MONEY ,PAY_ACCOUNT,FINANCE_NAME,FINANCE_ID
        </when>
        <otherwise>
          order by a.CREATION_TIME desc
        </otherwise>
      </choose>
  </select>
  
  <select id="countPosOrderList" resultType="java.util.Map">

    SELECT DEPT_ID deptId, iif(FINANCE_TYPE=1, -1, -2) paymentId,sum(FINANCE_MONEY) money

    from POS_PAYMENT_ORDER
    <where>
      <if test="1==1">
        and COMP_ID=#{compId} and FINANCE_TYPE != 2 and PAY_STATUS=1
      </if>
      <if test="null != deptId">
        and DEPT_ID=#{deptId}
      </if>
      <if test="null != startTime">
        and PAYMENT_TIME &gt;=#{startTime}
      </if>
      <if test="null != endTime">
        and PAYMENT_TIME &lt;=#{endTime}
      </if>
    </where>
    GROUP BY DEPT_ID,FINANCE_TYPE

  </select>

  <select id="countPosOrderList2" resultType="java.util.Map">
    select a.dept_id deptId,c.PAYMENT_ID paymentId,sum(FINANCE_MONEY) money from POS_PAYMENT_ORDER a
    join PROCESS_FINANC b on a.FINANCE_ID = b.pf_id and b.comp_id=#{compId} and b.PF_ACTUAL=0
    join FUN_FINANC_PAYMENT c on b.PAYMENT_ID = c.PAYMENT_ID and b.comp_id=#{compId}
    <where>
      <if test="1==1">
        and a.COMP_ID=#{compId} and  a.FINANCE_TYPE=2 and a.pay_status=1
      </if>
      <if test="null != deptId">
        and a.DEPT_ID=#{deptId}
      </if>
      <if test="null != startTime">
        and a.PAYMENT_TIME &gt;=#{startTime}
      </if>
      <if test="null != endTime">
        and a.PAYMENT_TIME &lt;=#{endTime}
      </if>
    </where>
    GROUP BY c.PAYMENT_ID,a.dept_id
  </select>


  <select id="getCyjOrderDetail" resultType="java.util.Map">
    select b.PAYMENT_TIME paymentTime,b.ORDER_NO orderNo,PAY_USER_NAME payUserName,FINANCE_MONEY financeMoney from FUN_EARBEST_MONEY a
    left join POS_PAYMENT_ORDER b ON a.EARBEST_ID = b.FINANCE_ID and b.FINANCE_TYPE=1 and b.PAY_STATUS=1
    where b.ID is not null and b.COMP_ID=#{compId} and b.DEPT_ID=#{deptId}
    order by b.id DESC
  </select>

  <select id="getDealFinanceDetail" resultType="java.util.Map">
      select b.PAYMENT_TIME paymentTime,b.ORDER_NO orderNo,PAY_USER_NAME payUserName,FINANCE_MONEY financeMoney,c.contract_no contractNo from PROCESS_FINANC a
      left join POS_PAYMENT_ORDER b ON a.pf_id = b.FINANCE_ID and b.FINANCE_TYPE=2 and b.PAY_STATUS=1
      left join fun_deal c on a.deal_id = c.deal_ID
      where b.id is not null and b.comp_ID=#{compId} and b.DEPT_ID=#{deptId} and a.payment_id=#{paymentId}
      order by b.id DESC
  </select>
  <select id="getCommonFinance" resultType="java.util.Map">
      select PAYMENT_TIME paymentTime, ORDER_NO orderNo,PAY_USER_NAME payUserName,FINANCE_MONEY financeMoney
      from POS_PAYMENT_ORDER
      where comp_ID=#{compId} and dept_id=#{deptId} and pay_status=1 and payment_id=-2
      order by id DESC
  </select>

  <select id="getNotPay" resultType="java.util.Map">
    select CREATION_TIME creationTime, ORDER_NO orderNo,PAY_USER_NAME payUserName,FINANCE_MONEY financeMoney,b.contract_no contractNo
    from POS_PAYMENT_ORDER a
    join fun_deal b on a.deal_id=b.deal_id
    where a.comp_ID=#{compId} and a.dept_id=#{deptId} and pay_status=0
    order by id DESC
  </select>

  <select id="countPosOrderList3" resultType="java.util.Map">
    SELECT DEPT_ID deptId, -3 paymentId,sum(FINANCE_MONEY) money

    from POS_PAYMENT_ORDER
    <where>
      <if test="1==1">
        and COMP_ID=#{compId}  and PAY_STATUS=0
      </if>
      <if test="null != deptId">
        and DEPT_ID=#{deptId}
      </if>
      <if test="null != startTime">
        and PAYMENT_TIME &gt;=#{startTime}
      </if>
      <if test="null != endTime">
        and PAYMENT_TIME &lt;=#{endTime}
      </if>
    </where>
    GROUP BY DEPT_ID
  </select>
	
	<update id="updateByDealId">
		update POS_PAYMENT_ORDER set PAY_STATUS = #{payStatus}
		where PAY_STATUS = 0 and DEAL_ID = #{dealId} and FINANCE_ID in
		<foreach collection="pfIds" open="(" close=")" item="pfId" separator=",">
			#{pfId}
		</foreach>
	</update>
 

</mapper>