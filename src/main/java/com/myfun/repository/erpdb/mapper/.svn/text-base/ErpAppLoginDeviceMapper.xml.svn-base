<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpAppLoginDeviceMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpAppLoginDevice">
    <!--@mbggenerated-->
    <id column="LOGIN_ID" jdbcType="INTEGER" property="loginId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="DEVICE_TYPE" jdbcType="TINYINT" property="deviceType" />
    <result column="DEVICE_NUM_1" jdbcType="VARCHAR" property="deviceNum1" />
    <result column="DEVICE_NUM_2" jdbcType="VARCHAR" property="deviceNum2" />
    <result column="DEVICE_STATUS" jdbcType="TINYINT" property="deviceStatus" />
    <result column="LOGIN_ADDRESS" jdbcType="VARCHAR" property="loginAddress" />
    <result column="GETUI_TOKEN" jdbcType="VARCHAR" property="getuiToken" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CHECK_USER_ID" jdbcType="INTEGER" property="checkUserId" />
    <result column="CHECK_TIME" jdbcType="TIMESTAMP" property="checkTime" />
  </resultMap>
  <resultMap id="BaseResultMapDto" extends="BaseResultMap" type="com.myfun.repository.erpdb.dto.ErpAppLoginDeviceDto">
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    LOGIN_ID, COMP_ID, DEPT_ID, USER_ID, ARCHIVE_ID, DEVICE_TYPE, DEVICE_NUM_1, DEVICE_NUM_2, 
    DEVICE_STATUS, LOGIN_ADDRESS, GETUI_TOKEN, CREATE_TIME, CHECK_USER_ID, CHECK_TIME
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpAppLoginDeviceExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from APP_LOGIN_DEVICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from APP_LOGIN_DEVICE
    where LOGIN_ID = #{loginId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from APP_LOGIN_DEVICE
    where LOGIN_ID = #{loginId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpAppLoginDeviceExample">
    <!--@mbggenerated-->
    delete from APP_LOGIN_DEVICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="loginId" parameterType="com.myfun.repository.erpdb.po.ErpAppLoginDevice" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into APP_LOGIN_DEVICE (COMP_ID, DEPT_ID, USER_ID, 
      ARCHIVE_ID, DEVICE_TYPE, DEVICE_NUM_1, 
      DEVICE_NUM_2, DEVICE_STATUS, LOGIN_ADDRESS, 
      GETUI_TOKEN, CREATE_TIME, CHECK_USER_ID, 
      CHECK_TIME)
    values (#{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{archiveId,jdbcType=INTEGER}, #{deviceType,jdbcType=TINYINT}, #{deviceNum1,jdbcType=VARCHAR}, 
      #{deviceNum2,jdbcType=VARCHAR}, #{deviceStatus,jdbcType=TINYINT}, #{loginAddress,jdbcType=VARCHAR}, 
      #{getuiToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{checkUserId,jdbcType=INTEGER}, 
      #{checkTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="loginId" parameterType="com.myfun.repository.erpdb.po.ErpAppLoginDevice" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into APP_LOGIN_DEVICE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="deviceType != null">
        DEVICE_TYPE,
      </if>
      <if test="deviceNum1 != null">
        DEVICE_NUM_1,
      </if>
      <if test="deviceNum2 != null">
        DEVICE_NUM_2,
      </if>
      <if test="deviceStatus != null">
        DEVICE_STATUS,
      </if>
      <if test="loginAddress != null">
        LOGIN_ADDRESS,
      </if>
      <if test="getuiToken != null">
        GETUI_TOKEN,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="checkUserId != null">
        CHECK_USER_ID,
      </if>
      <if test="checkTime != null">
        CHECK_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=TINYINT},
      </if>
      <if test="deviceNum1 != null">
        #{deviceNum1,jdbcType=VARCHAR},
      </if>
      <if test="deviceNum2 != null">
        #{deviceNum2,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatus != null">
        #{deviceStatus,jdbcType=TINYINT},
      </if>
      <if test="loginAddress != null">
        #{loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="getuiToken != null">
        #{getuiToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null">
        #{checkUserId,jdbcType=INTEGER},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpAppLoginDeviceExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from APP_LOGIN_DEVICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update APP_LOGIN_DEVICE
    <set>
      <if test="record.loginId != null">
        LOGIN_ID = #{record.loginId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.deviceType != null">
        DEVICE_TYPE = #{record.deviceType,jdbcType=TINYINT},
      </if>
      <if test="record.deviceNum1 != null">
        DEVICE_NUM_1 = #{record.deviceNum1,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceNum2 != null">
        DEVICE_NUM_2 = #{record.deviceNum2,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceStatus != null">
        DEVICE_STATUS = #{record.deviceStatus,jdbcType=TINYINT},
      </if>
      <if test="record.loginAddress != null">
        LOGIN_ADDRESS = #{record.loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.getuiToken != null">
        GETUI_TOKEN = #{record.getuiToken,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkUserId != null">
        CHECK_USER_ID = #{record.checkUserId,jdbcType=INTEGER},
      </if>
      <if test="record.checkTime != null">
        CHECK_TIME = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update APP_LOGIN_DEVICE
    set LOGIN_ID = #{record.loginId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      DEVICE_TYPE = #{record.deviceType,jdbcType=TINYINT},
      DEVICE_NUM_1 = #{record.deviceNum1,jdbcType=VARCHAR},
      DEVICE_NUM_2 = #{record.deviceNum2,jdbcType=VARCHAR},
      DEVICE_STATUS = #{record.deviceStatus,jdbcType=TINYINT},
      LOGIN_ADDRESS = #{record.loginAddress,jdbcType=VARCHAR},
      GETUI_TOKEN = #{record.getuiToken,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CHECK_USER_ID = #{record.checkUserId,jdbcType=INTEGER},
      CHECK_TIME = #{record.checkTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpAppLoginDevice">
    <!--@mbggenerated-->
    update APP_LOGIN_DEVICE
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="deviceType != null">
        DEVICE_TYPE = #{deviceType,jdbcType=TINYINT},
      </if>
      <if test="deviceNum1 != null">
        DEVICE_NUM_1 = #{deviceNum1,jdbcType=VARCHAR},
      </if>
      <if test="deviceNum2 != null">
        DEVICE_NUM_2 = #{deviceNum2,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatus != null">
        DEVICE_STATUS = #{deviceStatus,jdbcType=TINYINT},
      </if>
      <if test="loginAddress != null">
        LOGIN_ADDRESS = #{loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="getuiToken != null">
        GETUI_TOKEN = #{getuiToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null">
        CHECK_USER_ID = #{checkUserId,jdbcType=INTEGER},
      </if>
      <if test="checkTime != null">
        CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where LOGIN_ID = #{loginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpAppLoginDevice">
    <!--@mbggenerated-->
    update APP_LOGIN_DEVICE
    set COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      DEVICE_TYPE = #{deviceType,jdbcType=TINYINT},
      DEVICE_NUM_1 = #{deviceNum1,jdbcType=VARCHAR},
      DEVICE_NUM_2 = #{deviceNum2,jdbcType=VARCHAR},
      DEVICE_STATUS = #{deviceStatus,jdbcType=TINYINT},
      LOGIN_ADDRESS = #{loginAddress,jdbcType=VARCHAR},
      GETUI_TOKEN = #{getuiToken,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CHECK_USER_ID = #{checkUserId,jdbcType=INTEGER},
      CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP}
    where LOGIN_ID = #{loginId,jdbcType=INTEGER}
  </update>
  <select id="getAppLoginDeviceList" resultMap="BaseResultMapDto">
  		SELECT
		LOGIN_ID, COMP_ID, DEPT_ID, USER_ID, ARCHIVE_ID,DEVICE_TYPE, DEVICE_NUM_1, DEVICE_NUM_2, 
		DEVICE_STATUS,LOGIN_ADDRESS, GETUI_TOKEN, CREATE_TIME,CHECK_USER_ID 
		FROM APP_LOGIN_DEVICE  WHERE COMP_ID=#{param.compId} 
		<if test="param.deptId != null and ''!=param.deptId">
			AND DEPT_ID=#{param.deptId}
		</if>
		order by CREATE_TIME DESC
  </select>
	<update id="updateDeviceStatus" parameterType="com.myfun.repository.erpdb.po.ErpAppLoginDevice">
		update APP_LOGIN_DEVICE
		set DEVICE_STATUS = #{deviceStatus,jdbcType=TINYINT}
		where LOGIN_ID = #{loginId,jdbcType=INTEGER} and COMP_ID = #{compId}
	</update>
	<update id="updateDeviceStatusOverdue" parameterType="com.myfun.repository.erpdb.po.ErpAppLoginDevice">
		update APP_LOGIN_DEVICE
		set DEVICE_STATUS = 5
		where USER_ID = #{userId,jdbcType=INTEGER} and COMP_ID = #{compId} and DEVICE_STATUS = 2
	</update>
	
  
</mapper>