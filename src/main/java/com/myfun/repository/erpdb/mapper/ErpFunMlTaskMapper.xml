<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunMlTaskMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunMlTask">
    <!--@mbggenerated-->
    <id column="TASK_ID" jdbcType="INTEGER" property="taskId" />
    <result column="SEND_TASK_ID" jdbcType="INTEGER" property="sendTaskId" />
    <result column="SEND_USER_ID" jdbcType="INTEGER" property="sendUserId" />
    <result column="SEND_ARCHIVE_ID" jdbcType="INTEGER" property="sendArchiveId" />
    <result column="SEND_USER_NAME" jdbcType="VARCHAR" property="sendUserName" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="SEND_NOW" jdbcType="TINYINT" property="sendNow" />
    <result column="SEND_TIME" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="DEL_STATUS" jdbcType="TINYINT" property="delStatus" />
    <result column="SEND_USER_ORG_ID" jdbcType="INTEGER" property="sendUserOrgId" />
    <result column="SEND_USER_ORG_PATH" jdbcType="VARCHAR" property="sendUserOrgPath" />
    <result column="TASK_NAME" jdbcType="VARCHAR" property="taskName" />
    <result column="TASK_DESCRIPTION" jdbcType="VARCHAR" property="taskDescription" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="COMPLETE_STATUS" jdbcType="TINYINT" property="completeStatus" />
    <result column="TASK_END_TIME" jdbcType="TIMESTAMP" property="taskEndTime" />
    <result column="TASK_COMPLETE_TIME" jdbcType="TIMESTAMP" property="taskCompleteTime" />
    <result column="TASK_REMARK" jdbcType="VARCHAR" property="taskRemark" />
    <result column="ACCESSORY_ADDR" jdbcType="VARCHAR" property="accessoryAddr" />
    <result column="SEE_STATUS" jdbcType="TINYINT" property="seeStatus" />
    <result column="TASK_TYPE" jdbcType="TINYINT" property="taskType" />
    <result column="RECIEVE_USERS_ID" jdbcType="INTEGER" property="recieveUsersId" />
    <result column="RECIEVE_ARCHIVE_ID" jdbcType="INTEGER" property="recieveArchiveId" />
    <result column="RECIEVE_USERS_NAME" jdbcType="VARCHAR" property="recieveUsersName" />
    <result column="RECIEVE_USER_ORG_ID" jdbcType="VARCHAR" property="recieveUserOrgId" />
    <result column="RECIEVE_USER_ORG_PATH" jdbcType="VARCHAR" property="recieveUserOrgPath" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="SEND_STATUS" jdbcType="INTEGER" property="sendStatus" />
    <result column="TASK_SEARCH" jdbcType="VARCHAR" property="taskSearch" />
    <result column="RECIEVE_COUNT" jdbcType="INTEGER" property="recieveCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    TASK_ID, SEND_TASK_ID, SEND_USER_ID, SEND_ARCHIVE_ID, SEND_USER_NAME, CREATE_TIME, 
    SEND_NOW, SEND_TIME, DEL_STATUS, SEND_USER_ORG_ID, SEND_USER_ORG_PATH, TASK_NAME, 
    TASK_DESCRIPTION, CASE_ID, CASE_TYPE, COMPLETE_STATUS, TASK_END_TIME, TASK_COMPLETE_TIME, 
    TASK_REMARK, ACCESSORY_ADDR, SEE_STATUS, TASK_TYPE, RECIEVE_USERS_ID, RECIEVE_ARCHIVE_ID, 
    RECIEVE_USERS_NAME, RECIEVE_USER_ORG_ID, RECIEVE_USER_ORG_PATH, COMP_ID, SEND_STATUS, 
    TASK_SEARCH, RECIEVE_COUNT
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_ML_TASK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_ML_TASK
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_ML_TASK
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskExample">
    <!--@mbggenerated-->
    delete from FUN_ML_TASK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="taskId" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTask" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ML_TASK (SEND_TASK_ID, SEND_USER_ID, SEND_ARCHIVE_ID, 
      SEND_USER_NAME, CREATE_TIME, SEND_NOW, 
      SEND_TIME, DEL_STATUS, SEND_USER_ORG_ID, 
      SEND_USER_ORG_PATH, TASK_NAME, TASK_DESCRIPTION, 
      CASE_ID, CASE_TYPE, COMPLETE_STATUS, 
      TASK_END_TIME, TASK_COMPLETE_TIME, TASK_REMARK, 
      ACCESSORY_ADDR, SEE_STATUS, TASK_TYPE, 
      RECIEVE_USERS_ID, RECIEVE_ARCHIVE_ID, RECIEVE_USERS_NAME, 
      RECIEVE_USER_ORG_ID, RECIEVE_USER_ORG_PATH, COMP_ID, 
      SEND_STATUS, TASK_SEARCH, RECIEVE_COUNT
      )
    values (#{sendTaskId,jdbcType=INTEGER}, #{sendUserId,jdbcType=INTEGER}, #{sendArchiveId,jdbcType=INTEGER}, 
      #{sendUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{sendNow,jdbcType=TINYINT}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{delStatus,jdbcType=TINYINT}, #{sendUserOrgId,jdbcType=INTEGER}, 
      #{sendUserOrgPath,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, #{taskDescription,jdbcType=VARCHAR}, 
      #{caseId,jdbcType=INTEGER}, #{caseType,jdbcType=TINYINT}, #{completeStatus,jdbcType=TINYINT}, 
      #{taskEndTime,jdbcType=TIMESTAMP}, #{taskCompleteTime,jdbcType=TIMESTAMP}, #{taskRemark,jdbcType=VARCHAR}, 
      #{accessoryAddr,jdbcType=VARCHAR}, #{seeStatus,jdbcType=TINYINT}, #{taskType,jdbcType=TINYINT}, 
      #{recieveUsersId,jdbcType=INTEGER}, #{recieveArchiveId,jdbcType=INTEGER}, #{recieveUsersName,jdbcType=VARCHAR}, 
      #{recieveUserOrgId,jdbcType=VARCHAR}, #{recieveUserOrgPath,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, 
      #{sendStatus,jdbcType=INTEGER}, #{taskSearch,jdbcType=VARCHAR}, #{recieveCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="taskId" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTask" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ML_TASK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sendTaskId != null">
        SEND_TASK_ID,
      </if>
      <if test="sendUserId != null">
        SEND_USER_ID,
      </if>
      <if test="sendArchiveId != null">
        SEND_ARCHIVE_ID,
      </if>
      <if test="sendUserName != null">
        SEND_USER_NAME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="sendNow != null">
        SEND_NOW,
      </if>
      <if test="sendTime != null">
        SEND_TIME,
      </if>
      <if test="delStatus != null">
        DEL_STATUS,
      </if>
      <if test="sendUserOrgId != null">
        SEND_USER_ORG_ID,
      </if>
      <if test="sendUserOrgPath != null">
        SEND_USER_ORG_PATH,
      </if>
      <if test="taskName != null">
        TASK_NAME,
      </if>
      <if test="taskDescription != null">
        TASK_DESCRIPTION,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="completeStatus != null">
        COMPLETE_STATUS,
      </if>
      <if test="taskEndTime != null">
        TASK_END_TIME,
      </if>
      <if test="taskCompleteTime != null">
        TASK_COMPLETE_TIME,
      </if>
      <if test="taskRemark != null">
        TASK_REMARK,
      </if>
      <if test="accessoryAddr != null">
        ACCESSORY_ADDR,
      </if>
      <if test="seeStatus != null">
        SEE_STATUS,
      </if>
      <if test="taskType != null">
        TASK_TYPE,
      </if>
      <if test="recieveUsersId != null">
        RECIEVE_USERS_ID,
      </if>
      <if test="recieveArchiveId != null">
        RECIEVE_ARCHIVE_ID,
      </if>
      <if test="recieveUsersName != null">
        RECIEVE_USERS_NAME,
      </if>
      <if test="recieveUserOrgId != null">
        RECIEVE_USER_ORG_ID,
      </if>
      <if test="recieveUserOrgPath != null">
        RECIEVE_USER_ORG_PATH,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="sendStatus != null">
        SEND_STATUS,
      </if>
      <if test="taskSearch != null">
        TASK_SEARCH,
      </if>
      <if test="recieveCount != null">
        RECIEVE_COUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sendTaskId != null">
        #{sendTaskId,jdbcType=INTEGER},
      </if>
      <if test="sendUserId != null">
        #{sendUserId,jdbcType=INTEGER},
      </if>
      <if test="sendArchiveId != null">
        #{sendArchiveId,jdbcType=INTEGER},
      </if>
      <if test="sendUserName != null">
        #{sendUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendNow != null">
        #{sendNow,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delStatus != null">
        #{delStatus,jdbcType=TINYINT},
      </if>
      <if test="sendUserOrgId != null">
        #{sendUserOrgId,jdbcType=INTEGER},
      </if>
      <if test="sendUserOrgPath != null">
        #{sendUserOrgPath,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskDescription != null">
        #{taskDescription,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="completeStatus != null">
        #{completeStatus,jdbcType=TINYINT},
      </if>
      <if test="taskEndTime != null">
        #{taskEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskCompleteTime != null">
        #{taskCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskRemark != null">
        #{taskRemark,jdbcType=VARCHAR},
      </if>
      <if test="accessoryAddr != null">
        #{accessoryAddr,jdbcType=VARCHAR},
      </if>
      <if test="seeStatus != null">
        #{seeStatus,jdbcType=TINYINT},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=TINYINT},
      </if>
      <if test="recieveUsersId != null">
        #{recieveUsersId,jdbcType=INTEGER},
      </if>
      <if test="recieveArchiveId != null">
        #{recieveArchiveId,jdbcType=INTEGER},
      </if>
      <if test="recieveUsersName != null">
        #{recieveUsersName,jdbcType=VARCHAR},
      </if>
      <if test="recieveUserOrgId != null">
        #{recieveUserOrgId,jdbcType=VARCHAR},
      </if>
      <if test="recieveUserOrgPath != null">
        #{recieveUserOrgPath,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="sendStatus != null">
        #{sendStatus,jdbcType=INTEGER},
      </if>
      <if test="taskSearch != null">
        #{taskSearch,jdbcType=VARCHAR},
      </if>
      <if test="recieveCount != null">
        #{recieveCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_ML_TASK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ML_TASK
    <set>
      <if test="record.taskId != null">
        TASK_ID = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.sendTaskId != null">
        SEND_TASK_ID = #{record.sendTaskId,jdbcType=INTEGER},
      </if>
      <if test="record.sendUserId != null">
        SEND_USER_ID = #{record.sendUserId,jdbcType=INTEGER},
      </if>
      <if test="record.sendArchiveId != null">
        SEND_ARCHIVE_ID = #{record.sendArchiveId,jdbcType=INTEGER},
      </if>
      <if test="record.sendUserName != null">
        SEND_USER_NAME = #{record.sendUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendNow != null">
        SEND_NOW = #{record.sendNow,jdbcType=TINYINT},
      </if>
      <if test="record.sendTime != null">
        SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delStatus != null">
        DEL_STATUS = #{record.delStatus,jdbcType=TINYINT},
      </if>
      <if test="record.sendUserOrgId != null">
        SEND_USER_ORG_ID = #{record.sendUserOrgId,jdbcType=INTEGER},
      </if>
      <if test="record.sendUserOrgPath != null">
        SEND_USER_ORG_PATH = #{record.sendUserOrgPath,jdbcType=VARCHAR},
      </if>
      <if test="record.taskName != null">
        TASK_NAME = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskDescription != null">
        TASK_DESCRIPTION = #{record.taskDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
      <if test="record.completeStatus != null">
        COMPLETE_STATUS = #{record.completeStatus,jdbcType=TINYINT},
      </if>
      <if test="record.taskEndTime != null">
        TASK_END_TIME = #{record.taskEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskCompleteTime != null">
        TASK_COMPLETE_TIME = #{record.taskCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskRemark != null">
        TASK_REMARK = #{record.taskRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.accessoryAddr != null">
        ACCESSORY_ADDR = #{record.accessoryAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.seeStatus != null">
        SEE_STATUS = #{record.seeStatus,jdbcType=TINYINT},
      </if>
      <if test="record.taskType != null">
        TASK_TYPE = #{record.taskType,jdbcType=TINYINT},
      </if>
      <if test="record.recieveUsersId != null">
        RECIEVE_USERS_ID = #{record.recieveUsersId,jdbcType=INTEGER},
      </if>
      <if test="record.recieveArchiveId != null">
        RECIEVE_ARCHIVE_ID = #{record.recieveArchiveId,jdbcType=INTEGER},
      </if>
      <if test="record.recieveUsersName != null">
        RECIEVE_USERS_NAME = #{record.recieveUsersName,jdbcType=VARCHAR},
      </if>
      <if test="record.recieveUserOrgId != null">
        RECIEVE_USER_ORG_ID = #{record.recieveUserOrgId,jdbcType=VARCHAR},
      </if>
      <if test="record.recieveUserOrgPath != null">
        RECIEVE_USER_ORG_PATH = #{record.recieveUserOrgPath,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.sendStatus != null">
        SEND_STATUS = #{record.sendStatus,jdbcType=INTEGER},
      </if>
      <if test="record.taskSearch != null">
        TASK_SEARCH = #{record.taskSearch,jdbcType=VARCHAR},
      </if>
      <if test="record.recieveCount != null">
        RECIEVE_COUNT = #{record.recieveCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ML_TASK
    set TASK_ID = #{record.taskId,jdbcType=INTEGER},
      SEND_TASK_ID = #{record.sendTaskId,jdbcType=INTEGER},
      SEND_USER_ID = #{record.sendUserId,jdbcType=INTEGER},
      SEND_ARCHIVE_ID = #{record.sendArchiveId,jdbcType=INTEGER},
      SEND_USER_NAME = #{record.sendUserName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      SEND_NOW = #{record.sendNow,jdbcType=TINYINT},
      SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      DEL_STATUS = #{record.delStatus,jdbcType=TINYINT},
      SEND_USER_ORG_ID = #{record.sendUserOrgId,jdbcType=INTEGER},
      SEND_USER_ORG_PATH = #{record.sendUserOrgPath,jdbcType=VARCHAR},
      TASK_NAME = #{record.taskName,jdbcType=VARCHAR},
      TASK_DESCRIPTION = #{record.taskDescription,jdbcType=VARCHAR},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      COMPLETE_STATUS = #{record.completeStatus,jdbcType=TINYINT},
      TASK_END_TIME = #{record.taskEndTime,jdbcType=TIMESTAMP},
      TASK_COMPLETE_TIME = #{record.taskCompleteTime,jdbcType=TIMESTAMP},
      TASK_REMARK = #{record.taskRemark,jdbcType=VARCHAR},
      ACCESSORY_ADDR = #{record.accessoryAddr,jdbcType=VARCHAR},
      SEE_STATUS = #{record.seeStatus,jdbcType=TINYINT},
      TASK_TYPE = #{record.taskType,jdbcType=TINYINT},
      RECIEVE_USERS_ID = #{record.recieveUsersId,jdbcType=INTEGER},
      RECIEVE_ARCHIVE_ID = #{record.recieveArchiveId,jdbcType=INTEGER},
      RECIEVE_USERS_NAME = #{record.recieveUsersName,jdbcType=VARCHAR},
      RECIEVE_USER_ORG_ID = #{record.recieveUserOrgId,jdbcType=VARCHAR},
      RECIEVE_USER_ORG_PATH = #{record.recieveUserOrgPath,jdbcType=VARCHAR},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      SEND_STATUS = #{record.sendStatus,jdbcType=INTEGER},
      TASK_SEARCH = #{record.taskSearch,jdbcType=VARCHAR},
      RECIEVE_COUNT = #{record.recieveCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTask">
    <!--@mbggenerated-->
    update FUN_ML_TASK
    <set>
      <if test="sendTaskId != null">
        SEND_TASK_ID = #{sendTaskId,jdbcType=INTEGER},
      </if>
      <if test="sendUserId != null">
        SEND_USER_ID = #{sendUserId,jdbcType=INTEGER},
      </if>
      <if test="sendArchiveId != null">
        SEND_ARCHIVE_ID = #{sendArchiveId,jdbcType=INTEGER},
      </if>
      <if test="sendUserName != null">
        SEND_USER_NAME = #{sendUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendNow != null">
        SEND_NOW = #{sendNow,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null">
        SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delStatus != null">
        DEL_STATUS = #{delStatus,jdbcType=TINYINT},
      </if>
      <if test="sendUserOrgId != null">
        SEND_USER_ORG_ID = #{sendUserOrgId,jdbcType=INTEGER},
      </if>
      <if test="sendUserOrgPath != null">
        SEND_USER_ORG_PATH = #{sendUserOrgPath,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        TASK_NAME = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskDescription != null">
        TASK_DESCRIPTION = #{taskDescription,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="completeStatus != null">
        COMPLETE_STATUS = #{completeStatus,jdbcType=TINYINT},
      </if>
      <if test="taskEndTime != null">
        TASK_END_TIME = #{taskEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskCompleteTime != null">
        TASK_COMPLETE_TIME = #{taskCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskRemark != null">
        TASK_REMARK = #{taskRemark,jdbcType=VARCHAR},
      </if>
      <if test="accessoryAddr != null">
        ACCESSORY_ADDR = #{accessoryAddr,jdbcType=VARCHAR},
      </if>
      <if test="seeStatus != null">
        SEE_STATUS = #{seeStatus,jdbcType=TINYINT},
      </if>
      <if test="taskType != null">
        TASK_TYPE = #{taskType,jdbcType=TINYINT},
      </if>
      <if test="recieveUsersId != null">
        RECIEVE_USERS_ID = #{recieveUsersId,jdbcType=INTEGER},
      </if>
      <if test="recieveArchiveId != null">
        RECIEVE_ARCHIVE_ID = #{recieveArchiveId,jdbcType=INTEGER},
      </if>
      <if test="recieveUsersName != null">
        RECIEVE_USERS_NAME = #{recieveUsersName,jdbcType=VARCHAR},
      </if>
      <if test="recieveUserOrgId != null">
        RECIEVE_USER_ORG_ID = #{recieveUserOrgId,jdbcType=VARCHAR},
      </if>
      <if test="recieveUserOrgPath != null">
        RECIEVE_USER_ORG_PATH = #{recieveUserOrgPath,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="sendStatus != null">
        SEND_STATUS = #{sendStatus,jdbcType=INTEGER},
      </if>
      <if test="taskSearch != null">
        TASK_SEARCH = #{taskSearch,jdbcType=VARCHAR},
      </if>
      <if test="recieveCount != null">
        RECIEVE_COUNT = #{recieveCount,jdbcType=INTEGER},
      </if>
    </set>
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTask">
    <!--@mbggenerated-->
    update FUN_ML_TASK
    set SEND_TASK_ID = #{sendTaskId,jdbcType=INTEGER},
      SEND_USER_ID = #{sendUserId,jdbcType=INTEGER},
      SEND_ARCHIVE_ID = #{sendArchiveId,jdbcType=INTEGER},
      SEND_USER_NAME = #{sendUserName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      SEND_NOW = #{sendNow,jdbcType=TINYINT},
      SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      DEL_STATUS = #{delStatus,jdbcType=TINYINT},
      SEND_USER_ORG_ID = #{sendUserOrgId,jdbcType=INTEGER},
      SEND_USER_ORG_PATH = #{sendUserOrgPath,jdbcType=VARCHAR},
      TASK_NAME = #{taskName,jdbcType=VARCHAR},
      TASK_DESCRIPTION = #{taskDescription,jdbcType=VARCHAR},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      COMPLETE_STATUS = #{completeStatus,jdbcType=TINYINT},
      TASK_END_TIME = #{taskEndTime,jdbcType=TIMESTAMP},
      TASK_COMPLETE_TIME = #{taskCompleteTime,jdbcType=TIMESTAMP},
      TASK_REMARK = #{taskRemark,jdbcType=VARCHAR},
      ACCESSORY_ADDR = #{accessoryAddr,jdbcType=VARCHAR},
      SEE_STATUS = #{seeStatus,jdbcType=TINYINT},
      TASK_TYPE = #{taskType,jdbcType=TINYINT},
      RECIEVE_USERS_ID = #{recieveUsersId,jdbcType=INTEGER},
      RECIEVE_ARCHIVE_ID = #{recieveArchiveId,jdbcType=INTEGER},
      RECIEVE_USERS_NAME = #{recieveUsersName,jdbcType=VARCHAR},
      RECIEVE_USER_ORG_ID = #{recieveUserOrgId,jdbcType=VARCHAR},
      RECIEVE_USER_ORG_PATH = #{recieveUserOrgPath,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      SEND_STATUS = #{sendStatus,jdbcType=INTEGER},
      TASK_SEARCH = #{taskSearch,jdbcType=VARCHAR},
      RECIEVE_COUNT = #{recieveCount,jdbcType=INTEGER}
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </update>

  <insert id="insertRecieveTaskBatch" parameterType="java.util.List">
    insert into FUN_ML_TASK (
         SEND_TASK_ID, SEND_USER_ID, SEND_USER_NAME,
      CREATE_TIME, SEND_NOW, SEND_TIME,
      DEL_STATUS, SEND_USER_ORG_ID, SEND_USER_ORG_PATH,
      TASK_NAME, TASK_DESCRIPTION, CASE_ID,
      CASE_TYPE, COMPLETE_STATUS, TASK_END_TIME,
      TASK_COMPLETE_TIME, TASK_REMARK, ACCESSORY_ADDR,
      SEE_STATUS, TASK_TYPE, RECIEVE_USERS_ID,
      RECIEVE_USERS_NAME, RECIEVE_USER_ORG_ID, RECIEVE_USER_ORG_PATH,
      COMP_ID,SEND_ARCHIVE_ID,RECIEVE_ARCHIVE_ID
      )
    values
    <foreach collection="erpFunMlTaskList" index="index" item="task" separator=",">
    (
      #{task.sendTaskId,jdbcType=INTEGER},
       #{task.sendUserId,jdbcType=INTEGER},
      #{task.sendUserName,jdbcType=VARCHAR},
      #{task.createTime,jdbcType=TIMESTAMP},
      #{task.sendNow,jdbcType=TINYINT},
       #{task.sendTime,jdbcType=TIMESTAMP},
       #{task.delStatus,jdbcType=TINYINT},
       #{task.sendUserOrgId,jdbcType=INTEGER},
      #{task.sendUserOrgPath,jdbcType=VARCHAR},
       #{task.taskName,jdbcType=VARCHAR},
      #{task.taskDescription,jdbcType=VARCHAR},
       #{task.caseId,jdbcType=INTEGER},
       #{task.caseType,jdbcType=TINYINT},
       #{task.completeStatus,jdbcType=TINYINT},
      #{task.taskEndTime,jdbcType=TIMESTAMP},
       #{task.taskCompleteTime,jdbcType=TIMESTAMP},
      #{task.taskRemark,jdbcType=VARCHAR},
       #{task.accessoryAddr,jdbcType=VARCHAR},
      #{task.seeStatus,jdbcType=TINYINT},
       #{task.taskType,jdbcType=TINYINT},
       #{task.recieveUsersId,jdbcType=INTEGER},
       #{task.recieveUsersName,jdbcType=VARCHAR},
      #{task.recieveUserOrgId,jdbcType=VARCHAR},
      #{task.recieveUserOrgPath,jdbcType=VARCHAR},
       #{task.compId,jdbcType=INTEGER},
      #{task.sendArchiveId,jdbcType=INTEGER},
      #{task.recieveArchiveId,jdbcType=INTEGER}
    )
    </foreach>
  </insert>
  <!--获取延期的发送任务ID-->
  <select id="getDelayTaskId" resultType="java.lang.Integer">
    SELECT DISTINCT
    SEND_TASK_ID
    FROM
    FUN_ML_TASK
    WHERE
    TASK_END_TIME &lt; GETDATE()
    AND TASK_TYPE = 2
    AND COMPLETE_STATUS = 2
    AND SEND_USER_ID = #{sendUserId}
    AND DEL_STATUS = 0;

  </select>
  <!--获取未完成的发送任务ID-->
  <select id="getNotCompleteTaskId" resultType="java.lang.Integer">
    SELECT DISTINCT
        SEND_TASK_ID
    FROM
        FUN_ML_TASK
    WHERE
        TASK_TYPE = 2
    AND COMPLETE_STATUS = 2
    AND TASK_END_TIME &gt; GETDATE()
    AND SEND_USER_ID = #{sendUserId}
AND DEL_STATUS = 0;
  </select>
  <!--获取无法完成的发送任务ID-->
  <select id="getUnableCompleteTaskId" resultType="java.lang.Integer">
    SELECT
        DISTINCT a.task_id
    FROM
        FUN_ML_TASK a
    JOIN FUN_ML_TASK b ON a.TASK_ID = b.SEND_TASK_ID
    WHERE
        a.TASK_TYPE = 1
    AND a.SEND_USER_ID = #{sendUserId}
    AND a.TASK_END_TIME &lt; GETDATE()
    AND (
        SELECT
            COUNT (*)
        FROM
            FUN_ML_TASK c
        WHERE
            c.SEND_TASK_ID = b.SEND_TASK_ID
    ) = 1
    AND b.COMPLETE_STATUS = 4
UNION ALL
SELECT A.SEND_TASK_ID  AS TASK_ID
FROM FUN_ML_TASK A
WHERE A.SEND_USER_ID = #{sendUserId} AND A.COMPLETE_STATUS = 4 and A.task_type = 2
AND ( SELECT COUNT (*) FROM FUN_ML_TASK c WHERE c.SEND_TASK_ID = A.SEND_TASK_ID) = 1;
  </select>
  <!--获取完成的发送任务ID-->
  <select id="getCompleteTaskid" resultType="java.lang.Integer">
    SELECT DISTINCT
    (a.TASK_ID)
    FROM
    FUN_ML_TASK a
    JOIN FUN_ML_TASK b ON a.TASK_ID = b.SEND_TASK_ID
    WHERE
    a.TASK_TYPE = 1
    AND a.SEND_USER_ID =  #{sendUserId} AND a.TASK_END_TIME &lt; GETDATE()
    AND a.TASK_ID NOT IN (
    SELECT
    DISTINCT
    SEND_TASK_ID
    FROM
    FUN_ML_TASK
    WHERE
    TASK_TYPE = 2
    AND SEND_USER_ID =  #{sendUserId}
    AND COMPLETE_STATUS = 2
    )  AND ( SELECT COUNT (*) FROM FUN_ML_TASK c WHERE c.SEND_TASK_ID = b.SEND_TASK_ID) != 1

    UNION ALL
    SELECT A.SEND_TASK_ID  AS TASK_ID
    FROM FUN_ML_TASK A
    WHERE A.SEND_USER_ID =  #{sendUserId} AND A.COMPLETE_STATUS = 5 and A.task_type = 2
    AND ( SELECT COUNT (*) FROM FUN_ML_TASK c WHERE c.SEND_TASK_ID = A.SEND_TASK_ID) = 1;
  </select>
  <!--获取完成的发送任务ID-->
  <select id="getTaskList" resultMap="BaseResultMap">
	select DISTINCT <if test="param.taskType==1">
	
		A.TASK_ID,	A.COMPLETE_STATUS,A.TASK_TYPE,
	</if>
	<if test="param.taskType==2">
		B.TASK_ID,	B.COMPLETE_STATUS,B.TASK_TYPE,
	</if>
	A.SEND_TASK_ID, A.SEND_USER_ID, A.SEND_ARCHIVE_ID, A.SEND_USER_NAME, A.CREATE_TIME, 
    A.SEND_NOW, A.SEND_TIME, A.DEL_STATUS, A.SEND_USER_ORG_ID, A.SEND_USER_ORG_PATH, A.TASK_NAME, 
    A.TASK_DESCRIPTION, A.CASE_ID, A.CASE_TYPE, A.TASK_END_TIME, A.TASK_COMPLETE_TIME, 
    A.TASK_REMARK, A.ACCESSORY_ADDR, A.SEE_STATUS, A.RECIEVE_USERS_ID, A.RECIEVE_ARCHIVE_ID, 
    A.RECIEVE_USERS_NAME, A.RECIEVE_USER_ORG_ID, A.RECIEVE_USER_ORG_PATH, A.COMP_ID, A.SEND_STATUS, 
    A.TASK_SEARCH, A.RECIEVE_COUNT from FUN_ML_TASK A left join FUN_ML_TASK B ON A.TASK_ID = B.SEND_TASK_ID and B.TASK_TYPE=2 where A.comp_id =#{param.compId} and A.del_status =0
	<if test="param.taskType==1">
		and A.SEND_USER_ID = #{param.userId}
		and A.TASK_TYPE = 1
		<if test="param.relativeUserId!=null">
			AND b.RECIEVE_USERS_ID = #{param.relativeUserId}
		</if>
	</if>
	<if test="param.taskType==2">
		and B.RECIEVE_USERS_ID = #{param.userId}
		and B.TASK_TYPE = 2
		<if test="param.relativeUserId!=null">
			and A.SEND_USER_ID = #{param.relativeUserId}
		</if>
	</if>
	<if test="param.orgId!=null">
		<if test="param.taskType==1">
			and b.RECIEVE_USER_ORG_PATH like #{param.orgIdStr}
		</if>
		<if test="param.taskType==2">
			and b.SEND_USER_ORG_PATH like #{param.orgIdStr}
		</if>
	</if>
	<if test="param.taskType==1">
		<if test="param.operateStartTime!=null">
			and a.CREATE_TIME &gt;= #{param.operateStartTime}
		</if>
		<if test="param.operateEndTime!=null">
			and a.CREATE_TIME &lt;= #{param.operateEndTime}
		</if>
	</if>
	<if test="param.taskType==2">
		<if test="param.operateStartTime!=null">
			and a.SEND_TIME &gt;= #{param.operateStartTime}
		</if>
		<if test="param.operateEndTime!=null">
			and a.SEND_TIME &lt;= #{param.operateEndTime}
		</if>
	</if>
	<if test="param.caseType!=null and param.caseType==5">
		and a.CASE_TYPE = 0
	</if>
	<if test="param.caseType!=null and param.caseType!=5">
		and a.CASE_TYPE =#{param.caseType}
	</if>
	<if test="param.completeStatus!=null">
	<choose>
		 <when test="param.completeStatus==1">
		 	<if test="param.taskType==1">
				AND A.COMPLETE_STATUS = 5
			</if>
			<if test="param.taskType==2">
				AND B.COMPLETE_STATUS = 5
			</if>
	     </when>
		 <when test="param.completeStatus==2">
		 	<if test="param.taskType==1">
				AND A.COMPLETE_STATUS = 2
				AND A.TASK_END_TIME &gt; GETDATE()
				AND A.DEL_STATUS = 0
			</if>
			<if test="param.taskType==2">
				AND B.COMPLETE_STATUS = 2
				AND B.TASK_END_TIME &gt; GETDATE()
				AND B.DEL_STATUS = 0
			</if>
	     </when>
		 <when test="param.completeStatus==3">
		 	<if test="param.taskType==1">
				AND A.COMPLETE_STATUS = 2
				AND A.TASK_END_TIME &lt; GETDATE()
			</if>
			<if test="param.taskType==2">
				AND B.COMPLETE_STATUS = 2
				AND B.TASK_END_TIME &lt; GETDATE()
			</if>
	     </when>
		  <when test="param.completeStatus==4">
		  	<if test="param.taskType==1">
				AND A.COMPLETE_STATUS = 4
			</if>
			<if test="param.taskType==2">
				AND B.COMPLETE_STATUS = 4
			</if>
	     </when>
	</choose>
	</if>
	<if test="param.keyWord!=null">
		and a.TASK_SEARCH like #{param.keyWord}
	</if>
	ORDER BY <if test="param.taskType==1">
		A.TASK_ID
	</if>
	<if test="param.taskType==2">
		B.TASK_ID
	</if> DESC
	   OFFSET (#{param.pageOffset}-1) * #{param.pageRows} ROW FETCH NEXT #{param.pageRows} ROWS ONLY

  </select>
  <!--获取完成的发送任务ID-->
  <select id="countTaskCount" resultType="_int">
	select count(DISTINCT <if test="param.taskType==1">
		A.TASK_ID
	</if>
	<if test="param.taskType==2">
		B.TASK_ID
	</if>) from FUN_ML_TASK A left join FUN_ML_TASK B ON A.TASK_ID = B.SEND_TASK_ID and B.TASK_TYPE=2 where A.comp_id =#{param.compId} and A.del_status =0
	<if test="param.taskType==1">
		and A.SEND_USER_ID = #{param.userId}
		and A.TASK_TYPE = 1
		<if test="param.relativeUserId!=null">
			AND b.RECIEVE_USERS_ID = #{param.relativeUserId}
		</if>
	</if>
	<if test="param.taskType==2">
		and B.RECIEVE_USERS_ID = #{param.userId}
		and B.TASK_TYPE = 2
		<if test="param.relativeUserId!=null">
			and A.SEND_USER_ID = #{param.relativeUserId}
		</if>
	</if>
	<if test="param.orgId!=null">
		<if test="param.taskType==1">
			and b.RECIEVE_USER_ORG_PATH like #{param.orgIdStr}
		</if>
		<if test="param.taskType==2">
			and b.SEND_USER_ORG_PATH like #{param.orgIdStr}
		</if>
	</if>
	<if test="param.taskType==1">
		<if test="param.operateStartTime!=null">
			and a.CREATE_TIME &gt;= #{param.operateStartTime}
		</if>
		<if test="param.operateEndTime!=null">
			and a.CREATE_TIME &lt;= #{param.operateEndTime}
		</if>
	</if>
	<if test="param.taskType==2">
		<if test="param.operateStartTime!=null">
			and a.SEND_TIME &gt;= #{param.operateStartTime}
		</if>
		<if test="param.operateEndTime!=null">
			and a.SEND_TIME &lt;= #{param.operateEndTime}
		</if>
	</if>
	<if test="param.caseType!=null and param.caseType==5">
		and a.CASE_TYPE = 0
	</if>
	<if test="param.caseType!=null and param.caseType!=5">
		and a.CASE_TYPE =#{param.caseType}
	</if>
	<if test="param.completeStatus!=null">
	<choose>
		 <when test="param.completeStatus==1">
		 	<if test="param.taskType==1">
				AND A.COMPLETE_STATUS = 5
			</if>
			<if test="param.taskType==2">
				AND B.COMPLETE_STATUS = 5
			</if>
	     </when>
		 <when test="param.completeStatus==2">
		 	<if test="param.taskType==1">
				AND A.COMPLETE_STATUS = 2
				AND A.TASK_END_TIME &gt; GETDATE()
				AND A.DEL_STATUS = 0
			</if>
			<if test="param.taskType==2">
				AND B.COMPLETE_STATUS = 2
				AND B.TASK_END_TIME &gt; GETDATE()
				AND B.DEL_STATUS = 0
			</if>
	     </when>
		 <when test="param.completeStatus==3">
		 	<if test="param.taskType==1">
				AND A.COMPLETE_STATUS = 2
				AND A.TASK_END_TIME &lt; GETDATE()
			</if>
			<if test="param.taskType==2">
				AND B.COMPLETE_STATUS = 2
				AND B.TASK_END_TIME &lt; GETDATE()
			</if>
	     </when>
		  <when test="param.completeStatus==4">
		  	<if test="param.taskType==1">
				AND A.COMPLETE_STATUS = 4
			</if>
			<if test="param.taskType==2">
				AND B.COMPLETE_STATUS = 4
			</if>
	     </when>
	</choose>
	</if>
	<if test="param.keyWord!=null">
		and a.TASK_SEARCH like #{param.keyWord}
	</if>
  </select>
  <update id="updateCompleteStatus">
    update FUN_ML_TASK
    set 
      COMPLETE_STATUS = 5,TASK_COMPLETE_TIME=#{completeTaskTime}
     
    where TASK_ID = #{taskId,jdbcType=INTEGER} AND RECIEVE_COUNT = ((select count(1) from FUN_ML_TASK where COMP_ID = #{compId} and SEND_TASK_ID = #{taskId} and COMPLETE_STATUS in (4,5))+1)
  </update>
</mapper>