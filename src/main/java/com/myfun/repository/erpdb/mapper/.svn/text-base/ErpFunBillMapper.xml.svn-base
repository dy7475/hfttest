<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunBillMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunBill">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="BILL_TYPE" jdbcType="TINYINT" property="billType" />
    <result column="BILL_WAY" jdbcType="TINYINT" property="billWay" />
    <result column="BILL_NO" jdbcType="VARCHAR" property="billNo" />
    <result column="PAY_CUSTOMER" jdbcType="VARCHAR" property="payCustomer" />
    <result column="FIANAC_PAYMENT" jdbcType="VARCHAR" property="fianacPayment" />
    <result column="PAY_MONEY" jdbcType="NUMERIC" property="payMoney" />
    <result column="RECEIPT_MONEY_USER" jdbcType="INTEGER" property="receiptMoneyUser" />
    <result column="RECEIPT_MONEY_DEPT" jdbcType="INTEGER" property="receiptMoneyDept" />
    <result column="BILL_STATUS" jdbcType="TINYINT" property="billStatus" />
    <result column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="CONTRACT_NO" jdbcType="VARCHAR" property="contractNo" />
    <result column="RECEIPT_TIME" jdbcType="TIMESTAMP" property="receiptTime" />
    <result column="EARBEST_ID" jdbcType="INTEGER" property="earbestId" />
    <result column="FIANAC_ID" jdbcType="INTEGER" property="fianacId" />
    <result column="INTELLIGENT_SEARCH" jdbcType="VARCHAR" property="intelligentSearch" />
    <result column="BILL_PRINT_ID" jdbcType="INTEGER" property="billPrintId" />
    <result column="BILL_PRINT_WAY" jdbcType="TINYINT" property="billPrintWay" />
    <result column="BILL_PHOTO" jdbcType="VARCHAR" property="billPhoto" />
    <result column="DEPOSIT_ID" jdbcType="INTEGER" property="depositId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, USER_ID, CREATION_TIME, BILL_TYPE, 
    BILL_WAY, BILL_NO, PAY_CUSTOMER, FIANAC_PAYMENT, PAY_MONEY, RECEIPT_MONEY_USER, RECEIPT_MONEY_DEPT, 
    BILL_STATUS, DEAL_ID, CONTRACT_NO, RECEIPT_TIME, EARBEST_ID, FIANAC_ID, INTELLIGENT_SEARCH, 
    BILL_PRINT_ID, BILL_PRINT_WAY, BILL_PHOTO, DEPOSIT_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunBillExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_BILL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_BILL
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_BILL
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunBillExample">
    <!--@mbggenerated-->
    delete from FUN_BILL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunBill" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_BILL (COMP_ID, AREA_ID, REG_ID, 
      DEPT_ID, GR_ID, USER_ID, 
      CREATION_TIME, BILL_TYPE, BILL_WAY, 
      BILL_NO, PAY_CUSTOMER, FIANAC_PAYMENT, 
      PAY_MONEY, RECEIPT_MONEY_USER, RECEIPT_MONEY_DEPT, 
      BILL_STATUS, DEAL_ID, CONTRACT_NO, 
      RECEIPT_TIME, EARBEST_ID, FIANAC_ID, 
      INTELLIGENT_SEARCH, BILL_PRINT_ID, BILL_PRINT_WAY, 
      BILL_PHOTO, DEPOSIT_ID)
    values (#{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{regId,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{billType,jdbcType=TINYINT}, #{billWay,jdbcType=TINYINT}, 
      #{billNo,jdbcType=VARCHAR}, #{payCustomer,jdbcType=VARCHAR}, #{fianacPayment,jdbcType=VARCHAR}, 
      #{payMoney,jdbcType=NUMERIC}, #{receiptMoneyUser,jdbcType=INTEGER}, #{receiptMoneyDept,jdbcType=INTEGER}, 
      #{billStatus,jdbcType=TINYINT}, #{dealId,jdbcType=INTEGER}, #{contractNo,jdbcType=VARCHAR}, 
      #{receiptTime,jdbcType=TIMESTAMP}, #{earbestId,jdbcType=INTEGER}, #{fianacId,jdbcType=INTEGER}, 
      #{intelligentSearch,jdbcType=VARCHAR}, #{billPrintId,jdbcType=INTEGER}, #{billPrintWay,jdbcType=TINYINT}, 
      #{billPhoto,jdbcType=VARCHAR}, #{depositId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunBill" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_BILL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="billType != null">
        BILL_TYPE,
      </if>
      <if test="billWay != null">
        BILL_WAY,
      </if>
      <if test="billNo != null">
        BILL_NO,
      </if>
      <if test="payCustomer != null">
        PAY_CUSTOMER,
      </if>
      <if test="fianacPayment != null">
        FIANAC_PAYMENT,
      </if>
      <if test="payMoney != null">
        PAY_MONEY,
      </if>
      <if test="receiptMoneyUser != null">
        RECEIPT_MONEY_USER,
      </if>
      <if test="receiptMoneyDept != null">
        RECEIPT_MONEY_DEPT,
      </if>
      <if test="billStatus != null">
        BILL_STATUS,
      </if>
      <if test="dealId != null">
        DEAL_ID,
      </if>
      <if test="contractNo != null">
        CONTRACT_NO,
      </if>
      <if test="receiptTime != null">
        RECEIPT_TIME,
      </if>
      <if test="earbestId != null">
        EARBEST_ID,
      </if>
      <if test="fianacId != null">
        FIANAC_ID,
      </if>
      <if test="intelligentSearch != null">
        INTELLIGENT_SEARCH,
      </if>
      <if test="billPrintId != null">
        BILL_PRINT_ID,
      </if>
      <if test="billPrintWay != null">
        BILL_PRINT_WAY,
      </if>
      <if test="billPhoto != null">
        BILL_PHOTO,
      </if>
      <if test="depositId != null">
        DEPOSIT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="billType != null">
        #{billType,jdbcType=TINYINT},
      </if>
      <if test="billWay != null">
        #{billWay,jdbcType=TINYINT},
      </if>
      <if test="billNo != null">
        #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="payCustomer != null">
        #{payCustomer,jdbcType=VARCHAR},
      </if>
      <if test="fianacPayment != null">
        #{fianacPayment,jdbcType=VARCHAR},
      </if>
      <if test="payMoney != null">
        #{payMoney,jdbcType=NUMERIC},
      </if>
      <if test="receiptMoneyUser != null">
        #{receiptMoneyUser,jdbcType=INTEGER},
      </if>
      <if test="receiptMoneyDept != null">
        #{receiptMoneyDept,jdbcType=INTEGER},
      </if>
      <if test="billStatus != null">
        #{billStatus,jdbcType=TINYINT},
      </if>
      <if test="dealId != null">
        #{dealId,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="receiptTime != null">
        #{receiptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="earbestId != null">
        #{earbestId,jdbcType=INTEGER},
      </if>
      <if test="fianacId != null">
        #{fianacId,jdbcType=INTEGER},
      </if>
      <if test="intelligentSearch != null">
        #{intelligentSearch,jdbcType=VARCHAR},
      </if>
      <if test="billPrintId != null">
        #{billPrintId,jdbcType=INTEGER},
      </if>
      <if test="billPrintWay != null">
        #{billPrintWay,jdbcType=TINYINT},
      </if>
      <if test="billPhoto != null">
        #{billPhoto,jdbcType=VARCHAR},
      </if>
      <if test="depositId != null">
        #{depositId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunBillExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_BILL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_BILL
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.billType != null">
        BILL_TYPE = #{record.billType,jdbcType=TINYINT},
      </if>
      <if test="record.billWay != null">
        BILL_WAY = #{record.billWay,jdbcType=TINYINT},
      </if>
      <if test="record.billNo != null">
        BILL_NO = #{record.billNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payCustomer != null">
        PAY_CUSTOMER = #{record.payCustomer,jdbcType=VARCHAR},
      </if>
      <if test="record.fianacPayment != null">
        FIANAC_PAYMENT = #{record.fianacPayment,jdbcType=VARCHAR},
      </if>
      <if test="record.payMoney != null">
        PAY_MONEY = #{record.payMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.receiptMoneyUser != null">
        RECEIPT_MONEY_USER = #{record.receiptMoneyUser,jdbcType=INTEGER},
      </if>
      <if test="record.receiptMoneyDept != null">
        RECEIPT_MONEY_DEPT = #{record.receiptMoneyDept,jdbcType=INTEGER},
      </if>
      <if test="record.billStatus != null">
        BILL_STATUS = #{record.billStatus,jdbcType=TINYINT},
      </if>
      <if test="record.dealId != null">
        DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      </if>
      <if test="record.contractNo != null">
        CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptTime != null">
        RECEIPT_TIME = #{record.receiptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.earbestId != null">
        EARBEST_ID = #{record.earbestId,jdbcType=INTEGER},
      </if>
      <if test="record.fianacId != null">
        FIANAC_ID = #{record.fianacId,jdbcType=INTEGER},
      </if>
      <if test="record.intelligentSearch != null">
        INTELLIGENT_SEARCH = #{record.intelligentSearch,jdbcType=VARCHAR},
      </if>
      <if test="record.billPrintId != null">
        BILL_PRINT_ID = #{record.billPrintId,jdbcType=INTEGER},
      </if>
      <if test="record.billPrintWay != null">
        BILL_PRINT_WAY = #{record.billPrintWay,jdbcType=TINYINT},
      </if>
      <if test="record.billPhoto != null">
        BILL_PHOTO = #{record.billPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.depositId != null">
        DEPOSIT_ID = #{record.depositId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_BILL
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      BILL_TYPE = #{record.billType,jdbcType=TINYINT},
      BILL_WAY = #{record.billWay,jdbcType=TINYINT},
      BILL_NO = #{record.billNo,jdbcType=VARCHAR},
      PAY_CUSTOMER = #{record.payCustomer,jdbcType=VARCHAR},
      FIANAC_PAYMENT = #{record.fianacPayment,jdbcType=VARCHAR},
      PAY_MONEY = #{record.payMoney,jdbcType=NUMERIC},
      RECEIPT_MONEY_USER = #{record.receiptMoneyUser,jdbcType=INTEGER},
      RECEIPT_MONEY_DEPT = #{record.receiptMoneyDept,jdbcType=INTEGER},
      BILL_STATUS = #{record.billStatus,jdbcType=TINYINT},
      DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      RECEIPT_TIME = #{record.receiptTime,jdbcType=TIMESTAMP},
      EARBEST_ID = #{record.earbestId,jdbcType=INTEGER},
      FIANAC_ID = #{record.fianacId,jdbcType=INTEGER},
      INTELLIGENT_SEARCH = #{record.intelligentSearch,jdbcType=VARCHAR},
      BILL_PRINT_ID = #{record.billPrintId,jdbcType=INTEGER},
      BILL_PRINT_WAY = #{record.billPrintWay,jdbcType=TINYINT},
      BILL_PHOTO = #{record.billPhoto,jdbcType=VARCHAR},
      DEPOSIT_ID = #{record.depositId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunBill">
    <!--@mbggenerated-->
    update FUN_BILL
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="billType != null">
        BILL_TYPE = #{billType,jdbcType=TINYINT},
      </if>
      <if test="billWay != null">
        BILL_WAY = #{billWay,jdbcType=TINYINT},
      </if>
      <if test="billNo != null">
        BILL_NO = #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="payCustomer != null">
        PAY_CUSTOMER = #{payCustomer,jdbcType=VARCHAR},
      </if>
      <if test="fianacPayment != null">
        FIANAC_PAYMENT = #{fianacPayment,jdbcType=VARCHAR},
      </if>
      <if test="payMoney != null">
        PAY_MONEY = #{payMoney,jdbcType=NUMERIC},
      </if>
      <if test="receiptMoneyUser != null">
        RECEIPT_MONEY_USER = #{receiptMoneyUser,jdbcType=INTEGER},
      </if>
      <if test="receiptMoneyDept != null">
        RECEIPT_MONEY_DEPT = #{receiptMoneyDept,jdbcType=INTEGER},
      </if>
      <if test="billStatus != null">
        BILL_STATUS = #{billStatus,jdbcType=TINYINT},
      </if>
      <if test="dealId != null">
        DEAL_ID = #{dealId,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null">
        CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="receiptTime != null">
        RECEIPT_TIME = #{receiptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="earbestId != null">
        EARBEST_ID = #{earbestId,jdbcType=INTEGER},
      </if>
      <if test="fianacId != null">
        FIANAC_ID = #{fianacId,jdbcType=INTEGER},
      </if>
      <if test="intelligentSearch != null">
        INTELLIGENT_SEARCH = #{intelligentSearch,jdbcType=VARCHAR},
      </if>
      <if test="billPrintId != null">
        BILL_PRINT_ID = #{billPrintId,jdbcType=INTEGER},
      </if>
      <if test="billPrintWay != null">
        BILL_PRINT_WAY = #{billPrintWay,jdbcType=TINYINT},
      </if>
      <if test="billPhoto != null">
        BILL_PHOTO = #{billPhoto,jdbcType=VARCHAR},
      </if>
      <if test="depositId != null">
        DEPOSIT_ID = #{depositId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunBill">
    <!--@mbggenerated-->
    update FUN_BILL
    set COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      BILL_TYPE = #{billType,jdbcType=TINYINT},
      BILL_WAY = #{billWay,jdbcType=TINYINT},
      BILL_NO = #{billNo,jdbcType=VARCHAR},
      PAY_CUSTOMER = #{payCustomer,jdbcType=VARCHAR},
      FIANAC_PAYMENT = #{fianacPayment,jdbcType=VARCHAR},
      PAY_MONEY = #{payMoney,jdbcType=NUMERIC},
      RECEIPT_MONEY_USER = #{receiptMoneyUser,jdbcType=INTEGER},
      RECEIPT_MONEY_DEPT = #{receiptMoneyDept,jdbcType=INTEGER},
      BILL_STATUS = #{billStatus,jdbcType=TINYINT},
      DEAL_ID = #{dealId,jdbcType=INTEGER},
      CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      RECEIPT_TIME = #{receiptTime,jdbcType=TIMESTAMP},
      EARBEST_ID = #{earbestId,jdbcType=INTEGER},
      FIANAC_ID = #{fianacId,jdbcType=INTEGER},
      INTELLIGENT_SEARCH = #{intelligentSearch,jdbcType=VARCHAR},
      BILL_PRINT_ID = #{billPrintId,jdbcType=INTEGER},
      BILL_PRINT_WAY = #{billPrintWay,jdbcType=TINYINT},
      BILL_PHOTO = #{billPhoto,jdbcType=VARCHAR},
      DEPOSIT_ID = #{depositId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteEarbestBillPrintRelative">
     delete B from FUN_BILL A join FUN_BILL_PRINT B ON A.BILL_PRINT_ID = B.ID 
    where A.COMP_ID = #{compId} and A.EARBEST_ID = #{earbestId}
  </delete>
  <select id="selectPrintContentInfo" resultType="map">
  
   <if test="printType!=null and 0==printType">
  	 <if test="financIdArr!=null">
   		select ${printWay} as printWay,A.RECEIPT_MONEY_USER as receiptUserId,A.RECEIPT_MONEY_DEPT as receiptDeptId,A.PF_NAME as fianacPayment,
       A.PF_PAYER as pfPayer,A.PAY_AMOUNT as payMoney,A.PAY_TYPE_DESC as paymentType,A.BILL_CODE_NO as billNo,A.BILL_WAY as billWay,
       A.AUDIT_USER as auditUser,A.PF_DESC as pfDesc,A.PF_TIME as pfTime,A.PAY_ACCOUNT as payAccount,A.PAYMENT_TYPE as paymentType,0 as dataType
       from PROCESS_FINANC A  where A.COMP_ID = #{compId} and A.PF_ID
   		in <foreach close=")" collection="financIdArr" item="financId" open="(" separator=",">#{financId}</foreach>
  	 </if>
  	 <if test="earBestIdArr!=null">
  	 	select ${printWay} as printWay,RECEIPT_USER_ID as receiptUserId,RECEIPT_DEPT_ID as receiptDeptId,CUST_NAME as payCustomer,
       RECEIPT_MONEY as payMoney, CUST_IDCARD as custIdcard,PAYMENT_TYPE as paymentType,BILL_WAY as billWay,RECEIPT_NO as billNo,
  	 	       PERFORMANCE_NAME performanceName,BUILD_NAME buildName, RECEIPT_TIME AS confirmTime,PROPERTY_ADDRESS as propertyAddress,1 as dataType,CUST_ID_CARD_TYPE as custIdCardType
       from FUN_EARBEST_MONEY where COMP_ID = #{compId} and EARBEST_ID
  	 	in <foreach close=")" collection="earBestIdArr" item="earBestId" open="(" separator=",">#{earBestId}</foreach>
  
  	 </if>
     <if test="depositIdArr != null">
       select ${printWay} as printWay,RECEIPT_USER_ID as receiptUserId,RECEIPT_DEPT_ID as receiptDeptId,CUST_NAME as payCustomer,
       RECEIPT_MONEY as payMoney, PAYMENT_TYPE as paymentType,BILL_WAY as billWay,BILL_CODE_NO as billNo,
       CASE_TYPE as performanceName, RECEIPT_TIME AS confirmTime,PROPERTY_ADDRESS as propertyAddress,2 as dataType,CUST_ID_CARD_TYPE as custIdCardType,CUST_IDCARD as custIdcard
       from FUN_DEPOSIT where COMP_ID = #{compId} and ID
       in
       <foreach close=")" collection="depositIdArr" item="depositId" open="(" separator=",">
       #{depositId}
        </foreach>
     </if>
   </if>
   <if test="printType!=null and 1==printType">
   		<if test="financIdArr!=null">
   			select ${printWay} as printWay,A.RECEIPT_MONEY_USER as receiptUserId,A.RECEIPT_MONEY_DEPT as receiptDeptId,A.BILL_PRINT_WAY as printWay,
              A.BILL_NO as billNo,A.CONTRACT_NO as contractNo,C.PF_PAYER as pfPayer,A.BILL_TYPE as billType,C.PF_NAME as fianacPayment,
              A.PAY_CUSTOMER as payCustomer,A.PAY_MONEY as payMoney,C.PAY_TYPE_DESC as paymentType,B.PRINT_COUNT as printCount,B.PRINT_COUNT_USER as printCountUser,
            C.AUDIT_USER as auditUser,C.PF_DESC as pfDesc,C.PF_TIME as pfTime,C.PAY_ACCOUNT as payAccount,C.PAYMENT_TYPE as paymentType,0 as dataType
            from FUN_BILL A
            join FUN_BILL_PRINT B ON A.BILL_PRINT_ID = B.ID
            left join PROCESS_FINANC C ON A.FIANAC_ID = C.PF_ID
  			where A.COMP_ID=#{compId} and A.BILL_STATUS!= 2
  			and A.FIANAC_ID in
  			<foreach close=")" collection="financIdArr" item="financId" open="(" separator=",">
  				#{financId}
  			</foreach>
  		</if>
  		<if test="earBestIdArr!=null">
   			select ${printWay} as printWay,A.RECEIPT_MONEY_USER as receiptUserId,A.RECEIPT_MONEY_DEPT as receiptDeptId,A.BILL_PRINT_WAY as printWay,
                A.BILL_NO as billNo,A.CONTRACT_NO as contractNo,A.BILL_TYPE as billType,A.FIANAC_PAYMENT as fianacPayment,
                A.PAY_CUSTOMER as payCustomer,A.PAY_MONEY as payMoney,C.PAYMENT_TYPE as paymentType,C.CUST_IDCARD as custIdcard,
                C.RECEIPT_NO as billNo,B.PRINT_COUNT as printCount,B.PRINT_COUNT_USER as printCountUser, C.BUILD_NAME buildName,
   			    C.PERFORMANCE_NAME performanceName, C.RECEIPT_TIME AS confirmTime,B.LAST_PRINT_TIME as lastPrintTime,C.PROPERTY_ADDRESS as propertyAddress,1 as dataType,C.CUST_ID_CARD_TYPE as custIdCardType
            from FUN_BILL A
            join FUN_BILL_PRINT B ON A.BILL_PRINT_ID = B.ID
            left join FUN_EARBEST_MONEY C ON A.EARBEST_ID = C.EARBEST_ID
   			where A.COMP_ID =#{compId} and A.BILL_STATUS!= 2
   			and A.EARBEST_ID in
  			<foreach close=")" collection="earBestIdArr" item="earBestId" open="(" separator=",">
  				#{earBestId}
  			</foreach>
  		</if>
       <if test="depositIdArr!=null">
         select ${printWay} as printWay,A.RECEIPT_MONEY_USER as receiptUserId,A.RECEIPT_MONEY_DEPT as receiptDeptId,A.BILL_PRINT_WAY as printWay,
         A.BILL_NO as billNo,A.CONTRACT_NO as contractNo,A.BILL_TYPE as billType,A.FIANAC_PAYMENT as fianacPayment,
         A.PAY_CUSTOMER as payCustomer,A.PAY_MONEY as payMoney,C.PAYMENT_TYPE as paymentType,C.CUST_IDCARD as custIdcard,
         C.BILL_CODE_NO as billNo,B.PRINT_COUNT as printCount,B.PRINT_COUNT_USER as printCountUser,
         C.CASE_TYPE as performanceName, C.RECEIPT_TIME AS confirmTime,B.LAST_PRINT_TIME as lastPrintTime,C.PROPERTY_ADDRESS as propertyAddress,2 as dataType,C.CUST_IDCARD as custIdcard,C.CUST_ID_CARD_TYPE as custIdCardType
         from FUN_BILL A
         join FUN_BILL_PRINT B ON A.BILL_PRINT_ID = B.ID
         left join FUN_DEPOSIT C ON A.DEPOSIT_ID = C.ID
         where A.COMP_ID =#{compId} and A.BILL_STATUS!= 2
         and A.DEPOSIT_ID in
         <foreach close=")" collection="depositIdArr" item="depositId" open="(" separator=",">
           #{depositId}
         </foreach>
       </if>
   </if>
  </select>
   <insert id="insertList">
  
    insert into FUN_BILL (COMP_ID, AREA_ID, REG_ID, 
      DEPT_ID, GR_ID, USER_ID, 
      CREATION_TIME, BILL_TYPE, BILL_WAY, 
      BILL_NO, PAY_CUSTOMER, FIANAC_PAYMENT, 
      PAY_MONEY, RECEIPT_MONEY_USER, RECEIPT_MONEY_DEPT, 
      BILL_STATUS, DEAL_ID, CONTRACT_NO, 
      RECEIPT_TIME, EARBEST_ID, FIANAC_ID, 
      INTELLIGENT_SEARCH, BILL_PRINT_ID, BILL_PRINT_WAY
      )
    values 
     <foreach collection="billList" index="index" item="item" separator=",">  
        (#{item.compId,jdbcType=INTEGER}, #{item.areaId,jdbcType=INTEGER}, #{item.regId,jdbcType=INTEGER}, 
      #{item.deptId,jdbcType=INTEGER}, #{item.grId,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, 
      #{item.creationTime,jdbcType=TIMESTAMP}, #{item.billType,jdbcType=TINYINT}, #{item.billWay,jdbcType=TINYINT}, 
      #{item.billNo,jdbcType=VARCHAR}, #{item.payCustomer,jdbcType=VARCHAR}, #{item.fianacPayment,jdbcType=VARCHAR}, 
      #{item.payMoney,jdbcType=NUMERIC}, #{item.receiptMoneyUser,jdbcType=INTEGER}, #{item.receiptMoneyDept,jdbcType=INTEGER}, 
      #{item.billStatus,jdbcType=TINYINT}, #{item.dealId,jdbcType=INTEGER}, #{item.contractNo,jdbcType=VARCHAR}, 
      #{item.receiptTime,jdbcType=TIMESTAMP}, #{item.earbestId,jdbcType=INTEGER}, #{item.fianacId,jdbcType=INTEGER}, 
      #{item.intelligentSearch,jdbcType=VARCHAR}, #{item.billPrintId,jdbcType=INTEGER}, #{item.billPrintWay,jdbcType=TINYINT}
      )
    </foreach>  
  </insert>
   <update id="delBillPhoto">
    update FUN_BILL
    set 
      BILL_PHOTO = null
    where COMP_ID = #{compId}
    <if test="earbestId!=null">
    	and EARBEST_ID = #{earbestId}
    </if>
    <if test="financId!=null">
    	and FIANAC_ID = #{financId}
    </if>
     <if test="depositId!=null">
       and DEPOSIT_ID = #{depositId}
     </if>
    and BILL_STATUS!=2
  </update>
  <select id="selectNotEffctiveBillNoList" resultType="map">
    select BILL_NO　as billNo,sum(iif(BILL_STATUS!=2,1,0)) as effctiveCount,sum(iif(BILL_STATUS=2,1,0)) as notEffctiveCount from FUN_BILL where
    COMP_ID = #{compId} AND BILL_WAY!=2 group by BILL_NO having sum(iif(BILL_STATUS!=2,1,0))=0 and sum(iif(BILL_STATUS=2,1,0))&gt;0
  </select>
	<update id="DelByEarbestId" parameterType="com.myfun.repository.erpdb.po.ErpFunBill">
		update FUN_BILL
		set BILL_STATUS=2
		where EARBEST_ID=#{earbestId}
	</update>
  <select id="getBillList" resultMap="BaseResultMap">
    select a.* from FUN_BILL a
    join fun_users b on a.RECEIPT_MONEY_USER = b.user_id
    where a.comp_id=#{paramMap.compId} and RECEIPT_TIME between #{paramMap.startTime} and #{paramMap.endTime}
    <if test="null != paramMap.deptId">
        and RECEIPT_MONEY_DEPT = #{paramMap.deptId}
    </if>
    <if test="null != paramMap.userId and '' != paramMap.userId ">
        and RECEIPT_MONEY_USER = #{paramMap.userId}
    </if>
    <if test="null != paramMap.billType and '' != paramMap.billType ">
        and BILL_TYPE = #{paramMap.billType}
    </if>
    <if test="null != paramMap.billStatus and '' != paramMap.billStatus">
        and BILL_STATUS = #{paramMap.billStatus}
    </if>
    <if test="null != paramMap.billWay and '' != paramMap.billWay">
        and BILL_WAY = #{paramMap.billWay}
    </if>
    <if test="paramMap.isNewOrganization == 0 ">
	    <if test="null != paramMap.grId">
	        and b.GR_ID = #{paramMap.grId}
	    </if>
   	</if>
    <if test="paramMap.isNewOrganization == 1 and paramMap.organizationId != null and paramMap.organizationId != 0">
		and B.TISSUE_LINE LIKE '%:${paramMap.organizationId}:%'
    </if>
    <if test="null != paramMap.intelligentSearch and '' != paramMap.intelligentSearch">
        and INTELLIGENT_SEARCH like  '%${paramMap.intelligentSearch}%'
    </if>
    order by a.CREATION_TIME desc
  </select>
	
	<update id="updateBillStatusByFianacId">
		update FUN_BILL set BILL_STATUS = #{auditStatus}
		where COMP_ID = #{compId} and BILL_STATUS !=2 and FIANAC_ID in
		<foreach close=")" collection="pfIdArr" item="fianacId" open="(" separator=",">
			#{fianacId}
		</foreach>
	</update>
	
	<update id="updateBillStatusByIds">
		update FUN_BILL set BILL_STATUS = 2
		where COMP_ID = #{compId} and FIANAC_ID in
		<foreach close=")" collection="fianacIds" item="fianacId" open="(" separator=",">
			#{fianacId}
		</foreach>
	</update>
	
	<select id="countFunBill" resultType="java.lang.Integer">
		select count (*) from FUN_BILL
		where COMP_ID = #{compId} and BILL_NO = #{codeNo} and BILL_STATUS != 2
	</select>
	
	<select id="countFunBillByCondition" resultType="java.lang.Integer">
		select count (*) from FUN_BILL
		where COMP_ID = #{compId} and BILL_NO = #{billNo}
		<if test="earbestDealBillRepeat==1">
			<choose>
				<when test="billType==0">
					and BILL_TYPE = #{billType}
				</when>
				<otherwise>
					and BILL_TYPE != 0
				</otherwise>
			</choose>
		</if>
		<if test="invalidBillNoCanUseAgain==1">
			and BILL_STATUS != 2
		</if>
	</select>
 
    <select id="getRecordByEarnestId" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from FUN_BILL WHERE EARBEST_ID = #{earbestId} and COMP_ID =#{compId}
    </select>
    <update id="updateBillDealInfoByEarbestIds">
      UPDATE FUN_BILL SET CONTRACT_NO = #{contractNo},DEAL_ID = #{dealId} where COMP_ID =#{compId} and EARBEST_ID in
      <foreach close=")" collection="earbestIds" item="id" open="(" separator=",">
        #{id}
      </foreach>
    </update>
 

	<update id="updateBillDealInfoByIds">
		update FUN_BILL set CONTRACT_NO = #{dealNo},DEAL_ID=#{dealId}
		where COMP_ID = #{compId} and DEPOSIT_ID in
		<foreach close=")" collection="depositIds" item="depositId" open="(" separator=",">
			#{depositId}
		</foreach>
	</update>

  <update id="updateDepositBillNo">
    update FUN_BILL set BILL_NO = #{billCodeNo} where COMP_ID = #{compId} and DEPOSIT_ID = #{depositId}
  </update>
</mapper>