<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunCompPermissionMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunCompPermission" >
    <!--@mbggenerated-->
    <id column="AUTO_ID" property="autoId" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="TEMPLATE_ID" property="templateId" jdbcType="INTEGER" />
    <result column="OPER_ID" property="operId" jdbcType="VARCHAR" />
    <result column="OPER_TYPE" property="operType" jdbcType="INTEGER" />
    <result column="SOURCE_COMP_ID" property="sourceCompId" jdbcType="INTEGER" />
    <result column="AREA_ID" property="areaId" jdbcType="INTEGER" />
    <result column="REG_ID" property="regId" jdbcType="INTEGER" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="GROUP_ID" property="groupId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    AUTO_ID, COMP_ID, TEMPLATE_ID, OPER_ID, OPER_TYPE, SOURCE_COMP_ID, AREA_ID, REG_ID, 
    DEPT_ID, GROUP_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpFunCompPermissionExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_COMP_PERMISSION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_COMP_PERMISSION
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_COMP_PERMISSION
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunCompPermissionExample" >
    <!--@mbggenerated-->
    delete from FUN_COMP_PERMISSION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunCompPermission" useGeneratedKeys="true" keyProperty="autoId" >
    <!--@mbggenerated-->
    insert into FUN_COMP_PERMISSION (COMP_ID, TEMPLATE_ID, OPER_ID, 
      OPER_TYPE, SOURCE_COMP_ID, AREA_ID, 
      REG_ID, DEPT_ID, GROUP_ID
      )
    values (#{compId,jdbcType=INTEGER}, #{templateId,jdbcType=INTEGER}, #{operId,jdbcType=VARCHAR}, 
      #{operType,jdbcType=INTEGER}, #{sourceCompId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{regId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunCompPermission" useGeneratedKeys="true" keyProperty="autoId" >
    <!--@mbggenerated-->
    insert into FUN_COMP_PERMISSION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="templateId != null" >
        TEMPLATE_ID,
      </if>
      <if test="operId != null" >
        OPER_ID,
      </if>
      <if test="operType != null" >
        OPER_TYPE,
      </if>
      <if test="sourceCompId != null" >
        SOURCE_COMP_ID,
      </if>
      <if test="areaId != null" >
        AREA_ID,
      </if>
      <if test="regId != null" >
        REG_ID,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="groupId != null" >
        GROUP_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="templateId != null" >
        #{templateId,jdbcType=INTEGER},
      </if>
      <if test="operId != null" >
        #{operId,jdbcType=VARCHAR},
      </if>
      <if test="operType != null" >
        #{operType,jdbcType=INTEGER},
      </if>
      <if test="sourceCompId != null" >
        #{sourceCompId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null" >
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunCompPermissionExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from FUN_COMP_PERMISSION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_COMP_PERMISSION
    <set >
      <if test="record.autoId != null" >
        AUTO_ID = #{record.autoId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.templateId != null" >
        TEMPLATE_ID = #{record.templateId,jdbcType=INTEGER},
      </if>
      <if test="record.operId != null" >
        OPER_ID = #{record.operId,jdbcType=VARCHAR},
      </if>
      <if test="record.operType != null" >
        OPER_TYPE = #{record.operType,jdbcType=INTEGER},
      </if>
      <if test="record.sourceCompId != null" >
        SOURCE_COMP_ID = #{record.sourceCompId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null" >
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null" >
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null" >
        GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_COMP_PERMISSION
    set AUTO_ID = #{record.autoId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      TEMPLATE_ID = #{record.templateId,jdbcType=INTEGER},
      OPER_ID = #{record.operId,jdbcType=VARCHAR},
      OPER_TYPE = #{record.operType,jdbcType=INTEGER},
      SOURCE_COMP_ID = #{record.sourceCompId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GROUP_ID = #{record.groupId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunCompPermission" >
    <!--@mbggenerated-->
    update FUN_COMP_PERMISSION
    <set >
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="templateId != null" >
        TEMPLATE_ID = #{templateId,jdbcType=INTEGER},
      </if>
      <if test="operId != null" >
        OPER_ID = #{operId,jdbcType=VARCHAR},
      </if>
      <if test="operType != null" >
        OPER_TYPE = #{operType,jdbcType=INTEGER},
      </if>
      <if test="sourceCompId != null" >
        SOURCE_COMP_ID = #{sourceCompId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null" >
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        GROUP_ID = #{groupId,jdbcType=INTEGER},
      </if>
    </set>
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunCompPermission" >
    <!--@mbggenerated-->
    update FUN_COMP_PERMISSION
    set COMP_ID = #{compId,jdbcType=INTEGER},
      TEMPLATE_ID = #{templateId,jdbcType=INTEGER},
      OPER_ID = #{operId,jdbcType=VARCHAR},
      OPER_TYPE = #{operType,jdbcType=INTEGER},
      SOURCE_COMP_ID = #{sourceCompId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GROUP_ID = #{groupId,jdbcType=INTEGER}
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </update>
  
  <select id="getCheckedCommonMapOpers" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from FUN_COMP_PERMISSION
		where COMP_ID = #{compId} and ${column} = #{columnValue} 
		and TEMPLATE_ID= #{templateId} and OPER_TYPE=#{operType}
	</select>
	
	
	<delete id="deleteByDynamincId2">
		delete FUN_COMP_PERMISSION where COMP_ID = #{compId} and TEMPLATE_ID= #{templateId}
		<if test="null != operIds">
			 AND OPER_ID IN
			 <foreach collection="operIds" item="operId" close=")" separator="," open="(">
			     #{operId}
			 </foreach>
		</if>
		<choose>
			<when test="'AREA_ID' == columnName">
				  and ( DEPT_ID in (select DEPT_ID from FUN_DEPTS where AREA_ID = #{columnValue} and COMP_ID = #{compId})
				  or REG_ID in (select REG_ID from FUN_REGION where AREA_ID = #{columnValue} and COMP_ID = #{compId}))
			</when>
			<when test="'REG_ID' == columnName">
			  	and DEPT_ID in (select DEPT_ID from FUN_DEPTS where REG_ID = #{columnValue} and COMP_ID = #{compId})
			</when>
			<when test="'DEPT_ID' == columnName">
			  	and GROUP_ID in (select GR_ID from FUN_DEPTSGROUP where DEPT_ID =#{columnValue} and COMP_ID = #{compId})
			</when>
			<when test="'GROUP_ID' == columnName">
			  	and GROUP_ID = #{columnValue}
			</when>
			<when test="'SOURCE_COMP_ID' == columnName">
				  and ( DEPT_ID in (select DEPT_ID from FUN_DEPTS where COMP_ID = #{compId})
				    or REG_ID in (select REG_ID from FUN_REGION where COMP_ID = #{compId})
				    or AREA_ID in (select AREA_ID from FUN_AREA where COMP_ID = #{compId})
				  )
			</when>
		</choose>
  </delete>
  
  <delete id="deleteByDynamincId">
    DELETE FUN_COMP_PERMISSION WHERE COMP_ID=#{compId} AND TEMPLATE_ID= #{templateId} AND ${columnName} =#{columnValue} and OPER_ID in
    <foreach collection="operIds" separator="," open="(" close=")" item="operId">
      #{operId}
    </foreach>
  </delete>
  
  <insert id="insertByDynamicId">
    insert into FUN_COMP_PERMISSION(COMP_ID,${columnName},TEMPLATE_ID,OPER_ID,OPER_TYPE)
    values(#{compId},#{columnValue},#{templateId},#{operId},#{operType})
  </insert>
  
  <select id="parseQueryColumnForUserOpers" resultMap="BaseResultMap">
		select COMP_ID,GROUP_ID,DEPT_ID,REG_ID,AREA_ID,SOURCE_COMP_ID
		from FUN_COMP_PERMISSION 
		where COMP_ID = #{compId} and TEMPLATE_ID= #{templateId} 
		group by GROUP_ID,DEPT_ID,REG_ID,AREA_ID,SOURCE_COMP_ID,COMP_ID
	</select>
	
	<select id="getTemplateOperList" resultType="com.myfun.repository.erpdb.dto.ErpFunOpersDto">
	select  b.OPER_ID operId,a.OPER_TYPE operType ,b.OPER_TYPE isAdvance, OPER_NAME operName, ROLE_TYPE roleType, SEQ_NO seqNo, ROLE_DESC roleDesc, OPER_RANGE_LEVEL_SEQ operRangeLevelSeq,
	    OPER_RANGE_TYPE operRangeType, OPER_DESC operDesc
	    FROM FUN_OPERS a
	    JOIN FUN_COMP_PERMISSION b ON a.OPER_ID = b.OPER_ID
	    WHERE  B.COMP_ID =#{compId} AND b.TEMPLATE_ID=  #{templateId}
	    ORDER BY A.SEQ_NO
	</select>
</mapper>

