<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunProfitDetailMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunProfitDetail">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="SIGN_MONTH" jdbcType="VARCHAR" property="signMonth" />
    <result column="INCOME_MONTH" jdbcType="VARCHAR" property="incomeMonth" />
    <result column="SETTLEMENT_MONTH" jdbcType="VARCHAR" property="settlementMonth" />
    <result column="PLANNED_DISTRIBUTION" jdbcType="NUMERIC" property="plannedDistribution" />
    <result column="DISTRIBUTION_PERCENT" jdbcType="NUMERIC" property="distributionPercent" />
    <result column="INCOME_AMOUNT" jdbcType="NUMERIC" property="incomeAmount" />
    <result column="PERFORMANCE_AMOUNT" jdbcType="NUMERIC" property="performanceAmount" />
    <result column="DIVIDED_AMOUNT" jdbcType="NUMERIC" property="dividedAmount" />
    <result column="GRANT_FLAG" jdbcType="TINYINT" property="grantFlag" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="PERFORMANCE_ID" jdbcType="INTEGER" property="performanceId" />
    <result column="PERFORMANCE_NAME" jdbcType="VARCHAR" property="performanceName" />
    <result column="INCOME_TIME" jdbcType="TIMESTAMP" property="incomeTime" />
    <result column="ISSUED_AMOUNT" jdbcType="NUMERIC" property="issuedAmount" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="PF_ID" jdbcType="INTEGER" property="pfId" />
    <result column="NEED_INCOME_AMOUNT" jdbcType="NUMERIC" property="needIncomeAmount" />
    <result column="DEL_FLAG" jdbcType="TINYINT" property="delFlag" />
    <result column="IS_ABNORMAL" jdbcType="TINYINT" property="isAbnormal" />
    <result column="ABNORMAL_MONTH" jdbcType="VARCHAR" property="abnormalMonth" />
    <result column="IS_CALCULATE" jdbcType="TINYINT" property="isCalculate" />
    <result column="DEL_DATA" jdbcType="TIMESTAMP" property="delData" />
    <result column="ASSESSMENT_MONTH" jdbcType="VARCHAR" property="assessmentMonth" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, DEAL_ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, SIGN_MONTH, INCOME_MONTH, 
    SETTLEMENT_MONTH, PLANNED_DISTRIBUTION, DISTRIBUTION_PERCENT, INCOME_AMOUNT, PERFORMANCE_AMOUNT, 
    DIVIDED_AMOUNT, GRANT_FLAG, USER_ID, PERFORMANCE_ID, PERFORMANCE_NAME, INCOME_TIME, 
    ISSUED_AMOUNT, CREATE_TIME, PF_ID, NEED_INCOME_AMOUNT, DEL_FLAG, IS_ABNORMAL, ABNORMAL_MONTH, 
    IS_CALCULATE, DEL_DATA, ASSESSMENT_MONTH
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitDetailExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_PROFIT_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_PROFIT_DETAIL
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_PROFIT_DETAIL
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitDetailExample">
    <!--@mbggenerated-->
    delete from FUN_PROFIT_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitDetail">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_PROFIT_DETAIL (DEAL_ID, COMP_ID, AREA_ID, 
      REG_ID, DEPT_ID, GR_ID, 
      SIGN_MONTH, INCOME_MONTH, SETTLEMENT_MONTH, 
      PLANNED_DISTRIBUTION, DISTRIBUTION_PERCENT, 
      INCOME_AMOUNT, PERFORMANCE_AMOUNT, DIVIDED_AMOUNT, 
      GRANT_FLAG, USER_ID, PERFORMANCE_ID, 
      PERFORMANCE_NAME, INCOME_TIME, ISSUED_AMOUNT, 
      CREATE_TIME, PF_ID, NEED_INCOME_AMOUNT, 
      DEL_FLAG, IS_ABNORMAL, ABNORMAL_MONTH, 
      IS_CALCULATE, DEL_DATA, ASSESSMENT_MONTH
      )
    values (#{dealId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{regId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, 
      #{signMonth,jdbcType=VARCHAR}, #{incomeMonth,jdbcType=VARCHAR}, #{settlementMonth,jdbcType=VARCHAR}, 
      #{plannedDistribution,jdbcType=NUMERIC}, #{distributionPercent,jdbcType=NUMERIC}, 
      #{incomeAmount,jdbcType=NUMERIC}, #{performanceAmount,jdbcType=NUMERIC}, #{dividedAmount,jdbcType=NUMERIC}, 
      #{grantFlag,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, #{performanceId,jdbcType=INTEGER}, 
      #{performanceName,jdbcType=VARCHAR}, #{incomeTime,jdbcType=TIMESTAMP}, #{issuedAmount,jdbcType=NUMERIC}, 
      #{createTime,jdbcType=TIMESTAMP}, #{pfId,jdbcType=INTEGER}, #{needIncomeAmount,jdbcType=NUMERIC}, 
      #{delFlag,jdbcType=TINYINT}, #{isAbnormal,jdbcType=TINYINT}, #{abnormalMonth,jdbcType=VARCHAR}, 
      #{isCalculate,jdbcType=TINYINT}, #{delData,jdbcType=TIMESTAMP}, #{assessmentMonth,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitDetail">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_PROFIT_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dealId != null">
        DEAL_ID,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="signMonth != null">
        SIGN_MONTH,
      </if>
      <if test="incomeMonth != null">
        INCOME_MONTH,
      </if>
      <if test="settlementMonth != null">
        SETTLEMENT_MONTH,
      </if>
      <if test="plannedDistribution != null">
        PLANNED_DISTRIBUTION,
      </if>
      <if test="distributionPercent != null">
        DISTRIBUTION_PERCENT,
      </if>
      <if test="incomeAmount != null">
        INCOME_AMOUNT,
      </if>
      <if test="performanceAmount != null">
        PERFORMANCE_AMOUNT,
      </if>
      <if test="dividedAmount != null">
        DIVIDED_AMOUNT,
      </if>
      <if test="grantFlag != null">
        GRANT_FLAG,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="performanceId != null">
        PERFORMANCE_ID,
      </if>
      <if test="performanceName != null">
        PERFORMANCE_NAME,
      </if>
      <if test="incomeTime != null">
        INCOME_TIME,
      </if>
      <if test="issuedAmount != null">
        ISSUED_AMOUNT,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="pfId != null">
        PF_ID,
      </if>
      <if test="needIncomeAmount != null">
        NEED_INCOME_AMOUNT,
      </if>
      <if test="delFlag != null">
        DEL_FLAG,
      </if>
      <if test="isAbnormal != null">
        IS_ABNORMAL,
      </if>
      <if test="abnormalMonth != null">
        ABNORMAL_MONTH,
      </if>
      <if test="isCalculate != null">
        IS_CALCULATE,
      </if>
      <if test="delData != null">
        DEL_DATA,
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dealId != null">
        #{dealId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="signMonth != null">
        #{signMonth,jdbcType=VARCHAR},
      </if>
      <if test="incomeMonth != null">
        #{incomeMonth,jdbcType=VARCHAR},
      </if>
      <if test="settlementMonth != null">
        #{settlementMonth,jdbcType=VARCHAR},
      </if>
      <if test="plannedDistribution != null">
        #{plannedDistribution,jdbcType=NUMERIC},
      </if>
      <if test="distributionPercent != null">
        #{distributionPercent,jdbcType=NUMERIC},
      </if>
      <if test="incomeAmount != null">
        #{incomeAmount,jdbcType=NUMERIC},
      </if>
      <if test="performanceAmount != null">
        #{performanceAmount,jdbcType=NUMERIC},
      </if>
      <if test="dividedAmount != null">
        #{dividedAmount,jdbcType=NUMERIC},
      </if>
      <if test="grantFlag != null">
        #{grantFlag,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="performanceId != null">
        #{performanceId,jdbcType=INTEGER},
      </if>
      <if test="performanceName != null">
        #{performanceName,jdbcType=VARCHAR},
      </if>
      <if test="incomeTime != null">
        #{incomeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="issuedAmount != null">
        #{issuedAmount,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pfId != null">
        #{pfId,jdbcType=INTEGER},
      </if>
      <if test="needIncomeAmount != null">
        #{needIncomeAmount,jdbcType=NUMERIC},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="isAbnormal != null">
        #{isAbnormal,jdbcType=TINYINT},
      </if>
      <if test="abnormalMonth != null">
        #{abnormalMonth,jdbcType=VARCHAR},
      </if>
      <if test="isCalculate != null">
        #{isCalculate,jdbcType=TINYINT},
      </if>
      <if test="delData != null">
        #{delData,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentMonth != null">
        #{assessmentMonth,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitDetailExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_PROFIT_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROFIT_DETAIL
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dealId != null">
        DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.signMonth != null">
        SIGN_MONTH = #{record.signMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.incomeMonth != null">
        INCOME_MONTH = #{record.incomeMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.settlementMonth != null">
        SETTLEMENT_MONTH = #{record.settlementMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.plannedDistribution != null">
        PLANNED_DISTRIBUTION = #{record.plannedDistribution,jdbcType=NUMERIC},
      </if>
      <if test="record.distributionPercent != null">
        DISTRIBUTION_PERCENT = #{record.distributionPercent,jdbcType=NUMERIC},
      </if>
      <if test="record.incomeAmount != null">
        INCOME_AMOUNT = #{record.incomeAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.performanceAmount != null">
        PERFORMANCE_AMOUNT = #{record.performanceAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.dividedAmount != null">
        DIVIDED_AMOUNT = #{record.dividedAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.grantFlag != null">
        GRANT_FLAG = #{record.grantFlag,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.performanceId != null">
        PERFORMANCE_ID = #{record.performanceId,jdbcType=INTEGER},
      </if>
      <if test="record.performanceName != null">
        PERFORMANCE_NAME = #{record.performanceName,jdbcType=VARCHAR},
      </if>
      <if test="record.incomeTime != null">
        INCOME_TIME = #{record.incomeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.issuedAmount != null">
        ISSUED_AMOUNT = #{record.issuedAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pfId != null">
        PF_ID = #{record.pfId,jdbcType=INTEGER},
      </if>
      <if test="record.needIncomeAmount != null">
        NEED_INCOME_AMOUNT = #{record.needIncomeAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.delFlag != null">
        DEL_FLAG = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.isAbnormal != null">
        IS_ABNORMAL = #{record.isAbnormal,jdbcType=TINYINT},
      </if>
      <if test="record.abnormalMonth != null">
        ABNORMAL_MONTH = #{record.abnormalMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.isCalculate != null">
        IS_CALCULATE = #{record.isCalculate,jdbcType=TINYINT},
      </if>
      <if test="record.delData != null">
        DEL_DATA = #{record.delData,jdbcType=TIMESTAMP},
      </if>
      <if test="record.assessmentMonth != null">
        ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROFIT_DETAIL
    set ID = #{record.id,jdbcType=INTEGER},
      DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      SIGN_MONTH = #{record.signMonth,jdbcType=VARCHAR},
      INCOME_MONTH = #{record.incomeMonth,jdbcType=VARCHAR},
      SETTLEMENT_MONTH = #{record.settlementMonth,jdbcType=VARCHAR},
      PLANNED_DISTRIBUTION = #{record.plannedDistribution,jdbcType=NUMERIC},
      DISTRIBUTION_PERCENT = #{record.distributionPercent,jdbcType=NUMERIC},
      INCOME_AMOUNT = #{record.incomeAmount,jdbcType=NUMERIC},
      PERFORMANCE_AMOUNT = #{record.performanceAmount,jdbcType=NUMERIC},
      DIVIDED_AMOUNT = #{record.dividedAmount,jdbcType=NUMERIC},
      GRANT_FLAG = #{record.grantFlag,jdbcType=TINYINT},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      PERFORMANCE_ID = #{record.performanceId,jdbcType=INTEGER},
      PERFORMANCE_NAME = #{record.performanceName,jdbcType=VARCHAR},
      INCOME_TIME = #{record.incomeTime,jdbcType=TIMESTAMP},
      ISSUED_AMOUNT = #{record.issuedAmount,jdbcType=NUMERIC},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      PF_ID = #{record.pfId,jdbcType=INTEGER},
      NEED_INCOME_AMOUNT = #{record.needIncomeAmount,jdbcType=NUMERIC},
      DEL_FLAG = #{record.delFlag,jdbcType=TINYINT},
      IS_ABNORMAL = #{record.isAbnormal,jdbcType=TINYINT},
      ABNORMAL_MONTH = #{record.abnormalMonth,jdbcType=VARCHAR},
      IS_CALCULATE = #{record.isCalculate,jdbcType=TINYINT},
      DEL_DATA = #{record.delData,jdbcType=TIMESTAMP},
      ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitDetail">
    <!--@mbggenerated-->
    update FUN_PROFIT_DETAIL
    <set>
      <if test="dealId != null">
        DEAL_ID = #{dealId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="signMonth != null">
        SIGN_MONTH = #{signMonth,jdbcType=VARCHAR},
      </if>
      <if test="incomeMonth != null">
        INCOME_MONTH = #{incomeMonth,jdbcType=VARCHAR},
      </if>
      <if test="settlementMonth != null">
        SETTLEMENT_MONTH = #{settlementMonth,jdbcType=VARCHAR},
      </if>
      <if test="plannedDistribution != null">
        PLANNED_DISTRIBUTION = #{plannedDistribution,jdbcType=NUMERIC},
      </if>
      <if test="distributionPercent != null">
        DISTRIBUTION_PERCENT = #{distributionPercent,jdbcType=NUMERIC},
      </if>
      <if test="incomeAmount != null">
        INCOME_AMOUNT = #{incomeAmount,jdbcType=NUMERIC},
      </if>
      <if test="performanceAmount != null">
        PERFORMANCE_AMOUNT = #{performanceAmount,jdbcType=NUMERIC},
      </if>
      <if test="dividedAmount != null">
        DIVIDED_AMOUNT = #{dividedAmount,jdbcType=NUMERIC},
      </if>
      <if test="grantFlag != null">
        GRANT_FLAG = #{grantFlag,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="performanceId != null">
        PERFORMANCE_ID = #{performanceId,jdbcType=INTEGER},
      </if>
      <if test="performanceName != null">
        PERFORMANCE_NAME = #{performanceName,jdbcType=VARCHAR},
      </if>
      <if test="incomeTime != null">
        INCOME_TIME = #{incomeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="issuedAmount != null">
        ISSUED_AMOUNT = #{issuedAmount,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pfId != null">
        PF_ID = #{pfId,jdbcType=INTEGER},
      </if>
      <if test="needIncomeAmount != null">
        NEED_INCOME_AMOUNT = #{needIncomeAmount,jdbcType=NUMERIC},
      </if>
      <if test="delFlag != null">
        DEL_FLAG = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="isAbnormal != null">
        IS_ABNORMAL = #{isAbnormal,jdbcType=TINYINT},
      </if>
      <if test="abnormalMonth != null">
        ABNORMAL_MONTH = #{abnormalMonth,jdbcType=VARCHAR},
      </if>
      <if test="isCalculate != null">
        IS_CALCULATE = #{isCalculate,jdbcType=TINYINT},
      </if>
      <if test="delData != null">
        DEL_DATA = #{delData,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitDetail">
    <!--@mbggenerated-->
    update FUN_PROFIT_DETAIL
    set DEAL_ID = #{dealId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      SIGN_MONTH = #{signMonth,jdbcType=VARCHAR},
      INCOME_MONTH = #{incomeMonth,jdbcType=VARCHAR},
      SETTLEMENT_MONTH = #{settlementMonth,jdbcType=VARCHAR},
      PLANNED_DISTRIBUTION = #{plannedDistribution,jdbcType=NUMERIC},
      DISTRIBUTION_PERCENT = #{distributionPercent,jdbcType=NUMERIC},
      INCOME_AMOUNT = #{incomeAmount,jdbcType=NUMERIC},
      PERFORMANCE_AMOUNT = #{performanceAmount,jdbcType=NUMERIC},
      DIVIDED_AMOUNT = #{dividedAmount,jdbcType=NUMERIC},
      GRANT_FLAG = #{grantFlag,jdbcType=TINYINT},
      USER_ID = #{userId,jdbcType=INTEGER},
      PERFORMANCE_ID = #{performanceId,jdbcType=INTEGER},
      PERFORMANCE_NAME = #{performanceName,jdbcType=VARCHAR},
      INCOME_TIME = #{incomeTime,jdbcType=TIMESTAMP},
      ISSUED_AMOUNT = #{issuedAmount,jdbcType=NUMERIC},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      PF_ID = #{pfId,jdbcType=INTEGER},
      NEED_INCOME_AMOUNT = #{needIncomeAmount,jdbcType=NUMERIC},
      DEL_FLAG = #{delFlag,jdbcType=TINYINT},
      IS_ABNORMAL = #{isAbnormal,jdbcType=TINYINT},
      ABNORMAL_MONTH = #{abnormalMonth,jdbcType=VARCHAR},
      IS_CALCULATE = #{isCalculate,jdbcType=TINYINT},
      DEL_DATA = #{delData,jdbcType=TIMESTAMP},
      ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="extBaseResultMap" type="com.myfun.repository.erpdb.dto.ErpFunDealDto">
      <result column="CONTRACT_NO" jdbcType="VARCHAR" property="contractNo" />
      <result column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
      <result column="SELL_ADDRESS" jdbcType="VARCHAR" property="sellAddress" />
      <result column="SELL_DEAL_MONEY" jdbcType="NUMERIC" property="sellDealMoney" />
      <result column="DEAL_STATUS" jdbcType="TINYINT" property="dealStatus" />
      <result column="PERFORMANCE_ID" jdbcType="INTEGER" property="performanceId" />
      <result column="PERFORMANCE_NAME" jdbcType="VARCHAR" property="performanceName" />
      <result column="INCOME_AMOUNT" jdbcType="NUMERIC" property="incomeAmount" />
      <result column="TOTAL_REAL_INCOME" jdbcType="NUMERIC" property="totalRealIncome" />
      <result column="PERFORMANCE_AMOUNT" jdbcType="NUMERIC" property="performanceAmount" />
      <result column="DEAL_VERIFY_TIME" jdbcType="VARCHAR" property="dealVerifyTime" />
      <result column="SETTLEMENT_MONTH" jdbcType="VARCHAR" property="settlementMonth" />
      <result column="INCOME_MONTH" jdbcType="VARCHAR" property="incomeMonth" />
      <result column="SIGN_MONTH" jdbcType="VARCHAR" property="signMonth" />
      <result column="INCOME_TIME" jdbcType="TIMESTAMP" property="incomeTime" />
      <result column="DIVIDED_AMOUNT" jdbcType="NUMERIC" property="dividedAmount" />
      <result column="TOTAL_NEED_INCOME" jdbcType="NUMERIC" property="totalNeedIncome" />
      <result column="DISTRIBUTION_PERCENT" jdbcType="NUMERIC" property="distributionPercent" />
      <result column="DEAL_TYPE" jdbcType="TINYINT" property="dealType" />
      <result column="SIGN_DATE" jdbcType="TIMESTAMP" property="signDate" />
      <result column="PAY_AMOUNT" jdbcType="NUMERIC" property="payAmount" />
      <result column="PLANNED_DISTRIBUTION" jdbcType="NUMERIC" property="plannedDistribution" />
      <result column="COLLENT_STATUS" jdbcType="TINYINT" property="collentStatus" />
      <result column="SIGN_USER_ID" jdbcType="INTEGER" property="signUserId" />
      <result column="SIGN_USER_DEPT_ID" jdbcType="INTEGER" property="signUserDeptId" />
      <result column="USER_ID" jdbcType="INTEGER" property="userId" />
      <result column="AUDIT_USER" jdbcType="VARCHAR" property="auditUser" />
      <result column="ISBYHAND" jdbcType="BIT" property="isbyhand" />
  </resultMap>

  <select id="getProfitList" resultMap="extBaseResultMap">
    select iif(TOTAL_NEED_INCOME = TOTAL_REAL_INCOME, 1, 0)  as collentStatus ,c.PAY_AMOUNT,a.TOTAL_NEED_INCOME,a.CONTRACT_NO,a.DEAL_ID,SELL_ADDRESS,SELL_DEAL_MONEY,DEAL_STATUS,PERFORMANCE_ID,PERFORMANCE_NAME,
      INCOME_AMOUNT,TOTAL_REAL_INCOME,PERFORMANCE_AMOUNT,DEAL_VERIFY_TIME,INCOME_TIME, PLANNED_DISTRIBUTION,a.TOTAL_NEED_INCOME,a.TOTAL_REAL_INCOME,
     DISTRIBUTION_PERCENT,a.DEAL_TYPE,SIGN_USER_ID,SIGN_USER_DEPT_ID,SIGN_DATE,USER_ID,c.AUDIT_USER,a.ISBYHAND
    FROM fun_deal a
    JOIN FUN_PROFIT_DETAIL b on a.deal_id=b.DEAL_ID
    JOIN PROCESS_FINANC c on c.PF_ID = b.PF_ID
    <where>
        <if test="null != param.compId">
          and a.COMP_ID=#{param.compId} and DEL_FLAG=0
        </if>
        <if test="null != param.dealStatus">
          and a.DEAL_STATUS=#{param.dealStatus}
        </if>
        <if test="param.isNewOrganization == false">
	        <if test="null != param.areaId">
	          and b.AREA_ID=#{param.areaId}
	        </if>
	        <if test="null != param.regId">
	          and b.REG_ID=#{param.regId}
	        </if>
	        <if test="null != param.deptId">
	          and b.DEPT_ID=#{param.deptId}
	        </if>
	        <if test="null != param.grId">
	          and b.GR_ID=#{param.grId}
	        </if>
        </if>
	    <if test="param.isNewOrganization == true and param.organizationId != null and param.organizationId != 0">
			and B.ORGANIZATION_PATH LIKE '%:${param.organizationId}:%'
	    </if>
        <if test="null != param.userId">
          and b.USER_ID=#{param.userId}
        </if>
        <if test="null != param.dealId">
          and a.DEAL_ID=#{param.dealId}
        </if>
        <if test="null != param.timeType">
          <choose>
            <when test="1 == param.timeType">
              and b.SETTLEMENT_MONTH in <foreach collection="assessMentMonthSet" separator="," open="(" close=")" item="assessmentMonth">
              #{assessmentMonth}
            </foreach>
            </when>
            <when test="2 == param.timeType">
              and b.SIGN_MONTH in <foreach collection="assessMentMonthSet" separator="," open="(" close=")" item="assessmentMonth">
              #{assessmentMonth}
            </foreach>
            </when>
            <when test="3 == param.timeType">
              and b.INCOME_MONTH in <foreach collection="assessMentMonthSet" separator="," open="(" close=")" item="assessmentMonth">
              #{assessmentMonth}
            </foreach>
            </when>
          </choose>
        </if>
      order by a.deal_id DESC
    </where>
  </select>
  <select id="getProfitCount" resultType="java.lang.Long">
    select count(1)
    FROM fun_deal a
    JOIN FUN_PROFIT_DETAIL b on a.deal_id=b.DEAL_ID
    JOIN PROCESS_FINANC c on c.PF_ID = b.PF_ID
    <where>
        <if test="null != param.compId">
          and a.COMP_ID=#{param.compId} and DEL_FLAG=0
        </if>
        <if test="null != param.dealStatus">
          and a.DEAL_STATUS=#{param.dealStatus}
        </if>
        <if test="param.isNewOrganization == false">
	        <if test="null != param.areaId">
	          and b.AREA_ID=#{param.areaId}
	        </if>
	        <if test="null != param.regId">
	          and b.REG_ID=#{param.regId}
	        </if>
	        <if test="null != param.deptId">
	          and b.DEPT_ID=#{param.deptId}
	        </if>
	        <if test="null != param.grId">
	          and b.GR_ID=#{param.grId}
	        </if>
        </if>
	    <if test="param.isNewOrganization == true and param.organizationId != null and param.organizationId != 0">
			and B.ORGANIZATION_PATH LIKE '%:${param.organizationId}:%'
	    </if>
        <if test="null != param.userId">
          and b.USER_ID=#{param.userId}
        </if>
        <if test="null != param.dealId">
          and a.DEAL_ID=#{param.dealId}
        </if>
        <if test="null != param.timeType">
            <choose>
                <when test="1 == param.timeType">
                    and b.SETTLEMENT_MONTH in <foreach collection="assessMentMonthSet" separator="," open="(" close=")" item="assessmentMonth">
                  #{assessmentMonth}
                </foreach>
                </when>
                <when test="2 == param.timeType">
                    and b.SIGN_MONTH in <foreach collection="assessMentMonthSet" separator="," open="(" close=")" item="assessmentMonth">
                  #{assessmentMonth}
                </foreach>
                </when>
                <when test="3 == param.timeType">
                    and b.INCOME_MONTH in <foreach collection="assessMentMonthSet" separator="," open="(" close=")" item="assessmentMonth">
                  #{assessmentMonth}
                </foreach>
                </when>
            </choose>
        </if>
    </where>
  </select>
  <select id="getCountData" resultType="java.util.Map">
    SELECT sum(DIVIDED_AMOUNT) dividedAmount
    FROM fun_deal a
    JOIN FUN_PROFIT_DETAIL b on a.deal_id=b.DEAL_ID
    <where>
        <if test="null != param.compId">
          and a.COMP_ID=#{param.compId}
        </if>
        <if test="null != param.areaId">
          and b.AREA_ID=#{param.areaId}
        </if>
        <if test="null != param.regId">
          and b.REG_ID=#{param.regId}
        </if>
        <if test="null != param.deptId">
          and b.DEPT_ID=#{param.deptId}
        </if>
        <if test="null != param.grId">
          and b.GR_ID=#{param.grId}
        </if>
        <if test="null != param.userId">
          and b.USER_ID=#{param.userId}
        </if>
        <if test="null != param.dealId">
          and a.DEAL_ID=#{param.dealId}
        </if>
        <if test="null != param.timeType and null != param.timeMonth">
            <choose>
                <when test="1 == param.timeType">
                    and b.SETTLEMENT_MONTH = #{param.timeMonth}
                </when>
                <when test="2 == param.timeType">
                    and b.SIGN_MONTH = #{param.timeMonth}
                </when>
                <when test="3 == param.timeType">
                    and b.INCOME_MONTH = #{param.timeMonth}
                </when>
            </choose>
        </if>
    </where>
  </select>
  <select id="getDealDataMap" resultType="java.util.Map">
    select sum(DIVIDED_AMOUNT) incomeAmount
    FROM fun_deal a
    JOIN FUN_PROFIT_DETAIL b on a.deal_id=b.DEAL_ID
    JOIN PROCESS_FINANC c on c.PF_ID = b.PF_ID
    <where>
      <if test="null != param.compId">
        and a.COMP_ID=#{param.compId} and DEL_FLAG=0 and IS_ABNORMAL=0
      </if>
      <if test="param.isNewOrganization == false">
	      <if test="null != param.areaId">
	        and b.AREA_ID=#{param.areaId}
	      </if>
	      <if test="null != param.regId">
	        and b.REG_ID=#{param.regId}
	      </if>
	      <if test="null != param.deptId">
	        and b.DEPT_ID=#{param.deptId}
	      </if>
	      <if test="null != param.grId">
	        and b.GR_ID=#{param.grId}
	      </if>
      </if>
	  <if test="param.isNewOrganization == true and param.organizationId != null and param.organizationId != 0">
			and B.ORGANIZATION_PATH LIKE '%:${param.organizationId}:%'
	  </if>
      <if test="null != param.userId">
        and b.USER_ID=#{param.userId}
      </if>
      <if test="null != param.dealId">
        and a.DEAL_ID=#{param.dealId}
      </if>
      <if test="null != param.timeType">
        <choose>
          <when test="1 == param.timeType">
            and CONVERT(VARCHAR(7), a.DEAL_VERIFY_TIME, 120 ) in <foreach collection="assessMentMonthSet"
                                                                          item="assessMentMonth" close=")" open="(" separator=",">
              #{assessMentMonth}
            </foreach>
          </when>
          <when test="2 == param.timeType">
            and CONVERT(VARCHAR(7), SIGN_DATE, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
          <when test="3 == param.timeType">
            and CONVERT(VARCHAR(7), c.PF_TIME, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
        </choose>
      </if>
    </where>
  </select>
  <select id="abnormalCount" resultType="com.myfun.repository.erpdb.dto.FunWageTmpDataDto">
      SELECT user_Id userId, count(1) count1 from FUN_PROFIT_DETAIL
      WHERE comp_id=#{compId} and ABNORMAL_MONTH = #{assessmentMonth} and IS_ABNORMAL=1 and 
      user_id in <foreach
          collection="userIdSet" item="userId" close=")" open="(" separator=",">
            #{userId}
        </foreach>
      GROUP by USER_ID
  </select>

  <resultMap id="BaseProfitResultMap" extends="BaseResultMap" type="com.myfun.repository.erpdb.dto.ErpFunProfitDetailDto">
    <result column="CONTRACT_NO" jdbcType="VARCHAR" property="contractNo" />
    <result column="DEAL_TYPE" jdbcType="VARCHAR" property="dealType" />
    <result column="SELL_ADDRESS" jdbcType="VARCHAR" property="sellAddress" />
    <result column="DEAL_VERIFY_TIME" jdbcType="TIMESTAMP" property="dealVerifyTime" />
    <result column="ISBYHAND" jdbcType="TINYINT" property="isbyhand" />
  </resultMap>

  <select id="getPersonFunProfitDetailList" resultMap="BaseProfitResultMap">
    SELECT b.CONTRACT_NO,b.DEAL_TYPE,b.SELL_ADDRESS,
      DISTRIBUTION_PERCENT,DIVIDED_AMOUNT,INCOME_TIME,DEAL_VERIFY_TIME,b.ISBYHAND,
    SETTLEMENT_MONTH,INCOME_MONTH,SIGN_MONTH, SIGN_DATE,a.DEAL_ID, a.INCOME_AMOUNT
    FROM FUN_PROFIT_DETAIL a
    JOIN FUN_DEAL b on a.DEAL_ID = b.DEAL_ID
    WHERE a.COMP_ID=#{param.compId} and a.ARCHIVE_ID=#{param.archiveId}
    <choose>
        <when test="1==param.profitType">
            and DEL_FLAG=0 and ${param.queryMonth}=#{param.assessmentMonth}
        </when>
        <when test="2==param.profitType">
            and DEL_FLAG=0 and ${param.queryMonth}=#{param.assessmentMonth}
        </when>
        <when test="3==param.profitType">
            and ABNORMAL_MONTH=#{param.assessmentMonth} and IS_ABNORMAL=1 and DEL_FLAG=0
        </when>
    </choose>
  </select>
  <select id="countYsAmount" resultType="java.lang.Integer">
    SELECT a.deal_id
    FROM FUN_DEAL a
    JOIN PROCESS_FINANC c on a.DEAL_ID=c.DEAL_ID and c.PF_ACTUAL=0
    <where>
      <if test="null != param.compId">
        and a.COMP_ID=#{param.compId}
      </if>
      <if test="null != param.areaId">
        and a.AREA_ID=#{param.areaId}
      </if>
      <if test="null != param.regId">
        and a.REG_ID=#{param.regId}
      </if>
      <if test="null != param.deptId">
        and a.SIGN_USER_DEPT_ID=#{param.deptId}
      </if>
      <if test="null != param.dealStatus">
        and a.DEAL_STATUS=#{param.dealStatus}
      </if>
      <if test="null != param.dealStatus">
        and a.DEAL_STATUS=#{param.dealStatus}
      </if>
      <if test="null != param.dealId">
        and a.DEAL_ID=#{param.dealId}
      </if>
      <if test="null != param.timeType ">
        <choose>
          <when test="1 == param.timeType">
            and CONVERT(VARCHAR(7), a.DEAL_VERIFY_TIME, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
          <when test="2 == param.timeType">
            and CONVERT(VARCHAR(7), SIGN_DATE, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
          <when test="3 == param.timeType">
            and CONVERT(VARCHAR(7), c.PF_TIME, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
        </choose>
      </if>
    </where>
    group by a.deal_id
  </select>
  <select id="countSsAmount" resultType="java.lang.Integer">
    SELECT a.deal_id
    FROM FUN_DEAL a
    JOIN PROCESS_FINANC c on a.DEAL_ID=c.DEAL_ID and c.PF_ACTUAL=1
    <where>
      <if test="null != param.compId">
        and a.COMP_ID=#{param.compId}
      </if>
      <if test="null != param.areaId">
        and a.AREA_ID=#{param.areaId}
      </if>
      <if test="null != param.regId">
        and a.REG_ID=#{param.regId}
      </if>
      <if test="null != param.deptId">
        and a.SIGN_USER_DEPT_ID=#{param.deptId}
      </if>
      <if test="null != param.dealStatus">
        and a.DEAL_STATUS=#{param.dealStatus}
      </if>
      <if test="null != param.dealStatus">
        and a.DEAL_STATUS=#{param.dealStatus}
      </if>
      <if test="null != param.dealId">
        and a.DEAL_ID=#{param.dealId}
      </if>

      <if test="null != param.timeType ">
        <choose>
          <when test="1 == param.timeType">
            and CONVERT(VARCHAR(7), a.DEAL_VERIFY_TIME, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
          <when test="2 == param.timeType">
            and CONVERT(VARCHAR(7), SIGN_DATE, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
          <when test="3 == param.timeType">
            and CONVERT(VARCHAR(7), c.PF_TIME, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
        </choose>
      </if>
    </where>
    group by a.deal_id
  </select>
  <select id="countJsAmount" resultType="java.lang.Integer">
    SELECT a.deal_id
    FROM FUN_DEAL a
    JOIN PROCESS_FINANC c on a.DEAL_ID=c.DEAL_ID
    <where>
      <if test="null != param.compId">
        and a.COMP_ID=#{param.compId} and DEAL_STATUS=2
      </if>
      <if test="null != param.areaId">
        and a.AREA_ID=#{param.areaId}
      </if>
      <if test="null != param.regId">
        and a.REG_ID=#{param.regId}
      </if>
      <if test="null != param.deptId">
        and a.SIGN_USER_DEPT_ID=#{param.deptId}
      </if>
      <if test="null != param.dealStatus">
        and a.DEAL_STATUS=#{param.dealStatus}
      </if>
      <if test="null != param.dealStatus">
        and a.DEAL_STATUS=#{param.dealStatus}
      </if>
      <if test="null != param.dealId">
        and a.DEAL_ID=#{param.dealId}
      </if>

      <if test="null != param.timeType ">
        <choose>
          <when test="1 == param.timeType">
            and CONVERT(VARCHAR(7), a.DEAL_VERIFY_TIME, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
          <when test="2 == param.timeType">
            and CONVERT(VARCHAR(7), SIGN_DATE, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
          <when test="3 == param.timeType">
            and CONVERT(VARCHAR(7), c.PF_TIME, 120 ) in <foreach collection="assessMentMonthSet" item="assessMentMonth" close=")" open="(" separator=",">
            #{assessMentMonth}
          </foreach>
          </when>
        </choose>
      </if>
    </where>
    group by a.deal_id
  </select>
	
	<update id="updateDelFagByDealId">
		update FUN_DEAL set DEL_FLAG = #{delFlag}
		where DEAL_ID = #{dealId}
	</update>
 
 
	<resultMap id="BaseAssessCountDataMap" type="com.myfun.repository.erpdb.dto.ErpAssessCountDataDto">
	    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
	    <result column="SUM_INCOME_AMOUNT" jdbcType="NUMERIC" property="sumIncomeAmount" />
	    <result column="COUNT_TYPE" jdbcType="VARCHAR" property="countType" />
	    <result column="PERFORMANCE_ID" jdbcType="INTEGER" property="performanceId" />
	</resultMap>
 	<!-- 
 		1、统计应收数据-签约月-SIGN_VALUE
 		2、统计实收数据-实收月-INCOME_VALUE
 		3、结盘实收数据-结算月-SETTLEMENT_VALUE
 		ID, DEAL_ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, SIGN_MONTH, INCOME_MONTH, 
	    SETTLEMENT_MONTH, PLANNED_DISTRIBUTION, DISTRIBUTION_PERCENT, INCOME_AMOUNT, PERFORMANCE_AMOUNT, 
	    DIVIDED_AMOUNT, GRANT_FLAG, USER_ID, PERFORMANCE_ID, PERFORMANCE_NAME, INCOME_TIME, 
	    ISSUED_AMOUNT, CREATE_TIME, PF_ID, NEED_INCOME_AMOUNT, DEL_FLAG, IS_ABNORMAL, ABNORMAL_MONTH, 
	    IS_CALCULATE, DEL_DATA, ASSESSMENT_MONTH
 	 -->
 	<select id="getAssessCountData" resultMap="BaseAssessCountDataMap">
 		select ARCHIVE_ID, SUM_INCOME_AMOUNT, COUNT_TYPE, PERFORMANCE_ID from (
			select ARCHIVE_ID, sum(isnull(INCOME_AMOUNT, 0)) as SUM_INCOME_AMOUNT, 'SIGN_VALUE' as COUNT_TYPE, PERFORMANCE_ID 
				from FUN_PROFIT_DYNAMIC_DETAIL 
					where COMP_ID = #{compId} and DEL_FLAG = 0 and SIGN_MONTH = #{queryMonth} and INCOME_AMOUNT_TYPE = 0 
						group by ARCHIVE_ID, PERFORMANCE_ID
			union all
				select ARCHIVE_ID, sum(isnull(INCOME_AMOUNT, 0)) as SUM_INCOME_AMOUNT, 'INCOME_VALUE' as COUNT_TYPE, PERFORMANCE_ID 
					from FUN_PROFIT_DETAIL 
						where COMP_ID = #{compId} and DEL_FLAG = 0 and INCOME_MONTH = #{queryMonth} 
							group by ARCHIVE_ID, PERFORMANCE_ID
			union all
				select ARCHIVE_ID, sum(isnull(INCOME_AMOUNT, 0)) as SUM_INCOME_AMOUNT, 'SETTLEMENT_VALUE' as COUNT_TYPE, PERFORMANCE_ID 
					from FUN_PROFIT_DETAIL
						where COMP_ID = #{compId} and DEL_FLAG = 0 and SETTLEMENT_MONTH = #{queryMonth} 
							group by ARCHIVE_ID, PERFORMANCE_ID
		) tmp
 	</select>
 	<select id="getUserAllIncomeAmount" resultType="com.myfun.erpWeb.managecenter.profit.vo.UserProfitVo">
 		select USER_ID userId, SUM(INCOME_AMOUNT) incomeAmount from FUN_PROFIT_DETAIL 
 		where COMP_ID = #{compId} AND DEL_FLAG = 0  AND IS_ABNORMAL = 0 AND ARCHIVE_ID IN  
 		<foreach collection="archiveIds" item="archiveId" close=")" open="(" separator=",">
            #{archiveId}
        </foreach>
 		group by USER_ID
 	</select>
</mapper>
