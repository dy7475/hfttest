<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunSaleMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunSale">
    <!--@mbggenerated-->
    <id column="SALE_ID" jdbcType="INTEGER" property="saleId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="CREATE_ARCHIVE_ID" jdbcType="INTEGER" property="createArchiveId" />
    <result column="SALE_NO" jdbcType="VARCHAR" property="saleNo" />
    <result column="SALE_OWNER" jdbcType="VARCHAR" property="saleOwner" />
    <result column="CELL_PHONE" jdbcType="VARCHAR" property="cellPhone" />
    <result column="ID_CARD" jdbcType="VARCHAR" property="idCard" />
    <result column="SALE_SUBJECT" jdbcType="VARCHAR" property="saleSubject" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="BUILD_CODE" jdbcType="VARCHAR" property="buildCode" />
    <result column="SALE_REG" jdbcType="INTEGER" property="saleReg" />
    <result column="REGION_NAME" jdbcType="VARCHAR" property="regionName" />
    <result column="SECTION_ID" jdbcType="INTEGER" property="sectionId" />
    <result column="SECTION_NAME" jdbcType="VARCHAR" property="sectionName" />
    <result column="SALE_ROUND" jdbcType="TINYINT" property="saleRound" />
    <result column="TRADE_ADDR" jdbcType="VARCHAR" property="tradeAddr" />
    <result column="SALE_ROOF" jdbcType="VARCHAR" property="saleRoof" />
    <result column="SALE_UNIT" jdbcType="VARCHAR" property="saleUnit" />
    <result column="UNIT_FLOOR" jdbcType="VARCHAR" property="unitFloor" />
    <result column="SALE_NUM" jdbcType="VARCHAR" property="saleNum" />
    <result column="SALE_ROOF_R" jdbcType="VARCHAR" property="saleRoofR" />
    <result column="SALE_UNIT_R" jdbcType="VARCHAR" property="saleUnitR" />
    <result column="UNIT_FLOOR_R" jdbcType="VARCHAR" property="unitFloorR" />
    <result column="SALE_NUM_R" jdbcType="VARCHAR" property="saleNumR" />
    <result column="SALE_LADDER" jdbcType="INTEGER" property="saleLadder" />
    <result column="SALE_DOORS" jdbcType="TINYINT" property="saleDoors" />
    <result column="SALE_ROOM" jdbcType="TINYINT" property="saleRoom" />
    <result column="SALE_HALL" jdbcType="TINYINT" property="saleHall" />
    <result column="SALE_WEI" jdbcType="TINYINT" property="saleWei" />
    <result column="SALE_YANG" jdbcType="TINYINT" property="saleYang" />
    <result column="SALE_TYPE" jdbcType="TINYINT" property="saleType" />
    <result column="SALE_FLOOR" jdbcType="SMALLINT" property="saleFloor" />
    <result column="SALE_FLOORS" jdbcType="INTEGER" property="saleFloors" />
    <result column="SALE_FITMENT" jdbcType="TINYINT" property="saleFitment" />
    <result column="SALE_DIRECT" jdbcType="TINYINT" property="saleDirect" />
    <result column="SALE_YEAR" jdbcType="SMALLINT" property="saleYear" />
    <result column="SALE_STRUCT" jdbcType="TINYINT" property="saleStruct" />
    <result column="SALE_USEAGE" jdbcType="TINYINT" property="saleUseage" />
    <result column="SHOP_USAGE" jdbcType="VARCHAR" property="shopUsage" />
    <result column="OWNER_TYPE" jdbcType="TINYINT" property="ownerType" />
    <result column="OFFICE_LEVEL" jdbcType="TINYINT" property="officeLevel" />
    <result column="SALE_STREET" jdbcType="BIT" property="saleStreet" />
    <result column="SALE_RIGHT" jdbcType="TINYINT" property="saleRight" />
    <result column="SALE_MORTGAGE" jdbcType="VARCHAR" property="saleMortgage" />
    <result column="SALE_ACCOUNT" jdbcType="VARCHAR" property="saleAccount" />
    <result column="SALE_AREA" jdbcType="NUMERIC" property="saleArea" />
    <result column="SALE_TOTAL_PRICE" jdbcType="NUMERIC" property="saleTotalPrice" />
    <result column="SALE_UNIT_PRICE" jdbcType="NUMERIC" property="saleUnitPrice" />
    <result column="SALE_LOWEST_PRICE" jdbcType="NUMERIC" property="saleLowestPrice" />
    <result column="SALE_PROPERTY" jdbcType="NUMERIC" property="saleProperty" />
    <result column="IS_SEPERATOR" jdbcType="BIT" property="isSeperator" />
    <result column="SALE_LEAVE_TIME" jdbcType="VARCHAR" property="saleLeaveTime" />
    <result column="HALL_STRUCTURE" jdbcType="TINYINT" property="hallStructure" />
    <result column="UG_AREA" jdbcType="NUMERIC" property="ugArea" />
    <result column="UG_TYPE" jdbcType="TINYINT" property="ugType" />
    <result column="GARDEN_AREA" jdbcType="NUMERIC" property="gardenArea" />
    <result column="GARAGE_AMOUNT" jdbcType="TINYINT" property="garageAmount" />
    <result column="SALE_CHARACT" jdbcType="VARCHAR" property="saleCharact" />
    <result column="SALE_MEMO" jdbcType="VARCHAR" property="saleMemo" />
    <result column="SALE_SOURCE" jdbcType="TINYINT" property="saleSource" />
    <result column="SALE_KEY" jdbcType="BIT" property="saleKey" />
    <result column="SALE_KEY_NUM" jdbcType="VARCHAR" property="saleKeyNum" />
    <result column="KEY_TIME" jdbcType="TIMESTAMP" property="keyTime" />
    <result column="SALE_EXPLRTH" jdbcType="BIT" property="saleExplrth" />
    <result column="EXPLRTH_DATETIME" jdbcType="TIMESTAMP" property="explrthDatetime" />
    <result column="SALE_CONSIGN" jdbcType="TINYINT" property="saleConsign" />
    <result column="SALE_CONSIGN_NO" jdbcType="VARCHAR" property="saleConsignNo" />
    <result column="WEITUO_TIME" jdbcType="TIMESTAMP" property="weituoTime" />
    <result column="SALE_COOPERATE" jdbcType="BIT" property="saleCooperate" />
    <result column="SALE_PUBLISH" jdbcType="BIT" property="salePublish" />
    <result column="SALE_MAP" jdbcType="TINYINT" property="saleMap" />
    <result column="SALE_LEVEL" jdbcType="TINYINT" property="saleLevel" />
    <result column="PLATE_TYPE" jdbcType="TINYINT" property="plateType" />
    <result column="SALE_STATUS" jdbcType="TINYINT" property="saleStatus" />
    <result column="TRACK_TIME" jdbcType="TIMESTAMP" property="trackTime" />
    <result column="TRACK_TIME2" jdbcType="TIMESTAMP" property="trackTime2" />
    <result column="ACTION_TIME" jdbcType="TIMESTAMP" property="actionTime" />
    <result column="FROM_SOSO" jdbcType="BIT" property="fromSoso" />
    <result column="REPEAT_FLAG" jdbcType="TINYINT" property="repeatFlag" />
    <result column="INFO_TYPE" jdbcType="TINYINT" property="infoType" />
    <result column="SHARE_FLAG" jdbcType="BIT" property="shareFlag" />
    <result column="FRIEND_HOUSE" jdbcType="BIT" property="friendHouse" />
    <result column="COOPERATE_TIME" jdbcType="TIMESTAMP" property="cooperateTime" />
    <result column="COMPLAINT_FLAG" jdbcType="BIT" property="complaintFlag" />
    <result column="PUBLISH_TIME" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="PHOTO_TIME" jdbcType="TIMESTAMP" property="photoTime" />
    <result column="RED_FLAG" jdbcType="BIT" property="redFlag" />
    <result column="ORANGE_FLAG" jdbcType="BIT" property="orangeFlag" />
    <result column="PUBLIC_COUNT" jdbcType="INTEGER" property="publicCount" />
    <result column="PUBLIC_TIME" jdbcType="TIMESTAMP" property="publicTime" />
    <result column="SPECIAL_TIME" jdbcType="TIMESTAMP" property="specialTime" />
    <result column="SCHEDULE_TIME" jdbcType="TIMESTAMP" property="scheduleTime" />
    <result column="DEAL_TIME" jdbcType="TIMESTAMP" property="dealTime" />
    <result column="WRITEOFF_TIME" jdbcType="TIMESTAMP" property="writeoffTime" />
    <result column="SECRECY_TIME" jdbcType="TIMESTAMP" property="secrecyTime" />
    <result column="COMMEND_TIME" jdbcType="TIMESTAMP" property="commendTime" />
    <result column="PRIVATE_TIME" jdbcType="TIMESTAMP" property="privateTime" />
    <result column="FROM_PUBLIC" jdbcType="BIT" property="fromPublic" />
    <result column="THUMB_URL" jdbcType="VARCHAR" property="thumbUrl" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="TAG_IDS" jdbcType="VARCHAR" property="tagIds" />
    <result column="SALE_CERT_TIME" jdbcType="TIMESTAMP" property="saleCertTime" />
    <result column="PUBLISH_SITES" jdbcType="INTEGER" property="publishSites" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="SALE_ROOF_T" jdbcType="VARCHAR" property="saleRoofT" />
    <result column="SALE_NUM_T" jdbcType="VARCHAR" property="saleNumT" />
    <result column="SALE_UNIT_T" jdbcType="VARCHAR" property="saleUnitT" />
    <result column="VIDEO_NUM" jdbcType="TINYINT" property="videoNum" />
    <result column="CREATOR_UID" jdbcType="INTEGER" property="creatorUid" />
    <result column="is_ignore" jdbcType="TINYINT" property="isIgnore" />
    <result column="sale_id_old" jdbcType="INTEGER" property="saleIdOld" />
    <result column="SALE_INNERAREA" jdbcType="DECIMAL" property="saleInnerarea" />
    <result column="HOUSE_BARGAIN" jdbcType="BIT" property="houseBargain" />
    <result column="ENCODE_FLAG" jdbcType="TINYINT" property="encodeFlag" />
    <result column="LOCK" jdbcType="TINYINT" property="lock" />
    <result column="TRUE_FLAG" jdbcType="TINYINT" property="trueFlag" />
    <result column="SENDTOTENCENT" jdbcType="TINYINT" property="sendtotencent" />
    <result column="HOUSE_SOURCE_WAY" jdbcType="TINYINT" property="houseSourceWay" />
    <result column="YOU_SHARE_FLAG" jdbcType="TINYINT" property="youShareFlag" />
    <result column="YOU_SHARE_TIME" jdbcType="TIMESTAMP" property="youShareTime" />
    <result column="YOU_BUY_COUNT" jdbcType="INTEGER" property="youBuyCount" />
    <result column="OWNER_SEX" jdbcType="TINYINT" property="ownerSex" />
    <result column="YOU_SHARE_ID" jdbcType="INTEGER" property="youShareId" />
    <result column="THUMBPIC_VER" jdbcType="VARCHAR" property="thumbpicVer" />
    <result column="PRIVATE_USER_ID" jdbcType="INTEGER" property="privateUserId" />
    <result column="ADDR_MD5" jdbcType="VARCHAR" property="addrMd5" />
    <result column="PANORAMA_MAP" jdbcType="INTEGER" property="panoramaMap" />
    <result column="YOUJIA_STATISTIC_FLAG" jdbcType="TINYINT" property="youjiaStatisticFlag" />
    <result column="ADS_FLAG" jdbcType="TINYINT" property="adsFlag" />
    <result column="SYNC_TIME" jdbcType="TIMESTAMP" property="syncTime" />
    <result column="VIDEO_REVIEW_FLAG" jdbcType="TINYINT" property="videoReviewFlag" />
    <result column="HAS_PANORAMA" jdbcType="TINYINT" property="hasPanorama" />
    <result column="BIDDING_FLAG" jdbcType="BIT" property="biddingFlag" />
    <result column="COMPETE_END_TIME" jdbcType="TIMESTAMP" property="competeEndTime" />
    <result column="COMPETE_PRICE" jdbcType="NUMERIC" property="competePrice" />
    <result column="YOU_SHARE_MONEY_STATE" jdbcType="TINYINT" property="youShareMoneyState" />
    <result column="SENDTO_WEIDIAN" jdbcType="TINYINT" property="sendtoWeidian" />
    <result column="SENDTO_YOUYOU" jdbcType="TINYINT" property="sendtoYouyou" />
    <result column="YOUYOU_DEAL" jdbcType="TINYINT" property="youyouDeal" />
    <result column="SPECIAL_END_TIME" jdbcType="TIMESTAMP" property="specialEndTime" />
    <result column="SCHEDULE_END_TIME" jdbcType="TIMESTAMP" property="scheduleEndTime" />
    <result column="CHECK_CODE_FUN" jdbcType="VARCHAR" property="checkCodeFun" />
    <result column="PROXY_URL" jdbcType="VARCHAR" property="proxyUrl" />
    <result column="QZ_CODE_FUN" jdbcType="VARCHAR" property="qzCodeFun" />
    <result column="CHECK_CODE_URL" jdbcType="VARCHAR" property="checkCodeUrl" />
    <result column="UPLOAD_PROXY_USER" jdbcType="VARCHAR" property="uploadProxyUser" />
    <result column="CITY_SHARE_FLAG" jdbcType="TINYINT" property="cityShareFlag" />
    <result column="BRAND_COMP_ID" jdbcType="INTEGER" property="brandCompId" />
    <result column="COMP_ID2" jdbcType="INTEGER" property="compId2" />
    <result column="FILE_SYSTEM_TYPE" jdbcType="TINYINT" property="fileSystemType" />
    <result column="OWNERSHIP_TYPE" jdbcType="TINYINT" property="ownershipType" />
    <result column="EFFECTIVE_DATE" jdbcType="TIMESTAMP" property="effectiveDate" />
    <result column="FUNMANAGER_SALESTATUS" jdbcType="TINYINT" property="funmanagerSalestatus" />
    <result column="HAS_FUNKAN" jdbcType="TINYINT" property="hasFunkan" />
    <result column="JOINT_CELL_PHONE" jdbcType="VARCHAR" property="jointCellPhone" />
    <result column="JOINT_USER_NAME" jdbcType="VARCHAR" property="jointUserName" />
    <result column="JOINT_USER_SEX" jdbcType="TINYINT" property="jointUserSex" />
    <result column="JOINT_ID_CARD" jdbcType="VARCHAR" property="jointIdCard" />
    <result column="RESPITE_END_TIME" jdbcType="TIMESTAMP" property="respiteEndTime" />
    <result column="SALE_LEASE_ID" jdbcType="INTEGER" property="saleLeaseId" />
    <result column="IS_SALE_LEASE" jdbcType="TINYINT" property="isSaleLease" />
    <result column="ENTRUST_END_TIME" jdbcType="TIMESTAMP" property="entrustEndTime" />
    <result column="ENTRUST_CREATE_USER" jdbcType="INTEGER" property="entrustCreateUser" />
    <result column="AVAILABLE_TIME" jdbcType="TIMESTAMP" property="availableTime" />
    <result column="MODIFY_PRICE_END" jdbcType="TIMESTAMP" property="modifyPriceEnd" />
    <result column="MODIFY_PRICE_TREND" jdbcType="TINYINT" property="modifyPriceTrend" />
    <result column="HOUSE_SITUATION" jdbcType="TINYINT" property="houseSituation" />
    <result column="LAST_DKAN_TIME" jdbcType="TIMESTAMP" property="lastDkanTime" />
    <result column="OLD_TRUE_FLAG" jdbcType="TINYINT" property="oldTrueFlag" />
    <result column="INNER_NO" jdbcType="INTEGER" property="innerNo" />
    <result column="JOINT_ID_CARD_TYPE" jdbcType="INTEGER" property="jointIdCardType" />
    <result column="ID_CARD_TYPE" jdbcType="INTEGER" property="idCardType" />
    <result column="SALE_BAY" jdbcType="NUMERIC" property="saleBay" />
    <result column="SALE_DEPTH" jdbcType="NUMERIC" property="saleDepth" />
    <result column="SALE_STOREY" jdbcType="NUMERIC" property="saleStorey" />
    <result column="SALE_GRADATION" jdbcType="TINYINT" property="saleGradation" />
    <result column="SALE_NATURE" jdbcType="TINYINT" property="saleNature" />
    <result column="VILLA_TYPE" jdbcType="TINYINT" property="villaType" />
    <result column="SALE_STYLE" jdbcType="TINYINT" property="saleStyle" />
    <result column="ACTION_TYPE" jdbcType="TINYINT" property="actionType" />
    <result column="SCENERY_TYPE" jdbcType="TINYINT" property="sceneryType" />
    <result column="RECEIPT_TYPE" jdbcType="TINYINT" property="receiptType" />
    <result column="GUARANTY_TYPE" jdbcType="TINYINT" property="guarantyType" />
    <result column="CHECK_TIME" jdbcType="VARCHAR" property="checkTime" />
    <result column="FOCUS_TIME" jdbcType="TIMESTAMP" property="focusTime" />
    <result column="USER_LEVEL" jdbcType="INTEGER" property="userLevel" />
    <result column="TISSUE_LINE" jdbcType="VARCHAR" property="tissueLine" />
    <result column="SALE_BUY_PRICE" jdbcType="NUMERIC" property="saleBuyPrice" />
    <result column="PARTNER_ID" jdbcType="INTEGER" property="partnerId" />
    <result column="FUNKAN_USER_ID" jdbcType="INTEGER" property="funkanUserId" />
    <result column="SALE_KEY_USER_ID" jdbcType="INTEGER" property="saleKeyUserId" />
    <result column="FILE_CODING" jdbcType="VARCHAR" property="fileCoding" />
    <result column="MORTGAGE_BANK" jdbcType="VARCHAR" property="mortgageBank" />
    <result column="ARREARS" jdbcType="NUMERIC" property="arrears" />
    <result column="CURRENT_RENT" jdbcType="NUMERIC" property="currentRent" />
    <result column="TURN_RATE" jdbcType="NUMERIC" property="turnRate" />
    <result column="HOUSE_VERIFY" jdbcType="TINYINT" property="houseVerify" />
    <result column="KITCHEN" jdbcType="TINYINT" property="kitchen" />
    <result column="ML_WHOLE_LAYER" jdbcType="TINYINT" property="mlWholeLayer" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
    <result column="LEASE_EXPIRATION_TIME" jdbcType="TIMESTAMP" property="leaseExpirationTime" />
    <result column="TRANSACTION_STATUS" jdbcType="TINYINT" property="transactionStatus" />
    <result column="HAS_RECORDED" jdbcType="TINYINT" property="hasRecorded" />
    <result column="SALE_ENTRUST_PRICE" jdbcType="NUMERIC" property="saleEntrustPrice" />
    <result column="HAS_ENTRUST" jdbcType="TINYINT" property="hasEntrust" />
    <result column="OFFEREE_TIME" jdbcType="TIMESTAMP" property="offereeTime" />
    <result column="SALE_AMOUNT_CHANGE_TIME" jdbcType="TIMESTAMP" property="saleAmountChangeTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.myfun.repository.erpdb.po.ErpFunSale">
    <!--@mbggenerated-->
    <result column="FUZZY_SEARCH" jdbcType="CLOB" property="fuzzySearch" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    SALE_ID, COMP_ID, CITY_ID, REG_ID, DEPT_ID, GR_ID, USER_ID, ARCHIVE_ID, CREATION_TIME, 
    CREATE_ARCHIVE_ID, SALE_NO, SALE_OWNER, CELL_PHONE, ID_CARD, SALE_SUBJECT, BUILD_ID, 
    BUILD_NAME, BUILD_CODE, SALE_REG, REGION_NAME, SECTION_ID, SECTION_NAME, SALE_ROUND, 
    TRADE_ADDR, SALE_ROOF, SALE_UNIT, UNIT_FLOOR, SALE_NUM, SALE_ROOF_R, SALE_UNIT_R, 
    UNIT_FLOOR_R, SALE_NUM_R, SALE_LADDER, SALE_DOORS, SALE_ROOM, SALE_HALL, SALE_WEI, 
    SALE_YANG, SALE_TYPE, SALE_FLOOR, SALE_FLOORS, SALE_FITMENT, SALE_DIRECT, SALE_YEAR, 
    SALE_STRUCT, SALE_USEAGE, SHOP_USAGE, OWNER_TYPE, OFFICE_LEVEL, SALE_STREET, SALE_RIGHT, 
    SALE_MORTGAGE, SALE_ACCOUNT, SALE_AREA, SALE_TOTAL_PRICE, SALE_UNIT_PRICE, SALE_LOWEST_PRICE, 
    SALE_PROPERTY, IS_SEPERATOR, SALE_LEAVE_TIME, HALL_STRUCTURE, UG_AREA, UG_TYPE, GARDEN_AREA, 
    GARAGE_AMOUNT, SALE_CHARACT, SALE_MEMO, SALE_SOURCE, SALE_KEY, SALE_KEY_NUM, KEY_TIME, 
    SALE_EXPLRTH, EXPLRTH_DATETIME, SALE_CONSIGN, SALE_CONSIGN_NO, WEITUO_TIME, SALE_COOPERATE, 
    SALE_PUBLISH, SALE_MAP, SALE_LEVEL, PLATE_TYPE, SALE_STATUS, TRACK_TIME, TRACK_TIME2, 
    ACTION_TIME, FROM_SOSO, REPEAT_FLAG, INFO_TYPE, SHARE_FLAG, FRIEND_HOUSE, COOPERATE_TIME, 
    COMPLAINT_FLAG, PUBLISH_TIME, PHOTO_TIME, RED_FLAG, ORANGE_FLAG, PUBLIC_COUNT, PUBLIC_TIME, 
    SPECIAL_TIME, SCHEDULE_TIME, DEAL_TIME, WRITEOFF_TIME, SECRECY_TIME, COMMEND_TIME, 
    PRIVATE_TIME, FROM_PUBLIC, THUMB_URL, UPDATE_TIME, TAG_IDS, SALE_CERT_TIME, PUBLISH_SITES, 
    AREA_ID, SALE_ROOF_T, SALE_NUM_T, SALE_UNIT_T, VIDEO_NUM, CREATOR_UID, is_ignore, 
    sale_id_old, SALE_INNERAREA, HOUSE_BARGAIN, ENCODE_FLAG, [LOCK], TRUE_FLAG, SENDTOTENCENT, 
    HOUSE_SOURCE_WAY, YOU_SHARE_FLAG, YOU_SHARE_TIME, YOU_BUY_COUNT, OWNER_SEX, YOU_SHARE_ID, 
    THUMBPIC_VER, PRIVATE_USER_ID, ADDR_MD5, PANORAMA_MAP, YOUJIA_STATISTIC_FLAG, ADS_FLAG, 
    SYNC_TIME, VIDEO_REVIEW_FLAG, HAS_PANORAMA, BIDDING_FLAG, COMPETE_END_TIME, COMPETE_PRICE, 
    YOU_SHARE_MONEY_STATE, SENDTO_WEIDIAN, SENDTO_YOUYOU, YOUYOU_DEAL, SPECIAL_END_TIME, 
    SCHEDULE_END_TIME, CHECK_CODE_FUN, PROXY_URL, QZ_CODE_FUN, CHECK_CODE_URL, UPLOAD_PROXY_USER, 
    CITY_SHARE_FLAG, BRAND_COMP_ID, COMP_ID2, FILE_SYSTEM_TYPE, OWNERSHIP_TYPE, EFFECTIVE_DATE, 
    FUNMANAGER_SALESTATUS, HAS_FUNKAN, JOINT_CELL_PHONE, JOINT_USER_NAME, JOINT_USER_SEX, 
    JOINT_ID_CARD, RESPITE_END_TIME, SALE_LEASE_ID, IS_SALE_LEASE, ENTRUST_END_TIME, 
    ENTRUST_CREATE_USER, AVAILABLE_TIME, MODIFY_PRICE_END, MODIFY_PRICE_TREND, HOUSE_SITUATION, 
    LAST_DKAN_TIME, OLD_TRUE_FLAG, INNER_NO, JOINT_ID_CARD_TYPE, ID_CARD_TYPE, SALE_BAY, 
    SALE_DEPTH, SALE_STOREY, SALE_GRADATION, SALE_NATURE, VILLA_TYPE, SALE_STYLE, ACTION_TYPE, 
    SCENERY_TYPE, RECEIPT_TYPE, GUARANTY_TYPE, CHECK_TIME, FOCUS_TIME, USER_LEVEL, TISSUE_LINE, 
    SALE_BUY_PRICE, PARTNER_ID, FUNKAN_USER_ID, SALE_KEY_USER_ID, FILE_CODING, MORTGAGE_BANK, 
    ARREARS, CURRENT_RENT, TURN_RATE, HOUSE_VERIFY, KITCHEN, ML_WHOLE_LAYER, ORGANIZATION_ID, 
    LEASE_EXPIRATION_TIME, TRANSACTION_STATUS, HAS_RECORDED, SALE_ENTRUST_PRICE, HAS_ENTRUST, 
    OFFEREE_TIME, SALE_AMOUNT_CHANGE_TIME
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbggenerated-->
    FUZZY_SEARCH
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.myfun.repository.erpdb.po.ErpFunSaleExample" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_SALE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunSaleExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_SALE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_SALE
    where SALE_ID = #{saleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_SALE
    where SALE_ID = #{saleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunSaleExample">
    <!--@mbggenerated-->
    delete from FUN_SALE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunSale">
    <!--@mbggenerated-->
    <selectKey keyProperty="saleId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_SALE_SALE_ID
    </selectKey>
    insert into FUN_SALE (SALE_ID, COMP_ID, CITY_ID, 
      REG_ID, DEPT_ID, GR_ID, 
      USER_ID, ARCHIVE_ID, CREATION_TIME, 
      CREATE_ARCHIVE_ID, SALE_NO, SALE_OWNER, 
      CELL_PHONE, ID_CARD, SALE_SUBJECT, 
      BUILD_ID, BUILD_NAME, BUILD_CODE, 
      SALE_REG, REGION_NAME, SECTION_ID, 
      SECTION_NAME, SALE_ROUND, TRADE_ADDR, 
      SALE_ROOF, SALE_UNIT, UNIT_FLOOR, 
      SALE_NUM, SALE_ROOF_R, SALE_UNIT_R, 
      UNIT_FLOOR_R, SALE_NUM_R, SALE_LADDER, 
      SALE_DOORS, SALE_ROOM, SALE_HALL, 
      SALE_WEI, SALE_YANG, SALE_TYPE, 
      SALE_FLOOR, SALE_FLOORS, SALE_FITMENT, 
      SALE_DIRECT, SALE_YEAR, SALE_STRUCT, 
      SALE_USEAGE, SHOP_USAGE, OWNER_TYPE, 
      OFFICE_LEVEL, SALE_STREET, SALE_RIGHT, 
      SALE_MORTGAGE, SALE_ACCOUNT, SALE_AREA, 
      SALE_TOTAL_PRICE, SALE_UNIT_PRICE, SALE_LOWEST_PRICE, 
      SALE_PROPERTY, IS_SEPERATOR, SALE_LEAVE_TIME, 
      HALL_STRUCTURE, UG_AREA, UG_TYPE, 
      GARDEN_AREA, GARAGE_AMOUNT, SALE_CHARACT, 
      SALE_MEMO, SALE_SOURCE, SALE_KEY, 
      SALE_KEY_NUM, KEY_TIME, SALE_EXPLRTH, 
      EXPLRTH_DATETIME, SALE_CONSIGN, SALE_CONSIGN_NO, 
      WEITUO_TIME, SALE_COOPERATE, SALE_PUBLISH, 
      SALE_MAP, SALE_LEVEL, PLATE_TYPE, 
      SALE_STATUS, TRACK_TIME, TRACK_TIME2, 
      ACTION_TIME, FROM_SOSO, REPEAT_FLAG, 
      INFO_TYPE, SHARE_FLAG, FRIEND_HOUSE, 
      COOPERATE_TIME, COMPLAINT_FLAG, PUBLISH_TIME, 
      PHOTO_TIME, RED_FLAG, ORANGE_FLAG, 
      PUBLIC_COUNT, PUBLIC_TIME, SPECIAL_TIME, 
      SCHEDULE_TIME, DEAL_TIME, WRITEOFF_TIME, 
      SECRECY_TIME, COMMEND_TIME, PRIVATE_TIME, 
      FROM_PUBLIC, THUMB_URL, UPDATE_TIME, 
      TAG_IDS, SALE_CERT_TIME, PUBLISH_SITES, 
      AREA_ID, SALE_ROOF_T, SALE_NUM_T, 
      SALE_UNIT_T, VIDEO_NUM, CREATOR_UID, 
      is_ignore, sale_id_old, SALE_INNERAREA, 
      HOUSE_BARGAIN, ENCODE_FLAG, [LOCK], 
      TRUE_FLAG, SENDTOTENCENT, HOUSE_SOURCE_WAY, 
      YOU_SHARE_FLAG, YOU_SHARE_TIME, YOU_BUY_COUNT, 
      OWNER_SEX, YOU_SHARE_ID, THUMBPIC_VER, 
      PRIVATE_USER_ID, ADDR_MD5, PANORAMA_MAP, 
      YOUJIA_STATISTIC_FLAG, ADS_FLAG, SYNC_TIME, 
      VIDEO_REVIEW_FLAG, HAS_PANORAMA, BIDDING_FLAG, 
      COMPETE_END_TIME, COMPETE_PRICE, YOU_SHARE_MONEY_STATE, 
      SENDTO_WEIDIAN, SENDTO_YOUYOU, YOUYOU_DEAL, 
      SPECIAL_END_TIME, SCHEDULE_END_TIME, CHECK_CODE_FUN, 
      PROXY_URL, QZ_CODE_FUN, CHECK_CODE_URL, 
      UPLOAD_PROXY_USER, CITY_SHARE_FLAG, BRAND_COMP_ID, 
      COMP_ID2, FILE_SYSTEM_TYPE, OWNERSHIP_TYPE, 
      EFFECTIVE_DATE, FUNMANAGER_SALESTATUS, 
      HAS_FUNKAN, JOINT_CELL_PHONE, JOINT_USER_NAME, 
      JOINT_USER_SEX, JOINT_ID_CARD, RESPITE_END_TIME, 
      SALE_LEASE_ID, IS_SALE_LEASE, ENTRUST_END_TIME, 
      ENTRUST_CREATE_USER, AVAILABLE_TIME, MODIFY_PRICE_END, 
      MODIFY_PRICE_TREND, HOUSE_SITUATION, LAST_DKAN_TIME, 
      OLD_TRUE_FLAG, INNER_NO, JOINT_ID_CARD_TYPE, 
      ID_CARD_TYPE, SALE_BAY, SALE_DEPTH, 
      SALE_STOREY, SALE_GRADATION, SALE_NATURE, 
      VILLA_TYPE, SALE_STYLE, ACTION_TYPE, 
      SCENERY_TYPE, RECEIPT_TYPE, GUARANTY_TYPE, 
      CHECK_TIME, FOCUS_TIME, USER_LEVEL, 
      TISSUE_LINE, SALE_BUY_PRICE, PARTNER_ID, 
      FUNKAN_USER_ID, SALE_KEY_USER_ID, FILE_CODING, 
      MORTGAGE_BANK, ARREARS, CURRENT_RENT, 
      TURN_RATE, HOUSE_VERIFY, KITCHEN, 
      ML_WHOLE_LAYER, ORGANIZATION_ID, LEASE_EXPIRATION_TIME, 
      TRANSACTION_STATUS, HAS_RECORDED, SALE_ENTRUST_PRICE, 
      HAS_ENTRUST, OFFEREE_TIME, SALE_AMOUNT_CHANGE_TIME, 
      FUZZY_SEARCH)
    values (#{saleId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, 
      #{regId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{createArchiveId,jdbcType=INTEGER}, #{saleNo,jdbcType=VARCHAR}, #{saleOwner,jdbcType=VARCHAR}, 
      #{cellPhone,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{saleSubject,jdbcType=VARCHAR}, 
      #{buildId,jdbcType=INTEGER}, #{buildName,jdbcType=VARCHAR}, #{buildCode,jdbcType=VARCHAR}, 
      #{saleReg,jdbcType=INTEGER}, #{regionName,jdbcType=VARCHAR}, #{sectionId,jdbcType=INTEGER}, 
      #{sectionName,jdbcType=VARCHAR}, #{saleRound,jdbcType=TINYINT}, #{tradeAddr,jdbcType=VARCHAR}, 
      #{saleRoof,jdbcType=VARCHAR}, #{saleUnit,jdbcType=VARCHAR}, #{unitFloor,jdbcType=VARCHAR}, 
      #{saleNum,jdbcType=VARCHAR}, #{saleRoofR,jdbcType=VARCHAR}, #{saleUnitR,jdbcType=VARCHAR}, 
      #{unitFloorR,jdbcType=VARCHAR}, #{saleNumR,jdbcType=VARCHAR}, #{saleLadder,jdbcType=INTEGER}, 
      #{saleDoors,jdbcType=TINYINT}, #{saleRoom,jdbcType=TINYINT}, #{saleHall,jdbcType=TINYINT}, 
      #{saleWei,jdbcType=TINYINT}, #{saleYang,jdbcType=TINYINT}, #{saleType,jdbcType=TINYINT}, 
      #{saleFloor,jdbcType=SMALLINT}, #{saleFloors,jdbcType=INTEGER}, #{saleFitment,jdbcType=TINYINT}, 
      #{saleDirect,jdbcType=TINYINT}, #{saleYear,jdbcType=SMALLINT}, #{saleStruct,jdbcType=TINYINT}, 
      #{saleUseage,jdbcType=TINYINT}, #{shopUsage,jdbcType=VARCHAR}, #{ownerType,jdbcType=TINYINT}, 
      #{officeLevel,jdbcType=TINYINT}, #{saleStreet,jdbcType=BIT}, #{saleRight,jdbcType=TINYINT}, 
      #{saleMortgage,jdbcType=VARCHAR}, #{saleAccount,jdbcType=VARCHAR}, #{saleArea,jdbcType=NUMERIC}, 
      #{saleTotalPrice,jdbcType=NUMERIC}, #{saleUnitPrice,jdbcType=NUMERIC}, #{saleLowestPrice,jdbcType=NUMERIC}, 
      #{saleProperty,jdbcType=NUMERIC}, #{isSeperator,jdbcType=BIT}, #{saleLeaveTime,jdbcType=VARCHAR}, 
      #{hallStructure,jdbcType=TINYINT}, #{ugArea,jdbcType=NUMERIC}, #{ugType,jdbcType=TINYINT}, 
      #{gardenArea,jdbcType=NUMERIC}, #{garageAmount,jdbcType=TINYINT}, #{saleCharact,jdbcType=VARCHAR}, 
      #{saleMemo,jdbcType=VARCHAR}, #{saleSource,jdbcType=TINYINT}, #{saleKey,jdbcType=BIT}, 
      #{saleKeyNum,jdbcType=VARCHAR}, #{keyTime,jdbcType=TIMESTAMP}, #{saleExplrth,jdbcType=BIT}, 
      #{explrthDatetime,jdbcType=TIMESTAMP}, #{saleConsign,jdbcType=TINYINT}, #{saleConsignNo,jdbcType=VARCHAR}, 
      #{weituoTime,jdbcType=TIMESTAMP}, #{saleCooperate,jdbcType=BIT}, #{salePublish,jdbcType=BIT}, 
      #{saleMap,jdbcType=TINYINT}, #{saleLevel,jdbcType=TINYINT}, #{plateType,jdbcType=TINYINT}, 
      #{saleStatus,jdbcType=TINYINT}, #{trackTime,jdbcType=TIMESTAMP}, #{trackTime2,jdbcType=TIMESTAMP}, 
      #{actionTime,jdbcType=TIMESTAMP}, #{fromSoso,jdbcType=BIT}, #{repeatFlag,jdbcType=TINYINT}, 
      #{infoType,jdbcType=TINYINT}, #{shareFlag,jdbcType=BIT}, #{friendHouse,jdbcType=BIT}, 
      #{cooperateTime,jdbcType=TIMESTAMP}, #{complaintFlag,jdbcType=BIT}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{photoTime,jdbcType=TIMESTAMP}, #{redFlag,jdbcType=BIT}, #{orangeFlag,jdbcType=BIT}, 
      #{publicCount,jdbcType=INTEGER}, #{publicTime,jdbcType=TIMESTAMP}, #{specialTime,jdbcType=TIMESTAMP}, 
      #{scheduleTime,jdbcType=TIMESTAMP}, #{dealTime,jdbcType=TIMESTAMP}, #{writeoffTime,jdbcType=TIMESTAMP}, 
      #{secrecyTime,jdbcType=TIMESTAMP}, #{commendTime,jdbcType=TIMESTAMP}, #{privateTime,jdbcType=TIMESTAMP}, 
      #{fromPublic,jdbcType=BIT}, #{thumbUrl,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{tagIds,jdbcType=VARCHAR}, #{saleCertTime,jdbcType=TIMESTAMP}, #{publishSites,jdbcType=INTEGER}, 
      #{areaId,jdbcType=INTEGER}, #{saleRoofT,jdbcType=VARCHAR}, #{saleNumT,jdbcType=VARCHAR}, 
      #{saleUnitT,jdbcType=VARCHAR}, #{videoNum,jdbcType=TINYINT}, #{creatorUid,jdbcType=INTEGER}, 
      #{isIgnore,jdbcType=TINYINT}, #{saleIdOld,jdbcType=INTEGER}, #{saleInnerarea,jdbcType=DECIMAL}, 
      #{houseBargain,jdbcType=BIT}, #{encodeFlag,jdbcType=TINYINT}, #{lock,jdbcType=TINYINT}, 
      #{trueFlag,jdbcType=TINYINT}, #{sendtotencent,jdbcType=TINYINT}, #{houseSourceWay,jdbcType=TINYINT}, 
      #{youShareFlag,jdbcType=TINYINT}, #{youShareTime,jdbcType=TIMESTAMP}, #{youBuyCount,jdbcType=INTEGER}, 
      #{ownerSex,jdbcType=TINYINT}, #{youShareId,jdbcType=INTEGER}, #{thumbpicVer,jdbcType=VARCHAR}, 
      #{privateUserId,jdbcType=INTEGER}, #{addrMd5,jdbcType=VARCHAR}, #{panoramaMap,jdbcType=INTEGER}, 
      #{youjiaStatisticFlag,jdbcType=TINYINT}, #{adsFlag,jdbcType=TINYINT}, #{syncTime,jdbcType=TIMESTAMP}, 
      #{videoReviewFlag,jdbcType=TINYINT}, #{hasPanorama,jdbcType=TINYINT}, #{biddingFlag,jdbcType=BIT}, 
      #{competeEndTime,jdbcType=TIMESTAMP}, #{competePrice,jdbcType=NUMERIC}, #{youShareMoneyState,jdbcType=TINYINT}, 
      #{sendtoWeidian,jdbcType=TINYINT}, #{sendtoYouyou,jdbcType=TINYINT}, #{youyouDeal,jdbcType=TINYINT}, 
      #{specialEndTime,jdbcType=TIMESTAMP}, #{scheduleEndTime,jdbcType=TIMESTAMP}, #{checkCodeFun,jdbcType=VARCHAR}, 
      #{proxyUrl,jdbcType=VARCHAR}, #{qzCodeFun,jdbcType=VARCHAR}, #{checkCodeUrl,jdbcType=VARCHAR}, 
      #{uploadProxyUser,jdbcType=VARCHAR}, #{cityShareFlag,jdbcType=TINYINT}, #{brandCompId,jdbcType=INTEGER}, 
      #{compId2,jdbcType=INTEGER}, #{fileSystemType,jdbcType=TINYINT}, #{ownershipType,jdbcType=TINYINT}, 
      #{effectiveDate,jdbcType=TIMESTAMP}, #{funmanagerSalestatus,jdbcType=TINYINT}, 
      #{hasFunkan,jdbcType=TINYINT}, #{jointCellPhone,jdbcType=VARCHAR}, #{jointUserName,jdbcType=VARCHAR}, 
      #{jointUserSex,jdbcType=TINYINT}, #{jointIdCard,jdbcType=VARCHAR}, #{respiteEndTime,jdbcType=TIMESTAMP}, 
      #{saleLeaseId,jdbcType=INTEGER}, #{isSaleLease,jdbcType=TINYINT}, #{entrustEndTime,jdbcType=TIMESTAMP}, 
      #{entrustCreateUser,jdbcType=INTEGER}, #{availableTime,jdbcType=TIMESTAMP}, #{modifyPriceEnd,jdbcType=TIMESTAMP}, 
      #{modifyPriceTrend,jdbcType=TINYINT}, #{houseSituation,jdbcType=TINYINT}, #{lastDkanTime,jdbcType=TIMESTAMP}, 
      #{oldTrueFlag,jdbcType=TINYINT}, #{innerNo,jdbcType=INTEGER}, #{jointIdCardType,jdbcType=INTEGER}, 
      #{idCardType,jdbcType=INTEGER}, #{saleBay,jdbcType=NUMERIC}, #{saleDepth,jdbcType=NUMERIC}, 
      #{saleStorey,jdbcType=NUMERIC}, #{saleGradation,jdbcType=TINYINT}, #{saleNature,jdbcType=TINYINT}, 
      #{villaType,jdbcType=TINYINT}, #{saleStyle,jdbcType=TINYINT}, #{actionType,jdbcType=TINYINT}, 
      #{sceneryType,jdbcType=TINYINT}, #{receiptType,jdbcType=TINYINT}, #{guarantyType,jdbcType=TINYINT}, 
      #{checkTime,jdbcType=VARCHAR}, #{focusTime,jdbcType=TIMESTAMP}, #{userLevel,jdbcType=INTEGER}, 
      #{tissueLine,jdbcType=VARCHAR}, #{saleBuyPrice,jdbcType=NUMERIC}, #{partnerId,jdbcType=INTEGER}, 
      #{funkanUserId,jdbcType=INTEGER}, #{saleKeyUserId,jdbcType=INTEGER}, #{fileCoding,jdbcType=VARCHAR}, 
      #{mortgageBank,jdbcType=VARCHAR}, #{arrears,jdbcType=NUMERIC}, #{currentRent,jdbcType=NUMERIC}, 
      #{turnRate,jdbcType=NUMERIC}, #{houseVerify,jdbcType=TINYINT}, #{kitchen,jdbcType=TINYINT}, 
      #{mlWholeLayer,jdbcType=TINYINT}, #{organizationId,jdbcType=INTEGER}, #{leaseExpirationTime,jdbcType=TIMESTAMP}, 
      #{transactionStatus,jdbcType=TINYINT}, #{hasRecorded,jdbcType=TINYINT}, #{saleEntrustPrice,jdbcType=NUMERIC}, 
      #{hasEntrust,jdbcType=TINYINT}, #{offereeTime,jdbcType=TIMESTAMP}, #{saleAmountChangeTime,jdbcType=TIMESTAMP}, 
      #{fuzzySearch,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunSale">
    <!--@mbggenerated-->
    <selectKey keyProperty="saleId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_SALE_SALE_ID
    </selectKey>
    insert into FUN_SALE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      SALE_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="createArchiveId != null">
        CREATE_ARCHIVE_ID,
      </if>
      <if test="saleNo != null">
        SALE_NO,
      </if>
      <if test="saleOwner != null">
        SALE_OWNER,
      </if>
      <if test="cellPhone != null">
        CELL_PHONE,
      </if>
      <if test="idCard != null">
        ID_CARD,
      </if>
      <if test="saleSubject != null">
        SALE_SUBJECT,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="buildName != null">
        BUILD_NAME,
      </if>
      <if test="buildCode != null">
        BUILD_CODE,
      </if>
      <if test="saleReg != null">
        SALE_REG,
      </if>
      <if test="regionName != null">
        REGION_NAME,
      </if>
      <if test="sectionId != null">
        SECTION_ID,
      </if>
      <if test="sectionName != null">
        SECTION_NAME,
      </if>
      <if test="saleRound != null">
        SALE_ROUND,
      </if>
      <if test="tradeAddr != null">
        TRADE_ADDR,
      </if>
      <if test="saleRoof != null">
        SALE_ROOF,
      </if>
      <if test="saleUnit != null">
        SALE_UNIT,
      </if>
      <if test="unitFloor != null">
        UNIT_FLOOR,
      </if>
      <if test="saleNum != null">
        SALE_NUM,
      </if>
      <if test="saleRoofR != null">
        SALE_ROOF_R,
      </if>
      <if test="saleUnitR != null">
        SALE_UNIT_R,
      </if>
      <if test="unitFloorR != null">
        UNIT_FLOOR_R,
      </if>
      <if test="saleNumR != null">
        SALE_NUM_R,
      </if>
      <if test="saleLadder != null">
        SALE_LADDER,
      </if>
      <if test="saleDoors != null">
        SALE_DOORS,
      </if>
      <if test="saleRoom != null">
        SALE_ROOM,
      </if>
      <if test="saleHall != null">
        SALE_HALL,
      </if>
      <if test="saleWei != null">
        SALE_WEI,
      </if>
      <if test="saleYang != null">
        SALE_YANG,
      </if>
      <if test="saleType != null">
        SALE_TYPE,
      </if>
      <if test="saleFloor != null">
        SALE_FLOOR,
      </if>
      <if test="saleFloors != null">
        SALE_FLOORS,
      </if>
      <if test="saleFitment != null">
        SALE_FITMENT,
      </if>
      <if test="saleDirect != null">
        SALE_DIRECT,
      </if>
      <if test="saleYear != null">
        SALE_YEAR,
      </if>
      <if test="saleStruct != null">
        SALE_STRUCT,
      </if>
      <if test="saleUseage != null">
        SALE_USEAGE,
      </if>
      <if test="shopUsage != null">
        SHOP_USAGE,
      </if>
      <if test="ownerType != null">
        OWNER_TYPE,
      </if>
      <if test="officeLevel != null">
        OFFICE_LEVEL,
      </if>
      <if test="saleStreet != null">
        SALE_STREET,
      </if>
      <if test="saleRight != null">
        SALE_RIGHT,
      </if>
      <if test="saleMortgage != null">
        SALE_MORTGAGE,
      </if>
      <if test="saleAccount != null">
        SALE_ACCOUNT,
      </if>
      <if test="saleArea != null">
        SALE_AREA,
      </if>
      <if test="saleTotalPrice != null">
        SALE_TOTAL_PRICE,
      </if>
      <if test="saleUnitPrice != null">
        SALE_UNIT_PRICE,
      </if>
      <if test="saleLowestPrice != null">
        SALE_LOWEST_PRICE,
      </if>
      <if test="saleProperty != null">
        SALE_PROPERTY,
      </if>
      <if test="isSeperator != null">
        IS_SEPERATOR,
      </if>
      <if test="saleLeaveTime != null">
        SALE_LEAVE_TIME,
      </if>
      <if test="hallStructure != null">
        HALL_STRUCTURE,
      </if>
      <if test="ugArea != null">
        UG_AREA,
      </if>
      <if test="ugType != null">
        UG_TYPE,
      </if>
      <if test="gardenArea != null">
        GARDEN_AREA,
      </if>
      <if test="garageAmount != null">
        GARAGE_AMOUNT,
      </if>
      <if test="saleCharact != null">
        SALE_CHARACT,
      </if>
      <if test="saleMemo != null">
        SALE_MEMO,
      </if>
      <if test="saleSource != null">
        SALE_SOURCE,
      </if>
      <if test="saleKey != null">
        SALE_KEY,
      </if>
      <if test="saleKeyNum != null">
        SALE_KEY_NUM,
      </if>
      <if test="keyTime != null">
        KEY_TIME,
      </if>
      <if test="saleExplrth != null">
        SALE_EXPLRTH,
      </if>
      <if test="explrthDatetime != null">
        EXPLRTH_DATETIME,
      </if>
      <if test="saleConsign != null">
        SALE_CONSIGN,
      </if>
      <if test="saleConsignNo != null">
        SALE_CONSIGN_NO,
      </if>
      <if test="weituoTime != null">
        WEITUO_TIME,
      </if>
      <if test="saleCooperate != null">
        SALE_COOPERATE,
      </if>
      <if test="salePublish != null">
        SALE_PUBLISH,
      </if>
      <if test="saleMap != null">
        SALE_MAP,
      </if>
      <if test="saleLevel != null">
        SALE_LEVEL,
      </if>
      <if test="plateType != null">
        PLATE_TYPE,
      </if>
      <if test="saleStatus != null">
        SALE_STATUS,
      </if>
      <if test="trackTime != null">
        TRACK_TIME,
      </if>
      <if test="trackTime2 != null">
        TRACK_TIME2,
      </if>
      <if test="actionTime != null">
        ACTION_TIME,
      </if>
      <if test="fromSoso != null">
        FROM_SOSO,
      </if>
      <if test="repeatFlag != null">
        REPEAT_FLAG,
      </if>
      <if test="infoType != null">
        INFO_TYPE,
      </if>
      <if test="shareFlag != null">
        SHARE_FLAG,
      </if>
      <if test="friendHouse != null">
        FRIEND_HOUSE,
      </if>
      <if test="cooperateTime != null">
        COOPERATE_TIME,
      </if>
      <if test="complaintFlag != null">
        COMPLAINT_FLAG,
      </if>
      <if test="publishTime != null">
        PUBLISH_TIME,
      </if>
      <if test="photoTime != null">
        PHOTO_TIME,
      </if>
      <if test="redFlag != null">
        RED_FLAG,
      </if>
      <if test="orangeFlag != null">
        ORANGE_FLAG,
      </if>
      <if test="publicCount != null">
        PUBLIC_COUNT,
      </if>
      <if test="publicTime != null">
        PUBLIC_TIME,
      </if>
      <if test="specialTime != null">
        SPECIAL_TIME,
      </if>
      <if test="scheduleTime != null">
        SCHEDULE_TIME,
      </if>
      <if test="dealTime != null">
        DEAL_TIME,
      </if>
      <if test="writeoffTime != null">
        WRITEOFF_TIME,
      </if>
      <if test="secrecyTime != null">
        SECRECY_TIME,
      </if>
      <if test="commendTime != null">
        COMMEND_TIME,
      </if>
      <if test="privateTime != null">
        PRIVATE_TIME,
      </if>
      <if test="fromPublic != null">
        FROM_PUBLIC,
      </if>
      <if test="thumbUrl != null">
        THUMB_URL,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="tagIds != null">
        TAG_IDS,
      </if>
      <if test="saleCertTime != null">
        SALE_CERT_TIME,
      </if>
      <if test="publishSites != null">
        PUBLISH_SITES,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="saleRoofT != null">
        SALE_ROOF_T,
      </if>
      <if test="saleNumT != null">
        SALE_NUM_T,
      </if>
      <if test="saleUnitT != null">
        SALE_UNIT_T,
      </if>
      <if test="videoNum != null">
        VIDEO_NUM,
      </if>
      <if test="creatorUid != null">
        CREATOR_UID,
      </if>
      <if test="isIgnore != null">
        is_ignore,
      </if>
      <if test="saleIdOld != null">
        sale_id_old,
      </if>
      <if test="saleInnerarea != null">
        SALE_INNERAREA,
      </if>
      <if test="houseBargain != null">
        HOUSE_BARGAIN,
      </if>
      <if test="encodeFlag != null">
        ENCODE_FLAG,
      </if>
      <if test="lock != null">
        [LOCK],
      </if>
      <if test="trueFlag != null">
        TRUE_FLAG,
      </if>
      <if test="sendtotencent != null">
        SENDTOTENCENT,
      </if>
      <if test="houseSourceWay != null">
        HOUSE_SOURCE_WAY,
      </if>
      <if test="youShareFlag != null">
        YOU_SHARE_FLAG,
      </if>
      <if test="youShareTime != null">
        YOU_SHARE_TIME,
      </if>
      <if test="youBuyCount != null">
        YOU_BUY_COUNT,
      </if>
      <if test="ownerSex != null">
        OWNER_SEX,
      </if>
      <if test="youShareId != null">
        YOU_SHARE_ID,
      </if>
      <if test="thumbpicVer != null">
        THUMBPIC_VER,
      </if>
      <if test="privateUserId != null">
        PRIVATE_USER_ID,
      </if>
      <if test="addrMd5 != null">
        ADDR_MD5,
      </if>
      <if test="panoramaMap != null">
        PANORAMA_MAP,
      </if>
      <if test="youjiaStatisticFlag != null">
        YOUJIA_STATISTIC_FLAG,
      </if>
      <if test="adsFlag != null">
        ADS_FLAG,
      </if>
      <if test="syncTime != null">
        SYNC_TIME,
      </if>
      <if test="videoReviewFlag != null">
        VIDEO_REVIEW_FLAG,
      </if>
      <if test="hasPanorama != null">
        HAS_PANORAMA,
      </if>
      <if test="biddingFlag != null">
        BIDDING_FLAG,
      </if>
      <if test="competeEndTime != null">
        COMPETE_END_TIME,
      </if>
      <if test="competePrice != null">
        COMPETE_PRICE,
      </if>
      <if test="youShareMoneyState != null">
        YOU_SHARE_MONEY_STATE,
      </if>
      <if test="sendtoWeidian != null">
        SENDTO_WEIDIAN,
      </if>
      <if test="sendtoYouyou != null">
        SENDTO_YOUYOU,
      </if>
      <if test="youyouDeal != null">
        YOUYOU_DEAL,
      </if>
      <if test="specialEndTime != null">
        SPECIAL_END_TIME,
      </if>
      <if test="scheduleEndTime != null">
        SCHEDULE_END_TIME,
      </if>
      <if test="checkCodeFun != null">
        CHECK_CODE_FUN,
      </if>
      <if test="proxyUrl != null">
        PROXY_URL,
      </if>
      <if test="qzCodeFun != null">
        QZ_CODE_FUN,
      </if>
      <if test="checkCodeUrl != null">
        CHECK_CODE_URL,
      </if>
      <if test="uploadProxyUser != null">
        UPLOAD_PROXY_USER,
      </if>
      <if test="cityShareFlag != null">
        CITY_SHARE_FLAG,
      </if>
      <if test="brandCompId != null">
        BRAND_COMP_ID,
      </if>
      <if test="compId2 != null">
        COMP_ID2,
      </if>
      <if test="fileSystemType != null">
        FILE_SYSTEM_TYPE,
      </if>
      <if test="ownershipType != null">
        OWNERSHIP_TYPE,
      </if>
      <if test="effectiveDate != null">
        EFFECTIVE_DATE,
      </if>
      <if test="funmanagerSalestatus != null">
        FUNMANAGER_SALESTATUS,
      </if>
      <if test="hasFunkan != null">
        HAS_FUNKAN,
      </if>
      <if test="jointCellPhone != null">
        JOINT_CELL_PHONE,
      </if>
      <if test="jointUserName != null">
        JOINT_USER_NAME,
      </if>
      <if test="jointUserSex != null">
        JOINT_USER_SEX,
      </if>
      <if test="jointIdCard != null">
        JOINT_ID_CARD,
      </if>
      <if test="respiteEndTime != null">
        RESPITE_END_TIME,
      </if>
      <if test="saleLeaseId != null">
        SALE_LEASE_ID,
      </if>
      <if test="isSaleLease != null">
        IS_SALE_LEASE,
      </if>
      <if test="entrustEndTime != null">
        ENTRUST_END_TIME,
      </if>
      <if test="entrustCreateUser != null">
        ENTRUST_CREATE_USER,
      </if>
      <if test="availableTime != null">
        AVAILABLE_TIME,
      </if>
      <if test="modifyPriceEnd != null">
        MODIFY_PRICE_END,
      </if>
      <if test="modifyPriceTrend != null">
        MODIFY_PRICE_TREND,
      </if>
      <if test="houseSituation != null">
        HOUSE_SITUATION,
      </if>
      <if test="lastDkanTime != null">
        LAST_DKAN_TIME,
      </if>
      <if test="oldTrueFlag != null">
        OLD_TRUE_FLAG,
      </if>
      <if test="innerNo != null">
        INNER_NO,
      </if>
      <if test="jointIdCardType != null">
        JOINT_ID_CARD_TYPE,
      </if>
      <if test="idCardType != null">
        ID_CARD_TYPE,
      </if>
      <if test="saleBay != null">
        SALE_BAY,
      </if>
      <if test="saleDepth != null">
        SALE_DEPTH,
      </if>
      <if test="saleStorey != null">
        SALE_STOREY,
      </if>
      <if test="saleGradation != null">
        SALE_GRADATION,
      </if>
      <if test="saleNature != null">
        SALE_NATURE,
      </if>
      <if test="villaType != null">
        VILLA_TYPE,
      </if>
      <if test="saleStyle != null">
        SALE_STYLE,
      </if>
      <if test="actionType != null">
        ACTION_TYPE,
      </if>
      <if test="sceneryType != null">
        SCENERY_TYPE,
      </if>
      <if test="receiptType != null">
        RECEIPT_TYPE,
      </if>
      <if test="guarantyType != null">
        GUARANTY_TYPE,
      </if>
      <if test="checkTime != null">
        CHECK_TIME,
      </if>
      <if test="focusTime != null">
        FOCUS_TIME,
      </if>
      <if test="userLevel != null">
        USER_LEVEL,
      </if>
      <if test="tissueLine != null">
        TISSUE_LINE,
      </if>
      <if test="saleBuyPrice != null">
        SALE_BUY_PRICE,
      </if>
      <if test="partnerId != null">
        PARTNER_ID,
      </if>
      <if test="funkanUserId != null">
        FUNKAN_USER_ID,
      </if>
      <if test="saleKeyUserId != null">
        SALE_KEY_USER_ID,
      </if>
      <if test="fileCoding != null">
        FILE_CODING,
      </if>
      <if test="mortgageBank != null">
        MORTGAGE_BANK,
      </if>
      <if test="arrears != null">
        ARREARS,
      </if>
      <if test="currentRent != null">
        CURRENT_RENT,
      </if>
      <if test="turnRate != null">
        TURN_RATE,
      </if>
      <if test="houseVerify != null">
        HOUSE_VERIFY,
      </if>
      <if test="kitchen != null">
        KITCHEN,
      </if>
      <if test="mlWholeLayer != null">
        ML_WHOLE_LAYER,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
      <if test="leaseExpirationTime != null">
        LEASE_EXPIRATION_TIME,
      </if>
      <if test="transactionStatus != null">
        TRANSACTION_STATUS,
      </if>
      <if test="hasRecorded != null">
        HAS_RECORDED,
      </if>
      <if test="saleEntrustPrice != null">
        SALE_ENTRUST_PRICE,
      </if>
      <if test="hasEntrust != null">
        HAS_ENTRUST,
      </if>
      <if test="offereeTime != null">
        OFFEREE_TIME,
      </if>
      <if test="saleAmountChangeTime != null">
        SALE_AMOUNT_CHANGE_TIME,
      </if>
      <if test="fuzzySearch != null">
        FUZZY_SEARCH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{saleId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createArchiveId != null">
        #{createArchiveId,jdbcType=INTEGER},
      </if>
      <if test="saleNo != null">
        #{saleNo,jdbcType=VARCHAR},
      </if>
      <if test="saleOwner != null">
        #{saleOwner,jdbcType=VARCHAR},
      </if>
      <if test="cellPhone != null">
        #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="saleSubject != null">
        #{saleSubject,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="buildCode != null">
        #{buildCode,jdbcType=VARCHAR},
      </if>
      <if test="saleReg != null">
        #{saleReg,jdbcType=INTEGER},
      </if>
      <if test="regionName != null">
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="sectionId != null">
        #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sectionName != null">
        #{sectionName,jdbcType=VARCHAR},
      </if>
      <if test="saleRound != null">
        #{saleRound,jdbcType=TINYINT},
      </if>
      <if test="tradeAddr != null">
        #{tradeAddr,jdbcType=VARCHAR},
      </if>
      <if test="saleRoof != null">
        #{saleRoof,jdbcType=VARCHAR},
      </if>
      <if test="saleUnit != null">
        #{saleUnit,jdbcType=VARCHAR},
      </if>
      <if test="unitFloor != null">
        #{unitFloor,jdbcType=VARCHAR},
      </if>
      <if test="saleNum != null">
        #{saleNum,jdbcType=VARCHAR},
      </if>
      <if test="saleRoofR != null">
        #{saleRoofR,jdbcType=VARCHAR},
      </if>
      <if test="saleUnitR != null">
        #{saleUnitR,jdbcType=VARCHAR},
      </if>
      <if test="unitFloorR != null">
        #{unitFloorR,jdbcType=VARCHAR},
      </if>
      <if test="saleNumR != null">
        #{saleNumR,jdbcType=VARCHAR},
      </if>
      <if test="saleLadder != null">
        #{saleLadder,jdbcType=INTEGER},
      </if>
      <if test="saleDoors != null">
        #{saleDoors,jdbcType=TINYINT},
      </if>
      <if test="saleRoom != null">
        #{saleRoom,jdbcType=TINYINT},
      </if>
      <if test="saleHall != null">
        #{saleHall,jdbcType=TINYINT},
      </if>
      <if test="saleWei != null">
        #{saleWei,jdbcType=TINYINT},
      </if>
      <if test="saleYang != null">
        #{saleYang,jdbcType=TINYINT},
      </if>
      <if test="saleType != null">
        #{saleType,jdbcType=TINYINT},
      </if>
      <if test="saleFloor != null">
        #{saleFloor,jdbcType=SMALLINT},
      </if>
      <if test="saleFloors != null">
        #{saleFloors,jdbcType=INTEGER},
      </if>
      <if test="saleFitment != null">
        #{saleFitment,jdbcType=TINYINT},
      </if>
      <if test="saleDirect != null">
        #{saleDirect,jdbcType=TINYINT},
      </if>
      <if test="saleYear != null">
        #{saleYear,jdbcType=SMALLINT},
      </if>
      <if test="saleStruct != null">
        #{saleStruct,jdbcType=TINYINT},
      </if>
      <if test="saleUseage != null">
        #{saleUseage,jdbcType=TINYINT},
      </if>
      <if test="shopUsage != null">
        #{shopUsage,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=TINYINT},
      </if>
      <if test="officeLevel != null">
        #{officeLevel,jdbcType=TINYINT},
      </if>
      <if test="saleStreet != null">
        #{saleStreet,jdbcType=BIT},
      </if>
      <if test="saleRight != null">
        #{saleRight,jdbcType=TINYINT},
      </if>
      <if test="saleMortgage != null">
        #{saleMortgage,jdbcType=VARCHAR},
      </if>
      <if test="saleAccount != null">
        #{saleAccount,jdbcType=VARCHAR},
      </if>
      <if test="saleArea != null">
        #{saleArea,jdbcType=NUMERIC},
      </if>
      <if test="saleTotalPrice != null">
        #{saleTotalPrice,jdbcType=NUMERIC},
      </if>
      <if test="saleUnitPrice != null">
        #{saleUnitPrice,jdbcType=NUMERIC},
      </if>
      <if test="saleLowestPrice != null">
        #{saleLowestPrice,jdbcType=NUMERIC},
      </if>
      <if test="saleProperty != null">
        #{saleProperty,jdbcType=NUMERIC},
      </if>
      <if test="isSeperator != null">
        #{isSeperator,jdbcType=BIT},
      </if>
      <if test="saleLeaveTime != null">
        #{saleLeaveTime,jdbcType=VARCHAR},
      </if>
      <if test="hallStructure != null">
        #{hallStructure,jdbcType=TINYINT},
      </if>
      <if test="ugArea != null">
        #{ugArea,jdbcType=NUMERIC},
      </if>
      <if test="ugType != null">
        #{ugType,jdbcType=TINYINT},
      </if>
      <if test="gardenArea != null">
        #{gardenArea,jdbcType=NUMERIC},
      </if>
      <if test="garageAmount != null">
        #{garageAmount,jdbcType=TINYINT},
      </if>
      <if test="saleCharact != null">
        #{saleCharact,jdbcType=VARCHAR},
      </if>
      <if test="saleMemo != null">
        #{saleMemo,jdbcType=VARCHAR},
      </if>
      <if test="saleSource != null">
        #{saleSource,jdbcType=TINYINT},
      </if>
      <if test="saleKey != null">
        #{saleKey,jdbcType=BIT},
      </if>
      <if test="saleKeyNum != null">
        #{saleKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="keyTime != null">
        #{keyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleExplrth != null">
        #{saleExplrth,jdbcType=BIT},
      </if>
      <if test="explrthDatetime != null">
        #{explrthDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleConsign != null">
        #{saleConsign,jdbcType=TINYINT},
      </if>
      <if test="saleConsignNo != null">
        #{saleConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="weituoTime != null">
        #{weituoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleCooperate != null">
        #{saleCooperate,jdbcType=BIT},
      </if>
      <if test="salePublish != null">
        #{salePublish,jdbcType=BIT},
      </if>
      <if test="saleMap != null">
        #{saleMap,jdbcType=TINYINT},
      </if>
      <if test="saleLevel != null">
        #{saleLevel,jdbcType=TINYINT},
      </if>
      <if test="plateType != null">
        #{plateType,jdbcType=TINYINT},
      </if>
      <if test="saleStatus != null">
        #{saleStatus,jdbcType=TINYINT},
      </if>
      <if test="trackTime != null">
        #{trackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackTime2 != null">
        #{trackTime2,jdbcType=TIMESTAMP},
      </if>
      <if test="actionTime != null">
        #{actionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromSoso != null">
        #{fromSoso,jdbcType=BIT},
      </if>
      <if test="repeatFlag != null">
        #{repeatFlag,jdbcType=TINYINT},
      </if>
      <if test="infoType != null">
        #{infoType,jdbcType=TINYINT},
      </if>
      <if test="shareFlag != null">
        #{shareFlag,jdbcType=BIT},
      </if>
      <if test="friendHouse != null">
        #{friendHouse,jdbcType=BIT},
      </if>
      <if test="cooperateTime != null">
        #{cooperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="complaintFlag != null">
        #{complaintFlag,jdbcType=BIT},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="photoTime != null">
        #{photoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="redFlag != null">
        #{redFlag,jdbcType=BIT},
      </if>
      <if test="orangeFlag != null">
        #{orangeFlag,jdbcType=BIT},
      </if>
      <if test="publicCount != null">
        #{publicCount,jdbcType=INTEGER},
      </if>
      <if test="publicTime != null">
        #{publicTime,jdbcType=TIMESTAMP},
      </if>
      <if test="specialTime != null">
        #{specialTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleTime != null">
        #{scheduleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealTime != null">
        #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="writeoffTime != null">
        #{writeoffTime,jdbcType=TIMESTAMP},
      </if>
      <if test="secrecyTime != null">
        #{secrecyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commendTime != null">
        #{commendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="privateTime != null">
        #{privateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromPublic != null">
        #{fromPublic,jdbcType=BIT},
      </if>
      <if test="thumbUrl != null">
        #{thumbUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tagIds != null">
        #{tagIds,jdbcType=VARCHAR},
      </if>
      <if test="saleCertTime != null">
        #{saleCertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishSites != null">
        #{publishSites,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="saleRoofT != null">
        #{saleRoofT,jdbcType=VARCHAR},
      </if>
      <if test="saleNumT != null">
        #{saleNumT,jdbcType=VARCHAR},
      </if>
      <if test="saleUnitT != null">
        #{saleUnitT,jdbcType=VARCHAR},
      </if>
      <if test="videoNum != null">
        #{videoNum,jdbcType=TINYINT},
      </if>
      <if test="creatorUid != null">
        #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="isIgnore != null">
        #{isIgnore,jdbcType=TINYINT},
      </if>
      <if test="saleIdOld != null">
        #{saleIdOld,jdbcType=INTEGER},
      </if>
      <if test="saleInnerarea != null">
        #{saleInnerarea,jdbcType=DECIMAL},
      </if>
      <if test="houseBargain != null">
        #{houseBargain,jdbcType=BIT},
      </if>
      <if test="encodeFlag != null">
        #{encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="lock != null">
        #{lock,jdbcType=TINYINT},
      </if>
      <if test="trueFlag != null">
        #{trueFlag,jdbcType=TINYINT},
      </if>
      <if test="sendtotencent != null">
        #{sendtotencent,jdbcType=TINYINT},
      </if>
      <if test="houseSourceWay != null">
        #{houseSourceWay,jdbcType=TINYINT},
      </if>
      <if test="youShareFlag != null">
        #{youShareFlag,jdbcType=TINYINT},
      </if>
      <if test="youShareTime != null">
        #{youShareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="youBuyCount != null">
        #{youBuyCount,jdbcType=INTEGER},
      </if>
      <if test="ownerSex != null">
        #{ownerSex,jdbcType=TINYINT},
      </if>
      <if test="youShareId != null">
        #{youShareId,jdbcType=INTEGER},
      </if>
      <if test="thumbpicVer != null">
        #{thumbpicVer,jdbcType=VARCHAR},
      </if>
      <if test="privateUserId != null">
        #{privateUserId,jdbcType=INTEGER},
      </if>
      <if test="addrMd5 != null">
        #{addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="panoramaMap != null">
        #{panoramaMap,jdbcType=INTEGER},
      </if>
      <if test="youjiaStatisticFlag != null">
        #{youjiaStatisticFlag,jdbcType=TINYINT},
      </if>
      <if test="adsFlag != null">
        #{adsFlag,jdbcType=TINYINT},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="videoReviewFlag != null">
        #{videoReviewFlag,jdbcType=TINYINT},
      </if>
      <if test="hasPanorama != null">
        #{hasPanorama,jdbcType=TINYINT},
      </if>
      <if test="biddingFlag != null">
        #{biddingFlag,jdbcType=BIT},
      </if>
      <if test="competeEndTime != null">
        #{competeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="competePrice != null">
        #{competePrice,jdbcType=NUMERIC},
      </if>
      <if test="youShareMoneyState != null">
        #{youShareMoneyState,jdbcType=TINYINT},
      </if>
      <if test="sendtoWeidian != null">
        #{sendtoWeidian,jdbcType=TINYINT},
      </if>
      <if test="sendtoYouyou != null">
        #{sendtoYouyou,jdbcType=TINYINT},
      </if>
      <if test="youyouDeal != null">
        #{youyouDeal,jdbcType=TINYINT},
      </if>
      <if test="specialEndTime != null">
        #{specialEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleEndTime != null">
        #{scheduleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkCodeFun != null">
        #{checkCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="proxyUrl != null">
        #{proxyUrl,jdbcType=VARCHAR},
      </if>
      <if test="qzCodeFun != null">
        #{qzCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="checkCodeUrl != null">
        #{checkCodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="uploadProxyUser != null">
        #{uploadProxyUser,jdbcType=VARCHAR},
      </if>
      <if test="cityShareFlag != null">
        #{cityShareFlag,jdbcType=TINYINT},
      </if>
      <if test="brandCompId != null">
        #{brandCompId,jdbcType=INTEGER},
      </if>
      <if test="compId2 != null">
        #{compId2,jdbcType=INTEGER},
      </if>
      <if test="fileSystemType != null">
        #{fileSystemType,jdbcType=TINYINT},
      </if>
      <if test="ownershipType != null">
        #{ownershipType,jdbcType=TINYINT},
      </if>
      <if test="effectiveDate != null">
        #{effectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="funmanagerSalestatus != null">
        #{funmanagerSalestatus,jdbcType=TINYINT},
      </if>
      <if test="hasFunkan != null">
        #{hasFunkan,jdbcType=TINYINT},
      </if>
      <if test="jointCellPhone != null">
        #{jointCellPhone,jdbcType=VARCHAR},
      </if>
      <if test="jointUserName != null">
        #{jointUserName,jdbcType=VARCHAR},
      </if>
      <if test="jointUserSex != null">
        #{jointUserSex,jdbcType=TINYINT},
      </if>
      <if test="jointIdCard != null">
        #{jointIdCard,jdbcType=VARCHAR},
      </if>
      <if test="respiteEndTime != null">
        #{respiteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleLeaseId != null">
        #{saleLeaseId,jdbcType=INTEGER},
      </if>
      <if test="isSaleLease != null">
        #{isSaleLease,jdbcType=TINYINT},
      </if>
      <if test="entrustEndTime != null">
        #{entrustEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entrustCreateUser != null">
        #{entrustCreateUser,jdbcType=INTEGER},
      </if>
      <if test="availableTime != null">
        #{availableTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPriceEnd != null">
        #{modifyPriceEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPriceTrend != null">
        #{modifyPriceTrend,jdbcType=TINYINT},
      </if>
      <if test="houseSituation != null">
        #{houseSituation,jdbcType=TINYINT},
      </if>
      <if test="lastDkanTime != null">
        #{lastDkanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldTrueFlag != null">
        #{oldTrueFlag,jdbcType=TINYINT},
      </if>
      <if test="innerNo != null">
        #{innerNo,jdbcType=INTEGER},
      </if>
      <if test="jointIdCardType != null">
        #{jointIdCardType,jdbcType=INTEGER},
      </if>
      <if test="idCardType != null">
        #{idCardType,jdbcType=INTEGER},
      </if>
      <if test="saleBay != null">
        #{saleBay,jdbcType=NUMERIC},
      </if>
      <if test="saleDepth != null">
        #{saleDepth,jdbcType=NUMERIC},
      </if>
      <if test="saleStorey != null">
        #{saleStorey,jdbcType=NUMERIC},
      </if>
      <if test="saleGradation != null">
        #{saleGradation,jdbcType=TINYINT},
      </if>
      <if test="saleNature != null">
        #{saleNature,jdbcType=TINYINT},
      </if>
      <if test="villaType != null">
        #{villaType,jdbcType=TINYINT},
      </if>
      <if test="saleStyle != null">
        #{saleStyle,jdbcType=TINYINT},
      </if>
      <if test="actionType != null">
        #{actionType,jdbcType=TINYINT},
      </if>
      <if test="sceneryType != null">
        #{sceneryType,jdbcType=TINYINT},
      </if>
      <if test="receiptType != null">
        #{receiptType,jdbcType=TINYINT},
      </if>
      <if test="guarantyType != null">
        #{guarantyType,jdbcType=TINYINT},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=VARCHAR},
      </if>
      <if test="focusTime != null">
        #{focusTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLevel != null">
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="tissueLine != null">
        #{tissueLine,jdbcType=VARCHAR},
      </if>
      <if test="saleBuyPrice != null">
        #{saleBuyPrice,jdbcType=NUMERIC},
      </if>
      <if test="partnerId != null">
        #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="funkanUserId != null">
        #{funkanUserId,jdbcType=INTEGER},
      </if>
      <if test="saleKeyUserId != null">
        #{saleKeyUserId,jdbcType=INTEGER},
      </if>
      <if test="fileCoding != null">
        #{fileCoding,jdbcType=VARCHAR},
      </if>
      <if test="mortgageBank != null">
        #{mortgageBank,jdbcType=VARCHAR},
      </if>
      <if test="arrears != null">
        #{arrears,jdbcType=NUMERIC},
      </if>
      <if test="currentRent != null">
        #{currentRent,jdbcType=NUMERIC},
      </if>
      <if test="turnRate != null">
        #{turnRate,jdbcType=NUMERIC},
      </if>
      <if test="houseVerify != null">
        #{houseVerify,jdbcType=TINYINT},
      </if>
      <if test="kitchen != null">
        #{kitchen,jdbcType=TINYINT},
      </if>
      <if test="mlWholeLayer != null">
        #{mlWholeLayer,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="leaseExpirationTime != null">
        #{leaseExpirationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transactionStatus != null">
        #{transactionStatus,jdbcType=TINYINT},
      </if>
      <if test="hasRecorded != null">
        #{hasRecorded,jdbcType=TINYINT},
      </if>
      <if test="saleEntrustPrice != null">
        #{saleEntrustPrice,jdbcType=NUMERIC},
      </if>
      <if test="hasEntrust != null">
        #{hasEntrust,jdbcType=TINYINT},
      </if>
      <if test="offereeTime != null">
        #{offereeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleAmountChangeTime != null">
        #{saleAmountChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fuzzySearch != null">
        #{fuzzySearch,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunSaleExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_SALE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_SALE
    <set>
      <if test="record.saleId != null">
        SALE_ID = #{record.saleId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createArchiveId != null">
        CREATE_ARCHIVE_ID = #{record.createArchiveId,jdbcType=INTEGER},
      </if>
      <if test="record.saleNo != null">
        SALE_NO = #{record.saleNo,jdbcType=VARCHAR},
      </if>
      <if test="record.saleOwner != null">
        SALE_OWNER = #{record.saleOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.cellPhone != null">
        CELL_PHONE = #{record.cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.saleSubject != null">
        SALE_SUBJECT = #{record.saleSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.buildName != null">
        BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildCode != null">
        BUILD_CODE = #{record.buildCode,jdbcType=VARCHAR},
      </if>
      <if test="record.saleReg != null">
        SALE_REG = #{record.saleReg,jdbcType=INTEGER},
      </if>
      <if test="record.regionName != null">
        REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionId != null">
        SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      </if>
      <if test="record.sectionName != null">
        SECTION_NAME = #{record.sectionName,jdbcType=VARCHAR},
      </if>
      <if test="record.saleRound != null">
        SALE_ROUND = #{record.saleRound,jdbcType=TINYINT},
      </if>
      <if test="record.tradeAddr != null">
        TRADE_ADDR = #{record.tradeAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.saleRoof != null">
        SALE_ROOF = #{record.saleRoof,jdbcType=VARCHAR},
      </if>
      <if test="record.saleUnit != null">
        SALE_UNIT = #{record.saleUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.unitFloor != null">
        UNIT_FLOOR = #{record.unitFloor,jdbcType=VARCHAR},
      </if>
      <if test="record.saleNum != null">
        SALE_NUM = #{record.saleNum,jdbcType=VARCHAR},
      </if>
      <if test="record.saleRoofR != null">
        SALE_ROOF_R = #{record.saleRoofR,jdbcType=VARCHAR},
      </if>
      <if test="record.saleUnitR != null">
        SALE_UNIT_R = #{record.saleUnitR,jdbcType=VARCHAR},
      </if>
      <if test="record.unitFloorR != null">
        UNIT_FLOOR_R = #{record.unitFloorR,jdbcType=VARCHAR},
      </if>
      <if test="record.saleNumR != null">
        SALE_NUM_R = #{record.saleNumR,jdbcType=VARCHAR},
      </if>
      <if test="record.saleLadder != null">
        SALE_LADDER = #{record.saleLadder,jdbcType=INTEGER},
      </if>
      <if test="record.saleDoors != null">
        SALE_DOORS = #{record.saleDoors,jdbcType=TINYINT},
      </if>
      <if test="record.saleRoom != null">
        SALE_ROOM = #{record.saleRoom,jdbcType=TINYINT},
      </if>
      <if test="record.saleHall != null">
        SALE_HALL = #{record.saleHall,jdbcType=TINYINT},
      </if>
      <if test="record.saleWei != null">
        SALE_WEI = #{record.saleWei,jdbcType=TINYINT},
      </if>
      <if test="record.saleYang != null">
        SALE_YANG = #{record.saleYang,jdbcType=TINYINT},
      </if>
      <if test="record.saleType != null">
        SALE_TYPE = #{record.saleType,jdbcType=TINYINT},
      </if>
      <if test="record.saleFloor != null">
        SALE_FLOOR = #{record.saleFloor,jdbcType=SMALLINT},
      </if>
      <if test="record.saleFloors != null">
        SALE_FLOORS = #{record.saleFloors,jdbcType=INTEGER},
      </if>
      <if test="record.saleFitment != null">
        SALE_FITMENT = #{record.saleFitment,jdbcType=TINYINT},
      </if>
      <if test="record.saleDirect != null">
        SALE_DIRECT = #{record.saleDirect,jdbcType=TINYINT},
      </if>
      <if test="record.saleYear != null">
        SALE_YEAR = #{record.saleYear,jdbcType=SMALLINT},
      </if>
      <if test="record.saleStruct != null">
        SALE_STRUCT = #{record.saleStruct,jdbcType=TINYINT},
      </if>
      <if test="record.saleUseage != null">
        SALE_USEAGE = #{record.saleUseage,jdbcType=TINYINT},
      </if>
      <if test="record.shopUsage != null">
        SHOP_USAGE = #{record.shopUsage,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        OWNER_TYPE = #{record.ownerType,jdbcType=TINYINT},
      </if>
      <if test="record.officeLevel != null">
        OFFICE_LEVEL = #{record.officeLevel,jdbcType=TINYINT},
      </if>
      <if test="record.saleStreet != null">
        SALE_STREET = #{record.saleStreet,jdbcType=BIT},
      </if>
      <if test="record.saleRight != null">
        SALE_RIGHT = #{record.saleRight,jdbcType=TINYINT},
      </if>
      <if test="record.saleMortgage != null">
        SALE_MORTGAGE = #{record.saleMortgage,jdbcType=VARCHAR},
      </if>
      <if test="record.saleAccount != null">
        SALE_ACCOUNT = #{record.saleAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.saleArea != null">
        SALE_AREA = #{record.saleArea,jdbcType=NUMERIC},
      </if>
      <if test="record.saleTotalPrice != null">
        SALE_TOTAL_PRICE = #{record.saleTotalPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.saleUnitPrice != null">
        SALE_UNIT_PRICE = #{record.saleUnitPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.saleLowestPrice != null">
        SALE_LOWEST_PRICE = #{record.saleLowestPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.saleProperty != null">
        SALE_PROPERTY = #{record.saleProperty,jdbcType=NUMERIC},
      </if>
      <if test="record.isSeperator != null">
        IS_SEPERATOR = #{record.isSeperator,jdbcType=BIT},
      </if>
      <if test="record.saleLeaveTime != null">
        SALE_LEAVE_TIME = #{record.saleLeaveTime,jdbcType=VARCHAR},
      </if>
      <if test="record.hallStructure != null">
        HALL_STRUCTURE = #{record.hallStructure,jdbcType=TINYINT},
      </if>
      <if test="record.ugArea != null">
        UG_AREA = #{record.ugArea,jdbcType=NUMERIC},
      </if>
      <if test="record.ugType != null">
        UG_TYPE = #{record.ugType,jdbcType=TINYINT},
      </if>
      <if test="record.gardenArea != null">
        GARDEN_AREA = #{record.gardenArea,jdbcType=NUMERIC},
      </if>
      <if test="record.garageAmount != null">
        GARAGE_AMOUNT = #{record.garageAmount,jdbcType=TINYINT},
      </if>
      <if test="record.saleCharact != null">
        SALE_CHARACT = #{record.saleCharact,jdbcType=VARCHAR},
      </if>
      <if test="record.saleMemo != null">
        SALE_MEMO = #{record.saleMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.saleSource != null">
        SALE_SOURCE = #{record.saleSource,jdbcType=TINYINT},
      </if>
      <if test="record.saleKey != null">
        SALE_KEY = #{record.saleKey,jdbcType=BIT},
      </if>
      <if test="record.saleKeyNum != null">
        SALE_KEY_NUM = #{record.saleKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="record.keyTime != null">
        KEY_TIME = #{record.keyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.saleExplrth != null">
        SALE_EXPLRTH = #{record.saleExplrth,jdbcType=BIT},
      </if>
      <if test="record.explrthDatetime != null">
        EXPLRTH_DATETIME = #{record.explrthDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.saleConsign != null">
        SALE_CONSIGN = #{record.saleConsign,jdbcType=TINYINT},
      </if>
      <if test="record.saleConsignNo != null">
        SALE_CONSIGN_NO = #{record.saleConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="record.weituoTime != null">
        WEITUO_TIME = #{record.weituoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.saleCooperate != null">
        SALE_COOPERATE = #{record.saleCooperate,jdbcType=BIT},
      </if>
      <if test="record.salePublish != null">
        SALE_PUBLISH = #{record.salePublish,jdbcType=BIT},
      </if>
      <if test="record.saleMap != null">
        SALE_MAP = #{record.saleMap,jdbcType=TINYINT},
      </if>
      <if test="record.saleLevel != null">
        SALE_LEVEL = #{record.saleLevel,jdbcType=TINYINT},
      </if>
      <if test="record.plateType != null">
        PLATE_TYPE = #{record.plateType,jdbcType=TINYINT},
      </if>
      <if test="record.saleStatus != null">
        SALE_STATUS = #{record.saleStatus,jdbcType=TINYINT},
      </if>
      <if test="record.trackTime != null">
        TRACK_TIME = #{record.trackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.trackTime2 != null">
        TRACK_TIME2 = #{record.trackTime2,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actionTime != null">
        ACTION_TIME = #{record.actionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fromSoso != null">
        FROM_SOSO = #{record.fromSoso,jdbcType=BIT},
      </if>
      <if test="record.repeatFlag != null">
        REPEAT_FLAG = #{record.repeatFlag,jdbcType=TINYINT},
      </if>
      <if test="record.infoType != null">
        INFO_TYPE = #{record.infoType,jdbcType=TINYINT},
      </if>
      <if test="record.shareFlag != null">
        SHARE_FLAG = #{record.shareFlag,jdbcType=BIT},
      </if>
      <if test="record.friendHouse != null">
        FRIEND_HOUSE = #{record.friendHouse,jdbcType=BIT},
      </if>
      <if test="record.cooperateTime != null">
        COOPERATE_TIME = #{record.cooperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.complaintFlag != null">
        COMPLAINT_FLAG = #{record.complaintFlag,jdbcType=BIT},
      </if>
      <if test="record.publishTime != null">
        PUBLISH_TIME = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.photoTime != null">
        PHOTO_TIME = #{record.photoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.redFlag != null">
        RED_FLAG = #{record.redFlag,jdbcType=BIT},
      </if>
      <if test="record.orangeFlag != null">
        ORANGE_FLAG = #{record.orangeFlag,jdbcType=BIT},
      </if>
      <if test="record.publicCount != null">
        PUBLIC_COUNT = #{record.publicCount,jdbcType=INTEGER},
      </if>
      <if test="record.publicTime != null">
        PUBLIC_TIME = #{record.publicTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.specialTime != null">
        SPECIAL_TIME = #{record.specialTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scheduleTime != null">
        SCHEDULE_TIME = #{record.scheduleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealTime != null">
        DEAL_TIME = #{record.dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.writeoffTime != null">
        WRITEOFF_TIME = #{record.writeoffTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.secrecyTime != null">
        SECRECY_TIME = #{record.secrecyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commendTime != null">
        COMMEND_TIME = #{record.commendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.privateTime != null">
        PRIVATE_TIME = #{record.privateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fromPublic != null">
        FROM_PUBLIC = #{record.fromPublic,jdbcType=BIT},
      </if>
      <if test="record.thumbUrl != null">
        THUMB_URL = #{record.thumbUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tagIds != null">
        TAG_IDS = #{record.tagIds,jdbcType=VARCHAR},
      </if>
      <if test="record.saleCertTime != null">
        SALE_CERT_TIME = #{record.saleCertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.publishSites != null">
        PUBLISH_SITES = #{record.publishSites,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.saleRoofT != null">
        SALE_ROOF_T = #{record.saleRoofT,jdbcType=VARCHAR},
      </if>
      <if test="record.saleNumT != null">
        SALE_NUM_T = #{record.saleNumT,jdbcType=VARCHAR},
      </if>
      <if test="record.saleUnitT != null">
        SALE_UNIT_T = #{record.saleUnitT,jdbcType=VARCHAR},
      </if>
      <if test="record.videoNum != null">
        VIDEO_NUM = #{record.videoNum,jdbcType=TINYINT},
      </if>
      <if test="record.creatorUid != null">
        CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      </if>
      <if test="record.isIgnore != null">
        is_ignore = #{record.isIgnore,jdbcType=TINYINT},
      </if>
      <if test="record.saleIdOld != null">
        sale_id_old = #{record.saleIdOld,jdbcType=INTEGER},
      </if>
      <if test="record.saleInnerarea != null">
        SALE_INNERAREA = #{record.saleInnerarea,jdbcType=DECIMAL},
      </if>
      <if test="record.houseBargain != null">
        HOUSE_BARGAIN = #{record.houseBargain,jdbcType=BIT},
      </if>
      <if test="record.encodeFlag != null">
        ENCODE_FLAG = #{record.encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="record.lock != null">
        [LOCK] = #{record.lock,jdbcType=TINYINT},
      </if>
      <if test="record.trueFlag != null">
        TRUE_FLAG = #{record.trueFlag,jdbcType=TINYINT},
      </if>
      <if test="record.sendtotencent != null">
        SENDTOTENCENT = #{record.sendtotencent,jdbcType=TINYINT},
      </if>
      <if test="record.houseSourceWay != null">
        HOUSE_SOURCE_WAY = #{record.houseSourceWay,jdbcType=TINYINT},
      </if>
      <if test="record.youShareFlag != null">
        YOU_SHARE_FLAG = #{record.youShareFlag,jdbcType=TINYINT},
      </if>
      <if test="record.youShareTime != null">
        YOU_SHARE_TIME = #{record.youShareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.youBuyCount != null">
        YOU_BUY_COUNT = #{record.youBuyCount,jdbcType=INTEGER},
      </if>
      <if test="record.ownerSex != null">
        OWNER_SEX = #{record.ownerSex,jdbcType=TINYINT},
      </if>
      <if test="record.youShareId != null">
        YOU_SHARE_ID = #{record.youShareId,jdbcType=INTEGER},
      </if>
      <if test="record.thumbpicVer != null">
        THUMBPIC_VER = #{record.thumbpicVer,jdbcType=VARCHAR},
      </if>
      <if test="record.privateUserId != null">
        PRIVATE_USER_ID = #{record.privateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.addrMd5 != null">
        ADDR_MD5 = #{record.addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.panoramaMap != null">
        PANORAMA_MAP = #{record.panoramaMap,jdbcType=INTEGER},
      </if>
      <if test="record.youjiaStatisticFlag != null">
        YOUJIA_STATISTIC_FLAG = #{record.youjiaStatisticFlag,jdbcType=TINYINT},
      </if>
      <if test="record.adsFlag != null">
        ADS_FLAG = #{record.adsFlag,jdbcType=TINYINT},
      </if>
      <if test="record.syncTime != null">
        SYNC_TIME = #{record.syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.videoReviewFlag != null">
        VIDEO_REVIEW_FLAG = #{record.videoReviewFlag,jdbcType=TINYINT},
      </if>
      <if test="record.hasPanorama != null">
        HAS_PANORAMA = #{record.hasPanorama,jdbcType=TINYINT},
      </if>
      <if test="record.biddingFlag != null">
        BIDDING_FLAG = #{record.biddingFlag,jdbcType=BIT},
      </if>
      <if test="record.competeEndTime != null">
        COMPETE_END_TIME = #{record.competeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.competePrice != null">
        COMPETE_PRICE = #{record.competePrice,jdbcType=NUMERIC},
      </if>
      <if test="record.youShareMoneyState != null">
        YOU_SHARE_MONEY_STATE = #{record.youShareMoneyState,jdbcType=TINYINT},
      </if>
      <if test="record.sendtoWeidian != null">
        SENDTO_WEIDIAN = #{record.sendtoWeidian,jdbcType=TINYINT},
      </if>
      <if test="record.sendtoYouyou != null">
        SENDTO_YOUYOU = #{record.sendtoYouyou,jdbcType=TINYINT},
      </if>
      <if test="record.youyouDeal != null">
        YOUYOU_DEAL = #{record.youyouDeal,jdbcType=TINYINT},
      </if>
      <if test="record.specialEndTime != null">
        SPECIAL_END_TIME = #{record.specialEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scheduleEndTime != null">
        SCHEDULE_END_TIME = #{record.scheduleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkCodeFun != null">
        CHECK_CODE_FUN = #{record.checkCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="record.proxyUrl != null">
        PROXY_URL = #{record.proxyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.qzCodeFun != null">
        QZ_CODE_FUN = #{record.qzCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="record.checkCodeUrl != null">
        CHECK_CODE_URL = #{record.checkCodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadProxyUser != null">
        UPLOAD_PROXY_USER = #{record.uploadProxyUser,jdbcType=VARCHAR},
      </if>
      <if test="record.cityShareFlag != null">
        CITY_SHARE_FLAG = #{record.cityShareFlag,jdbcType=TINYINT},
      </if>
      <if test="record.brandCompId != null">
        BRAND_COMP_ID = #{record.brandCompId,jdbcType=INTEGER},
      </if>
      <if test="record.compId2 != null">
        COMP_ID2 = #{record.compId2,jdbcType=INTEGER},
      </if>
      <if test="record.fileSystemType != null">
        FILE_SYSTEM_TYPE = #{record.fileSystemType,jdbcType=TINYINT},
      </if>
      <if test="record.ownershipType != null">
        OWNERSHIP_TYPE = #{record.ownershipType,jdbcType=TINYINT},
      </if>
      <if test="record.effectiveDate != null">
        EFFECTIVE_DATE = #{record.effectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.funmanagerSalestatus != null">
        FUNMANAGER_SALESTATUS = #{record.funmanagerSalestatus,jdbcType=TINYINT},
      </if>
      <if test="record.hasFunkan != null">
        HAS_FUNKAN = #{record.hasFunkan,jdbcType=TINYINT},
      </if>
      <if test="record.jointCellPhone != null">
        JOINT_CELL_PHONE = #{record.jointCellPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.jointUserName != null">
        JOINT_USER_NAME = #{record.jointUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.jointUserSex != null">
        JOINT_USER_SEX = #{record.jointUserSex,jdbcType=TINYINT},
      </if>
      <if test="record.jointIdCard != null">
        JOINT_ID_CARD = #{record.jointIdCard,jdbcType=VARCHAR},
      </if>
      <if test="record.respiteEndTime != null">
        RESPITE_END_TIME = #{record.respiteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.saleLeaseId != null">
        SALE_LEASE_ID = #{record.saleLeaseId,jdbcType=INTEGER},
      </if>
      <if test="record.isSaleLease != null">
        IS_SALE_LEASE = #{record.isSaleLease,jdbcType=TINYINT},
      </if>
      <if test="record.entrustEndTime != null">
        ENTRUST_END_TIME = #{record.entrustEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.entrustCreateUser != null">
        ENTRUST_CREATE_USER = #{record.entrustCreateUser,jdbcType=INTEGER},
      </if>
      <if test="record.availableTime != null">
        AVAILABLE_TIME = #{record.availableTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyPriceEnd != null">
        MODIFY_PRICE_END = #{record.modifyPriceEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyPriceTrend != null">
        MODIFY_PRICE_TREND = #{record.modifyPriceTrend,jdbcType=TINYINT},
      </if>
      <if test="record.houseSituation != null">
        HOUSE_SITUATION = #{record.houseSituation,jdbcType=TINYINT},
      </if>
      <if test="record.lastDkanTime != null">
        LAST_DKAN_TIME = #{record.lastDkanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oldTrueFlag != null">
        OLD_TRUE_FLAG = #{record.oldTrueFlag,jdbcType=TINYINT},
      </if>
      <if test="record.innerNo != null">
        INNER_NO = #{record.innerNo,jdbcType=INTEGER},
      </if>
      <if test="record.jointIdCardType != null">
        JOINT_ID_CARD_TYPE = #{record.jointIdCardType,jdbcType=INTEGER},
      </if>
      <if test="record.idCardType != null">
        ID_CARD_TYPE = #{record.idCardType,jdbcType=INTEGER},
      </if>
      <if test="record.saleBay != null">
        SALE_BAY = #{record.saleBay,jdbcType=NUMERIC},
      </if>
      <if test="record.saleDepth != null">
        SALE_DEPTH = #{record.saleDepth,jdbcType=NUMERIC},
      </if>
      <if test="record.saleStorey != null">
        SALE_STOREY = #{record.saleStorey,jdbcType=NUMERIC},
      </if>
      <if test="record.saleGradation != null">
        SALE_GRADATION = #{record.saleGradation,jdbcType=TINYINT},
      </if>
      <if test="record.saleNature != null">
        SALE_NATURE = #{record.saleNature,jdbcType=TINYINT},
      </if>
      <if test="record.villaType != null">
        VILLA_TYPE = #{record.villaType,jdbcType=TINYINT},
      </if>
      <if test="record.saleStyle != null">
        SALE_STYLE = #{record.saleStyle,jdbcType=TINYINT},
      </if>
      <if test="record.actionType != null">
        ACTION_TYPE = #{record.actionType,jdbcType=TINYINT},
      </if>
      <if test="record.sceneryType != null">
        SCENERY_TYPE = #{record.sceneryType,jdbcType=TINYINT},
      </if>
      <if test="record.receiptType != null">
        RECEIPT_TYPE = #{record.receiptType,jdbcType=TINYINT},
      </if>
      <if test="record.guarantyType != null">
        GUARANTY_TYPE = #{record.guarantyType,jdbcType=TINYINT},
      </if>
      <if test="record.checkTime != null">
        CHECK_TIME = #{record.checkTime,jdbcType=VARCHAR},
      </if>
      <if test="record.focusTime != null">
        FOCUS_TIME = #{record.focusTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userLevel != null">
        USER_LEVEL = #{record.userLevel,jdbcType=INTEGER},
      </if>
      <if test="record.tissueLine != null">
        TISSUE_LINE = #{record.tissueLine,jdbcType=VARCHAR},
      </if>
      <if test="record.saleBuyPrice != null">
        SALE_BUY_PRICE = #{record.saleBuyPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.partnerId != null">
        PARTNER_ID = #{record.partnerId,jdbcType=INTEGER},
      </if>
      <if test="record.funkanUserId != null">
        FUNKAN_USER_ID = #{record.funkanUserId,jdbcType=INTEGER},
      </if>
      <if test="record.saleKeyUserId != null">
        SALE_KEY_USER_ID = #{record.saleKeyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.fileCoding != null">
        FILE_CODING = #{record.fileCoding,jdbcType=VARCHAR},
      </if>
      <if test="record.mortgageBank != null">
        MORTGAGE_BANK = #{record.mortgageBank,jdbcType=VARCHAR},
      </if>
      <if test="record.arrears != null">
        ARREARS = #{record.arrears,jdbcType=NUMERIC},
      </if>
      <if test="record.currentRent != null">
        CURRENT_RENT = #{record.currentRent,jdbcType=NUMERIC},
      </if>
      <if test="record.turnRate != null">
        TURN_RATE = #{record.turnRate,jdbcType=NUMERIC},
      </if>
      <if test="record.houseVerify != null">
        HOUSE_VERIFY = #{record.houseVerify,jdbcType=TINYINT},
      </if>
      <if test="record.kitchen != null">
        KITCHEN = #{record.kitchen,jdbcType=TINYINT},
      </if>
      <if test="record.mlWholeLayer != null">
        ML_WHOLE_LAYER = #{record.mlWholeLayer,jdbcType=TINYINT},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.leaseExpirationTime != null">
        LEASE_EXPIRATION_TIME = #{record.leaseExpirationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transactionStatus != null">
        TRANSACTION_STATUS = #{record.transactionStatus,jdbcType=TINYINT},
      </if>
      <if test="record.hasRecorded != null">
        HAS_RECORDED = #{record.hasRecorded,jdbcType=TINYINT},
      </if>
      <if test="record.saleEntrustPrice != null">
        SALE_ENTRUST_PRICE = #{record.saleEntrustPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.hasEntrust != null">
        HAS_ENTRUST = #{record.hasEntrust,jdbcType=TINYINT},
      </if>
      <if test="record.offereeTime != null">
        OFFEREE_TIME = #{record.offereeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.saleAmountChangeTime != null">
        SALE_AMOUNT_CHANGE_TIME = #{record.saleAmountChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fuzzySearch != null">
        FUZZY_SEARCH = #{record.fuzzySearch,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--@mbggenerated-->
    update FUN_SALE
    set SALE_ID = #{record.saleId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      CREATE_ARCHIVE_ID = #{record.createArchiveId,jdbcType=INTEGER},
      SALE_NO = #{record.saleNo,jdbcType=VARCHAR},
      SALE_OWNER = #{record.saleOwner,jdbcType=VARCHAR},
      CELL_PHONE = #{record.cellPhone,jdbcType=VARCHAR},
      ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      SALE_SUBJECT = #{record.saleSubject,jdbcType=VARCHAR},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      BUILD_CODE = #{record.buildCode,jdbcType=VARCHAR},
      SALE_REG = #{record.saleReg,jdbcType=INTEGER},
      REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{record.sectionName,jdbcType=VARCHAR},
      SALE_ROUND = #{record.saleRound,jdbcType=TINYINT},
      TRADE_ADDR = #{record.tradeAddr,jdbcType=VARCHAR},
      SALE_ROOF = #{record.saleRoof,jdbcType=VARCHAR},
      SALE_UNIT = #{record.saleUnit,jdbcType=VARCHAR},
      UNIT_FLOOR = #{record.unitFloor,jdbcType=VARCHAR},
      SALE_NUM = #{record.saleNum,jdbcType=VARCHAR},
      SALE_ROOF_R = #{record.saleRoofR,jdbcType=VARCHAR},
      SALE_UNIT_R = #{record.saleUnitR,jdbcType=VARCHAR},
      UNIT_FLOOR_R = #{record.unitFloorR,jdbcType=VARCHAR},
      SALE_NUM_R = #{record.saleNumR,jdbcType=VARCHAR},
      SALE_LADDER = #{record.saleLadder,jdbcType=INTEGER},
      SALE_DOORS = #{record.saleDoors,jdbcType=TINYINT},
      SALE_ROOM = #{record.saleRoom,jdbcType=TINYINT},
      SALE_HALL = #{record.saleHall,jdbcType=TINYINT},
      SALE_WEI = #{record.saleWei,jdbcType=TINYINT},
      SALE_YANG = #{record.saleYang,jdbcType=TINYINT},
      SALE_TYPE = #{record.saleType,jdbcType=TINYINT},
      SALE_FLOOR = #{record.saleFloor,jdbcType=SMALLINT},
      SALE_FLOORS = #{record.saleFloors,jdbcType=INTEGER},
      SALE_FITMENT = #{record.saleFitment,jdbcType=TINYINT},
      SALE_DIRECT = #{record.saleDirect,jdbcType=TINYINT},
      SALE_YEAR = #{record.saleYear,jdbcType=SMALLINT},
      SALE_STRUCT = #{record.saleStruct,jdbcType=TINYINT},
      SALE_USEAGE = #{record.saleUseage,jdbcType=TINYINT},
      SHOP_USAGE = #{record.shopUsage,jdbcType=VARCHAR},
      OWNER_TYPE = #{record.ownerType,jdbcType=TINYINT},
      OFFICE_LEVEL = #{record.officeLevel,jdbcType=TINYINT},
      SALE_STREET = #{record.saleStreet,jdbcType=BIT},
      SALE_RIGHT = #{record.saleRight,jdbcType=TINYINT},
      SALE_MORTGAGE = #{record.saleMortgage,jdbcType=VARCHAR},
      SALE_ACCOUNT = #{record.saleAccount,jdbcType=VARCHAR},
      SALE_AREA = #{record.saleArea,jdbcType=NUMERIC},
      SALE_TOTAL_PRICE = #{record.saleTotalPrice,jdbcType=NUMERIC},
      SALE_UNIT_PRICE = #{record.saleUnitPrice,jdbcType=NUMERIC},
      SALE_LOWEST_PRICE = #{record.saleLowestPrice,jdbcType=NUMERIC},
      SALE_PROPERTY = #{record.saleProperty,jdbcType=NUMERIC},
      IS_SEPERATOR = #{record.isSeperator,jdbcType=BIT},
      SALE_LEAVE_TIME = #{record.saleLeaveTime,jdbcType=VARCHAR},
      HALL_STRUCTURE = #{record.hallStructure,jdbcType=TINYINT},
      UG_AREA = #{record.ugArea,jdbcType=NUMERIC},
      UG_TYPE = #{record.ugType,jdbcType=TINYINT},
      GARDEN_AREA = #{record.gardenArea,jdbcType=NUMERIC},
      GARAGE_AMOUNT = #{record.garageAmount,jdbcType=TINYINT},
      SALE_CHARACT = #{record.saleCharact,jdbcType=VARCHAR},
      SALE_MEMO = #{record.saleMemo,jdbcType=VARCHAR},
      SALE_SOURCE = #{record.saleSource,jdbcType=TINYINT},
      SALE_KEY = #{record.saleKey,jdbcType=BIT},
      SALE_KEY_NUM = #{record.saleKeyNum,jdbcType=VARCHAR},
      KEY_TIME = #{record.keyTime,jdbcType=TIMESTAMP},
      SALE_EXPLRTH = #{record.saleExplrth,jdbcType=BIT},
      EXPLRTH_DATETIME = #{record.explrthDatetime,jdbcType=TIMESTAMP},
      SALE_CONSIGN = #{record.saleConsign,jdbcType=TINYINT},
      SALE_CONSIGN_NO = #{record.saleConsignNo,jdbcType=VARCHAR},
      WEITUO_TIME = #{record.weituoTime,jdbcType=TIMESTAMP},
      SALE_COOPERATE = #{record.saleCooperate,jdbcType=BIT},
      SALE_PUBLISH = #{record.salePublish,jdbcType=BIT},
      SALE_MAP = #{record.saleMap,jdbcType=TINYINT},
      SALE_LEVEL = #{record.saleLevel,jdbcType=TINYINT},
      PLATE_TYPE = #{record.plateType,jdbcType=TINYINT},
      SALE_STATUS = #{record.saleStatus,jdbcType=TINYINT},
      TRACK_TIME = #{record.trackTime,jdbcType=TIMESTAMP},
      TRACK_TIME2 = #{record.trackTime2,jdbcType=TIMESTAMP},
      ACTION_TIME = #{record.actionTime,jdbcType=TIMESTAMP},
      FROM_SOSO = #{record.fromSoso,jdbcType=BIT},
      REPEAT_FLAG = #{record.repeatFlag,jdbcType=TINYINT},
      INFO_TYPE = #{record.infoType,jdbcType=TINYINT},
      SHARE_FLAG = #{record.shareFlag,jdbcType=BIT},
      FRIEND_HOUSE = #{record.friendHouse,jdbcType=BIT},
      COOPERATE_TIME = #{record.cooperateTime,jdbcType=TIMESTAMP},
      COMPLAINT_FLAG = #{record.complaintFlag,jdbcType=BIT},
      PUBLISH_TIME = #{record.publishTime,jdbcType=TIMESTAMP},
      PHOTO_TIME = #{record.photoTime,jdbcType=TIMESTAMP},
      RED_FLAG = #{record.redFlag,jdbcType=BIT},
      ORANGE_FLAG = #{record.orangeFlag,jdbcType=BIT},
      PUBLIC_COUNT = #{record.publicCount,jdbcType=INTEGER},
      PUBLIC_TIME = #{record.publicTime,jdbcType=TIMESTAMP},
      SPECIAL_TIME = #{record.specialTime,jdbcType=TIMESTAMP},
      SCHEDULE_TIME = #{record.scheduleTime,jdbcType=TIMESTAMP},
      DEAL_TIME = #{record.dealTime,jdbcType=TIMESTAMP},
      WRITEOFF_TIME = #{record.writeoffTime,jdbcType=TIMESTAMP},
      SECRECY_TIME = #{record.secrecyTime,jdbcType=TIMESTAMP},
      COMMEND_TIME = #{record.commendTime,jdbcType=TIMESTAMP},
      PRIVATE_TIME = #{record.privateTime,jdbcType=TIMESTAMP},
      FROM_PUBLIC = #{record.fromPublic,jdbcType=BIT},
      THUMB_URL = #{record.thumbUrl,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      TAG_IDS = #{record.tagIds,jdbcType=VARCHAR},
      SALE_CERT_TIME = #{record.saleCertTime,jdbcType=TIMESTAMP},
      PUBLISH_SITES = #{record.publishSites,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      SALE_ROOF_T = #{record.saleRoofT,jdbcType=VARCHAR},
      SALE_NUM_T = #{record.saleNumT,jdbcType=VARCHAR},
      SALE_UNIT_T = #{record.saleUnitT,jdbcType=VARCHAR},
      VIDEO_NUM = #{record.videoNum,jdbcType=TINYINT},
      CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      is_ignore = #{record.isIgnore,jdbcType=TINYINT},
      sale_id_old = #{record.saleIdOld,jdbcType=INTEGER},
      SALE_INNERAREA = #{record.saleInnerarea,jdbcType=DECIMAL},
      HOUSE_BARGAIN = #{record.houseBargain,jdbcType=BIT},
      ENCODE_FLAG = #{record.encodeFlag,jdbcType=TINYINT},
      [LOCK] = #{record.lock,jdbcType=TINYINT},
      TRUE_FLAG = #{record.trueFlag,jdbcType=TINYINT},
      SENDTOTENCENT = #{record.sendtotencent,jdbcType=TINYINT},
      HOUSE_SOURCE_WAY = #{record.houseSourceWay,jdbcType=TINYINT},
      YOU_SHARE_FLAG = #{record.youShareFlag,jdbcType=TINYINT},
      YOU_SHARE_TIME = #{record.youShareTime,jdbcType=TIMESTAMP},
      YOU_BUY_COUNT = #{record.youBuyCount,jdbcType=INTEGER},
      OWNER_SEX = #{record.ownerSex,jdbcType=TINYINT},
      YOU_SHARE_ID = #{record.youShareId,jdbcType=INTEGER},
      THUMBPIC_VER = #{record.thumbpicVer,jdbcType=VARCHAR},
      PRIVATE_USER_ID = #{record.privateUserId,jdbcType=INTEGER},
      ADDR_MD5 = #{record.addrMd5,jdbcType=VARCHAR},
      PANORAMA_MAP = #{record.panoramaMap,jdbcType=INTEGER},
      YOUJIA_STATISTIC_FLAG = #{record.youjiaStatisticFlag,jdbcType=TINYINT},
      ADS_FLAG = #{record.adsFlag,jdbcType=TINYINT},
      SYNC_TIME = #{record.syncTime,jdbcType=TIMESTAMP},
      VIDEO_REVIEW_FLAG = #{record.videoReviewFlag,jdbcType=TINYINT},
      HAS_PANORAMA = #{record.hasPanorama,jdbcType=TINYINT},
      BIDDING_FLAG = #{record.biddingFlag,jdbcType=BIT},
      COMPETE_END_TIME = #{record.competeEndTime,jdbcType=TIMESTAMP},
      COMPETE_PRICE = #{record.competePrice,jdbcType=NUMERIC},
      YOU_SHARE_MONEY_STATE = #{record.youShareMoneyState,jdbcType=TINYINT},
      SENDTO_WEIDIAN = #{record.sendtoWeidian,jdbcType=TINYINT},
      SENDTO_YOUYOU = #{record.sendtoYouyou,jdbcType=TINYINT},
      YOUYOU_DEAL = #{record.youyouDeal,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{record.specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{record.scheduleEndTime,jdbcType=TIMESTAMP},
      CHECK_CODE_FUN = #{record.checkCodeFun,jdbcType=VARCHAR},
      PROXY_URL = #{record.proxyUrl,jdbcType=VARCHAR},
      QZ_CODE_FUN = #{record.qzCodeFun,jdbcType=VARCHAR},
      CHECK_CODE_URL = #{record.checkCodeUrl,jdbcType=VARCHAR},
      UPLOAD_PROXY_USER = #{record.uploadProxyUser,jdbcType=VARCHAR},
      CITY_SHARE_FLAG = #{record.cityShareFlag,jdbcType=TINYINT},
      BRAND_COMP_ID = #{record.brandCompId,jdbcType=INTEGER},
      COMP_ID2 = #{record.compId2,jdbcType=INTEGER},
      FILE_SYSTEM_TYPE = #{record.fileSystemType,jdbcType=TINYINT},
      OWNERSHIP_TYPE = #{record.ownershipType,jdbcType=TINYINT},
      EFFECTIVE_DATE = #{record.effectiveDate,jdbcType=TIMESTAMP},
      FUNMANAGER_SALESTATUS = #{record.funmanagerSalestatus,jdbcType=TINYINT},
      HAS_FUNKAN = #{record.hasFunkan,jdbcType=TINYINT},
      JOINT_CELL_PHONE = #{record.jointCellPhone,jdbcType=VARCHAR},
      JOINT_USER_NAME = #{record.jointUserName,jdbcType=VARCHAR},
      JOINT_USER_SEX = #{record.jointUserSex,jdbcType=TINYINT},
      JOINT_ID_CARD = #{record.jointIdCard,jdbcType=VARCHAR},
      RESPITE_END_TIME = #{record.respiteEndTime,jdbcType=TIMESTAMP},
      SALE_LEASE_ID = #{record.saleLeaseId,jdbcType=INTEGER},
      IS_SALE_LEASE = #{record.isSaleLease,jdbcType=TINYINT},
      ENTRUST_END_TIME = #{record.entrustEndTime,jdbcType=TIMESTAMP},
      ENTRUST_CREATE_USER = #{record.entrustCreateUser,jdbcType=INTEGER},
      AVAILABLE_TIME = #{record.availableTime,jdbcType=TIMESTAMP},
      MODIFY_PRICE_END = #{record.modifyPriceEnd,jdbcType=TIMESTAMP},
      MODIFY_PRICE_TREND = #{record.modifyPriceTrend,jdbcType=TINYINT},
      HOUSE_SITUATION = #{record.houseSituation,jdbcType=TINYINT},
      LAST_DKAN_TIME = #{record.lastDkanTime,jdbcType=TIMESTAMP},
      OLD_TRUE_FLAG = #{record.oldTrueFlag,jdbcType=TINYINT},
      INNER_NO = #{record.innerNo,jdbcType=INTEGER},
      JOINT_ID_CARD_TYPE = #{record.jointIdCardType,jdbcType=INTEGER},
      ID_CARD_TYPE = #{record.idCardType,jdbcType=INTEGER},
      SALE_BAY = #{record.saleBay,jdbcType=NUMERIC},
      SALE_DEPTH = #{record.saleDepth,jdbcType=NUMERIC},
      SALE_STOREY = #{record.saleStorey,jdbcType=NUMERIC},
      SALE_GRADATION = #{record.saleGradation,jdbcType=TINYINT},
      SALE_NATURE = #{record.saleNature,jdbcType=TINYINT},
      VILLA_TYPE = #{record.villaType,jdbcType=TINYINT},
      SALE_STYLE = #{record.saleStyle,jdbcType=TINYINT},
      ACTION_TYPE = #{record.actionType,jdbcType=TINYINT},
      SCENERY_TYPE = #{record.sceneryType,jdbcType=TINYINT},
      RECEIPT_TYPE = #{record.receiptType,jdbcType=TINYINT},
      GUARANTY_TYPE = #{record.guarantyType,jdbcType=TINYINT},
      CHECK_TIME = #{record.checkTime,jdbcType=VARCHAR},
      FOCUS_TIME = #{record.focusTime,jdbcType=TIMESTAMP},
      USER_LEVEL = #{record.userLevel,jdbcType=INTEGER},
      TISSUE_LINE = #{record.tissueLine,jdbcType=VARCHAR},
      SALE_BUY_PRICE = #{record.saleBuyPrice,jdbcType=NUMERIC},
      PARTNER_ID = #{record.partnerId,jdbcType=INTEGER},
      FUNKAN_USER_ID = #{record.funkanUserId,jdbcType=INTEGER},
      SALE_KEY_USER_ID = #{record.saleKeyUserId,jdbcType=INTEGER},
      FILE_CODING = #{record.fileCoding,jdbcType=VARCHAR},
      MORTGAGE_BANK = #{record.mortgageBank,jdbcType=VARCHAR},
      ARREARS = #{record.arrears,jdbcType=NUMERIC},
      CURRENT_RENT = #{record.currentRent,jdbcType=NUMERIC},
      TURN_RATE = #{record.turnRate,jdbcType=NUMERIC},
      HOUSE_VERIFY = #{record.houseVerify,jdbcType=TINYINT},
      KITCHEN = #{record.kitchen,jdbcType=TINYINT},
      ML_WHOLE_LAYER = #{record.mlWholeLayer,jdbcType=TINYINT},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      LEASE_EXPIRATION_TIME = #{record.leaseExpirationTime,jdbcType=TIMESTAMP},
      TRANSACTION_STATUS = #{record.transactionStatus,jdbcType=TINYINT},
      HAS_RECORDED = #{record.hasRecorded,jdbcType=TINYINT},
      SALE_ENTRUST_PRICE = #{record.saleEntrustPrice,jdbcType=NUMERIC},
      HAS_ENTRUST = #{record.hasEntrust,jdbcType=TINYINT},
      OFFEREE_TIME = #{record.offereeTime,jdbcType=TIMESTAMP},
      SALE_AMOUNT_CHANGE_TIME = #{record.saleAmountChangeTime,jdbcType=TIMESTAMP},
      FUZZY_SEARCH = #{record.fuzzySearch,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_SALE
    set SALE_ID = #{record.saleId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      CREATE_ARCHIVE_ID = #{record.createArchiveId,jdbcType=INTEGER},
      SALE_NO = #{record.saleNo,jdbcType=VARCHAR},
      SALE_OWNER = #{record.saleOwner,jdbcType=VARCHAR},
      CELL_PHONE = #{record.cellPhone,jdbcType=VARCHAR},
      ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      SALE_SUBJECT = #{record.saleSubject,jdbcType=VARCHAR},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      BUILD_CODE = #{record.buildCode,jdbcType=VARCHAR},
      SALE_REG = #{record.saleReg,jdbcType=INTEGER},
      REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{record.sectionName,jdbcType=VARCHAR},
      SALE_ROUND = #{record.saleRound,jdbcType=TINYINT},
      TRADE_ADDR = #{record.tradeAddr,jdbcType=VARCHAR},
      SALE_ROOF = #{record.saleRoof,jdbcType=VARCHAR},
      SALE_UNIT = #{record.saleUnit,jdbcType=VARCHAR},
      UNIT_FLOOR = #{record.unitFloor,jdbcType=VARCHAR},
      SALE_NUM = #{record.saleNum,jdbcType=VARCHAR},
      SALE_ROOF_R = #{record.saleRoofR,jdbcType=VARCHAR},
      SALE_UNIT_R = #{record.saleUnitR,jdbcType=VARCHAR},
      UNIT_FLOOR_R = #{record.unitFloorR,jdbcType=VARCHAR},
      SALE_NUM_R = #{record.saleNumR,jdbcType=VARCHAR},
      SALE_LADDER = #{record.saleLadder,jdbcType=INTEGER},
      SALE_DOORS = #{record.saleDoors,jdbcType=TINYINT},
      SALE_ROOM = #{record.saleRoom,jdbcType=TINYINT},
      SALE_HALL = #{record.saleHall,jdbcType=TINYINT},
      SALE_WEI = #{record.saleWei,jdbcType=TINYINT},
      SALE_YANG = #{record.saleYang,jdbcType=TINYINT},
      SALE_TYPE = #{record.saleType,jdbcType=TINYINT},
      SALE_FLOOR = #{record.saleFloor,jdbcType=SMALLINT},
      SALE_FLOORS = #{record.saleFloors,jdbcType=INTEGER},
      SALE_FITMENT = #{record.saleFitment,jdbcType=TINYINT},
      SALE_DIRECT = #{record.saleDirect,jdbcType=TINYINT},
      SALE_YEAR = #{record.saleYear,jdbcType=SMALLINT},
      SALE_STRUCT = #{record.saleStruct,jdbcType=TINYINT},
      SALE_USEAGE = #{record.saleUseage,jdbcType=TINYINT},
      SHOP_USAGE = #{record.shopUsage,jdbcType=VARCHAR},
      OWNER_TYPE = #{record.ownerType,jdbcType=TINYINT},
      OFFICE_LEVEL = #{record.officeLevel,jdbcType=TINYINT},
      SALE_STREET = #{record.saleStreet,jdbcType=BIT},
      SALE_RIGHT = #{record.saleRight,jdbcType=TINYINT},
      SALE_MORTGAGE = #{record.saleMortgage,jdbcType=VARCHAR},
      SALE_ACCOUNT = #{record.saleAccount,jdbcType=VARCHAR},
      SALE_AREA = #{record.saleArea,jdbcType=NUMERIC},
      SALE_TOTAL_PRICE = #{record.saleTotalPrice,jdbcType=NUMERIC},
      SALE_UNIT_PRICE = #{record.saleUnitPrice,jdbcType=NUMERIC},
      SALE_LOWEST_PRICE = #{record.saleLowestPrice,jdbcType=NUMERIC},
      SALE_PROPERTY = #{record.saleProperty,jdbcType=NUMERIC},
      IS_SEPERATOR = #{record.isSeperator,jdbcType=BIT},
      SALE_LEAVE_TIME = #{record.saleLeaveTime,jdbcType=VARCHAR},
      HALL_STRUCTURE = #{record.hallStructure,jdbcType=TINYINT},
      UG_AREA = #{record.ugArea,jdbcType=NUMERIC},
      UG_TYPE = #{record.ugType,jdbcType=TINYINT},
      GARDEN_AREA = #{record.gardenArea,jdbcType=NUMERIC},
      GARAGE_AMOUNT = #{record.garageAmount,jdbcType=TINYINT},
      SALE_CHARACT = #{record.saleCharact,jdbcType=VARCHAR},
      SALE_MEMO = #{record.saleMemo,jdbcType=VARCHAR},
      SALE_SOURCE = #{record.saleSource,jdbcType=TINYINT},
      SALE_KEY = #{record.saleKey,jdbcType=BIT},
      SALE_KEY_NUM = #{record.saleKeyNum,jdbcType=VARCHAR},
      KEY_TIME = #{record.keyTime,jdbcType=TIMESTAMP},
      SALE_EXPLRTH = #{record.saleExplrth,jdbcType=BIT},
      EXPLRTH_DATETIME = #{record.explrthDatetime,jdbcType=TIMESTAMP},
      SALE_CONSIGN = #{record.saleConsign,jdbcType=TINYINT},
      SALE_CONSIGN_NO = #{record.saleConsignNo,jdbcType=VARCHAR},
      WEITUO_TIME = #{record.weituoTime,jdbcType=TIMESTAMP},
      SALE_COOPERATE = #{record.saleCooperate,jdbcType=BIT},
      SALE_PUBLISH = #{record.salePublish,jdbcType=BIT},
      SALE_MAP = #{record.saleMap,jdbcType=TINYINT},
      SALE_LEVEL = #{record.saleLevel,jdbcType=TINYINT},
      PLATE_TYPE = #{record.plateType,jdbcType=TINYINT},
      SALE_STATUS = #{record.saleStatus,jdbcType=TINYINT},
      TRACK_TIME = #{record.trackTime,jdbcType=TIMESTAMP},
      TRACK_TIME2 = #{record.trackTime2,jdbcType=TIMESTAMP},
      ACTION_TIME = #{record.actionTime,jdbcType=TIMESTAMP},
      FROM_SOSO = #{record.fromSoso,jdbcType=BIT},
      REPEAT_FLAG = #{record.repeatFlag,jdbcType=TINYINT},
      INFO_TYPE = #{record.infoType,jdbcType=TINYINT},
      SHARE_FLAG = #{record.shareFlag,jdbcType=BIT},
      FRIEND_HOUSE = #{record.friendHouse,jdbcType=BIT},
      COOPERATE_TIME = #{record.cooperateTime,jdbcType=TIMESTAMP},
      COMPLAINT_FLAG = #{record.complaintFlag,jdbcType=BIT},
      PUBLISH_TIME = #{record.publishTime,jdbcType=TIMESTAMP},
      PHOTO_TIME = #{record.photoTime,jdbcType=TIMESTAMP},
      RED_FLAG = #{record.redFlag,jdbcType=BIT},
      ORANGE_FLAG = #{record.orangeFlag,jdbcType=BIT},
      PUBLIC_COUNT = #{record.publicCount,jdbcType=INTEGER},
      PUBLIC_TIME = #{record.publicTime,jdbcType=TIMESTAMP},
      SPECIAL_TIME = #{record.specialTime,jdbcType=TIMESTAMP},
      SCHEDULE_TIME = #{record.scheduleTime,jdbcType=TIMESTAMP},
      DEAL_TIME = #{record.dealTime,jdbcType=TIMESTAMP},
      WRITEOFF_TIME = #{record.writeoffTime,jdbcType=TIMESTAMP},
      SECRECY_TIME = #{record.secrecyTime,jdbcType=TIMESTAMP},
      COMMEND_TIME = #{record.commendTime,jdbcType=TIMESTAMP},
      PRIVATE_TIME = #{record.privateTime,jdbcType=TIMESTAMP},
      FROM_PUBLIC = #{record.fromPublic,jdbcType=BIT},
      THUMB_URL = #{record.thumbUrl,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      TAG_IDS = #{record.tagIds,jdbcType=VARCHAR},
      SALE_CERT_TIME = #{record.saleCertTime,jdbcType=TIMESTAMP},
      PUBLISH_SITES = #{record.publishSites,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      SALE_ROOF_T = #{record.saleRoofT,jdbcType=VARCHAR},
      SALE_NUM_T = #{record.saleNumT,jdbcType=VARCHAR},
      SALE_UNIT_T = #{record.saleUnitT,jdbcType=VARCHAR},
      VIDEO_NUM = #{record.videoNum,jdbcType=TINYINT},
      CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      is_ignore = #{record.isIgnore,jdbcType=TINYINT},
      sale_id_old = #{record.saleIdOld,jdbcType=INTEGER},
      SALE_INNERAREA = #{record.saleInnerarea,jdbcType=DECIMAL},
      HOUSE_BARGAIN = #{record.houseBargain,jdbcType=BIT},
      ENCODE_FLAG = #{record.encodeFlag,jdbcType=TINYINT},
      [LOCK] = #{record.lock,jdbcType=TINYINT},
      TRUE_FLAG = #{record.trueFlag,jdbcType=TINYINT},
      SENDTOTENCENT = #{record.sendtotencent,jdbcType=TINYINT},
      HOUSE_SOURCE_WAY = #{record.houseSourceWay,jdbcType=TINYINT},
      YOU_SHARE_FLAG = #{record.youShareFlag,jdbcType=TINYINT},
      YOU_SHARE_TIME = #{record.youShareTime,jdbcType=TIMESTAMP},
      YOU_BUY_COUNT = #{record.youBuyCount,jdbcType=INTEGER},
      OWNER_SEX = #{record.ownerSex,jdbcType=TINYINT},
      YOU_SHARE_ID = #{record.youShareId,jdbcType=INTEGER},
      THUMBPIC_VER = #{record.thumbpicVer,jdbcType=VARCHAR},
      PRIVATE_USER_ID = #{record.privateUserId,jdbcType=INTEGER},
      ADDR_MD5 = #{record.addrMd5,jdbcType=VARCHAR},
      PANORAMA_MAP = #{record.panoramaMap,jdbcType=INTEGER},
      YOUJIA_STATISTIC_FLAG = #{record.youjiaStatisticFlag,jdbcType=TINYINT},
      ADS_FLAG = #{record.adsFlag,jdbcType=TINYINT},
      SYNC_TIME = #{record.syncTime,jdbcType=TIMESTAMP},
      VIDEO_REVIEW_FLAG = #{record.videoReviewFlag,jdbcType=TINYINT},
      HAS_PANORAMA = #{record.hasPanorama,jdbcType=TINYINT},
      BIDDING_FLAG = #{record.biddingFlag,jdbcType=BIT},
      COMPETE_END_TIME = #{record.competeEndTime,jdbcType=TIMESTAMP},
      COMPETE_PRICE = #{record.competePrice,jdbcType=NUMERIC},
      YOU_SHARE_MONEY_STATE = #{record.youShareMoneyState,jdbcType=TINYINT},
      SENDTO_WEIDIAN = #{record.sendtoWeidian,jdbcType=TINYINT},
      SENDTO_YOUYOU = #{record.sendtoYouyou,jdbcType=TINYINT},
      YOUYOU_DEAL = #{record.youyouDeal,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{record.specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{record.scheduleEndTime,jdbcType=TIMESTAMP},
      CHECK_CODE_FUN = #{record.checkCodeFun,jdbcType=VARCHAR},
      PROXY_URL = #{record.proxyUrl,jdbcType=VARCHAR},
      QZ_CODE_FUN = #{record.qzCodeFun,jdbcType=VARCHAR},
      CHECK_CODE_URL = #{record.checkCodeUrl,jdbcType=VARCHAR},
      UPLOAD_PROXY_USER = #{record.uploadProxyUser,jdbcType=VARCHAR},
      CITY_SHARE_FLAG = #{record.cityShareFlag,jdbcType=TINYINT},
      BRAND_COMP_ID = #{record.brandCompId,jdbcType=INTEGER},
      COMP_ID2 = #{record.compId2,jdbcType=INTEGER},
      FILE_SYSTEM_TYPE = #{record.fileSystemType,jdbcType=TINYINT},
      OWNERSHIP_TYPE = #{record.ownershipType,jdbcType=TINYINT},
      EFFECTIVE_DATE = #{record.effectiveDate,jdbcType=TIMESTAMP},
      FUNMANAGER_SALESTATUS = #{record.funmanagerSalestatus,jdbcType=TINYINT},
      HAS_FUNKAN = #{record.hasFunkan,jdbcType=TINYINT},
      JOINT_CELL_PHONE = #{record.jointCellPhone,jdbcType=VARCHAR},
      JOINT_USER_NAME = #{record.jointUserName,jdbcType=VARCHAR},
      JOINT_USER_SEX = #{record.jointUserSex,jdbcType=TINYINT},
      JOINT_ID_CARD = #{record.jointIdCard,jdbcType=VARCHAR},
      RESPITE_END_TIME = #{record.respiteEndTime,jdbcType=TIMESTAMP},
      SALE_LEASE_ID = #{record.saleLeaseId,jdbcType=INTEGER},
      IS_SALE_LEASE = #{record.isSaleLease,jdbcType=TINYINT},
      ENTRUST_END_TIME = #{record.entrustEndTime,jdbcType=TIMESTAMP},
      ENTRUST_CREATE_USER = #{record.entrustCreateUser,jdbcType=INTEGER},
      AVAILABLE_TIME = #{record.availableTime,jdbcType=TIMESTAMP},
      MODIFY_PRICE_END = #{record.modifyPriceEnd,jdbcType=TIMESTAMP},
      MODIFY_PRICE_TREND = #{record.modifyPriceTrend,jdbcType=TINYINT},
      HOUSE_SITUATION = #{record.houseSituation,jdbcType=TINYINT},
      LAST_DKAN_TIME = #{record.lastDkanTime,jdbcType=TIMESTAMP},
      OLD_TRUE_FLAG = #{record.oldTrueFlag,jdbcType=TINYINT},
      INNER_NO = #{record.innerNo,jdbcType=INTEGER},
      JOINT_ID_CARD_TYPE = #{record.jointIdCardType,jdbcType=INTEGER},
      ID_CARD_TYPE = #{record.idCardType,jdbcType=INTEGER},
      SALE_BAY = #{record.saleBay,jdbcType=NUMERIC},
      SALE_DEPTH = #{record.saleDepth,jdbcType=NUMERIC},
      SALE_STOREY = #{record.saleStorey,jdbcType=NUMERIC},
      SALE_GRADATION = #{record.saleGradation,jdbcType=TINYINT},
      SALE_NATURE = #{record.saleNature,jdbcType=TINYINT},
      VILLA_TYPE = #{record.villaType,jdbcType=TINYINT},
      SALE_STYLE = #{record.saleStyle,jdbcType=TINYINT},
      ACTION_TYPE = #{record.actionType,jdbcType=TINYINT},
      SCENERY_TYPE = #{record.sceneryType,jdbcType=TINYINT},
      RECEIPT_TYPE = #{record.receiptType,jdbcType=TINYINT},
      GUARANTY_TYPE = #{record.guarantyType,jdbcType=TINYINT},
      CHECK_TIME = #{record.checkTime,jdbcType=VARCHAR},
      FOCUS_TIME = #{record.focusTime,jdbcType=TIMESTAMP},
      USER_LEVEL = #{record.userLevel,jdbcType=INTEGER},
      TISSUE_LINE = #{record.tissueLine,jdbcType=VARCHAR},
      SALE_BUY_PRICE = #{record.saleBuyPrice,jdbcType=NUMERIC},
      PARTNER_ID = #{record.partnerId,jdbcType=INTEGER},
      FUNKAN_USER_ID = #{record.funkanUserId,jdbcType=INTEGER},
      SALE_KEY_USER_ID = #{record.saleKeyUserId,jdbcType=INTEGER},
      FILE_CODING = #{record.fileCoding,jdbcType=VARCHAR},
      MORTGAGE_BANK = #{record.mortgageBank,jdbcType=VARCHAR},
      ARREARS = #{record.arrears,jdbcType=NUMERIC},
      CURRENT_RENT = #{record.currentRent,jdbcType=NUMERIC},
      TURN_RATE = #{record.turnRate,jdbcType=NUMERIC},
      HOUSE_VERIFY = #{record.houseVerify,jdbcType=TINYINT},
      KITCHEN = #{record.kitchen,jdbcType=TINYINT},
      ML_WHOLE_LAYER = #{record.mlWholeLayer,jdbcType=TINYINT},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      LEASE_EXPIRATION_TIME = #{record.leaseExpirationTime,jdbcType=TIMESTAMP},
      TRANSACTION_STATUS = #{record.transactionStatus,jdbcType=TINYINT},
      HAS_RECORDED = #{record.hasRecorded,jdbcType=TINYINT},
      SALE_ENTRUST_PRICE = #{record.saleEntrustPrice,jdbcType=NUMERIC},
      HAS_ENTRUST = #{record.hasEntrust,jdbcType=TINYINT},
      OFFEREE_TIME = #{record.offereeTime,jdbcType=TIMESTAMP},
      SALE_AMOUNT_CHANGE_TIME = #{record.saleAmountChangeTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunSale">
    <!--@mbggenerated-->
    update FUN_SALE
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createArchiveId != null">
        CREATE_ARCHIVE_ID = #{createArchiveId,jdbcType=INTEGER},
      </if>
      <if test="saleNo != null">
        SALE_NO = #{saleNo,jdbcType=VARCHAR},
      </if>
      <if test="saleOwner != null">
        SALE_OWNER = #{saleOwner,jdbcType=VARCHAR},
      </if>
      <if test="cellPhone != null">
        CELL_PHONE = #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        ID_CARD = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="saleSubject != null">
        SALE_SUBJECT = #{saleSubject,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="buildCode != null">
        BUILD_CODE = #{buildCode,jdbcType=VARCHAR},
      </if>
      <if test="saleReg != null">
        SALE_REG = #{saleReg,jdbcType=INTEGER},
      </if>
      <if test="regionName != null">
        REGION_NAME = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="sectionId != null">
        SECTION_ID = #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sectionName != null">
        SECTION_NAME = #{sectionName,jdbcType=VARCHAR},
      </if>
      <if test="saleRound != null">
        SALE_ROUND = #{saleRound,jdbcType=TINYINT},
      </if>
      <if test="tradeAddr != null">
        TRADE_ADDR = #{tradeAddr,jdbcType=VARCHAR},
      </if>
      <if test="saleRoof != null">
        SALE_ROOF = #{saleRoof,jdbcType=VARCHAR},
      </if>
      <if test="saleUnit != null">
        SALE_UNIT = #{saleUnit,jdbcType=VARCHAR},
      </if>
      <if test="unitFloor != null">
        UNIT_FLOOR = #{unitFloor,jdbcType=VARCHAR},
      </if>
      <if test="saleNum != null">
        SALE_NUM = #{saleNum,jdbcType=VARCHAR},
      </if>
      <if test="saleRoofR != null">
        SALE_ROOF_R = #{saleRoofR,jdbcType=VARCHAR},
      </if>
      <if test="saleUnitR != null">
        SALE_UNIT_R = #{saleUnitR,jdbcType=VARCHAR},
      </if>
      <if test="unitFloorR != null">
        UNIT_FLOOR_R = #{unitFloorR,jdbcType=VARCHAR},
      </if>
      <if test="saleNumR != null">
        SALE_NUM_R = #{saleNumR,jdbcType=VARCHAR},
      </if>
      <if test="saleLadder != null">
        SALE_LADDER = #{saleLadder,jdbcType=INTEGER},
      </if>
      <if test="saleDoors != null">
        SALE_DOORS = #{saleDoors,jdbcType=TINYINT},
      </if>
      <if test="saleRoom != null">
        SALE_ROOM = #{saleRoom,jdbcType=TINYINT},
      </if>
      <if test="saleHall != null">
        SALE_HALL = #{saleHall,jdbcType=TINYINT},
      </if>
      <if test="saleWei != null">
        SALE_WEI = #{saleWei,jdbcType=TINYINT},
      </if>
      <if test="saleYang != null">
        SALE_YANG = #{saleYang,jdbcType=TINYINT},
      </if>
      <if test="saleType != null">
        SALE_TYPE = #{saleType,jdbcType=TINYINT},
      </if>
      <if test="saleFloor != null">
        SALE_FLOOR = #{saleFloor,jdbcType=SMALLINT},
      </if>
      <if test="saleFloors != null">
        SALE_FLOORS = #{saleFloors,jdbcType=INTEGER},
      </if>
      <if test="saleFitment != null">
        SALE_FITMENT = #{saleFitment,jdbcType=TINYINT},
      </if>
      <if test="saleDirect != null">
        SALE_DIRECT = #{saleDirect,jdbcType=TINYINT},
      </if>
      <if test="saleYear != null">
        SALE_YEAR = #{saleYear,jdbcType=SMALLINT},
      </if>
      <if test="saleStruct != null">
        SALE_STRUCT = #{saleStruct,jdbcType=TINYINT},
      </if>
      <if test="saleUseage != null">
        SALE_USEAGE = #{saleUseage,jdbcType=TINYINT},
      </if>
      <if test="shopUsage != null">
        SHOP_USAGE = #{shopUsage,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        OWNER_TYPE = #{ownerType,jdbcType=TINYINT},
      </if>
      <if test="officeLevel != null">
        OFFICE_LEVEL = #{officeLevel,jdbcType=TINYINT},
      </if>
      <if test="saleStreet != null">
        SALE_STREET = #{saleStreet,jdbcType=BIT},
      </if>
      <if test="saleRight != null">
        SALE_RIGHT = #{saleRight,jdbcType=TINYINT},
      </if>
      <if test="saleMortgage != null">
        SALE_MORTGAGE = #{saleMortgage,jdbcType=VARCHAR},
      </if>
      <if test="saleAccount != null">
        SALE_ACCOUNT = #{saleAccount,jdbcType=VARCHAR},
      </if>
      <if test="saleArea != null">
        SALE_AREA = #{saleArea,jdbcType=NUMERIC},
      </if>
      <if test="saleTotalPrice != null">
        SALE_TOTAL_PRICE = #{saleTotalPrice,jdbcType=NUMERIC},
      </if>
      <if test="saleUnitPrice != null">
        SALE_UNIT_PRICE = #{saleUnitPrice,jdbcType=NUMERIC},
      </if>
      <if test="saleLowestPrice != null">
        SALE_LOWEST_PRICE = #{saleLowestPrice,jdbcType=NUMERIC},
      </if>
      <if test="saleProperty != null">
        SALE_PROPERTY = #{saleProperty,jdbcType=NUMERIC},
      </if>
      <if test="isSeperator != null">
        IS_SEPERATOR = #{isSeperator,jdbcType=BIT},
      </if>
      <if test="saleLeaveTime != null">
        SALE_LEAVE_TIME = #{saleLeaveTime,jdbcType=VARCHAR},
      </if>
      <if test="hallStructure != null">
        HALL_STRUCTURE = #{hallStructure,jdbcType=TINYINT},
      </if>
      <if test="ugArea != null">
        UG_AREA = #{ugArea,jdbcType=NUMERIC},
      </if>
      <if test="ugType != null">
        UG_TYPE = #{ugType,jdbcType=TINYINT},
      </if>
      <if test="gardenArea != null">
        GARDEN_AREA = #{gardenArea,jdbcType=NUMERIC},
      </if>
      <if test="garageAmount != null">
        GARAGE_AMOUNT = #{garageAmount,jdbcType=TINYINT},
      </if>
      <if test="saleCharact != null">
        SALE_CHARACT = #{saleCharact,jdbcType=VARCHAR},
      </if>
      <if test="saleMemo != null">
        SALE_MEMO = #{saleMemo,jdbcType=VARCHAR},
      </if>
      <if test="saleSource != null">
        SALE_SOURCE = #{saleSource,jdbcType=TINYINT},
      </if>
      <if test="saleKey != null">
        SALE_KEY = #{saleKey,jdbcType=BIT},
      </if>
      <if test="saleKeyNum != null">
        SALE_KEY_NUM = #{saleKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="keyTime != null">
        KEY_TIME = #{keyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleExplrth != null">
        SALE_EXPLRTH = #{saleExplrth,jdbcType=BIT},
      </if>
      <if test="explrthDatetime != null">
        EXPLRTH_DATETIME = #{explrthDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleConsign != null">
        SALE_CONSIGN = #{saleConsign,jdbcType=TINYINT},
      </if>
      <if test="saleConsignNo != null">
        SALE_CONSIGN_NO = #{saleConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="weituoTime != null">
        WEITUO_TIME = #{weituoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleCooperate != null">
        SALE_COOPERATE = #{saleCooperate,jdbcType=BIT},
      </if>
      <if test="salePublish != null">
        SALE_PUBLISH = #{salePublish,jdbcType=BIT},
      </if>
      <if test="saleMap != null">
        SALE_MAP = #{saleMap,jdbcType=TINYINT},
      </if>
      <if test="saleLevel != null">
        SALE_LEVEL = #{saleLevel,jdbcType=TINYINT},
      </if>
      <if test="plateType != null">
        PLATE_TYPE = #{plateType,jdbcType=TINYINT},
      </if>
      <if test="saleStatus != null">
        SALE_STATUS = #{saleStatus,jdbcType=TINYINT},
      </if>
      <if test="trackTime != null">
        TRACK_TIME = #{trackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackTime2 != null">
        TRACK_TIME2 = #{trackTime2,jdbcType=TIMESTAMP},
      </if>
      <if test="actionTime != null">
        ACTION_TIME = #{actionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromSoso != null">
        FROM_SOSO = #{fromSoso,jdbcType=BIT},
      </if>
      <if test="repeatFlag != null">
        REPEAT_FLAG = #{repeatFlag,jdbcType=TINYINT},
      </if>
      <if test="infoType != null">
        INFO_TYPE = #{infoType,jdbcType=TINYINT},
      </if>
      <if test="shareFlag != null">
        SHARE_FLAG = #{shareFlag,jdbcType=BIT},
      </if>
      <if test="friendHouse != null">
        FRIEND_HOUSE = #{friendHouse,jdbcType=BIT},
      </if>
      <if test="cooperateTime != null">
        COOPERATE_TIME = #{cooperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="complaintFlag != null">
        COMPLAINT_FLAG = #{complaintFlag,jdbcType=BIT},
      </if>
      <if test="publishTime != null">
        PUBLISH_TIME = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="photoTime != null">
        PHOTO_TIME = #{photoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="redFlag != null">
        RED_FLAG = #{redFlag,jdbcType=BIT},
      </if>
      <if test="orangeFlag != null">
        ORANGE_FLAG = #{orangeFlag,jdbcType=BIT},
      </if>
      <if test="publicCount != null">
        PUBLIC_COUNT = #{publicCount,jdbcType=INTEGER},
      </if>
      <if test="publicTime != null">
        PUBLIC_TIME = #{publicTime,jdbcType=TIMESTAMP},
      </if>
      <if test="specialTime != null">
        SPECIAL_TIME = #{specialTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleTime != null">
        SCHEDULE_TIME = #{scheduleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealTime != null">
        DEAL_TIME = #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="writeoffTime != null">
        WRITEOFF_TIME = #{writeoffTime,jdbcType=TIMESTAMP},
      </if>
      <if test="secrecyTime != null">
        SECRECY_TIME = #{secrecyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commendTime != null">
        COMMEND_TIME = #{commendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="privateTime != null">
        PRIVATE_TIME = #{privateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromPublic != null">
        FROM_PUBLIC = #{fromPublic,jdbcType=BIT},
      </if>
      <if test="thumbUrl != null">
        THUMB_URL = #{thumbUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tagIds != null">
        TAG_IDS = #{tagIds,jdbcType=VARCHAR},
      </if>
      <if test="saleCertTime != null">
        SALE_CERT_TIME = #{saleCertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishSites != null">
        PUBLISH_SITES = #{publishSites,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="saleRoofT != null">
        SALE_ROOF_T = #{saleRoofT,jdbcType=VARCHAR},
      </if>
      <if test="saleNumT != null">
        SALE_NUM_T = #{saleNumT,jdbcType=VARCHAR},
      </if>
      <if test="saleUnitT != null">
        SALE_UNIT_T = #{saleUnitT,jdbcType=VARCHAR},
      </if>
      <if test="videoNum != null">
        VIDEO_NUM = #{videoNum,jdbcType=TINYINT},
      </if>
      <if test="creatorUid != null">
        CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="isIgnore != null">
        is_ignore = #{isIgnore,jdbcType=TINYINT},
      </if>
      <if test="saleIdOld != null">
        sale_id_old = #{saleIdOld,jdbcType=INTEGER},
      </if>
      <if test="saleInnerarea != null">
        SALE_INNERAREA = #{saleInnerarea,jdbcType=DECIMAL},
      </if>
      <if test="houseBargain != null">
        HOUSE_BARGAIN = #{houseBargain,jdbcType=BIT},
      </if>
      <if test="encodeFlag != null">
        ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="lock != null">
        [LOCK] = #{lock,jdbcType=TINYINT},
      </if>
      <if test="trueFlag != null">
        TRUE_FLAG = #{trueFlag,jdbcType=TINYINT},
      </if>
      <if test="sendtotencent != null">
        SENDTOTENCENT = #{sendtotencent,jdbcType=TINYINT},
      </if>
      <if test="houseSourceWay != null">
        HOUSE_SOURCE_WAY = #{houseSourceWay,jdbcType=TINYINT},
      </if>
      <if test="youShareFlag != null">
        YOU_SHARE_FLAG = #{youShareFlag,jdbcType=TINYINT},
      </if>
      <if test="youShareTime != null">
        YOU_SHARE_TIME = #{youShareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="youBuyCount != null">
        YOU_BUY_COUNT = #{youBuyCount,jdbcType=INTEGER},
      </if>
      <if test="ownerSex != null">
        OWNER_SEX = #{ownerSex,jdbcType=TINYINT},
      </if>
      <if test="youShareId != null">
        YOU_SHARE_ID = #{youShareId,jdbcType=INTEGER},
      </if>
      <if test="thumbpicVer != null">
        THUMBPIC_VER = #{thumbpicVer,jdbcType=VARCHAR},
      </if>
      <if test="privateUserId != null">
        PRIVATE_USER_ID = #{privateUserId,jdbcType=INTEGER},
      </if>
      <if test="addrMd5 != null">
        ADDR_MD5 = #{addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="panoramaMap != null">
        PANORAMA_MAP = #{panoramaMap,jdbcType=INTEGER},
      </if>
      <if test="youjiaStatisticFlag != null">
        YOUJIA_STATISTIC_FLAG = #{youjiaStatisticFlag,jdbcType=TINYINT},
      </if>
      <if test="adsFlag != null">
        ADS_FLAG = #{adsFlag,jdbcType=TINYINT},
      </if>
      <if test="syncTime != null">
        SYNC_TIME = #{syncTime,jdbcType=TIMESTAMP},
      </if>
      <if test="videoReviewFlag != null">
        VIDEO_REVIEW_FLAG = #{videoReviewFlag,jdbcType=TINYINT},
      </if>
      <if test="hasPanorama != null">
        HAS_PANORAMA = #{hasPanorama,jdbcType=TINYINT},
      </if>
      <if test="biddingFlag != null">
        BIDDING_FLAG = #{biddingFlag,jdbcType=BIT},
      </if>
      <if test="competeEndTime != null">
        COMPETE_END_TIME = #{competeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="competePrice != null">
        COMPETE_PRICE = #{competePrice,jdbcType=NUMERIC},
      </if>
      <if test="youShareMoneyState != null">
        YOU_SHARE_MONEY_STATE = #{youShareMoneyState,jdbcType=TINYINT},
      </if>
      <if test="sendtoWeidian != null">
        SENDTO_WEIDIAN = #{sendtoWeidian,jdbcType=TINYINT},
      </if>
      <if test="sendtoYouyou != null">
        SENDTO_YOUYOU = #{sendtoYouyou,jdbcType=TINYINT},
      </if>
      <if test="youyouDeal != null">
        YOUYOU_DEAL = #{youyouDeal,jdbcType=TINYINT},
      </if>
      <if test="specialEndTime != null">
        SPECIAL_END_TIME = #{specialEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleEndTime != null">
        SCHEDULE_END_TIME = #{scheduleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkCodeFun != null">
        CHECK_CODE_FUN = #{checkCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="proxyUrl != null">
        PROXY_URL = #{proxyUrl,jdbcType=VARCHAR},
      </if>
      <if test="qzCodeFun != null">
        QZ_CODE_FUN = #{qzCodeFun,jdbcType=VARCHAR},
      </if>
      <if test="checkCodeUrl != null">
        CHECK_CODE_URL = #{checkCodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="uploadProxyUser != null">
        UPLOAD_PROXY_USER = #{uploadProxyUser,jdbcType=VARCHAR},
      </if>
      <if test="cityShareFlag != null">
        CITY_SHARE_FLAG = #{cityShareFlag,jdbcType=TINYINT},
      </if>
      <if test="brandCompId != null">
        BRAND_COMP_ID = #{brandCompId,jdbcType=INTEGER},
      </if>
      <if test="compId2 != null">
        COMP_ID2 = #{compId2,jdbcType=INTEGER},
      </if>
      <if test="fileSystemType != null">
        FILE_SYSTEM_TYPE = #{fileSystemType,jdbcType=TINYINT},
      </if>
      <if test="ownershipType != null">
        OWNERSHIP_TYPE = #{ownershipType,jdbcType=TINYINT},
      </if>
      <if test="effectiveDate != null">
        EFFECTIVE_DATE = #{effectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="funmanagerSalestatus != null">
        FUNMANAGER_SALESTATUS = #{funmanagerSalestatus,jdbcType=TINYINT},
      </if>
      <if test="hasFunkan != null">
        HAS_FUNKAN = #{hasFunkan,jdbcType=TINYINT},
      </if>
      <if test="jointCellPhone != null">
        JOINT_CELL_PHONE = #{jointCellPhone,jdbcType=VARCHAR},
      </if>
      <if test="jointUserName != null">
        JOINT_USER_NAME = #{jointUserName,jdbcType=VARCHAR},
      </if>
      <if test="jointUserSex != null">
        JOINT_USER_SEX = #{jointUserSex,jdbcType=TINYINT},
      </if>
      <if test="jointIdCard != null">
        JOINT_ID_CARD = #{jointIdCard,jdbcType=VARCHAR},
      </if>
      <if test="respiteEndTime != null">
        RESPITE_END_TIME = #{respiteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleLeaseId != null">
        SALE_LEASE_ID = #{saleLeaseId,jdbcType=INTEGER},
      </if>
      <if test="isSaleLease != null">
        IS_SALE_LEASE = #{isSaleLease,jdbcType=TINYINT},
      </if>
      <if test="entrustEndTime != null">
        ENTRUST_END_TIME = #{entrustEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entrustCreateUser != null">
        ENTRUST_CREATE_USER = #{entrustCreateUser,jdbcType=INTEGER},
      </if>
      <if test="availableTime != null">
        AVAILABLE_TIME = #{availableTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPriceEnd != null">
        MODIFY_PRICE_END = #{modifyPriceEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPriceTrend != null">
        MODIFY_PRICE_TREND = #{modifyPriceTrend,jdbcType=TINYINT},
      </if>
      <if test="houseSituation != null">
        HOUSE_SITUATION = #{houseSituation,jdbcType=TINYINT},
      </if>
      <if test="lastDkanTime != null">
        LAST_DKAN_TIME = #{lastDkanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldTrueFlag != null">
        OLD_TRUE_FLAG = #{oldTrueFlag,jdbcType=TINYINT},
      </if>
      <if test="innerNo != null">
        INNER_NO = #{innerNo,jdbcType=INTEGER},
      </if>
      <if test="jointIdCardType != null">
        JOINT_ID_CARD_TYPE = #{jointIdCardType,jdbcType=INTEGER},
      </if>
      <if test="idCardType != null">
        ID_CARD_TYPE = #{idCardType,jdbcType=INTEGER},
      </if>
      <if test="saleBay != null">
        SALE_BAY = #{saleBay,jdbcType=NUMERIC},
      </if>
      <if test="saleDepth != null">
        SALE_DEPTH = #{saleDepth,jdbcType=NUMERIC},
      </if>
      <if test="saleStorey != null">
        SALE_STOREY = #{saleStorey,jdbcType=NUMERIC},
      </if>
      <if test="saleGradation != null">
        SALE_GRADATION = #{saleGradation,jdbcType=TINYINT},
      </if>
      <if test="saleNature != null">
        SALE_NATURE = #{saleNature,jdbcType=TINYINT},
      </if>
      <if test="villaType != null">
        VILLA_TYPE = #{villaType,jdbcType=TINYINT},
      </if>
      <if test="saleStyle != null">
        SALE_STYLE = #{saleStyle,jdbcType=TINYINT},
      </if>
      <if test="actionType != null">
        ACTION_TYPE = #{actionType,jdbcType=TINYINT},
      </if>
      <if test="sceneryType != null">
        SCENERY_TYPE = #{sceneryType,jdbcType=TINYINT},
      </if>
      <if test="receiptType != null">
        RECEIPT_TYPE = #{receiptType,jdbcType=TINYINT},
      </if>
      <if test="guarantyType != null">
        GUARANTY_TYPE = #{guarantyType,jdbcType=TINYINT},
      </if>
      <if test="checkTime != null">
        CHECK_TIME = #{checkTime,jdbcType=VARCHAR},
      </if>
      <if test="focusTime != null">
        FOCUS_TIME = #{focusTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLevel != null">
        USER_LEVEL = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="tissueLine != null">
        TISSUE_LINE = #{tissueLine,jdbcType=VARCHAR},
      </if>
      <if test="saleBuyPrice != null">
        SALE_BUY_PRICE = #{saleBuyPrice,jdbcType=NUMERIC},
      </if>
      <if test="partnerId != null">
        PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="funkanUserId != null">
        FUNKAN_USER_ID = #{funkanUserId,jdbcType=INTEGER},
      </if>
      <if test="saleKeyUserId != null">
        SALE_KEY_USER_ID = #{saleKeyUserId,jdbcType=INTEGER},
      </if>
      <if test="fileCoding != null">
        FILE_CODING = #{fileCoding,jdbcType=VARCHAR},
      </if>
      <if test="mortgageBank != null">
        MORTGAGE_BANK = #{mortgageBank,jdbcType=VARCHAR},
      </if>
      <if test="arrears != null">
        ARREARS = #{arrears,jdbcType=NUMERIC},
      </if>
      <if test="currentRent != null">
        CURRENT_RENT = #{currentRent,jdbcType=NUMERIC},
      </if>
      <if test="turnRate != null">
        TURN_RATE = #{turnRate,jdbcType=NUMERIC},
      </if>
      <if test="houseVerify != null">
        HOUSE_VERIFY = #{houseVerify,jdbcType=TINYINT},
      </if>
      <if test="kitchen != null">
        KITCHEN = #{kitchen,jdbcType=TINYINT},
      </if>
      <if test="mlWholeLayer != null">
        ML_WHOLE_LAYER = #{mlWholeLayer,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="leaseExpirationTime != null">
        LEASE_EXPIRATION_TIME = #{leaseExpirationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transactionStatus != null">
        TRANSACTION_STATUS = #{transactionStatus,jdbcType=TINYINT},
      </if>
      <if test="hasRecorded != null">
        HAS_RECORDED = #{hasRecorded,jdbcType=TINYINT},
      </if>
      <if test="saleEntrustPrice != null">
        SALE_ENTRUST_PRICE = #{saleEntrustPrice,jdbcType=NUMERIC},
      </if>
      <if test="hasEntrust != null">
        HAS_ENTRUST = #{hasEntrust,jdbcType=TINYINT},
      </if>
      <if test="offereeTime != null">
        OFFEREE_TIME = #{offereeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleAmountChangeTime != null">
        SALE_AMOUNT_CHANGE_TIME = #{saleAmountChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fuzzySearch != null">
        FUZZY_SEARCH = #{fuzzySearch,jdbcType=CLOB},
      </if>
    </set>
    where SALE_ID = #{saleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myfun.repository.erpdb.po.ErpFunSale">
    <!--@mbggenerated-->
    update FUN_SALE
    set COMP_ID = #{compId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      CREATE_ARCHIVE_ID = #{createArchiveId,jdbcType=INTEGER},
      SALE_NO = #{saleNo,jdbcType=VARCHAR},
      SALE_OWNER = #{saleOwner,jdbcType=VARCHAR},
      CELL_PHONE = #{cellPhone,jdbcType=VARCHAR},
      ID_CARD = #{idCard,jdbcType=VARCHAR},
      SALE_SUBJECT = #{saleSubject,jdbcType=VARCHAR},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      BUILD_CODE = #{buildCode,jdbcType=VARCHAR},
      SALE_REG = #{saleReg,jdbcType=INTEGER},
      REGION_NAME = #{regionName,jdbcType=VARCHAR},
      SECTION_ID = #{sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{sectionName,jdbcType=VARCHAR},
      SALE_ROUND = #{saleRound,jdbcType=TINYINT},
      TRADE_ADDR = #{tradeAddr,jdbcType=VARCHAR},
      SALE_ROOF = #{saleRoof,jdbcType=VARCHAR},
      SALE_UNIT = #{saleUnit,jdbcType=VARCHAR},
      UNIT_FLOOR = #{unitFloor,jdbcType=VARCHAR},
      SALE_NUM = #{saleNum,jdbcType=VARCHAR},
      SALE_ROOF_R = #{saleRoofR,jdbcType=VARCHAR},
      SALE_UNIT_R = #{saleUnitR,jdbcType=VARCHAR},
      UNIT_FLOOR_R = #{unitFloorR,jdbcType=VARCHAR},
      SALE_NUM_R = #{saleNumR,jdbcType=VARCHAR},
      SALE_LADDER = #{saleLadder,jdbcType=INTEGER},
      SALE_DOORS = #{saleDoors,jdbcType=TINYINT},
      SALE_ROOM = #{saleRoom,jdbcType=TINYINT},
      SALE_HALL = #{saleHall,jdbcType=TINYINT},
      SALE_WEI = #{saleWei,jdbcType=TINYINT},
      SALE_YANG = #{saleYang,jdbcType=TINYINT},
      SALE_TYPE = #{saleType,jdbcType=TINYINT},
      SALE_FLOOR = #{saleFloor,jdbcType=SMALLINT},
      SALE_FLOORS = #{saleFloors,jdbcType=INTEGER},
      SALE_FITMENT = #{saleFitment,jdbcType=TINYINT},
      SALE_DIRECT = #{saleDirect,jdbcType=TINYINT},
      SALE_YEAR = #{saleYear,jdbcType=SMALLINT},
      SALE_STRUCT = #{saleStruct,jdbcType=TINYINT},
      SALE_USEAGE = #{saleUseage,jdbcType=TINYINT},
      SHOP_USAGE = #{shopUsage,jdbcType=VARCHAR},
      OWNER_TYPE = #{ownerType,jdbcType=TINYINT},
      OFFICE_LEVEL = #{officeLevel,jdbcType=TINYINT},
      SALE_STREET = #{saleStreet,jdbcType=BIT},
      SALE_RIGHT = #{saleRight,jdbcType=TINYINT},
      SALE_MORTGAGE = #{saleMortgage,jdbcType=VARCHAR},
      SALE_ACCOUNT = #{saleAccount,jdbcType=VARCHAR},
      SALE_AREA = #{saleArea,jdbcType=NUMERIC},
      SALE_TOTAL_PRICE = #{saleTotalPrice,jdbcType=NUMERIC},
      SALE_UNIT_PRICE = #{saleUnitPrice,jdbcType=NUMERIC},
      SALE_LOWEST_PRICE = #{saleLowestPrice,jdbcType=NUMERIC},
      SALE_PROPERTY = #{saleProperty,jdbcType=NUMERIC},
      IS_SEPERATOR = #{isSeperator,jdbcType=BIT},
      SALE_LEAVE_TIME = #{saleLeaveTime,jdbcType=VARCHAR},
      HALL_STRUCTURE = #{hallStructure,jdbcType=TINYINT},
      UG_AREA = #{ugArea,jdbcType=NUMERIC},
      UG_TYPE = #{ugType,jdbcType=TINYINT},
      GARDEN_AREA = #{gardenArea,jdbcType=NUMERIC},
      GARAGE_AMOUNT = #{garageAmount,jdbcType=TINYINT},
      SALE_CHARACT = #{saleCharact,jdbcType=VARCHAR},
      SALE_MEMO = #{saleMemo,jdbcType=VARCHAR},
      SALE_SOURCE = #{saleSource,jdbcType=TINYINT},
      SALE_KEY = #{saleKey,jdbcType=BIT},
      SALE_KEY_NUM = #{saleKeyNum,jdbcType=VARCHAR},
      KEY_TIME = #{keyTime,jdbcType=TIMESTAMP},
      SALE_EXPLRTH = #{saleExplrth,jdbcType=BIT},
      EXPLRTH_DATETIME = #{explrthDatetime,jdbcType=TIMESTAMP},
      SALE_CONSIGN = #{saleConsign,jdbcType=TINYINT},
      SALE_CONSIGN_NO = #{saleConsignNo,jdbcType=VARCHAR},
      WEITUO_TIME = #{weituoTime,jdbcType=TIMESTAMP},
      SALE_COOPERATE = #{saleCooperate,jdbcType=BIT},
      SALE_PUBLISH = #{salePublish,jdbcType=BIT},
      SALE_MAP = #{saleMap,jdbcType=TINYINT},
      SALE_LEVEL = #{saleLevel,jdbcType=TINYINT},
      PLATE_TYPE = #{plateType,jdbcType=TINYINT},
      SALE_STATUS = #{saleStatus,jdbcType=TINYINT},
      TRACK_TIME = #{trackTime,jdbcType=TIMESTAMP},
      TRACK_TIME2 = #{trackTime2,jdbcType=TIMESTAMP},
      ACTION_TIME = #{actionTime,jdbcType=TIMESTAMP},
      FROM_SOSO = #{fromSoso,jdbcType=BIT},
      REPEAT_FLAG = #{repeatFlag,jdbcType=TINYINT},
      INFO_TYPE = #{infoType,jdbcType=TINYINT},
      SHARE_FLAG = #{shareFlag,jdbcType=BIT},
      FRIEND_HOUSE = #{friendHouse,jdbcType=BIT},
      COOPERATE_TIME = #{cooperateTime,jdbcType=TIMESTAMP},
      COMPLAINT_FLAG = #{complaintFlag,jdbcType=BIT},
      PUBLISH_TIME = #{publishTime,jdbcType=TIMESTAMP},
      PHOTO_TIME = #{photoTime,jdbcType=TIMESTAMP},
      RED_FLAG = #{redFlag,jdbcType=BIT},
      ORANGE_FLAG = #{orangeFlag,jdbcType=BIT},
      PUBLIC_COUNT = #{publicCount,jdbcType=INTEGER},
      PUBLIC_TIME = #{publicTime,jdbcType=TIMESTAMP},
      SPECIAL_TIME = #{specialTime,jdbcType=TIMESTAMP},
      SCHEDULE_TIME = #{scheduleTime,jdbcType=TIMESTAMP},
      DEAL_TIME = #{dealTime,jdbcType=TIMESTAMP},
      WRITEOFF_TIME = #{writeoffTime,jdbcType=TIMESTAMP},
      SECRECY_TIME = #{secrecyTime,jdbcType=TIMESTAMP},
      COMMEND_TIME = #{commendTime,jdbcType=TIMESTAMP},
      PRIVATE_TIME = #{privateTime,jdbcType=TIMESTAMP},
      FROM_PUBLIC = #{fromPublic,jdbcType=BIT},
      THUMB_URL = #{thumbUrl,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      TAG_IDS = #{tagIds,jdbcType=VARCHAR},
      SALE_CERT_TIME = #{saleCertTime,jdbcType=TIMESTAMP},
      PUBLISH_SITES = #{publishSites,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      SALE_ROOF_T = #{saleRoofT,jdbcType=VARCHAR},
      SALE_NUM_T = #{saleNumT,jdbcType=VARCHAR},
      SALE_UNIT_T = #{saleUnitT,jdbcType=VARCHAR},
      VIDEO_NUM = #{videoNum,jdbcType=TINYINT},
      CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      is_ignore = #{isIgnore,jdbcType=TINYINT},
      sale_id_old = #{saleIdOld,jdbcType=INTEGER},
      SALE_INNERAREA = #{saleInnerarea,jdbcType=DECIMAL},
      HOUSE_BARGAIN = #{houseBargain,jdbcType=BIT},
      ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      [LOCK] = #{lock,jdbcType=TINYINT},
      TRUE_FLAG = #{trueFlag,jdbcType=TINYINT},
      SENDTOTENCENT = #{sendtotencent,jdbcType=TINYINT},
      HOUSE_SOURCE_WAY = #{houseSourceWay,jdbcType=TINYINT},
      YOU_SHARE_FLAG = #{youShareFlag,jdbcType=TINYINT},
      YOU_SHARE_TIME = #{youShareTime,jdbcType=TIMESTAMP},
      YOU_BUY_COUNT = #{youBuyCount,jdbcType=INTEGER},
      OWNER_SEX = #{ownerSex,jdbcType=TINYINT},
      YOU_SHARE_ID = #{youShareId,jdbcType=INTEGER},
      THUMBPIC_VER = #{thumbpicVer,jdbcType=VARCHAR},
      PRIVATE_USER_ID = #{privateUserId,jdbcType=INTEGER},
      ADDR_MD5 = #{addrMd5,jdbcType=VARCHAR},
      PANORAMA_MAP = #{panoramaMap,jdbcType=INTEGER},
      YOUJIA_STATISTIC_FLAG = #{youjiaStatisticFlag,jdbcType=TINYINT},
      ADS_FLAG = #{adsFlag,jdbcType=TINYINT},
      SYNC_TIME = #{syncTime,jdbcType=TIMESTAMP},
      VIDEO_REVIEW_FLAG = #{videoReviewFlag,jdbcType=TINYINT},
      HAS_PANORAMA = #{hasPanorama,jdbcType=TINYINT},
      BIDDING_FLAG = #{biddingFlag,jdbcType=BIT},
      COMPETE_END_TIME = #{competeEndTime,jdbcType=TIMESTAMP},
      COMPETE_PRICE = #{competePrice,jdbcType=NUMERIC},
      YOU_SHARE_MONEY_STATE = #{youShareMoneyState,jdbcType=TINYINT},
      SENDTO_WEIDIAN = #{sendtoWeidian,jdbcType=TINYINT},
      SENDTO_YOUYOU = #{sendtoYouyou,jdbcType=TINYINT},
      YOUYOU_DEAL = #{youyouDeal,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{scheduleEndTime,jdbcType=TIMESTAMP},
      CHECK_CODE_FUN = #{checkCodeFun,jdbcType=VARCHAR},
      PROXY_URL = #{proxyUrl,jdbcType=VARCHAR},
      QZ_CODE_FUN = #{qzCodeFun,jdbcType=VARCHAR},
      CHECK_CODE_URL = #{checkCodeUrl,jdbcType=VARCHAR},
      UPLOAD_PROXY_USER = #{uploadProxyUser,jdbcType=VARCHAR},
      CITY_SHARE_FLAG = #{cityShareFlag,jdbcType=TINYINT},
      BRAND_COMP_ID = #{brandCompId,jdbcType=INTEGER},
      COMP_ID2 = #{compId2,jdbcType=INTEGER},
      FILE_SYSTEM_TYPE = #{fileSystemType,jdbcType=TINYINT},
      OWNERSHIP_TYPE = #{ownershipType,jdbcType=TINYINT},
      EFFECTIVE_DATE = #{effectiveDate,jdbcType=TIMESTAMP},
      FUNMANAGER_SALESTATUS = #{funmanagerSalestatus,jdbcType=TINYINT},
      HAS_FUNKAN = #{hasFunkan,jdbcType=TINYINT},
      JOINT_CELL_PHONE = #{jointCellPhone,jdbcType=VARCHAR},
      JOINT_USER_NAME = #{jointUserName,jdbcType=VARCHAR},
      JOINT_USER_SEX = #{jointUserSex,jdbcType=TINYINT},
      JOINT_ID_CARD = #{jointIdCard,jdbcType=VARCHAR},
      RESPITE_END_TIME = #{respiteEndTime,jdbcType=TIMESTAMP},
      SALE_LEASE_ID = #{saleLeaseId,jdbcType=INTEGER},
      IS_SALE_LEASE = #{isSaleLease,jdbcType=TINYINT},
      ENTRUST_END_TIME = #{entrustEndTime,jdbcType=TIMESTAMP},
      ENTRUST_CREATE_USER = #{entrustCreateUser,jdbcType=INTEGER},
      AVAILABLE_TIME = #{availableTime,jdbcType=TIMESTAMP},
      MODIFY_PRICE_END = #{modifyPriceEnd,jdbcType=TIMESTAMP},
      MODIFY_PRICE_TREND = #{modifyPriceTrend,jdbcType=TINYINT},
      HOUSE_SITUATION = #{houseSituation,jdbcType=TINYINT},
      LAST_DKAN_TIME = #{lastDkanTime,jdbcType=TIMESTAMP},
      OLD_TRUE_FLAG = #{oldTrueFlag,jdbcType=TINYINT},
      INNER_NO = #{innerNo,jdbcType=INTEGER},
      JOINT_ID_CARD_TYPE = #{jointIdCardType,jdbcType=INTEGER},
      ID_CARD_TYPE = #{idCardType,jdbcType=INTEGER},
      SALE_BAY = #{saleBay,jdbcType=NUMERIC},
      SALE_DEPTH = #{saleDepth,jdbcType=NUMERIC},
      SALE_STOREY = #{saleStorey,jdbcType=NUMERIC},
      SALE_GRADATION = #{saleGradation,jdbcType=TINYINT},
      SALE_NATURE = #{saleNature,jdbcType=TINYINT},
      VILLA_TYPE = #{villaType,jdbcType=TINYINT},
      SALE_STYLE = #{saleStyle,jdbcType=TINYINT},
      ACTION_TYPE = #{actionType,jdbcType=TINYINT},
      SCENERY_TYPE = #{sceneryType,jdbcType=TINYINT},
      RECEIPT_TYPE = #{receiptType,jdbcType=TINYINT},
      GUARANTY_TYPE = #{guarantyType,jdbcType=TINYINT},
      CHECK_TIME = #{checkTime,jdbcType=VARCHAR},
      FOCUS_TIME = #{focusTime,jdbcType=TIMESTAMP},
      USER_LEVEL = #{userLevel,jdbcType=INTEGER},
      TISSUE_LINE = #{tissueLine,jdbcType=VARCHAR},
      SALE_BUY_PRICE = #{saleBuyPrice,jdbcType=NUMERIC},
      PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      FUNKAN_USER_ID = #{funkanUserId,jdbcType=INTEGER},
      SALE_KEY_USER_ID = #{saleKeyUserId,jdbcType=INTEGER},
      FILE_CODING = #{fileCoding,jdbcType=VARCHAR},
      MORTGAGE_BANK = #{mortgageBank,jdbcType=VARCHAR},
      ARREARS = #{arrears,jdbcType=NUMERIC},
      CURRENT_RENT = #{currentRent,jdbcType=NUMERIC},
      TURN_RATE = #{turnRate,jdbcType=NUMERIC},
      HOUSE_VERIFY = #{houseVerify,jdbcType=TINYINT},
      KITCHEN = #{kitchen,jdbcType=TINYINT},
      ML_WHOLE_LAYER = #{mlWholeLayer,jdbcType=TINYINT},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      LEASE_EXPIRATION_TIME = #{leaseExpirationTime,jdbcType=TIMESTAMP},
      TRANSACTION_STATUS = #{transactionStatus,jdbcType=TINYINT},
      HAS_RECORDED = #{hasRecorded,jdbcType=TINYINT},
      SALE_ENTRUST_PRICE = #{saleEntrustPrice,jdbcType=NUMERIC},
      HAS_ENTRUST = #{hasEntrust,jdbcType=TINYINT},
      OFFEREE_TIME = #{offereeTime,jdbcType=TIMESTAMP},
      SALE_AMOUNT_CHANGE_TIME = #{saleAmountChangeTime,jdbcType=TIMESTAMP},
      FUZZY_SEARCH = #{fuzzySearch,jdbcType=CLOB}
    where SALE_ID = #{saleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunSale">
    <!--@mbggenerated-->
    update FUN_SALE
    set COMP_ID = #{compId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      CREATE_ARCHIVE_ID = #{createArchiveId,jdbcType=INTEGER},
      SALE_NO = #{saleNo,jdbcType=VARCHAR},
      SALE_OWNER = #{saleOwner,jdbcType=VARCHAR},
      CELL_PHONE = #{cellPhone,jdbcType=VARCHAR},
      ID_CARD = #{idCard,jdbcType=VARCHAR},
      SALE_SUBJECT = #{saleSubject,jdbcType=VARCHAR},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      BUILD_CODE = #{buildCode,jdbcType=VARCHAR},
      SALE_REG = #{saleReg,jdbcType=INTEGER},
      REGION_NAME = #{regionName,jdbcType=VARCHAR},
      SECTION_ID = #{sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{sectionName,jdbcType=VARCHAR},
      SALE_ROUND = #{saleRound,jdbcType=TINYINT},
      TRADE_ADDR = #{tradeAddr,jdbcType=VARCHAR},
      SALE_ROOF = #{saleRoof,jdbcType=VARCHAR},
      SALE_UNIT = #{saleUnit,jdbcType=VARCHAR},
      UNIT_FLOOR = #{unitFloor,jdbcType=VARCHAR},
      SALE_NUM = #{saleNum,jdbcType=VARCHAR},
      SALE_ROOF_R = #{saleRoofR,jdbcType=VARCHAR},
      SALE_UNIT_R = #{saleUnitR,jdbcType=VARCHAR},
      UNIT_FLOOR_R = #{unitFloorR,jdbcType=VARCHAR},
      SALE_NUM_R = #{saleNumR,jdbcType=VARCHAR},
      SALE_LADDER = #{saleLadder,jdbcType=INTEGER},
      SALE_DOORS = #{saleDoors,jdbcType=TINYINT},
      SALE_ROOM = #{saleRoom,jdbcType=TINYINT},
      SALE_HALL = #{saleHall,jdbcType=TINYINT},
      SALE_WEI = #{saleWei,jdbcType=TINYINT},
      SALE_YANG = #{saleYang,jdbcType=TINYINT},
      SALE_TYPE = #{saleType,jdbcType=TINYINT},
      SALE_FLOOR = #{saleFloor,jdbcType=SMALLINT},
      SALE_FLOORS = #{saleFloors,jdbcType=INTEGER},
      SALE_FITMENT = #{saleFitment,jdbcType=TINYINT},
      SALE_DIRECT = #{saleDirect,jdbcType=TINYINT},
      SALE_YEAR = #{saleYear,jdbcType=SMALLINT},
      SALE_STRUCT = #{saleStruct,jdbcType=TINYINT},
      SALE_USEAGE = #{saleUseage,jdbcType=TINYINT},
      SHOP_USAGE = #{shopUsage,jdbcType=VARCHAR},
      OWNER_TYPE = #{ownerType,jdbcType=TINYINT},
      OFFICE_LEVEL = #{officeLevel,jdbcType=TINYINT},
      SALE_STREET = #{saleStreet,jdbcType=BIT},
      SALE_RIGHT = #{saleRight,jdbcType=TINYINT},
      SALE_MORTGAGE = #{saleMortgage,jdbcType=VARCHAR},
      SALE_ACCOUNT = #{saleAccount,jdbcType=VARCHAR},
      SALE_AREA = #{saleArea,jdbcType=NUMERIC},
      SALE_TOTAL_PRICE = #{saleTotalPrice,jdbcType=NUMERIC},
      SALE_UNIT_PRICE = #{saleUnitPrice,jdbcType=NUMERIC},
      SALE_LOWEST_PRICE = #{saleLowestPrice,jdbcType=NUMERIC},
      SALE_PROPERTY = #{saleProperty,jdbcType=NUMERIC},
      IS_SEPERATOR = #{isSeperator,jdbcType=BIT},
      SALE_LEAVE_TIME = #{saleLeaveTime,jdbcType=VARCHAR},
      HALL_STRUCTURE = #{hallStructure,jdbcType=TINYINT},
      UG_AREA = #{ugArea,jdbcType=NUMERIC},
      UG_TYPE = #{ugType,jdbcType=TINYINT},
      GARDEN_AREA = #{gardenArea,jdbcType=NUMERIC},
      GARAGE_AMOUNT = #{garageAmount,jdbcType=TINYINT},
      SALE_CHARACT = #{saleCharact,jdbcType=VARCHAR},
      SALE_MEMO = #{saleMemo,jdbcType=VARCHAR},
      SALE_SOURCE = #{saleSource,jdbcType=TINYINT},
      SALE_KEY = #{saleKey,jdbcType=BIT},
      SALE_KEY_NUM = #{saleKeyNum,jdbcType=VARCHAR},
      KEY_TIME = #{keyTime,jdbcType=TIMESTAMP},
      SALE_EXPLRTH = #{saleExplrth,jdbcType=BIT},
      EXPLRTH_DATETIME = #{explrthDatetime,jdbcType=TIMESTAMP},
      SALE_CONSIGN = #{saleConsign,jdbcType=TINYINT},
      SALE_CONSIGN_NO = #{saleConsignNo,jdbcType=VARCHAR},
      WEITUO_TIME = #{weituoTime,jdbcType=TIMESTAMP},
      SALE_COOPERATE = #{saleCooperate,jdbcType=BIT},
      SALE_PUBLISH = #{salePublish,jdbcType=BIT},
      SALE_MAP = #{saleMap,jdbcType=TINYINT},
      SALE_LEVEL = #{saleLevel,jdbcType=TINYINT},
      PLATE_TYPE = #{plateType,jdbcType=TINYINT},
      SALE_STATUS = #{saleStatus,jdbcType=TINYINT},
      TRACK_TIME = #{trackTime,jdbcType=TIMESTAMP},
      TRACK_TIME2 = #{trackTime2,jdbcType=TIMESTAMP},
      ACTION_TIME = #{actionTime,jdbcType=TIMESTAMP},
      FROM_SOSO = #{fromSoso,jdbcType=BIT},
      REPEAT_FLAG = #{repeatFlag,jdbcType=TINYINT},
      INFO_TYPE = #{infoType,jdbcType=TINYINT},
      SHARE_FLAG = #{shareFlag,jdbcType=BIT},
      FRIEND_HOUSE = #{friendHouse,jdbcType=BIT},
      COOPERATE_TIME = #{cooperateTime,jdbcType=TIMESTAMP},
      COMPLAINT_FLAG = #{complaintFlag,jdbcType=BIT},
      PUBLISH_TIME = #{publishTime,jdbcType=TIMESTAMP},
      PHOTO_TIME = #{photoTime,jdbcType=TIMESTAMP},
      RED_FLAG = #{redFlag,jdbcType=BIT},
      ORANGE_FLAG = #{orangeFlag,jdbcType=BIT},
      PUBLIC_COUNT = #{publicCount,jdbcType=INTEGER},
      PUBLIC_TIME = #{publicTime,jdbcType=TIMESTAMP},
      SPECIAL_TIME = #{specialTime,jdbcType=TIMESTAMP},
      SCHEDULE_TIME = #{scheduleTime,jdbcType=TIMESTAMP},
      DEAL_TIME = #{dealTime,jdbcType=TIMESTAMP},
      WRITEOFF_TIME = #{writeoffTime,jdbcType=TIMESTAMP},
      SECRECY_TIME = #{secrecyTime,jdbcType=TIMESTAMP},
      COMMEND_TIME = #{commendTime,jdbcType=TIMESTAMP},
      PRIVATE_TIME = #{privateTime,jdbcType=TIMESTAMP},
      FROM_PUBLIC = #{fromPublic,jdbcType=BIT},
      THUMB_URL = #{thumbUrl,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      TAG_IDS = #{tagIds,jdbcType=VARCHAR},
      SALE_CERT_TIME = #{saleCertTime,jdbcType=TIMESTAMP},
      PUBLISH_SITES = #{publishSites,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      SALE_ROOF_T = #{saleRoofT,jdbcType=VARCHAR},
      SALE_NUM_T = #{saleNumT,jdbcType=VARCHAR},
      SALE_UNIT_T = #{saleUnitT,jdbcType=VARCHAR},
      VIDEO_NUM = #{videoNum,jdbcType=TINYINT},
      CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      is_ignore = #{isIgnore,jdbcType=TINYINT},
      sale_id_old = #{saleIdOld,jdbcType=INTEGER},
      SALE_INNERAREA = #{saleInnerarea,jdbcType=DECIMAL},
      HOUSE_BARGAIN = #{houseBargain,jdbcType=BIT},
      ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      [LOCK] = #{lock,jdbcType=TINYINT},
      TRUE_FLAG = #{trueFlag,jdbcType=TINYINT},
      SENDTOTENCENT = #{sendtotencent,jdbcType=TINYINT},
      HOUSE_SOURCE_WAY = #{houseSourceWay,jdbcType=TINYINT},
      YOU_SHARE_FLAG = #{youShareFlag,jdbcType=TINYINT},
      YOU_SHARE_TIME = #{youShareTime,jdbcType=TIMESTAMP},
      YOU_BUY_COUNT = #{youBuyCount,jdbcType=INTEGER},
      OWNER_SEX = #{ownerSex,jdbcType=TINYINT},
      YOU_SHARE_ID = #{youShareId,jdbcType=INTEGER},
      THUMBPIC_VER = #{thumbpicVer,jdbcType=VARCHAR},
      PRIVATE_USER_ID = #{privateUserId,jdbcType=INTEGER},
      ADDR_MD5 = #{addrMd5,jdbcType=VARCHAR},
      PANORAMA_MAP = #{panoramaMap,jdbcType=INTEGER},
      YOUJIA_STATISTIC_FLAG = #{youjiaStatisticFlag,jdbcType=TINYINT},
      ADS_FLAG = #{adsFlag,jdbcType=TINYINT},
      SYNC_TIME = #{syncTime,jdbcType=TIMESTAMP},
      VIDEO_REVIEW_FLAG = #{videoReviewFlag,jdbcType=TINYINT},
      HAS_PANORAMA = #{hasPanorama,jdbcType=TINYINT},
      BIDDING_FLAG = #{biddingFlag,jdbcType=BIT},
      COMPETE_END_TIME = #{competeEndTime,jdbcType=TIMESTAMP},
      COMPETE_PRICE = #{competePrice,jdbcType=NUMERIC},
      YOU_SHARE_MONEY_STATE = #{youShareMoneyState,jdbcType=TINYINT},
      SENDTO_WEIDIAN = #{sendtoWeidian,jdbcType=TINYINT},
      SENDTO_YOUYOU = #{sendtoYouyou,jdbcType=TINYINT},
      YOUYOU_DEAL = #{youyouDeal,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{scheduleEndTime,jdbcType=TIMESTAMP},
      CHECK_CODE_FUN = #{checkCodeFun,jdbcType=VARCHAR},
      PROXY_URL = #{proxyUrl,jdbcType=VARCHAR},
      QZ_CODE_FUN = #{qzCodeFun,jdbcType=VARCHAR},
      CHECK_CODE_URL = #{checkCodeUrl,jdbcType=VARCHAR},
      UPLOAD_PROXY_USER = #{uploadProxyUser,jdbcType=VARCHAR},
      CITY_SHARE_FLAG = #{cityShareFlag,jdbcType=TINYINT},
      BRAND_COMP_ID = #{brandCompId,jdbcType=INTEGER},
      COMP_ID2 = #{compId2,jdbcType=INTEGER},
      FILE_SYSTEM_TYPE = #{fileSystemType,jdbcType=TINYINT},
      OWNERSHIP_TYPE = #{ownershipType,jdbcType=TINYINT},
      EFFECTIVE_DATE = #{effectiveDate,jdbcType=TIMESTAMP},
      FUNMANAGER_SALESTATUS = #{funmanagerSalestatus,jdbcType=TINYINT},
      HAS_FUNKAN = #{hasFunkan,jdbcType=TINYINT},
      JOINT_CELL_PHONE = #{jointCellPhone,jdbcType=VARCHAR},
      JOINT_USER_NAME = #{jointUserName,jdbcType=VARCHAR},
      JOINT_USER_SEX = #{jointUserSex,jdbcType=TINYINT},
      JOINT_ID_CARD = #{jointIdCard,jdbcType=VARCHAR},
      RESPITE_END_TIME = #{respiteEndTime,jdbcType=TIMESTAMP},
      SALE_LEASE_ID = #{saleLeaseId,jdbcType=INTEGER},
      IS_SALE_LEASE = #{isSaleLease,jdbcType=TINYINT},
      ENTRUST_END_TIME = #{entrustEndTime,jdbcType=TIMESTAMP},
      ENTRUST_CREATE_USER = #{entrustCreateUser,jdbcType=INTEGER},
      AVAILABLE_TIME = #{availableTime,jdbcType=TIMESTAMP},
      MODIFY_PRICE_END = #{modifyPriceEnd,jdbcType=TIMESTAMP},
      MODIFY_PRICE_TREND = #{modifyPriceTrend,jdbcType=TINYINT},
      HOUSE_SITUATION = #{houseSituation,jdbcType=TINYINT},
      LAST_DKAN_TIME = #{lastDkanTime,jdbcType=TIMESTAMP},
      OLD_TRUE_FLAG = #{oldTrueFlag,jdbcType=TINYINT},
      INNER_NO = #{innerNo,jdbcType=INTEGER},
      JOINT_ID_CARD_TYPE = #{jointIdCardType,jdbcType=INTEGER},
      ID_CARD_TYPE = #{idCardType,jdbcType=INTEGER},
      SALE_BAY = #{saleBay,jdbcType=NUMERIC},
      SALE_DEPTH = #{saleDepth,jdbcType=NUMERIC},
      SALE_STOREY = #{saleStorey,jdbcType=NUMERIC},
      SALE_GRADATION = #{saleGradation,jdbcType=TINYINT},
      SALE_NATURE = #{saleNature,jdbcType=TINYINT},
      VILLA_TYPE = #{villaType,jdbcType=TINYINT},
      SALE_STYLE = #{saleStyle,jdbcType=TINYINT},
      ACTION_TYPE = #{actionType,jdbcType=TINYINT},
      SCENERY_TYPE = #{sceneryType,jdbcType=TINYINT},
      RECEIPT_TYPE = #{receiptType,jdbcType=TINYINT},
      GUARANTY_TYPE = #{guarantyType,jdbcType=TINYINT},
      CHECK_TIME = #{checkTime,jdbcType=VARCHAR},
      FOCUS_TIME = #{focusTime,jdbcType=TIMESTAMP},
      USER_LEVEL = #{userLevel,jdbcType=INTEGER},
      TISSUE_LINE = #{tissueLine,jdbcType=VARCHAR},
      SALE_BUY_PRICE = #{saleBuyPrice,jdbcType=NUMERIC},
      PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      FUNKAN_USER_ID = #{funkanUserId,jdbcType=INTEGER},
      SALE_KEY_USER_ID = #{saleKeyUserId,jdbcType=INTEGER},
      FILE_CODING = #{fileCoding,jdbcType=VARCHAR},
      MORTGAGE_BANK = #{mortgageBank,jdbcType=VARCHAR},
      ARREARS = #{arrears,jdbcType=NUMERIC},
      CURRENT_RENT = #{currentRent,jdbcType=NUMERIC},
      TURN_RATE = #{turnRate,jdbcType=NUMERIC},
      HOUSE_VERIFY = #{houseVerify,jdbcType=TINYINT},
      KITCHEN = #{kitchen,jdbcType=TINYINT},
      ML_WHOLE_LAYER = #{mlWholeLayer,jdbcType=TINYINT},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      LEASE_EXPIRATION_TIME = #{leaseExpirationTime,jdbcType=TIMESTAMP},
      TRANSACTION_STATUS = #{transactionStatus,jdbcType=TINYINT},
      HAS_RECORDED = #{hasRecorded,jdbcType=TINYINT},
      SALE_ENTRUST_PRICE = #{saleEntrustPrice,jdbcType=NUMERIC},
      HAS_ENTRUST = #{hasEntrust,jdbcType=TINYINT},
      OFFEREE_TIME = #{offereeTime,jdbcType=TIMESTAMP},
      SALE_AMOUNT_CHANGE_TIME = #{saleAmountChangeTime,jdbcType=TIMESTAMP}
    where SALE_ID = #{saleId,jdbcType=INTEGER}
  </update>
	<resultMap extends="BaseResultMap" id="ErpFunSaleDtoMap" type="com.myfun.repository.erpdb.dto.ErpFunSaleDto" />
  <resultMap extends="BaseResultMap" id="BaseResultMapSaleDto" type="com.myfun.erpWeb.house.vo.FunSaleDto" />
<cache type="com.myfun.repository.support.mybatis.cache.redis.MybatisCacheRedisImpl" />
	
	<!-- 查询列来源表 -->
	<sql id="QUERY_FROM_TABLE">FROM FUN_SALE</sql>
	<!-- 所有查询列，可自定义列 -->
	<sql id="QUERY_COLUMN_LIST_OBJ">
		<if test="columns != null and columns.length &gt; 0">
			<foreach collection="columns" item="column" separator=",">
				${column}
			</foreach>
		</if>                                                                       
		<if test="columns == null or columns.length == 0"><include refid="Base_Column_List" /></if>
	</sql>
	<!-- 更新的条件 -->
	<sql id="CONDITIONS_LIST">
		<if test="conditions != null and conditions.size() &gt; 0">
			<foreach collection="conditions" item="item" separator=" ">
				<if test="item.column == ')' or item.column == '('">${item.logic} ${item.column}</if>
				<if test="item.column != ')' and item.column != '(' and item.values != null">${item.logic} ${item.column} ${item.add} #{item.values}</if>
				<if test="item.column != ')' and item.column != '(' and item.valuesArr != null">
					${item.logic} ${item.column} ${item.add}
					<foreach close=")" collection="item.valuesArr" item="val" open="(" separator=",">#{val}</foreach>
				</if>
			</foreach>
		</if>
	</sql>
	<!-- 更新自定义列字段 -->
	<sql id="UPDATE_LIST_COLUMN">
		<if test="updateColumns != null and updateColumns.size() &gt; 0">
			<foreach collection="updateColumns" item="item" separator=",">
				<if test="item.logic != null and item.logic != '' and item.column == null">${item.logic}</if>
				<if test="item.add != null and item.add != ''">${item.column} ${item.add} #{item.values}</if>
			</foreach>
		</if>
	</sql>
	<!-- 排序 -->
	<sql id="QUERY_GROUP_ORDER_CONDTION">
		<if test="groupByField != null and groupByField != ''">GROUP BY ${groupByField}</if>
		<if test="orderByField != null and orderByField != ''">ORDER BY ${orderByField}</if>
	</sql>
	<!-- 查询,通过条件 -->
	<select id="selectListByCondition" parameterType="com.myfun.repository.support.mybatis.condition.BaseQuery" resultMap="BaseResultMap">
		SELECT
		<include refid="QUERY_COLUMN_LIST_OBJ" />
		<include refid="QUERY_FROM_TABLE" />
		<where>
			<include refid="CONDITIONS_LIST" />
		</where>
		<include refid="QUERY_GROUP_ORDER_CONDTION" />
	</select>
	
  <resultMap id="ErpBulletHouseDto" type="com.myfun.repository.erpdb.dto.ErpBulletHouseDto">
    <id column="SALE_ID" property="id" />
    <result column="REGION_NAME" property="regionName" />
    <result column="BUILD_NAME" property="buildName" />
    <result column="SALE_FLOOR" property="caseFloor" />
    <result column="SALE_FLOORS" property="caseFloors" />
    <result column="SALE_ROOM" property="caseRoom" />
    <result column="SALE_HALL" property="caseHall" />
    <result column="SALE_WEI" property="caseWei" />
    <result column="SALE_TOTAL_PRICE" property="caseTotalPrice" />
    <result column="SALE_AREA" property="caseArea" />
    <result column="SALE_CHARACT" property="charact" />
    <result column="SALE_FITMENT" property="caseFitment" />
    <result column="SALE_STREET" property="caseStreet" />
    <result column="SALE_MAP" property="map" />
    <result column="USER_ID" property="userId" />
    <result column="COMP_ID" property="compId" />
    <result column="DEPT_ID" property="deptId" />
    <result column="SALE_USEAGE" property="useage" />
    </resultMap>
  
  <sql id="Query_Column_List">
    <!--chenwenchao-->
    SALE_ID, COMP_ID, CITY_ID, REG_ID, DEPT_ID, GR_ID, USER_ID, ARCHIVE_ID, CREATION_TIME, 
    CREATE_ARCHIVE_ID, SALE_NO, SALE_SUBJECT, BUILD_ID, BUILD_NAME, BUILD_CODE, SALE_REG, 
    REGION_NAME, SECTION_ID, SECTION_NAME, SALE_ROUND, SALE_LADDER, SALE_DOORS, SALE_ROOM, 
    SALE_HALL, SALE_WEI, SALE_YANG, SALE_TYPE, SALE_FLOOR, SALE_FLOORS, SALE_FITMENT, 
    SALE_DIRECT, SALE_YEAR, SALE_STRUCT, SALE_USEAGE, SHOP_USAGE, OWNER_TYPE, OFFICE_LEVEL, 
    SALE_STREET, SALE_RIGHT, SALE_MORTGAGE, SALE_ACCOUNT, SALE_AREA, SALE_TOTAL_PRICE, 
    SALE_UNIT_PRICE, SALE_PROPERTY, HALL_STRUCTURE, UG_AREA, UG_TYPE, GARDEN_AREA, 
    GARAGE_AMOUNT, SALE_COOPERATE,SALE_PUBLISH, SALE_MAP, SALE_STATUS, COMPLAINT_FLAG, 
    THUMB_URL, TAG_IDS, AREA_ID,VIDEO_NUM, CREATOR_UID, SALE_INNERAREA, TRUE_FLAG, 
    SENDTOTENCENT,YOU_SHARE_FLAG,THUMBPIC_VER, PANORAMA_MAP
  </sql>
  
  <resultMap id="BaseResultMapDto" type="com.myfun.repository.erpdb.dto.houseAuditDto">
  	   <result column="HOUSE_ID" jdbcType="VARCHAR" property="houseId" />
  	   <result column="HOUSE_NO" jdbcType="VARCHAR" property="houseNO" />
  	   <result column="HOUSE_NAME" jdbcType="VARCHAR" property="houseName" />
  	   <result column="HOUSE_DIRECT" jdbcType="VARCHAR" property="houseDirect" />
  	   <result column="HOUSE_YEAR" jdbcType="VARCHAR" property="houseYear" />
  	   <result column="HOUSE_FLOOR" jdbcType="VARCHAR" property="houseFloor" />
  	   <result column="HOUSE_FLOORS" jdbcType="VARCHAR" property="houseFloors" />
  	   <result column="HOUSE_ROOM" jdbcType="VARCHAR" property="houseRoom" />
  	   <result column="HOUSE_HALL" jdbcType="VARCHAR" property="houseHall" />
  	   <result column="HOUSE_WEI" jdbcType="VARCHAR" property="houseWei" />
  	   <result column="HOUSE_AREA" jdbcType="VARCHAR" property="houseArea" />
  	   <result column="HOUSE_USEAGE" jdbcType="VARCHAR" property="houseUseage" />
  	   <result column="HOUSE_TOTAL_PRICE" jdbcType="VARCHAR" property="houseTotalPrice" />
  	   <result column="HOUSE_UNIT_PRICE" jdbcType="VARCHAR" property="houseUnitPrice" />
  	   <result column="HOUSE_FITMENT" jdbcType="VARCHAR" property="houseFitment" />
  	   <result column="HOUSE_SUBJECT" jdbcType="VARCHAR" property="houseSubject" />
  	   <result column="CHECK_STATUS" jdbcType="VARCHAR" property="checkStatus" />
  	   <result column="PUBLISH_SITE" jdbcType="VARCHAR" property="publishSite" />
  	   <result column="CREATION_TIME" jdbcType="VARCHAR" property="creationTime" />
  	   <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
  	   <result column="CHECK_USER" jdbcType="VARCHAR" property="checkUser" />
  	   <result column="PUB_ID" jdbcType="VARCHAR" property="pubId" />
  	   <result column="CITY_ID" jdbcType="VARCHAR" property="cityId" />
  </resultMap>
  <!-- business -->
  <select id="getFunSaleListBySolrParamForPage" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from FUN_SALE
    <where>
      <if test="preSyncTime != null">
        and UPDATE_TIME &gt;= #{preSyncTime,jdbcType=TIMESTAMP}
      </if>
      <if test="serverTime != null">
        and UPDATE_TIME &lt;= #{serverTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    order by UPDATE_TIME desc
  </select>
  
  <!-- 暂时没调用 -->
  <select id="getHouseAuditSaleList" parameterType="com.myfun.repository.erpdb.param.houseAuditParam" resultMap="BaseResultMapDto">
  	SELECT DISTINCT
		A.CITY_ID,
		A.SALE_ID AS HOUSE_ID,
		A.SALE_NO AS HOUSE_NO,
		A.BUILD_NAME AS HOUSE_NAME,
		A.SALE_DIRECT AS HOUSE_DIRECT,
		A.SALE_YEAR AS HOUSE_YEAR,
		A.SALE_FLOOR AS HOUSE_FLOOR,
		A.SALE_FLOORS AS HOUSE_FLOORS,
		A.SALE_ROOM AS HOUSE_ROOM,
		A.SALE_HALL AS HOUSE_HALL,
		A.SALE_WEI AS HOUSE_WEI,
		A.SALE_AREA AS HOUSE_AREA,
		SALE_USEAGE AS HOUSE_USEAGE,
		A.SALE_TOTAL_PRICE AS HOUSE_TOTAL_PRICE,
		A.SALE_UNIT_PRICE AS HOUSE_UNIT_PRICE,
		A.SALE_FITMENT AS HOUSE_FITMENT,
		A.SALE_SUBJECT AS HOUSE_SUBJECT,
		B.CHECK_STATUS AS CHECK_STATUS,
		B.PUBLISH_SITE AS PUBLISH_SITE,
		A.CREATION_TIME AS CREATION_TIME,
		B.UPDATE_TIME AS UPDATE_TIME,
		B.CHECK_USER AS CHECK_USER,
		B.PUB_ID AS PUB_ID
	FROM
		FUN_SALE A RIGHT JOIN FUN_HOUSE_PUBLISH_STATUS B ON A.SALE_ID = B.HOUSE_ID AND B.SALE_LEASE = 1 AND A.SALE_USEAGE = B.HOUSE_USEAGE
	WHERE
		1 = 1
	AND USER_ID IS NOT NULL
	AND SALE_STATUS = 1
	<if test="house.buildText != null and house.buildText != ''">
		and (A.BUILD_NAME like '%${house.buildText}%' or A.BUILD_CODE like '%${house.buildText}%')
	</if>
	<if test="house.crmUser != null and house.crmUser != ''">
		 and B.CHECK_USER = #{house.crmUser}
	</if>
	<if test="house.publishId != null and house.publishId != '' and house.publishId == '-1'">
		and B.PUBLISH_SITE IN (-1,4,5)
	</if>
	<if test="house.publishId != null and house.publishId != '' and house.publishId != '-1'">
		and B.PUBLISH_SITE = #{house.publishId}
	</if>
	<if test="house.houseNo != null and house.houseNo != ''">
		and A.SALE_NO = #{house.houseNo}
	</if>
	<if test="house.userid != null and house.userid != ''">
		and A.USER_ID = #{house.userid}
	</if>
	order by A.CREATION_TIME DESC
  </select>
  <select id="getColumnInfoByTbName" parameterType="java.lang.String" resultType="com.myfun.repository.support.generator.ColumnVo">
    select column_name field, data_type type from information_schema.columns where table_name =  #{tbName}
  </select>
  <select id="getFunSaleByCondition" parameterType="com.myfun.repository.erpdb.po.ErpFunSale" resultMap="BaseResultMap">
  		select <include refid="Base_Column_List" /> from FUN_SALE
  		<where>
  			<if test="null != saleId">
  				and SALE_ID=#{saleId}
  			</if>
  			<if test="null != cityId">
  				and CITY_ID=#{cityId}
  			</if>
  			<if test="null != saleStatus">
  				and SALE_STATUS = #{saleStatus,jdbcType=TINYINT}
  			</if>
  			<if test="null != salePublish">
  				and SALE_PUBLISH = #{salePublish,jdbcType=BIT}
  			</if>
  		</where>
  </select>
  <select id="getFunSaleBySaleId" resultMap="BaseResultMap">
  		select <include refid="Base_Column_List" /> from FUN_SALE WHERE SALE_ID = #{saleId,jdbcType=INTEGER}
  </select>
  <update id="updateByUserId" parameterType="com.myfun.repository.erpdb.param.ErpFunSaleParam">
  	update FUN_SALE
    <set>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="manageUserId != null">
        USER_ID = #{manageUserId,jdbcType=INTEGER}
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByArchiveIdAndUserId" parameterType="com.myfun.repository.erpdb.param.ErpFunSaleParam">
  	update FUN_SALE
    <set>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER}
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER}
    	AND ARCHIVE_ID = #{archiveId,jdbcType=INTEGER}
  </update>
  
  <update id="updateCellPhoneByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunSale">
    update FUN_SALE
    <set>
      <if test="cellPhone != null">
        CELL_PHONE = #{cellPhone,jdbcType=VARCHAR},
      </if>
    </set>
    where SALE_ID = #{saleId,jdbcType=INTEGER}
  </update>
  <update id="updateFunSaleKeyNumById" parameterType="com.myfun.repository.erpdb.po.ErpFunSale">
    update FUN_SALE
 	set SALE_KEY=#{updateModel.saleKey,jdbcType=BIT},
 	SALE_KEY_NUM=#{updateModel.saleKeyNum,jdbcType=VARCHAR},
 	KEY_TIME=#{updateModel.keyTime,jdbcType=TIMESTAMP}
    where SALE_ID = #{updateModel.saleId,jdbcType=INTEGER}
  </update>
  <!-- 用于优优数据的查询	陈文超定-其他的产品使用需谨慎 	开始 -->
  <!-- 过期房源时查询出两条信息 -->
  <select id="getFunSaleList4YouYou" resultMap="BaseResultMap">
    select
    	<include refid="Query_Column_List" />
    from FUN_SALE where SALE_PUBLISH = 1 and SALE_STATUS = 1 order by TRACK_TIME desc
  </select>
  <select id="getFunSaleByCondition4YouYou" parameterType="com.myfun.repository.erpdb.po.ErpFunSale" resultMap="BaseResultMap" useCache="true">
  		select <include refid="Query_Column_List" /> from FUN_SALE
  		<where>
  			<if test="null != saleId">
  				and SALE_ID=#{saleId}
  			</if>
  			<if test="null != cityId">
  				and CITY_ID=#{cityId}
  			</if>
  			<if test="null != saleStatus">
  				and SALE_STATUS = #{saleStatus,jdbcType=TINYINT}
  			</if>
  			<if test="null != salePublish">
  				and SALE_PUBLISH = #{salePublish,jdbcType=BIT}
  			</if>
  		</where>
  </select>
  <!-- 用于优优数据的查询		结束 -->
  <!-- 下架真房源 -->
	<update id="updateTrueFlag">
		update FUN_SALE set TRUE_FLAG = #{trueFlag}
		where SALE_ID in 
		<foreach close=")" collection="saleIds" item="val" open="(" separator=",">
			#{val}
		</foreach>
	</update>
	<update id="updateByUserDefineSql">
		#{sql}
	</update>
  <select id="getFunSaleList" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List" />
  	FROM FUN_SALE
  	WHERE SALE_ID in (${saleIds})
  </select>
  
  <select id="getSaleListForBullet" resultMap="ErpBulletHouseDto">
  	SELECT REGION_NAME,BUILD_NAME,SALE_FLOOR,SALE_FLOORS,SALE_ROOM,SALE_HALL,SALE_WEI,SALE_TOTAL_PRICE,SALE_AREA,SALE_CHARACT,SALE_FITMENT,SALE_STREET,SALE_MAP,USER_ID,COMP_ID,DEPT_ID,SALE_USEAGE
  	FROM FUN_SALE
  	WHERE SALE_ID in 
  	<foreach close=")" collection="saleIds" item="val" open="(" separator=",">#{val}</foreach>
	<if test="null != compId">
		and COMP_ID=#{compId}
	</if>
  </select>
  
  <update id="updateCancleTrueHouse">
  	update a SET TRUE_FLAG = 2  from FUN_SALE a
	LEFT JOIN FUN_TRUEHOUSE_RECORD b ON a.SALE_ID = b.CASE_ID and b.CASE_TYPE = 1
	WHERE b.LIGHT_TYPE = 2 and a.SALE_ID = #{saleId}
  </update>
  <select id="getSaleByCondition" parameterType="com.myfun.repository.support.mybatis.query.Condition" resultMap="BaseResultMap">
  		select <include refid="Query_Column_List" /> from FUN_SALE
  		<where>
  			${condition}
  		</where>
  </select>
    <select id="countShareHouse" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
    count(1) as attr
    from FUN_SALE
    where COMP_ID = #{compId,jdbcType=INTEGER}
    AND (PLATE_TYPE='3' OR PLATE_TYPE='1')
  </select>

    <select id="countShareHouseByPartner" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(1) as attr
        from FUN_SALE
        where COMP_ID = #{compId,jdbcType=INTEGER}
          AND PARTNER_ID = #{partnerId}
          AND (PLATE_TYPE = '3' OR PLATE_TYPE = '1')
    </select>
  
	<select id="getBulletinHouseList" parameterType="com.myfun.repository.erpdb.param.ReqBulletinHouseListParam" resultMap="BaseResultMap">
		SELECT <include refid="Query_Column_List" />
		FROM FUN_SALE
		<where>
			<if test="null != regionNames">
				REGION_NAME IN
				<foreach close=")" collection="regionNames" item="val" open="(" separator=",">#{val}</foreach>
			</if>
			<if test="null != buildNames">
				BUILD_NAME IN
				<foreach close=")" collection="buildNames" item="val" open="(" separator=",">#{val}</foreach>
			</if>
			<if test="null != caseAreas1">and SALE_AREA &gt;= #{caseAreas1}</if>
			<if test="null != caseAreas2">and SALE_AREA &lt;= #{caseAreas2}</if>
			<if test="null != caseRooms1">and SALE_ROOM &gt;= #{caseRooms1}</if>
			<if test="null != caseRooms2">and SALE_ROOM &lt;= #{caseRooms2}</if>
			<if test="null != compId">and COMP_ID = #{compId}</if>
			<if test="null != deptId">and DEPT_ID = #{deptId}</if>
			<if test="null != userId">and USER_ID = #{userId}</if>
			and SALE_STATUS &lt;= 4
		</where>
		ORDER BY SALE_ID DESC
	</select>
  
  <update id="updateOthersbyUserPauseToNormal">
    update FUN_SALE  set TRACK_TIME = CASE WHEN DATEADD(DD, #{pMap.timeZone}, TRACK_TIME)    &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD, #{pMap.timeZone} , TRACK_TIME) END,
                         SPECIAL_TIME  = CASE WHEN DATEADD(DD, #{pMap.timeZone} , SPECIAL_TIME)  &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , SPECIAL_TIME) END,
                         SCHEDULE_TIME = CASE WHEN DATEADD(DD, #{pMap.timeZone} , SCHEDULE_TIME) &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , SCHEDULE_TIME) END,
                         SECRECY_TIME  = CASE WHEN DATEADD(DD, #{pMap.timeZone} , SECRECY_TIME)  &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , SECRECY_TIME) END,
                         COMMEND_TIME  = CASE WHEN DATEADD(DD, #{pMap.timeZone} , COMMEND_TIME)  &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , COMMEND_TIME) END,
                         ACTION_TIME   = CASE WHEN DATEADD(DD, #{pMap.timeZone} , ACTION_TIME)   &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , ACTION_TIME) END,
                         PRIVATE_TIME  = CASE WHEN DATEADD(DD, #{pMap.timeZone} , PRIVATE_TIME)  &gt; GETDATE() THEN GETDATE() ELSE DATEADD(DD,  #{pMap.timeZone} , PRIVATE_TIME) END
    where USER_ID = #{pMap.userId} and DEPT_ID = #{pMap.deptId} and COMP_ID = #{pMap.compId}
  </update>
  <update id="updateHouseForReg">
    update FUN_SALE set AREA_ID = #{pMap.areaId}, REG_ID = #{pMap.regId}  where COMP_ID = #{pMap.compId} and DEPT_ID= #{pMap.deptId}
  </update>
   <update id="updateHouseOffCompId">
    update FUN_SALE
    <set>
      <if test="updateModel.compId != null">
        COMP_ID = #{updateModel.compId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.cityId != null">
        CITY_ID = #{updateModel.cityId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.regId != null">
        REG_ID = #{updateModel.regId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.deptId != null">
        DEPT_ID = #{updateModel.deptId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.grId != null">
        GR_ID = #{updateModel.grId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.userId != null">
        USER_ID = #{updateModel.userId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.archiveId != null">
        ARCHIVE_ID = #{updateModel.archiveId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.creationTime != null">
        CREATION_TIME = #{updateModel.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.createArchiveId != null">
        CREATE_ARCHIVE_ID = #{updateModel.createArchiveId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.saleNo != null">
        SALE_NO = #{updateModel.saleNo,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleOwner != null">
        SALE_OWNER = #{updateModel.saleOwner,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.cellPhone != null">
        CELL_PHONE = #{updateModel.cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.idCard != null">
        ID_CARD = #{updateModel.idCard,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleSubject != null">
        SALE_SUBJECT = #{updateModel.saleSubject,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.buildId != null">
        BUILD_ID = #{updateModel.buildId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.buildName != null">
        BUILD_NAME = #{updateModel.buildName,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.buildCode != null">
        BUILD_CODE = #{updateModel.buildCode,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleReg != null">
        SALE_REG = #{updateModel.saleReg,jdbcType=INTEGER},
      </if>
      <if test="updateModel.regionName != null">
        REGION_NAME = #{updateModel.regionName,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.sectionId != null">
        SECTION_ID = #{updateModel.sectionId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.sectionName != null">
        SECTION_NAME = #{updateModel.sectionName,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleRound != null">
        SALE_ROUND = #{updateModel.saleRound,jdbcType=TINYINT},
      </if>
      <if test="updateModel.tradeAddr != null">
        TRADE_ADDR = #{updateModel.tradeAddr,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleRoof != null">
        SALE_ROOF = #{updateModel.saleRoof,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleUnit != null">
        SALE_UNIT = #{updateModel.saleUnit,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.unitFloor != null">
        UNIT_FLOOR = #{updateModel.unitFloor,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleNum != null">
        SALE_NUM = #{updateModel.saleNum,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleRoofR != null">
        SALE_ROOF_R = #{updateModel.saleRoofR,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleUnitR != null">
        SALE_UNIT_R = #{updateModel.saleUnitR,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.unitFloorR != null">
        UNIT_FLOOR_R = #{updateModel.unitFloorR,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleNumR != null">
        SALE_NUM_R = #{updateModel.saleNumR,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleLadder != null">
        SALE_LADDER = #{updateModel.saleLadder,jdbcType=INTEGER},
      </if>
      <if test="updateModel.saleDoors != null">
        SALE_DOORS = #{updateModel.saleDoors,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleRoom != null">
        SALE_ROOM = #{updateModel.saleRoom,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleHall != null">
        SALE_HALL = #{updateModel.saleHall,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleWei != null">
        SALE_WEI = #{updateModel.saleWei,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleYang != null">
        SALE_YANG = #{updateModel.saleYang,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleType != null">
        SALE_TYPE = #{updateModel.saleType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleFloor != null">
        SALE_FLOOR = #{updateModel.saleFloor,jdbcType=SMALLINT},
      </if>
      <if test="updateModel.saleFloors != null">
        SALE_FLOORS = #{updateModel.saleFloors,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleFitment != null">
        SALE_FITMENT = #{updateModel.saleFitment,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleDirect != null">
        SALE_DIRECT = #{updateModel.saleDirect,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleYear != null">
        SALE_YEAR = #{updateModel.saleYear,jdbcType=SMALLINT},
      </if>
      <if test="updateModel.saleStruct != null">
        SALE_STRUCT = #{updateModel.saleStruct,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleUseage != null">
        SALE_USEAGE = #{updateModel.saleUseage,jdbcType=TINYINT},
      </if>
      <if test="updateModel.shopUsage != null">
        SHOP_USAGE = #{updateModel.shopUsage,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.ownerType != null">
        OWNER_TYPE = #{updateModel.ownerType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.officeLevel != null">
        OFFICE_LEVEL = #{updateModel.officeLevel,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleStreet != null">
        SALE_STREET = #{updateModel.saleStreet,jdbcType=BIT},
      </if>
      <if test="updateModel.saleRight != null">
        SALE_RIGHT = #{updateModel.saleRight,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleMortgage != null">
        SALE_MORTGAGE = #{updateModel.saleMortgage,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleAccount != null">
        SALE_ACCOUNT = #{updateModel.saleAccount,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleArea != null">
        SALE_AREA = #{updateModel.saleArea,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.saleTotalPrice != null">
        SALE_TOTAL_PRICE = #{updateModel.saleTotalPrice,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.saleUnitPrice != null">
        SALE_UNIT_PRICE = #{updateModel.saleUnitPrice,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.saleLowestPrice != null">
        SALE_LOWEST_PRICE = #{updateModel.saleLowestPrice,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.saleProperty != null">
        SALE_PROPERTY = #{updateModel.saleProperty,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.isSeperator != null">
        IS_SEPERATOR = #{updateModel.isSeperator,jdbcType=BIT},
      </if>
      <if test="updateModel.saleLeaveTime != null">
        SALE_LEAVE_TIME = #{updateModel.saleLeaveTime,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.hallStructure != null">
        HALL_STRUCTURE = #{updateModel.hallStructure,jdbcType=TINYINT},
      </if>
      <if test="updateModel.ugArea != null">
        UG_AREA = #{updateModel.ugArea,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.ugType != null">
        UG_TYPE = #{updateModel.ugType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.gardenArea != null">
        GARDEN_AREA = #{updateModel.gardenArea,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.garageAmount != null">
        GARAGE_AMOUNT = #{updateModel.garageAmount,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleCharact != null">
        SALE_CHARACT = #{updateModel.saleCharact,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleMemo != null">
        SALE_MEMO = #{updateModel.saleMemo,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleSource != null">
        SALE_SOURCE = #{updateModel.saleSource,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleKey != null">
        SALE_KEY = #{updateModel.saleKey,jdbcType=BIT},
      </if>
      <if test="updateModel.saleKeyNum != null">
        SALE_KEY_NUM = #{updateModel.saleKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.keyTime != null">
        KEY_TIME = #{updateModel.keyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.saleExplrth != null">
        SALE_EXPLRTH = #{updateModel.saleExplrth,jdbcType=BIT},
      </if>
      <if test="updateModel.explrthDatetime != null">
        EXPLRTH_DATETIME = #{updateModel.explrthDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.saleConsign != null">
        SALE_CONSIGN = #{updateModel.saleConsign,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleConsignNo != null">
        SALE_CONSIGN_NO = #{updateModel.saleConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.weituoTime != null">
        WEITUO_TIME = #{updateModel.weituoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.saleCooperate != null">
        SALE_COOPERATE = #{updateModel.saleCooperate,jdbcType=BIT},
      </if>
      <if test="updateModel.salePublish != null">
        SALE_PUBLISH = #{updateModel.salePublish,jdbcType=BIT},
      </if>
      <if test="updateModel.saleMap != null">
        SALE_MAP = #{updateModel.saleMap,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleLevel != null">
        SALE_LEVEL = #{updateModel.saleLevel,jdbcType=TINYINT},
      </if>
      <if test="updateModel.plateType != null">
        PLATE_TYPE = #{updateModel.plateType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleStatus != null">
        SALE_STATUS = #{updateModel.saleStatus,jdbcType=TINYINT},
      </if>
      TRACK_TIME = #{updateModel.trackTime},
      <if test="updateModel.trackTime2 != null">
        TRACK_TIME2 = #{updateModel.trackTime2,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.actionTime != null">
        ACTION_TIME = #{updateModel.actionTime},
      </if>
      <if test="updateModel.fromSoso != null">
        FROM_SOSO = #{updateModel.fromSoso,jdbcType=BIT},
      </if>
      <if test="updateModel.repeatFlag != null">
        REPEAT_FLAG = #{updateModel.repeatFlag,jdbcType=TINYINT},
      </if>
      <if test="updateModel.infoType != null">
        INFO_TYPE = #{updateModel.infoType,jdbcType=TINYINT},
      </if>
      <if test="updateModel.shareFlag != null">
        SHARE_FLAG = #{updateModel.shareFlag,jdbcType=BIT},
      </if>
      <if test="updateModel.friendHouse != null">
        FRIEND_HOUSE = #{updateModel.friendHouse,jdbcType=BIT},
      </if>
      <if test="updateModel.cooperateTime != null">
        COOPERATE_TIME = #{updateModel.cooperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.complaintFlag != null">
        COMPLAINT_FLAG = #{updateModel.complaintFlag,jdbcType=BIT},
      </if>
      <if test="updateModel.publishTime != null">
        PUBLISH_TIME = #{updateModel.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.photoTime != null">
        PHOTO_TIME = #{updateModel.photoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.redFlag != null">
        RED_FLAG = #{updateModel.redFlag,jdbcType=BIT},
      </if>
      <if test="updateModel.orangeFlag != null">
        ORANGE_FLAG = #{updateModel.orangeFlag,jdbcType=BIT},
      </if>
      <if test="updateModel.publicCount != null">
        PUBLIC_COUNT = #{updateModel.publicCount,jdbcType=TINYINT},
      </if>
      <if test="updateModel.publicTime != null">
        PUBLIC_TIME = #{updateModel.publicTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.specialTime != null">
        SPECIAL_TIME = #{updateModel.specialTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.scheduleTime != null">
        SCHEDULE_TIME = #{updateModel.scheduleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.dealTime != null">
        DEAL_TIME = #{updateModel.dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.writeoffTime != null">
        WRITEOFF_TIME = #{updateModel.writeoffTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.secrecyTime != null">
        SECRECY_TIME = #{updateModel.secrecyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.commendTime != null">
        COMMEND_TIME = #{updateModel.commendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.privateTime != null">
        PRIVATE_TIME = #{updateModel.privateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.fromPublic != null">
        FROM_PUBLIC = #{updateModel.fromPublic,jdbcType=BIT},
      </if>
      <if test="updateModel.thumbUrl != null">
        THUMB_URL = #{updateModel.thumbUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.updateTime != null">
        UPDATE_TIME = #{updateModel.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.tagIds != null">
        TAG_IDS = #{updateModel.tagIds,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleCertTime != null">
        SALE_CERT_TIME = #{updateModel.saleCertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.publishSites != null">
        PUBLISH_SITES = #{updateModel.publishSites,jdbcType=INTEGER},
      </if>
      <if test="updateModel.areaId != null">
        AREA_ID = #{updateModel.areaId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.saleRoofT != null">
        SALE_ROOF_T = #{updateModel.saleRoofT,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleNumT != null">
        SALE_NUM_T = #{updateModel.saleNumT,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.saleUnitT != null">
        SALE_UNIT_T = #{updateModel.saleUnitT,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.videoNum != null">
        VIDEO_NUM = #{updateModel.videoNum,jdbcType=TINYINT},
      </if>
      <if test="updateModel.creatorUid != null">
        CREATOR_UID = #{updateModel.creatorUid,jdbcType=INTEGER},
      </if>
      <if test="updateModel.isIgnore != null">
        is_ignore = #{updateModel.isIgnore,jdbcType=TINYINT},
      </if>
      <if test="updateModel.saleIdOld != null">
        sale_id_old = #{updateModel.saleIdOld,jdbcType=INTEGER},
      </if>
      <if test="updateModel.saleInnerarea != null">
        SALE_INNERAREA = #{updateModel.saleInnerarea,jdbcType=NUMERIC},
      </if>
      <if test="updateModel.houseBargain != null">
        HOUSE_BARGAIN = #{updateModel.houseBargain,jdbcType=BIT},
      </if>
      <if test="updateModel.encodeFlag != null">
        ENCODE_FLAG = #{updateModel.encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="updateModel.lock != null">
        LOCK = #{updateModel.lock,jdbcType=TINYINT},
      </if>
      <if test="updateModel.trueFlag != null">
        TRUE_FLAG = #{updateModel.trueFlag,jdbcType=TINYINT},
      </if>
      <if test="updateModel.sendtotencent != null">
        SENDTOTENCENT = #{updateModel.sendtotencent,jdbcType=TINYINT},
      </if>
      <if test="updateModel.houseSourceWay != null">
        HOUSE_SOURCE_WAY = #{updateModel.houseSourceWay,jdbcType=TINYINT},
      </if>
      <if test="updateModel.youShareFlag != null">
        YOU_SHARE_FLAG = #{updateModel.youShareFlag,jdbcType=TINYINT},
      </if>
      <if test="updateModel.youShareTime != null">
        YOU_SHARE_TIME = #{updateModel.youShareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateModel.youBuyCount != null">
        YOU_BUY_COUNT = #{updateModel.youBuyCount,jdbcType=INTEGER},
      </if>
      <if test="updateModel.ownerSex != null">
        OWNER_SEX = #{updateModel.ownerSex,jdbcType=TINYINT},
      </if>
      <if test="updateModel.youShareId != null">
        YOU_SHARE_ID = #{updateModel.youShareId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.thumbpicVer != null">
        THUMBPIC_VER = #{updateModel.thumbpicVer,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.privateUserId != null">
        PRIVATE_USER_ID = #{updateModel.privateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateModel.addrMd5 != null">
        ADDR_MD5 = #{updateModel.addrMd5,jdbcType=VARCHAR},
      </if>
      <if test="updateModel.panoramaMap != null">
        PANORAMA_MAP = #{updateModel.panoramaMap,jdbcType=INTEGER},
      </if>
      <if test="updateModel.youjiaStatisticFlag != null">
        YOUJIA_STATISTIC_FLAG = #{updateModel.youjiaStatisticFlag,jdbcType=TINYINT},
      </if>
    </set>
    where COMP_ID = #{conditionModel.compId,jdbcType=INTEGER}
       <if test="conditionModel.partnerId != null">
          AND PARTNER_ID = #{conditionModel.partnerId,jdbcType=INTEGER}
       </if>
      <if test="conditionModel.cityId != null">
       AND CITY_ID = #{conditionModel.cityId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.regId != null">
       AND REG_ID = #{conditionModel.regId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.deptId != null">
       AND DEPT_ID = #{conditionModel.deptId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.grId != null">
       AND GR_ID = #{conditionModel.grId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.userId != null">
       AND USER_ID = #{conditionModel.userId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.archiveId != null">
       AND ARCHIVE_ID = #{conditionModel.archiveId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.creationTime != null">
       AND CREATION_TIME = #{conditionModel.creationTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.createArchiveId != null">
       AND CREATE_ARCHIVE_ID = #{conditionModel.createArchiveId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.saleNo != null">
       AND SALE_NO = #{conditionModel.saleNo,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleOwner != null">
       AND SALE_OWNER = #{conditionModel.saleOwner,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.cellPhone != null">
       AND CELL_PHONE = #{conditionModel.cellPhone,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.idCard != null">
       AND ID_CARD = #{conditionModel.idCard,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleSubject != null">
       AND SALE_SUBJECT = #{conditionModel.saleSubject,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.buildId != null">
       AND BUILD_ID = #{conditionModel.buildId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.buildName != null">
       AND BUILD_NAME = #{conditionModel.buildName,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.buildCode != null">
       AND BUILD_CODE = #{conditionModel.buildCode,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleReg != null">
        SALE_REG = #{conditionModel.saleReg,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.regionName != null">
       AND REGION_NAME = #{conditionModel.regionName,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.sectionId != null">
       AND SECTION_ID = #{conditionModel.sectionId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.sectionName != null">
       AND SECTION_NAME = #{conditionModel.sectionName,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleRound != null">
       AND SALE_ROUND = #{conditionModel.saleRound,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.tradeAddr != null">
       AND TRADE_ADDR = #{conditionModel.tradeAddr,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleRoof != null">
       AND SALE_ROOF = #{conditionModel.saleRoof,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleUnit != null">
       AND SALE_UNIT = #{conditionModel.saleUnit,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.unitFloor != null">
       AND UNIT_FLOOR = #{conditionModel.unitFloor,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleNum != null">
       AND SALE_NUM = #{conditionModel.saleNum,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleRoofR != null">
       AND SALE_ROOF_R = #{conditionModel.saleRoofR,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleUnitR != null">
       AND SALE_UNIT_R = #{conditionModel.saleUnitR,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.unitFloorR != null">
       AND UNIT_FLOOR_R = #{conditionModel.unitFloorR,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleNumR != null">
       AND SALE_NUM_R = #{conditionModel.saleNumR,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleLadder != null">
       AND SALE_LADDER = #{conditionModel.saleLadder,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.saleDoors != null">
       AND SALE_DOORS = #{conditionModel.saleDoors,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleRoom != null">
       AND SALE_ROOM = #{conditionModel.saleRoom,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleHall != null">
       AND SALE_HALL = #{conditionModel.saleHall,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleWei != null">
       AND SALE_WEI = #{conditionModel.saleWei,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleYang != null">
       AND SALE_YANG = #{conditionModel.saleYang,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleType != null">
       AND SALE_TYPE = #{conditionModel.saleType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleFloor != null">
       AND SALE_FLOOR = #{conditionModel.saleFloor,jdbcType=SMALLINT}
      </if>
      <if test="conditionModel.saleFloors != null">
       AND SALE_FLOORS = #{conditionModel.saleFloors,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleFitment != null">
       AND SALE_FITMENT = #{conditionModel.saleFitment,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleDirect != null">
       AND SALE_DIRECT = #{conditionModel.saleDirect,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleYear != null">
       AND SALE_YEAR = #{conditionModel.saleYear,jdbcType=SMALLINT}
      </if>
      <if test="conditionModel.saleStruct != null">
       AND SALE_STRUCT = #{conditionModel.saleStruct,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleUseage != null">
       AND SALE_USEAGE = #{conditionModel.saleUseage,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.shopUsage != null">
       AND SHOP_USAGE = #{conditionModel.shopUsage,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.ownerType != null">
       AND OWNER_TYPE = #{conditionModel.ownerType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.officeLevel != null">
       AND OFFICE_LEVEL = #{conditionModel.officeLevel,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleStreet != null">
       AND SALE_STREET = #{conditionModel.saleStreet,jdbcType=BIT}
      </if>
      <if test="conditionModel.saleRight != null">
       AND SALE_RIGHT = #{conditionModel.saleRight,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleMortgage != null">
       AND SALE_MORTGAGE = #{conditionModel.saleMortgage,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleAccount != null">
       AND SALE_ACCOUNT = #{conditionModel.saleAccount,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleArea != null">
       AND SALE_AREA = #{conditionModel.saleArea,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.saleTotalPrice != null">
       AND SALE_TOTAL_PRICE = #{conditionModel.saleTotalPrice,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.saleUnitPrice != null">
       AND SALE_UNIT_PRICE = #{conditionModel.saleUnitPrice,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.saleLowestPrice != null">
       AND SALE_LOWEST_PRICE = #{conditionModel.saleLowestPrice,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.saleProperty != null">
       AND SALE_PROPERTY = #{conditionModel.saleProperty,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.isSeperator != null">
       AND IS_SEPERATOR = #{conditionModel.isSeperator,jdbcType=BIT}
      </if>
      <if test="conditionModel.saleLeaveTime != null">
       AND SALE_LEAVE_TIME = #{conditionModel.saleLeaveTime,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.hallStructure != null">
       AND HALL_STRUCTURE = #{conditionModel.hallStructure,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.ugArea != null">
       AND UG_AREA = #{conditionModel.ugArea,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.ugType != null">
       AND UG_TYPE = #{conditionModel.ugType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.gardenArea != null">
       AND GARDEN_AREA = #{conditionModel.gardenArea,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.garageAmount != null">
       AND GARAGE_AMOUNT = #{conditionModel.garageAmount,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleCharact != null">
       AND SALE_CHARACT = #{conditionModel.saleCharact,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleMemo != null">
       AND SALE_MEMO = #{conditionModel.saleMemo,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleSource != null">
       AND SALE_SOURCE = #{conditionModel.saleSource,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleKey != null">
       AND SALE_KEY = #{conditionModel.saleKey,jdbcType=BIT}
      </if>
      <if test="conditionModel.saleKeyNum != null">
       AND SALE_KEY_NUM = #{conditionModel.saleKeyNum,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.keyTime != null">
       AND KEY_TIME = #{conditionModel.keyTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.saleExplrth != null">
       AND SALE_EXPLRTH = #{conditionModel.saleExplrth,jdbcType=BIT}
      </if>
      <if test="conditionModel.explrthDatetime != null">
       AND EXPLRTH_DATETIME = #{conditionModel.explrthDatetime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.saleConsign != null">
       AND SALE_CONSIGN = #{conditionModel.saleConsign,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleConsignNo != null">
       AND SALE_CONSIGN_NO = #{conditionModel.saleConsignNo,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.weituoTime != null">
       AND WEITUO_TIME = #{conditionModel.weituoTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.saleCooperate != null">
       AND SALE_COOPERATE = #{conditionModel.saleCooperate,jdbcType=BIT}
      </if>
      <if test="conditionModel.salePublish != null">
       AND SALE_PUBLISH = #{conditionModel.salePublish,jdbcType=BIT}
      </if>
      <if test="conditionModel.saleMap != null">
       AND SALE_MAP = #{conditionModel.saleMap,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleLevel != null">
       AND SALE_LEVEL = #{conditionModel.saleLevel,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.plateType != null">
       AND PLATE_TYPE = #{conditionModel.plateType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleStatus != null">
       AND SALE_STATUS = #{conditionModel.saleStatus,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.trackTime != null">
       AND TRACK_TIME = #{conditionModel.trackTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.trackTime2 != null">
       AND TRACK_TIME2 = #{conditionModel.trackTime2,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.actionTime != null">
       AND ACTION_TIME = #{conditionModel.actionTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.fromSoso != null">
       AND FROM_SOSO = #{conditionModel.fromSoso,jdbcType=BIT}
      </if>
      <if test="conditionModel.repeatFlag != null">
       AND REPEAT_FLAG = #{conditionModel.repeatFlag,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.infoType != null">
       AND INFO_TYPE = #{conditionModel.infoType,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.shareFlag != null">
       AND SHARE_FLAG = #{conditionModel.shareFlag,jdbcType=BIT}
      </if>
      <if test="conditionModel.friendHouse != null">
       AND FRIEND_HOUSE = #{conditionModel.friendHouse,jdbcType=BIT}
      </if>
      <if test="conditionModel.cooperateTime != null">
       AND COOPERATE_TIME = #{conditionModel.cooperateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.complaintFlag != null">
       AND COMPLAINT_FLAG = #{conditionModel.complaintFlag,jdbcType=BIT}
      </if>
      <if test="conditionModel.publishTime != null">
       AND PUBLISH_TIME = #{conditionModel.publishTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.photoTime != null">
       AND PHOTO_TIME = #{conditionModel.photoTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.redFlag != null">
       AND RED_FLAG = #{conditionModel.redFlag,jdbcType=BIT}
      </if>
      <if test="conditionModel.orangeFlag != null">
       AND ORANGE_FLAG = #{conditionModel.orangeFlag,jdbcType=BIT}
      </if>
      <if test="conditionModel.publicCount != null">
       AND PUBLIC_COUNT = #{conditionModel.publicCount,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.publicTime != null">
       AND PUBLIC_TIME = #{conditionModel.publicTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.specialTime != null">
       AND SPECIAL_TIME = #{conditionModel.specialTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.scheduleTime != null">
       AND SCHEDULE_TIME = #{conditionModel.scheduleTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.dealTime != null">
       AND DEAL_TIME = #{conditionModel.dealTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.writeoffTime != null">
       AND WRITEOFF_TIME = #{conditionModel.writeoffTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.secrecyTime != null">
       AND SECRECY_TIME = #{conditionModel.secrecyTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.commendTime != null">
       AND COMMEND_TIME = #{conditionModel.commendTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.privateTime != null">
       AND PRIVATE_TIME = #{conditionModel.privateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.fromPublic != null">
       AND FROM_PUBLIC = #{conditionModel.fromPublic,jdbcType=BIT}
      </if>
      <if test="conditionModel.thumbUrl != null">
       AND THUMB_URL = #{conditionModel.thumbUrl,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.updateTime != null">
       AND UPDATE_TIME = #{conditionModel.updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.tagIds != null">
       AND TAG_IDS = #{conditionModel.tagIds,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleCertTime != null">
       AND SALE_CERT_TIME = #{conditionModel.saleCertTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.publishSites != null">
       AND PUBLISH_SITES = #{conditionModel.publishSites,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.areaId != null">
       AND AREA_ID = #{conditionModel.areaId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.saleRoofT != null">
       AND SALE_ROOF_T = #{conditionModel.saleRoofT,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleNumT != null">
       AND SALE_NUM_T = #{conditionModel.saleNumT,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.saleUnitT != null">
       AND SALE_UNIT_T = #{conditionModel.saleUnitT,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.videoNum != null">
       AND VIDEO_NUM = #{conditionModel.videoNum,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.creatorUid != null">
       AND CREATOR_UID = #{conditionModel.creatorUid,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.isIgnore != null">
       AND is_ignore = #{conditionModel.isIgnore,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.saleIdOld != null">
       AND sale_id_old = #{conditionModel.saleIdOld,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.saleInnerarea != null">
       AND SALE_INNERAREA = #{conditionModel.saleInnerarea,jdbcType=NUMERIC}
      </if>
      <if test="conditionModel.houseBargain != null">
       AND HOUSE_BARGAIN = #{conditionModel.houseBargain,jdbcType=BIT}
      </if>
      <if test="conditionModel.encodeFlag != null">
       AND ENCODE_FLAG = #{conditionModel.encodeFlag,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.lock != null">
       AND LOCK = #{conditionModel.lock,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.trueFlag != null">
       AND TRUE_FLAG = #{conditionModel.trueFlag,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.sendtotencent != null">
       AND SENDTOTENCENT = #{conditionModel.sendtotencent,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.houseSourceWay != null">
       AND HOUSE_SOURCE_WAY = #{conditionModel.houseSourceWay,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.youShareFlag != null">
       AND YOU_SHARE_FLAG = #{conditionModel.youShareFlag,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.youShareTime != null">
       AND YOU_SHARE_TIME = #{conditionModel.youShareTime,jdbcType=TIMESTAMP}
      </if>
      <if test="conditionModel.youBuyCount != null">
       AND YOU_BUY_COUNT = #{conditionModel.youBuyCount,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.ownerSex != null">
       AND OWNER_SEX = #{conditionModel.ownerSex,jdbcType=TINYINT}
      </if>
      <if test="conditionModel.youShareId != null">
       AND YOU_SHARE_ID = #{conditionModel.youShareId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.thumbpicVer != null">
       AND THUMBPIC_VER = #{conditionModel.thumbpicVer,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.privateUserId != null">
       AND PRIVATE_USER_ID = #{conditionModel.privateUserId,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.addrMd5 != null">
       AND ADDR_MD5 = #{conditionModel.addrMd5,jdbcType=VARCHAR}
      </if>
      <if test="conditionModel.panoramaMap != null">
       AND PANORAMA_MAP = #{conditionModel.panoramaMap,jdbcType=INTEGER}
      </if>
      <if test="conditionModel.youjiaStatisticFlag != null">
       AND YOUJIA_STATISTIC_FLAG = #{conditionModel.youjiaStatisticFlag,jdbcType=TINYINT}
      </if>
     <if test="null != orgIds and orgIds.size &gt; 0">
       AND ORGANIZATION_ID IN
       <foreach close=")" collection="orgIds" item="orgId" open="(" separator=",">
         #{orgId}
       </foreach>
     </if>
  </update>
	
	<select id="getNeedUpdateHouseUnitList" resultMap="BaseResultMap">
		SELECT TOP ${pageSize} CITY_ID,COMP_ID,BUILD_ID,SALE_USEAGE,TRADE_ADDR,ADDR_MD5,SALE_ID,SALE_ROOF,SALE_UNIT,UNIT_FLOOR,SALE_NUM
		FROM FUN_SALE
		<where>
			LOCK = #{lock}
			<if test="null != limitDate and '' != limitDate">
				AND CREATION_TIME &lt;= #{limitDate}
			</if>
		</where>
	</select>
	
	<select id="getUnitNotEqDecryptList" resultMap="BaseResultMap">
		SELECT TOP ${pageSize} CITY_ID,COMP_ID,BUILD_ID,SALE_USEAGE,TRADE_ADDR,ADDR_MD5,SALE_ID,SALE_ROOF,SALE_UNIT,UNIT_FLOOR,SALE_NUM
		FROM FUN_SALE
		WHERE
		(
			(SALE_ROOF_T IS NULL AND SALE_ROOF IS NOT NULL)
			OR (SALE_UNIT_T IS NULL AND SALE_UNIT IS NOT NULL)
			OR (SALE_NUM_T IS NULL AND SALE_NUM IS NOT NULL)
		)
		<if test="null != compId and '' != compId">
			AND COMP_ID = #{compId}
		</if>
	</select>
	
	<update id="updateMd5AndUnit">
		UPDATE FUN_SALE SET ADDR_MD5 = #{addrMd5},LOCK=#{lock} WHERE SALE_ID=#{saleId}
	</update>
	
	<select id="selectColumnById" resultMap="BaseResultMap">
		SELECT
		<foreach collection="columns" item="column" separator=",">
			${column}
		</foreach>
		FROM FUN_SALE
		WHERE COMP_ID=#{compId} AND SALE_ID=#{saleId}
	</select>
	
	<select id="getMatchHouseCustList" resultMap="BaseResultMap">
		SELECT
		SALE_NO,BUILD_NAME,SALE_USEAGE,SALE_TOTAL_PRICE,SALE_AREA,
		SALE_ROOM,SALE_HALL,SALE_WEI,SALE_DIRECT,SALE_FITMENT,USER_ID,
		SALE_ID,DEPT_ID,THUMB_URL,COMP_ID,YOU_SHARE_FLAG,SALE_COOPERATE,
		YOU_SHARE_ID,CITY_SHARE_FLAG, SALE_ROUND, SALE_ROOM, SALE_HALL,
		SALE_FLOOR, SALE_FLOORS
		FROM FUN_SALE WHERE
		CITY_ID = #{shardCityId} AND SALE_STATUS = '1'
		<choose>
			<when test="null != compId">
				and ${operRange} = #{operRangeId} AND COMP_ID=#{compId}
			</when>
			<when test="null != buyCust.youShareFlag and 1 == buyCust.youShareFlag">
				and YOU_SHARE_FLAG = #{buyCust.youShareFlag}
			</when>
			<when test="null != buyCust.cooperateFlag and 1 == buyCust.cooperateFlag">
				and SALE_COOPERATE = #{buyCust.cooperateFlag}
			</when>
			<otherwise>
				and ${operRange} = #{operRangeId} AND COMP_ID=#{compId}
			</otherwise>
		</choose>
		<if test="null != buyCust.userId">and USER_ID = #{buyCust.userId}</if>
		<if test="null != regIds">and SALE_REG in (${regIds})</if>
		<if test="null != buyCust.trackTime">and TRACK_TIME &gt;= #{buyCust.trackTime}</if>
		<if test="null != useages">AND SALE_USEAGE in (${useages})</if>
		<if test="null != buyCust.houseFloorLow">AND SALE_FLOOR &gt;= #{buyCust.houseFloorLow}</if>
		<if test="null != buyCust.houseFloorHigh">AND SALE_FLOOR &lt;= #{buyCust.houseFloorHigh}</if>
		<if test="null != buyCust.houseRoom">AND SALE_ROOM &gt;= #{buyCust.houseRoom}</if>
		<if test="null != buyCust.houseRoom1">AND SALE_ROOM &lt;= #{buyCust.houseRoom1}</if>
		<if test="null != buyCust.houseAreaLow">AND SALE_AREA &gt;= #{buyCust.houseAreaLow}</if>
		<if test="null != buyCust.houseAreaHigh">AND SALE_AREA &lt;= #{buyCust.houseAreaHigh}</if>
		<if test="null != buyCust.housePriceLow">AND SALE_TOTAL_PRICE &gt;= #{buyCust.housePriceLow}</if>
		<if test="null != buyCust.housePriceHigh">AND SALE_TOTAL_PRICE &lt;= #{buyCust.housePriceHigh}</if>
	</select>
	
	<select id="getBuildHouseCount" resultType="java.util.Map">
		SELECT COUNT(1) as totalCount,sum(iif(SALE_MAP&gt;=3 and SALE_PUBLISH=1,1,0)) as canPublishCount FROM FUN_SALE WHERE USER_ID=#{userId} AND BUILD_ID=#{buildId}
	</select>
	
	<select id="getNoFunPhoneData" resultMap="BaseResultMap">
		SELECT TOP 10
		A.CELL_PHONE, A.SALE_ID, A.CITY_ID, A.COMP_ID, A.AREA_ID, A.REG_ID, A.DEPT_ID,
		A.GR_ID, A.USER_ID, A.ARCHIVE_ID
		FROM FUN_SALE A LEFT JOIN FUN_PHONE B ON B.CASE_TYPE=1 AND B.CASE_ID=A.SALE_ID
		WHERE A.UPDATE_TIME &gt;= '2017-05-26' AND LEN(A.CELL_PHONE) &gt; 3 AND B.PHONE IS NULL
	</select>
	
	<select id="getCellPhone" resultMap="BaseResultMap">
		SELECT CELL_PHONE,JOINT_CELL_PHONE
		FROM FUN_SALE WHERE SALE_ID=#{saleId}
	</select>
	
	<update id="updateThumbUrl">
		update FUN_SALE set THUMB_URL = #{thumbUrl}
		<if test="videoNum != null">
			,VIDEO_NUM = #{videoNum}
		</if>
		<if test="videoReviewFlag != null">
			,VIDEO_REVIEW_FLAG = #{videoReviewFlag}
		</if>
		where SALE_ID = #{saleId}
	</update>
	
	<update id="updateFunAsdSalHouseList">
		update FUN_SALE set ADS_FLAG = #{adsFlag,jdbcType=INTEGER} 
		where SALE_ID in
		<foreach close=")" collection="caseIdList" index="index" item="caseIdList" open="(" separator=",">
    	#{caseIdList}
     </foreach>
	</update>
	
	<update id="updateFunAsdSalHouse">
		update FUN_SALE set ADS_FLAG = #{adsFlag,jdbcType=INTEGER} 
		where SALE_ID = #{caseId,jdbcType=INTEGER}
	</update>
	
	<!-- 暂时没用 -->
	<select id="getFlowAnalysisCountList" resultType="java.util.Map">
    select SALE_STATUS AS caseStatus,COUNT(1) AS statusCount,DATEPART(MONTH,CREATION_TIME) AS monthofyear
    from FUN_SALE
    <where>
      AND COMP_ID = #{compId}
      AND CREATION_TIME &gt;= #{startTime}
      AND CREATION_TIME &lt;= #{endTime}
      <if test="null != areaId">
		AND AREA_ID = #{areaId}
      </if>
      <if test="null != regId">
		AND REG_ID = #{regId}
      </if>
      <if test="null != deptId">
		AND DEPT_ID = #{deptId}
      </if>
      <if test="null != userId">
		AND USER_ID = #{userId}
      </if>
    </where>
    GROUP BY SALE_STATUS,DATEPART(MONTH, CREATION_TIME) 
    ORDER BY SALE_STATUS ASC,DATEPART(MONTH, CREATION_TIME) ASC
    </select>
	<select id="getHouseBottomInfoForStatus" resultType="java.util.Map">
    select 	COUNT (*) AS counts,
	SUM (IIF(SALE_KEY = '1', 1, 0)) AS keyCount,
	SUM (IIF(SALE_EXPLRTH = 1, 1, 0)) AS explrthCount,
	SUM (IIF(SALE_PUBLISH = '1', 1, 0)) AS publishCount,
	SUM (IIF(TRUE_FLAG = '1', 1, 0)) AS trueCount,
	SUM (IIF(SALE_MAP &gt; '0', 1, 0)) AS photoCount,
	SUM (IIF(VIDEO_NUM &gt; '0', 1, 0)) AS voidoCount,
	SUM (IIF(PANORAMA_MAP &gt; '0', 1, 0)) AS panoramaCount,
	SUM (IIF(SALE_STATUS = '4', 1, 0)) AS scheduleCount
    from FUN_SALE
    <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlSaleStatusIn">
		AND SALE_STATUS IN
		<foreach close=")" collection="param.sqlSaleStatusIn" index="index" item="saleStatus" open="(" separator=",">
    	#{saleStatus}
		</foreach>
      </if>
    </where>
    </select>
    
   <select id="getHouseBottomInfoForSourceConsign" resultType="java.util.Map">
    select COUNT(*) AS counts,
	SALE_CONSIGN as houseConsign
    from FUN_SALE
     <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlSaleStatusIn">
		AND SALE_STATUS IN
		<foreach close=")" collection="param.sqlSaleStatusIn" index="index" item="saleStatus" open="(" separator=",">
    	#{saleStatus}
		</foreach>
      </if>
    </where>
    GROUP BY SALE_CONSIGN 
    ORDER BY counts desc
    </select>
	
   <select id="getHouseBottomInfoForSourceLevel" resultType="java.util.Map">
    select COUNT(*) AS counts,
	SALE_LEVEL as houseLevel
    from FUN_SALE
     <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlSaleStatusIn">
		AND SALE_STATUS IN
		<foreach close=")" collection="param.sqlSaleStatusIn" index="index" item="saleStatus" open="(" separator=",">
    	#{saleStatus}
		</foreach>
      </if>
    </where>
    GROUP BY SALE_LEVEL
    ORDER BY counts desc
    </select>
    
   <select id="getHouseBottomInfoForSourceFitment" resultType="java.util.Map">
    select COUNT(*) AS counts,
	SALE_FITMENT as houseFitment
    from FUN_SALE
     <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlSaleStatusIn">
		AND SALE_STATUS IN
		<foreach close=")" collection="param.sqlSaleStatusIn" index="index" item="saleStatus" open="(" separator=",">
    	#{saleStatus}
		</foreach>
      </if>
    </where>
    GROUP BY SALE_FITMENT 
    ORDER BY counts desc
    </select>
    
   <select id="getHouseBottomInfoForRegionRound" resultType="java.util.Map">
    select COUNT(*) AS counts,
	SALE_ROUND as houseRound
    from FUN_SALE
     <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlSaleStatusIn">
		AND SALE_STATUS IN
		<foreach close=")" collection="param.sqlSaleStatusIn" index="index" item="saleStatus" open="(" separator=",">
    	#{saleStatus}
		</foreach>
      </if>
    </where>
    GROUP BY SALE_ROUND 
    ORDER BY counts desc
    </select>
    
   <select id="getHouseBottomInfoForRegionSection" resultType="java.util.Map">
    select COUNT(*) AS counts,
	SECTION_ID as sectionId
    from FUN_SALE
     <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlSaleStatusIn">
		AND SALE_STATUS IN
		<foreach close=")" collection="param.sqlSaleStatusIn" index="index" item="saleStatus" open="(" separator=",">
    	#{saleStatus}
		</foreach>
      </if>
    </where>
    GROUP BY SECTION_ID 
    ORDER BY counts desc
    </select>
    
   <select id="getHouseBottomInfoForUseage" resultType="java.util.Map">
    select COUNT(*) AS counts,
	SALE_USEAGE as houseUseage,
	SALE_TYPE as houseType
    from FUN_SALE
     <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.perVerUid">
		AND USER_ID = #{param.perVerUid}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
		AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="null != param.sqlSaleStatusIn">
		AND SALE_STATUS IN
		<foreach close=")" collection="param.sqlSaleStatusIn" index="index" item="saleStatus" open="(" separator=",">
    	#{saleStatus}
		</foreach>
      </if>
    </where>
    GROUP BY SALE_USEAGE,SALE_TYPE 
    ORDER BY SALE_USEAGE,counts desc
    </select>

	<select id="selectSaleListByIds" resultMap="BaseResultMap">
		select
		<foreach collection="queryColumn" item="column" separator=",">
			${column}
		</foreach>
		FROM FUN_SALE WHERE
		COMP_ID = #{compId}
		AND SALE_ID IN
		<foreach close=")" collection="queryIds" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</select>

	<!-- 暂时没用 -->
	<select id="getHouseCustStatusData" resultType="java.util.Map">
		select 
		sum(iif(CREATION_TIME &gt;= #{weekTime},1,0)) as xzHouseWeek,
		sum(1) as xzHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and SALE_STATUS=4,1,0)) as ydHouseWeek,
		sum(iif(SALE_STATUS=4,1,0)) as ydHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and SALE_STATUS=2,1,0)) as fpHouseWeek,
		sum(iif(SALE_STATUS=2,1,0)) as fpHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and SALE_STATUS=5,1,0)) as ncjHouseWeek,
		sum(iif(SALE_STATUS=5,1,0)) as ncjHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and SALE_STATUS=6,1,0)) as wcjHouseWeek,
		sum(iif(SALE_STATUS=6,1,0)) as wcjHouseMonth,
		
		sum(iif(CREATION_TIME &gt;= #{weekTime} and SALE_STATUS=7,1,0)) as zxhouseWeek,
		sum(iif(SALE_STATUS=7,1,0)) as zxhouseMonth
				
		from FUN_SALE 
		where CREATION_TIME &gt;= #{monthTime} and COMP_ID = #{compId}
    </select>

	<select id="countAvailableHouse" resultType="java.lang.Integer">
		select count(1) as houseCount
		from FUN_SALE
		where SALE_STATUS IN (1,2,4) and COMP_ID = #{compId}
	</select>

	<select id="countByBuildIds" resultType="java.util.Map">
		select top 4 count(1) buildHouseCount,BUILD_ID buildId from FUN_SALE
		where BUILD_ID IN
		<foreach close=")" collection="param.buildIds" index="index" item="buildId" open="(" separator=",">
			#{buildId}
		</foreach>
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		AND COMP_ID = #{param.compId}
		GROUP BY BUILD_ID
	</select>

	<select id="countBySectionIds" resultType="java.util.Map">
		select top 4 count(1) sectionHouseCount, SECTION_ID sectionId from
		FUN_SALE
		where SECTION_ID IN
		<foreach close=")" collection="param.sectionIds" index="index" item="sectionId" open="(" separator=",">
			#{sectionId}
		</foreach>
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		AND COMP_ID = #{param.compId}
		GROUP BY SECTION_ID
	</select>

	<sql id="getStoreDataAnalysisQueryDimSql">
		<if test="param.queryDim == 'STATUS'">SALE_STATUS</if><!-- 状态 -->
		<if test="param.queryDim == 'PRICE'">${param.housePriceSql}</if><!-- 价格 -->
		<if test="param.queryDim == 'AREA'">${param.houseAreaSql}</if><!-- 面积 -->
		<if test="param.queryDim == 'ROOM'">SALE_ROOM</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">SALE_REG</if><!-- 行政区 -->
		<if test="param.queryDim == 'SECTION'">CONCAT(SALE_REG,'_',SECTION_ID)</if><!-- 商圈 -->
		<if test="param.queryDim == 'USEAGE'">SALE_USEAGE</if><!-- 用途 -->
	</sql>

	<select id="getStoreDataAnalysis" resultType="java.util.Map">
		SELECT
		<if test="param.topCount">TOP ${param.topCount}</if>
		COUNT(1) AS counts,
		<choose>
			<when test="param.queryDim == 'BELONG'"><!-- 所属 -->
				${param.dimensionColumnSql} AS dim
			</when>
			<otherwise>
				<include refid="getStoreDataAnalysisQueryDimSql" /> AS dim
			</otherwise>
		</choose>
		FROM FUN_SALE
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.regionId != null and param.regionId != ''">AND REG_ID = #{param.regionId}</if><!-- 行政区域 -->
		<if test="param.sectionId != null and param.sectionId != ''">AND SECTION_ID = #{param.sectionId}</if><!-- 商圈 -->
		GROUP BY 
		<choose>
			<when test="param.queryDim == 'BELONG'"><!-- 所属 -->
				${param.dimensionGroupSql}
			</when>
			<otherwise>
				<include refid="getStoreDataAnalysisQueryDimSql" />
			</otherwise>
		</choose>
		having COUNT(1) &gt; 0
		ORDER BY COUNT(1) DESC
	</select>

	<select id="getStoreDataCount" resultType="java.lang.Integer">
		select count(1) from fun_sale 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
	</select>

	<select id="getStoreDataDaiKan" resultType="java.util.Map">
		select sum(iif(SALE_EXPLRTH is null or SALE_EXPLRTH=0,1,0)) notFk,sum(iif(SALE_EXPLRTH=1,1,0)) isFk
		from FUN_SALE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.regionId != null and param.regionId != ''">AND REG_ID = #{param.regionId}</if><!-- 行政区域 -->
		<if test="param.sectionId != null and param.sectionId != ''">AND SECTION_ID = #{param.sectionId}</if><!-- 商圈 -->
	</select>
	
	<sql id="getStoreDataAnalysisSql">
		<if test="param.queryDim == 'PRICE'">${param.housePriceSql}</if><!-- 价格 -->
		<if test="param.queryDim == 'AREA'">${param.houseAreaSql}</if><!-- 面积 -->
		<if test="param.queryDim == 'ROOM'">SALE_ROOM</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">SALE_REG</if><!-- 行政区 -->
	</sql>
	
	<select id="getStoreDataAnalysisByPrice" resultType="java.util.Map">
		select 
		count(1) counts,${param.housePriceSql} byName,
		<include refid="getStoreDataAnalysisSql" /> as dim
		from FUN_SALE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.queryDim == 'ROOM'">AND SALE_ROOM is not null</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">AND SALE_REG is not null</if><!-- 行政区 -->
		GROUP BY ${param.housePriceSql},
		<include refid="getStoreDataAnalysisSql" />
		ORDER BY count(1) desc
	</select>
	
	<select id="getStoreDataAnalysisByArea" resultType="java.util.Map">
		select 
		count(1) counts,${param.houseAreaSql} byName,
		<include refid="getStoreDataAnalysisSql" /> as dim
		from FUN_SALE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.queryDim == 'ROOM'">AND SALE_ROOM is not null</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">AND SALE_REG is not null</if><!-- 行政区 -->
		GROUP BY ${param.houseAreaSql},
		<include refid="getStoreDataAnalysisSql" />
		ORDER BY count(1) desc
	</select>
	
	<select id="getStoreDataAnalysisByRoom" resultType="java.util.Map">
		select 
		count(1) counts,SALE_ROOM byName,
		<include refid="getStoreDataAnalysisSql" /> as dim
		from FUN_SALE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.queryDim == 'ROOM'">AND SALE_ROOM is not null</if><!-- 户型 -->
		<if test="param.queryDim == 'REG'">AND SALE_REG is not null</if><!-- 行政区 -->
		GROUP BY SALE_ROOM,
		<include refid="getStoreDataAnalysisSql" />
		ORDER BY count(1) desc
	</select>
	
	<select id="getStoreDataAnalysisByUseage" resultType="java.util.Map">
		select top 10 count(1) counts,SALE_TYPE byName
		from FUN_SALE 
		WHERE COMP_ID=#{param.compId}
		AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
		and SALE_USEAGE=1
		and SALE_TYPE in 
		<foreach close=")" collection="param.idSet" item="item" open="(" separator=",">
			#{item}
		</foreach>
		<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		<if test="param.useage == 1">AND SALE_USEAGE = 1</if><!-- 住宅 -->
		<if test="param.useage == 2">AND SALE_USEAGE = 3</if><!-- 商铺 -->
		<if test="param.useage == 3">AND SALE_USEAGE = 4</if><!-- 写字 -->
		group by SALE_TYPE
		order by count(1) desc
	</select>

	<select id="getStoreDataRanking" resultType="java.util.Map">
		with t1 as (
			select count(1) counts,
			<choose>
				<when test="param.rankType == 1">user_id</when>
				<otherwise>dept_id</otherwise>
			</choose>
			as rankId from fun_sale 
			WHERE COMP_ID=#{param.compId}
			AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
			<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
			<choose>
				<when test="param.rankType == 1">
					and user_id &gt; 0 group by user_id
				</when>
				<otherwise>group by dept_id</otherwise>
			</choose>
		),t2 as (
			select count(1) counts,
			<choose>
				<when test="param.rankType == 1">user_id</when>
				<otherwise>dept_id</otherwise>
			</choose>
			as rankId from FUN_BUY_CUSTOMER 
			WHERE COMP_ID=#{param.compId}
			AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
			<if test="param.statusType == 1">AND BUY_CUST_STATUS IN (1,2,4)</if><!-- 有效 -->
			<choose>
				<when test="param.rankType == 1">
					and user_id &gt; 0 group by user_id
				</when>
				<otherwise>group by dept_id</otherwise>
			</choose>
		)
		select top 15 t1.counts house,t2.counts cust,t1.rankId,t1.counts + t2.counts as totalCounts
		from t1 join t2 on t1.rankId=t2.rankId
		where t1.counts + t2.counts &gt; 0
		order by t1.counts + t2.counts desc
	</select>
	
	<select id="getHouseCustBasicStatus" resultType="java.util.Map">
		select COUNT (1) AS totalCounts,
		SUM (IIF(SALE_KEY = '1', 1, 0)) AS keyCount,
		SUM (IIF(SALE_EXPLRTH = 1, 1, 0)) AS explrthCount,
		SUM (IIF(TRUE_FLAG = '1', 1, 0)) AS trueCount,
		SUM (IIF(SALE_MAP &gt; '0', 1, 0)) AS photoCount,
		SUM (IIF(VIDEO_NUM &gt; '0', 1, 0)) AS voidoCount,
		SUM (IIF(PANORAMA_MAP &gt; '0', 1, 0)) AS panoramaCount
		from FUN_SALE
		<where>
			AND COMP_ID = #{param.compId}
			AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
			<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		</where>
	</select>
	
	<select id="getPerCapitaRank" resultType="java.util.Map">
		SELECT ${listStr},count(1) as counts 
		FROM FUN_SALE 
		<where>
			AND COMP_ID = #{param.compId}
			AND ${param.serchRange}=#{param.serchRangeId}<!-- 搜索范围 -->
			<if test="param.statusType == 1">AND SALE_STATUS IN (1,2,4)</if><!-- 有效 -->
		</where>
		GROUP BY ${gropbyStr}
		ORDER BY counts desc
	</select>
	
	<select id="getHouseBuyingPowerData" resultType="java.util.Map">
		SELECT count(1) house,${caseWhenSql} as price
		FROM FUN_SALE
		WHERE COMP_ID = #{compId} AND SALE_STATUS IN (1,2,4)
		GROUP BY ${caseWhenSql}
		ORDER BY count(1) desc
	</select>
	
	<select id="getCaseList" resultType="java.util.Map">
		SELECT
		<choose>
			<when test="param.caseType == 1">
				sale_id caseId,sale_id saleId,comp_id compId,city_id cityId,gr_id grId,reg_id regId,dept_id deptId,user_id userId,archive_id archiveId,creation_time creationTime,creator_uid creatorUid,sale_no saleNo,lock lock,sale_subject saleSubject,build_id buildId,build_name buildName,build_code buildCode,sale_reg saleReg,region_name regionName,section_id sectionId,section_name sectionName,sale_round saleRound,trade_addr tradeAddr,sale_room saleRoom,sale_hall saleHall,sale_wei saleWei,sale_yang saleYang,sale_type saleType,sale_floor saleFloor,sale_floors saleFloors,sale_fitment saleFitment,sale_direct saleDirect,sale_year saleYear,sale_useage saleUseage,shop_usage shopUsage,sale_street saleStreet,sale_area saleArea,sale_total_price saleTotalPrice,sale_unit_price saleUnitPrice,sale_source saleSource,sale_key saleKey,sale_key_num saleKeyNum,sale_explrth saleExplrth,sale_cooperate saleCooperate,sale_publish salePublish,sale_map saleMap,sale_level saleLevel,plate_type plateType,sale_status saleStatus,track_time trackTime,track_time2 trackTime2,action_time actionTime,from_soso fromSoso,repeat_flag repeatFlag,share_flag shareFlag,complaint_flag complaintFlag,red_flag redFlag,orange_flag orangeFlag,public_time publicTime,special_time specialTime,schedule_time scheduleTime,deal_time dealTime,writeoff_time writeoffTime,secrecy_time secrecyTime,commend_time commendTime,private_time privateTime,from_public fromPublic,thumb_url thumbUrl,update_time updateTime,sale_cert_time saleCertTime,publish_sites publishSites,area_id areaId,video_num videoNum,sale_innerarea saleInnerarea,sendtotencent sendtotencent,house_source_way houseSourceWay,true_flag trueFlag,you_share_flag youShareFlag,you_share_time youShareTime,you_buy_count youBuyCount,owner_sex ownerSex,you_share_id youShareId,thumbpic_ver thumbpicVer,private_user_id privateUserId,addr_md5 addrMd5,panorama_map panoramaMap,video_review_flag videoReviewFlag,youjia_statistic_flag youjiaStatisticFlag,ads_flag adsFlag,sync_time syncTime,compete_end_time competeEndTime,compete_price competePrice,you_share_money_state youShareMoneyState,proxy_url proxyUrl,sendto_weidian sendtoWeidian,sendto_youyou sendtoYouyou,check_code_url checkCodeUrl,upload_proxy_user uploadProxyUser,city_share_flag cityShareFlag,file_system_type fileSystemType,check_code_fun checkCodeFun,qz_code_fun qzCodeFun,ownership_type ownershipType,effective_date effectiveDate,funmanager_salestatus funmanagerSalestatus
				<!-- sale_id caseId,sale_id saleId,sale_useage saleUseage,plate_type plateType,sale_status saleStatus,sale_level saleLevel,sale_key saleKey,sale_map saleMap,build_name buildName,sale_useage saleUseage,sale_floor saleFloor,sale_floors saleFloors,sale_room saleRoom,sale_hall saleHall,sale_wei saleWei,sale_innerarea saleInnerarea,sale_area saleArea,sale_total_price saleTotalPrice,sale_unit_price saleUnitPrice -->
				FROM FUN_SALE
				WHERE SALE_ID IN
			</when>
			<when test="param.caseType == 2">
				lease_id caseId,lease_id leaseId,comp_id compId,city_id cityId,gr_id grId,reg_id regId,dept_id deptId,user_id userId,archive_id archiveId,creation_time creationTime,lease_no leaseNo,lease_subject leaseSubject,lock lock,build_id buildId,build_name buildName,build_code buildCode,lease_reg leaseReg,region_name regionName,section_id sectionId,section_name sectionName,lease_round leaseRound,trade_addr tradeAddr,plate_type plateType,lease_room leaseRoom,lease_hall leaseHall,lease_wei leaseWei,lease_yang leaseYang,lease_type leaseType,lease_floor leaseFloor,lease_floors leaseFloors,lease_fitment leaseFitment,lease_direct leaseDirect,lease_year leaseYear,lease_useage leaseUseage,lease_street leaseStreet,lease_area leaseArea,lease_total_price leaseTotalPrice,price_unit priceUnit,lease_source leaseSource,lease_level leaseLevel,lease_key leaseKey,key_time keyTime,lease_explrth leaseExplrth,lease_consign leaseConsign,lease_cooperate leaseCooperate,complaint_flag complaintFlag,lease_publish leasePublish,lease_map leaseMap,lease_status leaseStatus,track_time trackTime,track_time2 trackTime2,action_time actionTime,from_soso fromSoso,repeat_flag repeatFlag,friend_house friendHouse,red_flag redFlag,orange_flag orangeFlag,public_count publicCount,public_time publicTime,due_time dueTime,special_time specialTime,schedule_time scheduleTime,deal_time dealTime,writeoff_time writeoffTime,secrecy_time secrecyTime,commend_time commendTime,private_time privateTime,from_public fromPublic,thumb_url thumbUrl,update_time updateTime,lease_cert_time leaseCertTime,publish_sites publishSites,area_id areaId,video_num videoNum,creator_uid creatorUid,lease_innerarea leaseInnerarea,sendtotencent sendtotencent,house_source_way houseSourceWay,true_flag trueFlag,you_share_flag youShareFlag,you_share_time youShareTime,you_buy_count youBuyCount,owner_sex ownerSex,you_share_id youShareId,thumbpic_ver thumbpicVer,private_user_id privateUserId,lease_room_type leaseRoomType,lease_room_classic leaseRoomClassic,flat_share_sex flatShareSex,addr_md5 addrMd5,panorama_map panoramaMap,video_review_flag videoReviewFlag,youjia_statistic_flag youjiaStatisticFlag,ads_flag adsFlag,sync_time syncTime,compete_end_time competeEndTime,compete_price competePrice,you_share_money_state youShareMoneyState,sendto_weidian sendtoWeidian,sendto_youyou sendtoYouyou,proxy_url proxyUrl,upload_proxy_user uploadProxyUser,city_share_flag cityShareFlag,check_code_fun checkCodeFun,ownership_type ownershipType,qz_code_fun qzCodeFun,effective_date effectiveDate,funmanager_salestatus funmanagerSalestatus
				<!-- lease_id caseId,lease_id leaseId,lease_useage leaseUseage,plate_type plateType,lease_status leaseStatus,lease_level leaseLevel,lease_key leaseKey,lease_map leaseMap,build_name buildName,lease_useage leaseUseage,lease_floor leaseFloor,lease_floors leaseFloors,lease_room leaseRoom,lease_hall leaseHall,lease_wei leaseWei,lease_innerarea leaseInnerarea,lease_area leaseArea,lease_total_price leaseTotalPrice -->
				FROM FUN_LEASE
				WHERE LEASE_ID IN
			</when>
			<when test="param.caseType == 3">
				buy_cust_id caseId,buy_cust_id buyCustId,city_id cityId,gr_id grId,reg_id regId,comp_id compId,dept_id deptId,user_id userId,archive_id archiveId,creation_time creationTime,buy_cust_no buyCustNo,buy_cust_name buyCustName,buy_cust_sex buyCustSex,buy_cust_age buyCustAge,buy_cust_career buyCustCareer,buy_ability buyAbility,cust_level custLevel,plate_type plateType,buy_cust_source buyCustSource,buy_cust_level buyCustLevel,house_room houseRoom,house_room_1 houseRoom1,house_region houseRegion,region_name regionName,section_id sectionId,section_name sectionName,build_id buildId,build_name buildName,house_round houseRound,house_type houseType,house_useage houseUseage,house_fitment houseFitment,house_direct houseDirect,house_floor_low houseFloorLow,house_floor_high houseFloorHigh,house_price_low housePriceLow,house_price_high housePriceHigh,house_area_low houseAreaLow,house_area_high houseAreaHigh,house_year_low houseYearLow,house_year_high houseYearHigh,house_look houseLook,cust_request custRequest,buy_cust_status buyCustStatus,track_time trackTime,repeat_flag repeatFlag,red_flag redFlag,orange_flag orangeFlag,public_count publicCount,public_time publicTime,special_time specialTime,schedule_time scheduleTime,deal_time dealTime,writeoff_time writeoffTime,secrecy_time secrecyTime,commend_time commendTime,action_time actionTime,private_time privateTime,from_public fromPublic,cooperate_flag cooperateFlag,update_time updateTime,friend_house friendHouse,cooperate_time cooperateTime,area_id areaId,private_user_id privateUserId,sync_time syncTime,you_share_flag youShareFlag,you_share_time youShareTime,you_share_id youShareId,you_buy_count youBuyCount,city_share_flag cityShareFlag
				<!-- buy_cust_id caseId,track_time trackTime,user_id userId,house_area_high houseAreaHigh,house_area_low houseAreaLow,house_price_high housePriceHigh,house_price_low housePriceLow,comp_id compId,dept_id deptId,buy_ability buyAbility,buy_cust_age buyCustAge,buy_cust_career buyCustCareer,buy_cust_status buyCustStatus,buy_cust_level buyCustLevel,house_floor_low houseFloorLow,house_floor_high houseFloorHigh,cust_level custLevel,plate_type plateType,buy_cust_source buyCustSource,commend_time commendTime,secrecy_time secrecyTime,red_flag redFlag,action_time actionTime,public_count publicCount,public_time publicTime,from_public fromPublic,private_time privateTime,orange_flag orangeFlag,repeat_flag repeatFlag,house_useage houseUseage,house_type houseType,house_room houseRoom,house_room_1 houseRoom1,house_region houseRegion,region_name regionName,section_id sectionId,section_name sectionName,house_fitment houseFitment,buy_cust_sex buyCustSex,buy_cust_name buyCustName,build_name buildName,house_round houseRound -->
				FROM FUN_BUY_CUSTOMER
				WHERE BUY_CUST_ID IN
			</when>
			<when test="param.caseType == 4">
				rent_cust_id caseId,rent_cust_id rentCustId,comp_id compId,city_id cityId,gr_id grId,reg_id regId,dept_id deptId,user_id userId,archive_id archiveId,creation_time creationTime,rent_cust_no rentCustNo,rent_cust_name rentCustName,rent_cust_sex rentCustSex,rent_cust_age rentCustAge,rent_cust_career rentCustCareer,rent_lifebound rentLifebound,rent_ability rentAbility,cust_level custLevel,house_room houseRoom,house_room_1 houseRoom1,house_region houseRegion,region_name regionName,build_id buildId,build_name buildName,section_id sectionId,section_name sectionName,house_round houseRound,house_type houseType,house_useage houseUseage,house_fitment houseFitment,house_direct houseDirect,plate_type plateType,rent_cust_source rentCustSource,rent_cust_level rentCustLevel,house_floor_low houseFloorLow,house_floor_high houseFloorHigh,house_price_low housePriceLow,house_price_high housePriceHigh,house_area_low houseAreaLow,house_area_high houseAreaHigh,house_year_low houseYearLow,house_year_high houseYearHigh,house_look houseLook,cust_request custRequest,rent_cust_status rentCustStatus,track_time trackTime,action_time actionTime,repeat_flag repeatFlag,red_flag redFlag,orange_flag orangeFlag,public_count publicCount,public_time publicTime,due_time dueTime,special_time specialTime,schedule_time scheduleTime,deal_time dealTime,writeoff_time writeoffTime,secrecy_time secrecyTime,commend_time commendTime,private_time privateTime,from_public fromPublic,cooperate_flag cooperateFlag,update_time updateTime,friend_house friendHouse,cooperate_time cooperateTime,area_id areaId,private_user_id privateUserId,sync_time syncTime,you_share_flag youShareFlag,you_share_time youShareTime,you_share_id youShareId,you_buy_count youBuyCount,city_share_flag cityShareFlag
				<!-- rent_cust_id caseId,track_time trackTime,user_id userId,house_area_high houseAreaHigh,house_area_low houseAreaLow,house_price_high housePriceHigh,house_price_low housePriceLow,comp_id compId,dept_id deptId,rent_ability rentAbility,rent_cust_age rentCustAge,rent_cust_career rentCustCareer,rent_cust_status rentCustStatus,rent_cust_level rentCustLevel,house_floor_low houseFloorLow,house_floor_high houseFloorHigh,cust_level custLevel,plate_type plateType,rent_cust_source rentCustSource,commend_time commendTime,secrecy_time secrecyTime,red_flag redFlag,action_time actionTime,public_count publicCount,public_time publicTime,from_public fromPublic,private_time privateTime,orange_flag orangeFlag,repeat_flag repeatFlag,house_useage houseUseage,house_type houseType,house_room houseRoom,house_room_1 houseRoom1,house_region houseRegion,region_name regionName,section_id sectionId,section_name sectionName,house_fitment houseFitment,rent_cust_sex rentCustSex,rent_cust_name rentCustName,build_name buildName,house_round houseRound -->
				FROM FUN_RENT_CUSTOMER
				WHERE RENT_CUST_ID IN
			</when>
		</choose>
		<foreach close=")" collection="param.caseIdList" item="item" open="(" separator=",">#{item}</foreach>
		<if test="param.compId != null and param.compId != ''">
			AND COMP_ID=#{param.compId}
		</if>
		ORDER BY
		<choose>
			<when test="param.caseType == 1">SALE_ID</when>
			<when test="param.caseType == 2">LEASE_ID</when>
			<when test="param.caseType == 3">BUY_CUST_ID</when>
			<when test="param.caseType == 4">RENT_CUST_ID</when>
		</choose>
		DESC
	</select>
	
	<sql id="chooseWhenTimeSql">
		<choose>
			<when test="param.dateCountType == 0">
				convert(nvarchar(10),A.CREATION_TIME,120)
			</when>
			<when test="param.dateCountType == 1">
				(CONVERT (VARCHAR (10),iif (CONVERT (VARCHAR (10),A.CREATION_TIME,120) &gt;= '${param.startTime}' AND CONVERT (VARCHAR (10),A.CREATION_TIME,120) &lt;=DATEADD( WEEK,1,DATEADD(DAY, 1 - DATEPART(WEEKDAY, '${param.startTime}' )-1,'${param.startTime}' )),'${param.startTime}' ,DATEADD( WEEKDAY,1 - DATEPART(WEEKDAY, A.CREATION_TIME), A.CREATION_TIME)),120) + '-' + iif (CONVERT (VARCHAR (10),A.CREATION_TIME,120) &gt;= CONVERT (VARCHAR (10),DATEADD( WEEKDAY,1 - DATEPART(WEEKDAY, '${param.endTime}' ),'${param.endTime}' ),120),'${param.endTime}' ,CONVERT (VARCHAR (10),DATEADD(WEEK,1,DATEADD(DAY,1 - DATEPART(WEEKDAY, A.CREATION_TIME)-1,A.CREATION_TIME )),120)))
			</when>
			<when test="param.dateCountType == 2">
				convert(nvarchar(7),A.CREATION_TIME,120)
			</when>
		</choose>
	</sql>
	
	<select id="getHouseAddCountData" resultType="com.myfun.repository.erpdb.dto.HouseCustAddCountDto">
		SET DATEFIRST 1;
		SELECT
		<choose>
			<when test="param.queryDim == 'REG'">
				count(1) num,ISNULL(b.REG_ID, 0) regId,b.REG_NAME regName,b.SEQ_NO seqNo,
			</when>
			<when test="param.queryDim == 'ROOM'">
				count(1) num,ISNULL(a.${param.room},0) room,
			</when>
			<when test="param.queryDim == 'USEAGE'">
				count(1) num,a.${param.caseUsage} as useage,
			</when>
			<when test="param.queryDim == 'SOURCE'">
				count(1) num,a.${param.caseSource} as source,
			</when>
			<when test="param.queryDim == 'SECTION'">
				count(1) num,CONCAT(${param.caseReg},'_',a.SECTION_ID) as section,
			</when>
			<when test="param.queryDim == 'PRICE'">
				count(1) num,(${param.priceUnit}) price,
			</when>
			<when test="param.queryDim == 'AREA'">
				count(1) num,(${param.areaUnit}) area,
			</when>
		</choose>
		<include refid="chooseWhenTimeSql" /> as date
		FROM ${param.tableName} a
		<if test="param.queryDim == 'REG'">
			LEFT JOIN FUN_REG b ON b.REG_ID = a.${param.caseReg}
		</if>
		WHERE A.COMP_ID = #{param.compId}
		AND A.${param.serchRange} = #{param.serchRangeId}
		AND A.CREATION_TIME &gt;= #{param.startTime}
		AND A.CREATION_TIME &lt;= #{param.endTime}
		<if test="param.regionIdsArr != null">
			AND a.${param.caseReg} in
			<foreach close=")" collection="param.regionIdsArr" item="item" open="(" separator=",">#{item}</foreach>
		</if>
		<if test="param.sectionIdsArr != null">
			AND a.SECTION_ID in
			<foreach close=")" collection="param.sectionIdsArr" item="item" open="(" separator=",">#{item}</foreach>
		</if>
		GROUP BY
		<include refid="chooseWhenTimeSql" />,
		<choose>
			<when test="param.queryDim == 'REG'">ISNULL(b.REG_ID,0),b.REG_NAME,b.SEQ_NO</when>
			<when test="param.queryDim == 'ROOM'">ISNULL(a.${param.room},0)</when>
			<when test="param.queryDim == 'USEAGE'">a.${param.caseUsage}</when>
			<when test="param.queryDim == 'SOURCE'">a.${param.caseSource}</when>
			<when test="param.queryDim == 'SECTION'">CONCAT(${param.caseReg},'_',a.SECTION_ID)</when>
			<when test="param.queryDim == 'PRICE'">(${param.priceUnit})</when>
			<when test="param.queryDim == 'AREA'">(${param.areaUnit})</when>
		</choose>
	</select>
	
	<select id="getCustAddCountData" resultType="com.myfun.repository.erpdb.dto.HouseCustAddCountDto">
		SET DATEFIRST 1;
		SELECT
		<choose>
			<when test="param.queryDim == 'ROOM'">
				count(1) num,a.HOUSE_ROOM_1 as room,
			</when>
			<when test="param.queryDim == 'REG'">
				count(1) num,b.SOURCE_ID as regId,
			</when>
			<when test="param.queryDim == 'USEAGE'">
				count(1) num,b.SOURCE_ID as useage,
			</when>
			<when test="param.queryDim == 'SECTION'">
				count(1) num,CONCAT(b.SOURCE_ID,'_',c.SOURCE_ID) as section,
			</when>
			<when test="param.queryDim == 'PRICE'">
				count(1) num,(${param.priceUnit}) price,
			</when>
			<when test="param.queryDim == 'AREA'">
				count(1) num,(${param.areaUnit}) area,
			</when>
		</choose>
		<include refid="chooseWhenTimeSql" /> as date
		FROM ${param.tableName} a
		<choose>
			<when test="param.queryDim == 'REG'">
				LEFT JOIN FUN_CUST_REGSECTIONS b ON b.CASE_ID = A.${param.primaryId} and b.CASE_TYPE=3 and b.SOURCE_TYPE=0
			</when>
			<when test="param.queryDim == 'USEAGE'">
				LEFT join FUN_CUST_DEMAND_SPLIT b on b.CASE_ID = A.${param.primaryId} and b.SOURCE_TYPE=2 and b.CASE_TYPE=3
			</when>
			<when test="param.queryDim == 'SECTION'">
				LEFT JOIN FUN_CUST_REGSECTIONS b ON b.CASE_ID = A.${param.primaryId} and b.CASE_TYPE=3 and b.SOURCE_TYPE=0
				LEFT JOIN FUN_CUST_REGSECTIONS c ON c.CASE_ID = A.${param.primaryId} and c.CASE_TYPE=3 and c.SOURCE_TYPE=1
			</when>
		</choose>
		<if test="param.regionIdsArr != null">
			LEFT JOIN FUN_CUST_REGSECTIONS reg ON reg.CASE_ID = A.${param.primaryId} and reg.CASE_TYPE=3 and reg.SOURCE_TYPE=0
		</if>
		<if test="param.sectionIdsArr != null">
			LEFT JOIN FUN_CUST_REGSECTIONS section ON section.CASE_ID = A.${param.primaryId} and section.CASE_TYPE=3 and section.SOURCE_TYPE=1
		</if>
		WHERE A.COMP_ID = #{param.compId}
		AND A.${param.serchRange} = #{param.serchRangeId}
		AND A.CREATION_TIME &gt;= #{param.startTime}
		AND A.CREATION_TIME &lt;= #{param.endTime}
		<if test="param.regionIdsArr != null">
			AND reg.SOURCE_ID in 
			<foreach close=")" collection="param.regionIdsArr" item="item" open="(" separator=",">#{item}</foreach>
		</if>
		<if test="param.sectionIdsArr != null">
			AND section.SOURCE_ID in 
			<foreach close=")" collection="param.sectionIdsArr" item="item" open="(" separator=",">#{item}</foreach>
		</if>
		GROUP BY 
		<include refid="chooseWhenTimeSql" />,
		<choose>
			<when test="param.queryDim == 'SECTION'">CONCAT(b.SOURCE_ID,'_',c.SOURCE_ID)</when>
			<when test="param.queryDim == 'PRICE'">(${param.priceUnit})</when>
			<when test="param.queryDim == 'AREA'">(${param.areaUnit})</when>
			<when test="param.queryDim == 'ROOM'">a.HOUSE_ROOM_1</when>
			<when test="param.queryDim == 'REG'">b.SOURCE_ID</when>
			<when test="param.queryDim == 'USEAGE'">b.SOURCE_ID</when>
		</choose>
	</select>
	
	<!--没必要查询全部的字段 -->
	<select id="getHouseBaseInfo" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		SALE_LEASE_ID,IS_SALE_LEASE,CELL_PHONE,JOINT_CELL_PHONE,SALE_ID,SECTION_ID,
		TRUE_FLAG,ARCHIVE_ID,SALE_STATUS,CITY_SHARE_FLAG, COMP_ID,BUILD_NAME,BUILD_ID,SALE_AREA,SALE_OWNER,SALE_TOTAL_PRICE,SALE_ROOM,SALE_HALL,SALE_WEI
		from FUN_SALE
		where SALE_ID = #{saleId,jdbcType=INTEGER}
	</select>
	
	<update id="updateModelData">
		UPDATE FUN_SALE
		<set>
			<if test="param.availableTime != null">AVAILABLE_TIME = #{param.availableTime},</if>
			<if test="param.trackTime != null">TRACK_TIME = #{param.trackTime},</if>
			<if test="param.houseBargain != null">HOUSE_BARGAIN = #{param.houseBargain},</if>
			<if test="param.orangeFlag != null">ORANGE_FLAG = #{param.orangeFlag},</if>
			<if test="param.saleStatus != null">SALE_STATUS = #{param.saleStatus},</if>
			<if test="param.saleLevel != null">SALE_LEVEL = #{param.saleLevel},</if>
			<if test="param.grId != null">GR_ID = #{param.grId},</if>
			<if test="param.deptId != null">DEPT_ID = #{param.deptId},</if>
			<if test="param.regId != null">REG_ID = #{param.regId},</if>
			<if test="param.areaId != null">AREA_ID = #{param.areaId},</if>
			<if test="param.userId != null">USER_ID = #{param.userId},</if>
			<if test="param.archiveId != null">ARCHIVE_ID = #{param.archiveId},</if>
			<if test="param.actionTime != null">ACTION_TIME = #{param.actionTime},</if>
			<if test="param.privateTime!= null">PRIVATE_TIME = #{param.privateTime},</if>
			<if test="param.privateUserId!= null">PRIVATE_USER_ID = #{param.privateUserId},</if>
			<if test="param.plateType != null">PLATE_TYPE = #{param.plateType},</if>
			<if test="param.specialTime != null">SPECIAL_TIME = #{param.specialTime},</if>
			<if test="param.specialEndTime!= null">SPECIAL_END_TIME = #{param.specialEndTime},</if>
			<if test="param.scheduleTime != null">SCHEDULE_TIME = #{param.scheduleTime},</if>
			<if test="param.scheduleEndTime != null">SCHEDULE_END_TIME = #{param.scheduleEndTime},</if>
			<if test="param.respiteEndTime != null">RESPITE_END_TIME = #{param.respiteEndTime},</if>
			<if test="param.dealTime != null">DEAL_TIME = #{param.dealTime},</if>
			<if test="param.isSaleLease != null">IS_SALE_LEASE = #{param.isSaleLease},</if>
			<if test="param.writeoffTime!= null">WRITEOFF_TIME = #{param.writeoffTime},</if>
			<if test="param.trueFlag != null">TRUE_FLAG = #{param.trueFlag},</if>
			<if test="param.redFlag!= null">RED_FLAG = #{param.redFlag},</if>
			<if test="param.salePublish!= null">SALE_PUBLISH = #{param.salePublish},</if>
			<if test="param.cityShareFlag != null">CITY_SHARE_FLAG = #{param.cityShareFlag},</if>
			<if test="param.fromPublic != null">FROM_PUBLIC = #{param.fromPublic},</if>
			<if test="param.publicCount != null">PUBLIC_COUNT = #{param.publicCount},</if>
			UPDATE_TIME = getDate()
		</set>
		WHERE SALE_ID = #{caseId}
		<if test="plateType != null">and PLATE_TYPE=#{plateType}</if>
	</update>
	
	<select id="getLevelCounts" resultType="java.util.Map">
		SELECT sum(iif(SALE_LEVEL=2,1,0)) as commendLevel, sum(iif(SALE_LEVEL=3,1,0)) as passwordLevel
		FROM FUN_SALE
		WHERE USER_ID = #{infoOwnerUserId} and COMP_ID = #{compId} 
			and DEPT_ID =#{deptId} and SALE_LEVEL IN (2, 3) and sale_id != #{caseId}
	</select>


  <resultMap extends="BaseResultMap" id="extResultMap" type="com.myfun.repository.erpdb.dto.ErpFunSaleDto">
    <result column="BUILD_ADDR" jdbcType="VARCHAR" property="buildAddr" />
  </resultMap>

	<select id="getDkErpFunSale" resultMap="extResultMap">
		SELECT
            a.BUILD_NAME, b.BUILD_ADDR,SALE_ID,SALE_NO,SALE_USEAGE,SALE_ROOM,
      SALE_HALL,SALE_WEI,SALE_TOTAL_PRICE,REGION_NAME,SALE_ROUND,SALE_AREA,a.BUILD_ID,a.SALE_REG
		FROM FUN_SALE a
        JOIN BUILDING_INFO b on a.build_id = b.build_id
		WHERE COMP_ID = #{compId} AND SALE_ID IN
		<foreach close=")" collection="targetIds" item="val" open="(" separator=",">#{val}</foreach>
	</select>
	
	<select id="getAddrRepetList" resultType="java.util.Map">
		SELECT
		A.COMP_ID compId, A.AREA_ID areaId, A.REG_ID regId, A.DEPT_ID deptId, A.GR_ID grId,
		A.SALE_USEAGE AS useage, A.SALE_ID AS caseId, A.SALE_STATUS AS status, A.SALE_NO AS caseNo
		FROM FUN_SALE A LEFT JOIN FUN_CORE_INFO B ON A.SALE_ID=B.CASE_ID AND B.CASE_TYPE=1
		WHERE A.COMP_ID = #{compId}
		<if test="userId != null">AND A.USER_ID = #{userId}</if>
		AND A.BUILD_ID = #{buildId}
		<choose>
			<when test="tradeAddrCon != null or numCon != null">
				<choose>
					<when test="tradeAddrCon != null and numCon != null">AND (A.TRADE_ADDR = #{tradeAddrCon} OR A.SALE_NUM = #{numCon})</when>
					<when test="tradeAddrCon != null">AND A.TRADE_ADDR = #{tradeAddrCon}</when>
					<when test="numCon != null">AND A.SALE_NUM = #{numCon}</when>
				</choose>
			</when>
			<otherwise>
				AND B.ADDR_MD5 IN
				<foreach close=")" collection="md5StrList" item="val" open="(" separator=",">#{val}</foreach>
			</otherwise>
		</choose>
		<if test="useageArr != null">
			AND A.SALE_USEAGE IN
			<foreach close=")" collection="useageArr" item="val" open="(" separator=",">#{val}</foreach>
		</if>
	</select>
	
	<select id="getPhoneRepeatList" resultType="java.util.Map">
		SELECT
			AREA_ID areaId, REG_ID regId, DEPT_ID deptId, GR_ID grId, SALE_ID caseId,
			SALE_STATUS AS status, SALE_NO AS caseNo,
			SALE_USEAGE AS useage
		FROM FUN_SALE
		WHERE SALE_ID IN(
			SELECT CASE_ID FROM
				FUN_PHONE
			WHERE
				COMP_ID = #{compId}
			<if test="userId != null">AND USER_ID = #{userId}</if>
			AND CASE_TYPE = 1
			AND PHONE IN 
			  <foreach close=")" collection="phoneArr" item="val" open="(" separator=",">#{val}</foreach>
			GROUP BY CASE_ID
		)
		ORDER BY CREATION_TIME ASC
	</select>

  <select id="generatorSaleNo" resultType="java.lang.String">
     EXEC  proc_GenHouseCustNo 'FUN_SALE',#{compNo}
  </select>

  <select id="countRangeRepeatHouse" resultType="java.lang.Integer">
      select count(a.sale_id) from fun_sale a
      join FUN_CORE_INFO b on a.sale_id=b.case_id and b.case_type=1
      <where>
        <if test="1==1">
          and a.comp_id=#{compId} and b.ADDR_MD5 in <foreach close=")" collection="addrMd5" item="md5" open="(" separator=",">
          #{md5}</foreach>
        </if>
        <if test="null != buildId">
          and a.build_id=#{buildId}
        </if>
        <if test="useage.size() &gt; 0">
          and sale_useage in <foreach close=")" collection="useage" item="leaseUseage" open="(" separator=",">
          #{leaseUseage}
        </foreach>
        </if>
        <choose>
          <when test="repeatRange == '1'">
              and a.comp_id=#{compId}
          </when>
          <when test="repeatRange == '2'">
              and a.AREA_ID=#{areaId}
          </when>
          <when test="repeatRange == '3'">
              and a.REG_ID=#{regId}
          </when>
          <when test="repeatRange == '4'">
              and a.DEPT_ID=#{deptId}
          </when>
          <when test="repeatRange == '5'">
              and a.GR_ID=#{regId}
          </when>
        </choose>
      </where>
  </select>
  <select id="getSaleCountBySaleUnit" resultType="java.util.Map">
    SELECT SALE_NUM_T caseNum, COUNT (SALE_ID) count
    FROM
        FUN_SALE
    WHERE
        comp_id =#{compId}
    AND BUILD_ID =#{buildId}
    AND SALE_ROOF_T = #{caseRoof}
    AND SALE_UNIT_T = #{caseUnit}
    AND sale_status NOT IN (5, 6, 7)
    group by SALE_NUM_T
  </select>
  <select id="getSaleHouseBuildCountData" resultType="java.util.Map">
      select SUM(iif(sale_status not in (5,6,7), 1, 0 )) notSaled, SUM(iif(sale_status =5, 1, 0 )) hasSaled
      from fun_sale
      <where>
          <if test="1==1">
              and BUILD_ID=#{buildId} and COMP_ID=#{compId}
          </if>
          <if test="null != caseRoof and '' != caseRoof">
            AND SALE_ROOF_T = #{caseRoof}
          </if>
          <if test="null != caseUnit and '' != caseUnit">
            AND SALE_UNIT_T = #{caseUnit}
          </if>
      </where>
  </select>

  <select id="getSaleListByRoomId" resultMap="BaseResultMap">
    SELECT b.* from FUN_CORE_INFO a
    JOIN FUN_SALE b on a.CASE_ID=b.SALE_ID and a.CASE_TYPE=1
    WHERE b.comp_id=#{compId} and a.ROOM_ID=#{param.roomId} and b.sale_status not in (5,6,7)
    AND b.build_id = #{param.buildId} and a.HOUSE_UNIT=#{param.caseUnit}
    <if test="null != param.caseRoof and '' != param.caseRoof">
      and a.HOUSE_ROOF=#{param.caseRoof}
    </if>
    <if test="null != param.caseFloor and '' != param.caseFloor">
      and a.HOUSE_FLOOR=#{param.caseFloor}
    </if>
  </select>
	<select id="getOldSaleUnitList" resultMap="BaseResultMap">
		select top 1000 a.* from fun_sale a
		JOIN FUN_CORE_INFO b on a.sale_id=b.CASE_ID and b.case_type=1
		WHERE b.HOUSE_FLOOR = a.UNIT_FLOOR and a.UNIT_FLOOR is not null 
		and a.UNIT_FLOOR != ''
	</select>
	
	<select id="getSaleCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_SALE WHERE COMP_ID=#{compId} AND USER_ID=#{userId}
	</select>
	
	<select id="getSaleCountByFlag" resultType="java.util.Map">
		SELECT
		sum(iif(RED_FLAG = 1 OR ORANGE_FLAG = 1,1,0)) as needTrackHouse
		,sum(iif(PANORAMA_MAP = 0 AND SALE_MAP = 0 AND VIDEO_NUM = 0,1,0)) as
		needImprove FROM FUN_SALE WHERE COMP_ID = #{compId}
        <if test="null != partnerId">
           and PARTNER_ID =#{partnerId}
        </if>
        <!-- 新版组织机构不用 manageLevel 层级了 -->
        <choose>
          <when test="newOrganizationType">
            AND (
            <foreach collection="rangeIds" index="index" item="item" separator="OR">
              TISSUE_LINE LIKE CONCAT('%:', #{item}, ':%')
            </foreach>
            )
          </when>
          <otherwise>
            <choose>
              <when test="rangeType == 2">AND AREA_ID</when>
              <when test="rangeType == 3">AND REG_ID</when>
              <when test="rangeType == 4">AND DEPT_ID</when>
              <when test="rangeType == 5">AND GR_ID</when>
              <when test="rangeType == 6">AND USER_ID</when>
            </choose>
            <if test="rangeType != 1">
              in
              <foreach close=")" collection="rangeIds" index="index" item="rangeId" open="(" separator=",">
                #{rangeId}
              </foreach>
            </if>
          </otherwise>
        </choose>
        AND SALE_STATUS IN (1, 2, 4)
	</select>
	
	<select id="getModifyPriceEndCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_SALE 
		WHERE MODIFY_PRICE_END &gt;= #{nowDate} 
		AND COMP_ID = #{compId}
		AND SALE_STATUS != 7
		AND DEPT_ID = #{deptId}
		AND USER_ID = #{userId}
	</select>

    <select id="getModifyPriceEndCountByOrg" resultType="java.lang.Integer">
      SELECT COUNT(1) FROM FUN_SALE
      WHERE MODIFY_PRICE_END &gt;= #{nowDate}
        AND COMP_ID = #{compId}
        AND SALE_STATUS != 7
        AND TISSUE_LINE LIKE CONCAT('%:', #{organizationId}, ':%')
        AND USER_ID = #{userId}
    </select>
	
	<select id="selectHotIncrementByDeptId" resultType="java.lang.Integer">
		select COUNT(1) from FUN_SALE where COMP_ID = #{compId} 
		<if test="null != deptId and '' != deptId">
			and DEPT_ID = #{deptId} 
		</if>
		<if test="null != nowDate">
			and CREATION_TIME &gt;= #{nowDate}
		</if>
		<if test="null != privateTime">
			and PUBLIC_TIME &gt;= #{privateTime}
		</if>
		<if test="null != plateType">
			and PLATE_TYPE =#{plateType}
		</if>
		<if test="null != houseLevel">
			and SALE_LEVEL =#{houseLevel}
		</if>
        <if test="null != partnerId">
           and PARTNER_ID =#{partnerId}
        </if>
	</select>

    <select id="selectHotIncrementByOrgId" resultType="java.lang.Integer">
      select COUNT(1) from FUN_SALE where COMP_ID = #{compId}
      <if test="null != organizationId and '' != organizationId">
        and TISSUE_LINE LIKE CONCAT('%:', #{organizationId}, ':%')
      </if>
      <if test="null != nowDate">
        and CREATION_TIME &gt;= #{nowDate}
      </if>
      <if test="null != privateTime">
        and PUBLIC_TIME &gt;= #{privateTime}
      </if>
      <if test="null != plateType">
        and PLATE_TYPE =#{plateType}
      </if>
      <if test="null != houseLevel">
        and SALE_LEVEL =#{houseLevel}
      </if>
      <if test="null != partnerId">
        and PARTNER_ID =#{partnerId}
      </if>
    </select>
	
	<select id="testSaleSql" resultType="java.util.Map">
		SELECT 
		<choose>
			<when test="allColumn != null and allColumn == 1">
				SALE_ID,COMP_ID,CITY_ID,GR_ID,REG_ID,DEPT_ID,USER_ID,ARCHIVE_ID,CREATION_TIME
				CREATOR_UID,SALE_NO,LOCK,SALE_SUBJECT,BUILD_ID,BUILD_NAME,BUILD_CODE,SALE_REG,REGION_NAME
				SECTION_ID,SECTION_NAME,SALE_ROUND,TRADE_ADDR,SALE_ROOM,SALE_HALL,SALE_WEI,SALE_YANG,SALE_TYPE
				SALE_FLOOR,SALE_FLOORS,SALE_FITMENT,SALE_DIRECT,SALE_YEAR,SALE_USEAGE,SHOP_USAGE,SALE_STREET
				SALE_AREA,SALE_TOTAL_PRICE,SALE_UNIT_PRICE,SALE_SOURCE,SALE_KEY,SALE_KEY_NUM,SALE_EXPLRTH
				SALE_CONSIGN,SALE_COOPERATE,SALE_PUBLISH,SALE_MAP,SALE_LEVEL,PLATE_TYPE,SALE_STATUS,TRACK_TIME
				TRACK_TIME2,ACTION_TIME,FROM_SOSO,REPEAT_FLAG,SHARE_FLAG,COMPLAINT_FLAG,RED_FLAG,ORANGE_FLAG
				PUBLIC_TIME,SPECIAL_TIME,SCHEDULE_TIME,DEAL_TIME,WRITEOFF_TIME,SECRECY_TIME,COMMEND_TIME
				PRIVATE_TIME,FROM_PUBLIC,THUMB_URL,UPDATE_TIME,SALE_CERT_TIME,PUBLISH_SITES,AREA_ID,SALE_ROOF_T
				SALE_NUM_T,SALE_UNIT_T,VIDEO_NUM,SALE_INNERAREA,SENDTOTENCENT,HOUSE_SOURCE_WAY,TRUE_FLAG
				YOU_SHARE_FLAG,YOU_SHARE_TIME,YOU_BUY_COUNT,OWNER_SEX,YOU_SHARE_ID,THUMBPIC_VER,PRIVATE_USER_ID
				ADDR_MD5,PANORAMA_MAP,VIDEO_REVIEW_FLAG,YOUJIA_STATISTIC_FLAG,ADS_FLAG,SYNC_TIME
				COMPETE_END_TIME,COMPETE_PRICE,YOU_SHARE_MONEY_STATE,PROXY_URL,SENDTO_WEIDIAN,SENDTO_YOUYOU
				CHECK_CODE_URL,UPLOAD_PROXY_USER,CITY_SHARE_FLAG,FILE_SYSTEM_TYPE,CHECK_CODE_FUN,QZ_CODE_FUN
				OWNERSHIP_TYPE,EFFECTIVE_DATE,FUNMANAGER_SALESTATUS,HAS_FUNKAN,JOINT_CELL_PHONE,JOINT_USER_NAME
				JOINT_USER_SEX,JOINT_ID_CARD,SALE_LEASE_ID,IS_SALE_LEASE,ENTRUST_END_TIME,ENTRUST_CREATE_USER
				AVAILABLE_TIME,MODIFY_PRICE_END,MODIFY_PRICE_TREND 
			</when>
			<otherwise>
				SALE_ID
			</otherwise>
		</choose>
		FROM FUN_SALE
		WHERE COMP_ID = '10213' AND CREATION_TIME &gt;= '2017-01-24 00:00:00'
		AND CREATION_TIME &lt;= '2018-01-24 23:59:59' AND SALE_STATUS &lt;= '4'
		ORDER BY (CASE WHEN SALE_LEVEL = 2 THEN 1 ELSE 2 END) ASC, CREATION_TIME DESC
		OFFSET 0 ROW FETCH NEXT 50 ROWS ONLY
	</select>
	
	<select id="getNeedDealUnitList" resultMap="BaseResultMap">
		<!-- 这里用SALE_ID保存了B表的ID -->
		SELECT TOP 500 A.UNIT_FLOOR,B.ID AS SALE_ID
		FROM FUN_SALE A
		JOIN FUN_CORE_INFO B ON B.CASE_ID=A.SALE_ID AND B.CASE_TYPE=1
		WHERE A.UNIT_FLOOR=B.HOUSE_FLOOR AND LEN(A.UNIT_FLOOR) &gt; 0
		AND A.SALE_NUM_T NOT LIKE '%,%'
	</select>
	
	<select id="getSaleAddCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_SALE WHERE COMP_ID = #{compId}
        <if test="null != partnerId">
           and PARTNER_ID =#{partnerId}
        </if>
		<if test="null != startTime and '' != startTime">
		AND CREATION_TIME &gt;= #{startTime} 
		</if>
		<if test="null != dealTime and '' != dealTime">
		AND DEAL_TIME &gt;= #{dealTime} 
		</if>
		<if test="null != saleStatus and '' != saleStatus">
		AND SALE_STATUS = #{saleStatus} 
		</if>
		<if test="null != trackTime and '' != trackTime">
		AND WRITEOFF_TIME &gt;= #{trackTime} 
		</if>
		AND 
		<choose>
			<when test="manageLevel == 1">COMP_ID</when>
			<when test="manageLevel == 2">AREA_ID</when>
			<when test="manageLevel == 3">REG_ID</when>
			<when test="manageLevel == 4">DEPT_ID</when>
			<when test="manageLevel == 5">GR_ID</when>
		</choose>
		IN
		<foreach close=")" collection="manageRangIds" item="rangeId" open="(" separator=",">
			#{rangeId}
		</foreach>		
	</select>
	
	<select id="getSaleZhAddCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_SALE
		WHERE COMP_ID = #{compId}
        <if test="null != partnerId">
           and PARTNER_ID =#{partnerId}
        </if>
		AND
		<choose>
			<when test="manageLevel == 1">COMP_ID</when>
			<when test="manageLevel == 2">AREA_ID</when>
			<when test="manageLevel == 3">REG_ID</when>
			<when test="manageLevel == 4">DEPT_ID</when>
			<when test="manageLevel == 5">GR_ID</when>
		</choose>
		IN
		<foreach close=")" collection="manageRangIds" item="rangeId" open="(" separator=",">
			#{rangeId}
		</foreach>
		AND SALE_STATUS = #{saleStatus}
		AND SALE_ID IN 
		<foreach close=")" collection="saleIds" index="index" item="saleId" open="(" separator=",">
			#{saleId}
		</foreach>
	</select>
	
	<select id="getCaseListCut" resultType="java.util.Map">
		SELECT
		<choose>
			<when test="param.caseType == 1">
				sale_id caseId,sale_id saleId,sale_room saleRoom,SALE_AREA saleArea,SALE_TOTAL_PRICE saleTotalPrice,BUILD_NAME buileName
				FROM FUN_SALE
				WHERE SALE_ID IN
			</when>
			<when test="param.caseType == 2">
				lease_id caseId,lease_id leaseId,lease_room leaseRoom,lease_AREA leaseArea,lease_TOTAL_PRICE leaseTotalPrice,BUILD_NAME buileName
				FROM FUN_LEASE
				WHERE LEASE_ID IN
			</when>
			<when test="param.caseType == 3">
				buy_cust_id caseId,buy_cust_id buyCustId,HOUSE_ROOM houseRoom,HOUSE_ROOM_1 houseRoom1,HOUSE_PRICE_LOW housePriceLow,HOUSE_PRICE_HIGH housePriceHigh,HOUSE_AREA_LOW houseAreaLow,HOUSE_AREA_HIGH houseAreaHigh,BUY_CUST_NAME buyCustName
				FROM FUN_BUY_CUSTOMER
				WHERE BUY_CUST_ID IN
			</when>
			<when test="param.caseType == 4">
				rent_cust_id caseId,rent_cust_id rentCustId,HOUSE_ROOM houseRoom,HOUSE_ROOM_1 houseRoom1,HOUSE_PRICE_LOW housePriceLow,HOUSE_PRICE_HIGH housePriceHigh,HOUSE_AREA_LOW houseAreaLow,HOUSE_AREA_HIGH houseAreaHigh,RENT_CUST_NAME rentCustName
				FROM FUN_RENT_CUSTOMER
				WHERE RENT_CUST_ID IN
			</when>
		</choose>
		<foreach close=")" collection="param.caseIdList" item="item" open="(" separator=",">#{item}</foreach>
		<if test="param.compId != null and param.compId != ''">
			and COMP_ID=#{param.compId}
		</if>
		ORDER BY
		<choose>
			<when test="param.caseType == 1">SALE_ID</when>
			<when test="param.caseType == 2">LEASE_ID</when>
			<when test="param.caseType == 3">BUY_CUST_ID</when>
			<when test="param.caseType == 4">RENT_CUST_ID</when>
		</choose>
		DESC
	</select>
	
	<update id="updatePublishAndTrueFlagByArchiveId">
		UPDATE FUN_SALE SET
		TRUE_FLAG = 0,SALE_PUBLISH = 0
		WHERE COMP_ID = #{compId}
		AND ARCHIVE_ID IN
			<foreach close=")" collection="archiveIds" index="index" item="item" open="(" separator=",">
				#{item}
			</foreach>
		<if test="deptId != null and deptId != ''">
			AND DEPT_ID = #{deptId}
		</if>
	</update>

	<select id="getExtensionNumber" resultType="java.lang.Integer">
		select COUNT(1) AS NUMBER
		from FUN_SALE A
		WHERE A.COMP_ID=#{compId} and A.CITY_ID=#{shardCityId} AND
		A.ARCHIVE_ID=#{archiveId} AND SALE_PUBLISH=1 AND A.SALE_STATUS=1
		<if test="sendToYouYou != null">
			AND A.SENDTO_YOUYOU = #{sendToYouYou}
		</if>
		<if test="buildIdFlag">
			AND A.BUILD_ID != -1
		</if>
	</select>

    <select id="getTopFunSale" resultMap="BaseResultMap">
      SELECT  TOP ${num} ARCHIVE_ID,SALE_ID,SALE_NO,TRUE_FLAG,YOU_SHARE_FLAG from FUN_SALE
      where COMP_ID=#{compId} and DEPT_ID=#{deptId}
        <if test="userId != null">
            and USER_ID=#{userId}
        </if>
        <if test="plateType != null">
            and PLATE_TYPE=#{plateType}
        </if>
    </select>
	
	<select id="getHouseSaleList" resultMap="BaseResultMapSaleDto">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		<!-- 查询收藏列表 -->
		<choose>
			<when test="1 == param.favorite">
				FUN_SALE A JOIN FUN_CASE_FAVORITE B ON B.CASE_ID = A.SALE_ID
				WHERE
				B.FAVORITE_UID = #{param.selfUserId} and B.FAVORITE_STATUS = 1 and B.CASE_TYPE = 1
				and ( A.COMP_ID = #{param.selfCompId} OR ( A.COMP_ID != #{param.selfCompId} and A.CITY_SHARE_FLAG != 0))
			</when>
			<otherwise>
				FUN_SALE
			</otherwise>
		</choose>
		WHERE
		<!-- comComp -->
		<choose>
			<when test="1 == param.showCooperate">
				(
					<if test="null != param.floorsType and '' != param.floorsType">
						(<include refid="saleListCompCondition" />) OR
					</if>
					(CITY_SHARE_FLAG = #{pram.cityShareFlag} and CITY_ID = #{pram.cityId})
				)
			</when>
			<otherwise>
				(<include refid="saleListCompCondition" />)
			</otherwise>
		</choose>
		<if test="null != param.inPlateTypes">
			and PLATE_TYPE IN
			<foreach close=")" collection="param.inPlateTypes" item="plateType" open="(" separator=",">
				#{plateType}
			</foreach>
		</if>
		<if test="'PUBLIC' == param.userId"> and PLATE_TYPE = 1</if>
		<if test="'SHARE' == param.userId"> and PLATE_TYPE = 3</if>
		<if test="'7' != param.statusTemp"> and SALE_STATUS != 7</if>
		<choose>
			<when test="null != param.saleNo and '' != param.saleNo">
				and COMP_ID = #{param.selfCompId}
				<choose>
					<when test="null != param.innerNo and 0 != param.innerNo">
						and INNER_NO = #{param.innerNo}
					</when>
					<otherwise>
						and SALE_NO = #{param.saleNo}
					</otherwise>
				</choose>
			</when>
			<when test="null != param.cellPhone and 0 == param.bound and null != param.plateType"> 
				and PLATE_TYPE = #{param.plateType}
				<if test="'1' == param.searchByPhone">
					and ( USER_ID = #{param.selfUserId} OR PLATE_TYPE = 1)
				</if>
				and SALE_ID in ( SELECT CASE_ID FROM FUN_PHONE WHERE PHONE = #{param.cellPhone} and CASE_TYPE = 1 and COMP_ID = #{param.selfCompId} and CITY_ID = #{param.cityId})
			</when>
			<otherwise>
				<if test="1 == param.todayPublic"> and PLATE_TYPE = 1 and PRIVATE_TIME &gt;= GETDATE() </if>
				<if test="null != param.publicOrprivateUserId and 'PUBLIC' != param.publicOrprivateUserId and 'SHARE' != param.publicOrprivateUserId">
					and USER_ID = #{param.publicOrprivateUserId}
				</if>
				<if test="null != param.inSaleFitments">
					and SALE_FITMENT in 
					<foreach close=")" collection="param.inSaleFitments" index="index" item="saleFitment" open="(" separator=",">
						#{saleFitment}
					</foreach>
				</if>
				<if test="null != param.roomNumLow"> and SALE_ROOM &gt;= #{param.roomNumLow}</if>
				<if test="null != param.roomNumHigh"> and SALE_ROOM &lt;= #{param.roomNumHigh}</if>
				<choose>
					<when test="null == param.isTopFloor">
						<if test="null != param.floor1 and param.floor1 != ''"> and SALE_FLOOR &gt;= #{param.floor1}</if>
						<if test="null != param.floor2 and param.floor2 != ''"> and SALE_FLOOR &lt;= #{param.floor2}</if>
					</when>
					<otherwise>
						<if test="1 == param.isTopFloor and null == param.floor2"> and SALE_FLOOR = SALE_FLOORS</if>
						<if test="1 == param.isTopFloor and null != param.floor1"> and SALE_FLOOR &gt;= #{param.floor1}</if>
					</otherwise>
				</choose>
				<if test="null != param.modifyPriceTrend">
					and MODIFY_PRICE_END &gt; GETDATE()
					<if test="0 != param.modifyPriceTrend"> and MODIFY_PRICE_TREND = #{param.modifyPriceTrend}</if>
				</if>
				<if test="null != param.needTrackData and '' != param.needTrackData"> 
					and (RED_FLAG = 1 or ORANGE_FLAG = 1) and USER_ID = #{param.selfUserId}
				</if>
				<if test="null != param.needImproveData and '' != param.needImproveData"> 
					and PANORAMA_MAP = 0 and SALE_MAP = 0 and VIDEO_NUM =0 and SALE_STATUS &lt;= 4 and USER_ID = #{param.selfUserId}
				</if>
				<if test="null != param.areaLow and '' != param.areaLow"> and SALE_AREA &gt;= #{param.areaLow}</if>
				<if test="null != param.areaHigh and '' != param.areaHigh"> and SALE_AREA &lt;= #{param.areaHigh}</if>
				<if test="null != param.innerareaLow and '' != param.innerareaLow"> and SALE_INNERAREA &gt;= #{param.innerareaLow}</if>
				<if test="null != param.innerareaHigh and '' != param.innerareaHigh"> and SALE_INNERAREA &lt;= #{param.innerareaHigh}</if>
				<if test="null != param.totalPrice1 and '' != param.totalPrice1"> and SALE_TOTAL_PRICE &gt;= #{param.totalPrice1}</if>
				<if test="null != param.totalPrice2 and '' != param.totalPrice2"> and SALE_TOTAL_PRICE &lt;= #{param.totalPrice2}</if>
				
				<if test="null != param.inBuildIds and '' != param.inBuildIds"> 
					and BUILD_ID in 
						<foreach close=")" collection="param.inBuildIds" index="index" item="buildId" open="(" separator=",">
							#{buildId}
						</foreach>
				</if>
				<if test="null == param.inBuildIds and null != param.buildName"> and BUILD_NAME = #{param.buildName} </if>
				<if test="null == param.inRoadIds"> 
					and BUILD_ID IN (
						SELECT BUILD_ID FROM BUILD_ROADS_RELATION
						WHERE ROADS_ID IN
						<foreach close=")" collection="param.inRoadIds" item="roadsId" open="(" separator=",">
							#{roadsId}
						</foreach>
					)
				</if>
				<if test="null != param.inSectionIds">
					and SECTION_ID IN
					<foreach close=")" collection="param.inSectionIds" item="sectionId" open="(" separator=",">
						#{sectionId}
					</foreach>
				</if>
				<if test="null != param.regionId and param.regionId != ''"> and SALE_REG = #{param.regionId}</if>
				<if test="null != param.round and param.round != ''"> and SALE_ROUND = #{param.saleRound}</if>
				<if test="null != param.type and param.type != ''"> and SALE_TYPE = #{param.saleType}</if>
				<if test="null != param.date and 1 == param.homePage">
					<choose>
						<when test="null != param.zhTrackTime and param.zhTrackTime != ''">
							and SALE_ID IN (
								SELECT CASE_ID FROM FUN_TRACK
								WHERE TRACK_TYPE = 27 and COMP_ID = #{param.selfCompId}
								and CASE_TYPE = 1 and CREATION_TIME &gt;= #{param.startTime}
							)
						</when>
						<when test="null != param.status and param.status != ''">
							<choose>
								<when test="'HOUSE_STATUS-5' == param.status or 'HOUSE_STATUS-6' == param.status"> and DEAL_TIME &gt;= #{param.startTime}</when>
								<when test="'HOUSE_STATUS-7' == param.status"> and WRITEOFF_TIME &gt;= #{param.startTime}</when>
								<when test="1 == param.todayPublic" />
								<otherwise>
									<if test="null != param.creationTimeStart and param.creationTimeStart != ''"> and CREATION_TIME &gt;= #{param.creationTimeStart}</if>
									<if test="null != param.creationTimeEnd and param.creationTimeEnd != ''"> and CREATION_TIME &lt;= #{param.creationTimeEnd} </if>
									<if test="null != param.availableTimeStart and param.availableTimeStart != ''"> and AVAILABLE_TIME &gt;= #{param.availableTimeStart}</if>
									<if test="null != param.availableTimeEnd and param.availableTimeEnd != ''"> and AVAILABLE_TIME &lt;= #{param.availableTimeEnd}</if>
								</otherwise>
							</choose>
						</when>
					</choose>
				</if>
				<if test="null != param.date and null == param.homePage">
					<if test="null != param.creationTimeStart and param.creationTimeStart != ''"> and CREATION_TIME &gt;= #{param.creationTimeStart}</if>
					<if test="null != param.creationTimeEnd and param.creationTimeEnd != ''"> and CREATION_TIME &lt;= #{param.creationTimeEnd} </if>
					<if test="null != param.availableTimeStart and param.availableTimeStart != ''"> and AVAILABLE_TIME &gt;= #{param.availableTimeStart}</if>
					<if test="null != param.availableTimeEnd and param.availableTimeEnd != ''"> and AVAILABLE_TIME &lt;= #{param.availableTimeEnd}</if>
				</if>
				<if test="null != param.unitPrice1 and param.unitPrice1 != ''"> and SALE_UNIT_PRICE &gt;= #{param.unitPrice1}</if>
				<if test="null != param.unitPrice2 and param.unitPrice2 != ''"> and SALE_UNIT_PRICE &lt;= #{param.unitPrice2}</if>
				<if test="null != param.status and param.status != ''">
					<choose>
						<when test="'PLATE_TYPE-1' == param.status or 'PLATE_TYPE-1' == param.status or 'PLATE_TYPE-1' == param.status"> and PLATE_TYPE = #{param.plateType} and SALE_STATUS &lt;= 4</when>
						<when test="'HOUSE_CONSIGN-2' == param.status or 'HOUSE_CONSIGN-3' == param.status"> and SALE_STATUS &lt;= 4 and SALE_CONSIGN &lt; #{param.saleConsign}</when>
						<when test="'PUBLISH-1' == param.status"> and SALE_PUBLISH = 1 and SALE_STATUS &lt;= 4</when>
						<when test="'HOUSE_STATUS-1' == param.status"> and SALE_STATUS &lt;= 4 </when>
						<when test="'HOUSE_STATUS-2' == param.status"> and SALE_STATUS != 5 and SALE_STATUS != 6</when>
						<when test="'CITY_SHARE_FLAG-1' == param.status"> and CITY_SHARE_FLAG = 1</when>
						<when test="'TRUE_FLAG' == param.status"> and TRUE_FLAG IN ( 1, 3, 4 )</when>
						<when test="'HOUSE_STATUS-NORMAL' == param.status"> and SALE_STATUS = 1</when>
						<when test="'HOUSE_DELEGATE' == param.status"> and SALE_CONSIGN &gt; 1 and len(PROXY_URL) &gt; 0</when>
						<when test="'ADS_FLAG-1' == param.status"> and ADS_FLAG = 1</when>
						<when test="'NEW_ADDED' == param.status" />
						<otherwise>
							and SALE_STATUS = #{param.status}
						</otherwise>
					</choose>
				</if>
				<if test="null != param.unit or null != param.roof or null != param.num">
					and SALE_ID IN (
						SELECT CASE_ID FROM FUN_CORE_INFO WHERE
						<trim prefix="" prefixOverrides="and">
							<if test="null != param.unit and param.unit != ''">
								<choose>
									<when test="null != param.houseRoof and param.houseRoof != ''"> and HOUSE_ROOF = #{param.houseRoof}</when>
									<otherwise> and HOUSE_ROOF like #{param.likeHouseRoof}</otherwise>
								</choose>
							</if>
							<if test="null != param.roof and param.roof != ''">
								<choose>
									<when test="null != param.houseNum and param.houseNum != ''"> and ROOM_ID = #{param.houseNum}</when>
									<otherwise> and ROOM_ID like #{param.likeHouseNum}</otherwise>
								</choose>
							</if>
							<if test="null != param.num and param.num != ''">
								<choose>
									<when test="null != param.houseUnit and param.houseUnit != ''"> and HOUSE_UNIT = #{param.houseUnit}</when>
									<otherwise> and HOUSE_UNIT like #{param.likeHouseUnit}</otherwise>
								</choose>
							</if>
						</trim>
						and COMP_ID = #{param.selfCompId} and CASE_TYPE = 1
						<if test="null != param.buildIds and param.buildIds != ''">
							and BUILD_ID IN 
							<foreach close=")" collection="param.inBuildIds" index="index" item="buildId" open="(" separator=",">
								#{buildId}
							</foreach>
						</if>
					)
					and ( SALE_LEVEL != 3 OR (SALE_LEVEL = 3 and USER_ID = #{param.selfUserId}) )
				</if>
				<if test="null != param.useage and param.useage != ''"> and SALE_USEAGE = #{param.useage}</if>
				<if test="null != param.saleExplrth and param.saleExplrth != ''"> and SALE_EXPLRTH = #{param.saleExplrth}</if>
				<if test="1 == param.saleVideo"> and VIDEO_NUM &gt;0</if>
				<choose>
					<when test="0 == param.saleMap"> and SALE_MAP = 0</when>
					<otherwise> and SALE_MAP &gt; 0</otherwise>
				</choose>
				<if test="null != param.key and param.key != ''"> and SALE_KEY = #{param.key}</if>
				<choose>
					<when test="'HOUSE_STATUS-3' == param.level"> and SALE_STATUS = 3</when>
					<otherwise> 
						<if test="null != param.level and param.level != ''"> and SALE_STATUS != 3 and SALE_LEVEL = #{param.level}</if>
					</otherwise>
				</choose>
				<if test="null != param.plateType and param.plateType != ''"> and PLATE_TYPE = #{param.plateType}</if>
				<if test="null != param.source and param.source != ''"> and SALE_SOURCE = #{param.source}</if>
				<choose>
					<when test="'RED' == param.colorFlag"> and RED_FLAG = 1</when>
					<when test="'ORANGE' == param.colorFlag"> and ORANGE_FLAG = 1 and RED_FLAG != 1</when>
					<when test="'REPEAT' == param.colorFlag"> and REPEAT_FLAG != 0</when>
				</choose>
				<if test="null != param.saleDirects and param.saleDirects != ''">
					and SALE_DIRECT IN
					<foreach close=")" collection="param.saleDirects" index="index" item="saleDirect" open="(" separator=",">
						#{saleDirect}
					</foreach>
				</if>
				<if test="null != param.dataRange and param.dataRange != ''">
					<if test="null != param.creationTimeStart and param.creationTimeStart != ''"> and CREATION_TIME &gt;= #{param.creationTimeStart}</if>
					<if test="null != param.creationTimeEnd and param.creationTimeEnd != ''"> and CREATION_TIME &lt;= #{param.creationTimeEnd} </if>
					<if test="null != param.availableTimeStart and param.availableTimeStart != ''"> and AVAILABLE_TIME &gt;= #{param.availableTimeStart}</if>
					<if test="null != param.availableTimeEnd and param.availableTimeEnd != ''"> and AVAILABLE_TIME &lt;= #{param.availableTimeEnd}</if>
				</if>
				<if test="null != param.saleRight and param.saleRight != ''"> and SALE_RIGHT = #{param.saleRight}</if>
				<if test="null != param.houseBargain and param.houseBargain != ''"> and HOUSE_BARGAIN = #{param.houseBargain}</if>
				<if test="1 == param.panoramaMap"> and PANORAMA_MAP &gt;0</if>
				<if test="null != param.endtimeNoTrack and param.endtimeNoTrack != ''"> and TRACK_TIME &lt; #{param.startTime}</if>
			</otherwise>
		</choose>
		ORDER BY ${param.orderBy}
	</select>
	
	<sql id="saleListCompCondition">
		<trim prefix="" prefixOverrides="and">
			<choose>
				<when test="null == param.shareCompIds and null != param.compId">
					and COMP_ID = #{param.compId}
					<if test="null != param.deptId"> and DEPT_ID = #{param.deptId}</if>
				</when>
				<when test="null != param.shareCompIds">
					and COMP_ID IN
					<foreach close=")" collection="param.shareCompIds" item="compId" open="(" separator=",">
						#{compId}
					</foreach>
				</when>
				<otherwise>
					<choose>
						<when test="1 == param.regSectionControllFlag">
							(
								COMP_ID = #{param.selfCompId}
								<if test="null != param.areaId"> and AREA_ID = #{param.areaId}</if>
								<if test="null != param.regId">and REG_ID = #{param.regId}</if>
								<if test="null != param.deptId">and DEPT_ID = #{param.deptId}</if>
								<if test="null != param.grId">and GR_ID = #{param.grId}</if>
								
								<if test="'COMP' == param.range"> and #{param.selfCompId}</if>
								<if test="'AREA' == param.range"> and #{param.selfAreaId}</if>
								<if test="'REG' == param.range"> and #{param.selfRegId}</if>
								<if test="'DEPT' == param.range"> and #{param.selfDeptId}</if>
								<if test="'GR' == param.range"> and #{param.selfRangId}</if>
								<if test="'USER' == param.range"> and #{param.selfUserId}</if>
							) OR (
								<include refid="regSectionCondition" />
							)
						</when>
						<when test="2 == param.regSectionControllFlag">
							(
								<include refid="regSectionCondition" />
							)
						</when>
					</choose>
				</otherwise>
			</choose>
		</trim>
	</sql>
	
	<sql id="regSectionCondition">
		<trim prefix="" prefixOverrides="and">
			<if test="null != param.regSectionAreaId"> and AREA_ID = #{param.regSectionAreaId}</if>
			<if test="null != param.regSectionRegId">and REG_ID = #{param.regSectionRegId}</if>
			<if test="null != param.regSectionDeptId">and DEPT_ID = #{param.regSectionDeptId}</if>
			<if test="null != param.regSectionGrId">and GR_ID = #{param.regSectionGrId}</if>
			<foreach close=")" collection="param.regSectionList" item="item" open="(" separator="OR">
				(
					<trim prefix="" prefixOverrides="and">
						<if test="item[0] != 0">and SALE_REG = #{item[0]}</if>
						<if test="item[1] != 0">and SECTION_ID = #{item[1]}</if>
					</trim>
				)
			</foreach>
		</trim>
	</sql>

  <select id="countByUserId" resultType="java.lang.Integer">
    select COUNT (*)
    from FUN_SALE
    where COMP_ID = #{compId} and USER_ID = #{userId}
  </select>

	<select id="getSaleHouseStatusCount" resultType="com.myfun.repository.erpdb.dto.ErpFunSaleDto">
		select COUNT(*) AS counts,SUM(IIF(SALE_KEY='1',1,0)) AS keyCount,SUM(IIF(SALE_EXPLRTH=1,1,0)) AS explrthCount,SUM(IIF(SALE_PUBLISH='1',1,0)) AS publishCount,
		SUM(IIF(TRUE_FLAG='1',1,0)) AS trueCount,SUM(IIF(SALE_MAP&gt;'0',1,0)) AS photoCount,SUM(IIF(VIDEO_NUM&gt;'0',1,0)) AS voidoCount,
		SUM (IIF(PANORAMA_MAP &gt; '0', 1, 0)) AS panoramaCount,SUM(IIF(SALE_STATUS = '4', 1, 0)) AS scheduleCount
		from FUN_SALE
		where COMP_ID = #{param.compId}
		<if test="param.perVerUid != null">
			and USER_ID = #{param.perVerUid}
		</if>
		<if test="param.serchRange != null and param.serchRangeId != null">
			and ${param.serchRange} = #{param.serchRangeId}
		</if>
		<if test="param.status = 1">
			and SALE_STATUS IN ('1','2','3','4')
		</if>
	</select>

	<select id="getSaleHouseFromCount" resultType="com.myfun.repository.erpdb.dto.ErpFunSaleDto">
		select COUNT(*) AS counts
		<if test="param.groupBy == 'SALE_CONSIGN'">
			,SALE_CONSIGN as houseConsign
		</if>
		<if test="param.groupBy == 'SALE_LEVEL'">
			,SALE_LEVEL as houseLeve
		</if>
		<if test="param.groupBy == 'SALE_FITMENT'">
			,SALE_FITMENT as houseFitment
		</if>
		from FUN_SALE
		where COMP_ID = #{param.compId}
		<if test="param.perVerUid != null">
			and USER_ID = #{param.perVerUid}
		</if>
		<if test="param.serchRange != null and param.serchRangeId != null">
			and ${param.serchRange} = #{param.serchRangeId}
		</if>
		<if test="param.status = 1">
			and SALE_STATUS IN ('1','2','3','4')
		</if>
		group by ${param.groupBy}
		order by counts desc
	</select>

	<select id="getSaleHouseRegionCount" resultType="com.myfun.repository.erpdb.dto.ErpFunSaleDto">
		select COUNT(*) AS counts
		<if test="param.groupBy == 'SALE_ROUND'">
			,SALE_ROUND as houseRound
		</if>
		<if test="param.groupBy == 'SECTION_ID'">
			,SECTION_ID as sectionId
		</if>
		from FUN_SALE
		where COMP_ID = #{param.compId}
		<if test="param.perVerUid != null">
			and USER_ID = #{param.perVerUid}
		</if>
		<if test="param.serchRange != null and param.serchRangeId != null">
			and ${param.serchRange} = #{param.serchRangeId}
		</if>
		<if test="param.status = 1">
			and SALE_STATUS IN ('1','2','3','4')
		</if>
		group by ${param.groupBy}
		order by counts desc
	</select>

	<select id="getSaleHouseSaleCount" resultType="com.myfun.repository.erpdb.dto.ErpFunSaleDto">
		select COUNT(*) AS counts,SALE_USEAGE as houseUseage,SALE_TYPE as houseType
		from FUN_SALE
		where COMP_ID = #{param.compId}
		<if test="param.perVerUid != null">
			and USER_ID = #{param.perVerUid}
		</if>
		<if test="param.serchRange != null and param.serchRangeId != null">
			and ${param.serchRange} = #{param.serchRangeId}
		</if>
		<if test="param.status = 1">
			and SALE_STATUS IN ('1','2','3','4')
		</if>
		group by ${param.groupBy}
		order by SALE_USEAGE,counts desc

	</select>
	
	<select id="getSpecialListCount" resultType="com.myfun.repository.erpdb.dto.ErpFunSaleDto">
		select SALE_LEVEL as LEVEL,count(*) as ATTRNAME
		from FUN_SALE
		where COMP_ID = #{compId} and DEPT_ID = #{deptId} and USER_ID = #{userId}
		and SALE_LEVEL in (2,3)
		group by SALE_LEVEL
	</select>
	
	<select id="getFunSaleListByIds" resultMap="BaseResultMap">
		select  SALE_ID,BUILD_NAME
		from FUN_SALE
		where COMP_ID = #{compId} and SALE_ID in
		<foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
			#{caseId}
		</foreach>
		ORDER BY CREATION_TIME DESC
	</select>

	<select id="getMatchSaleList" resultMap="ErpFunSaleDtoMap">
		select <include refid="Base_Column_List" /> from FUN_SALE
		WHERE SALE_STATUS = 1
		<if test="null != param.plateType">AND PLATE_TYPE = #{param.plateType}</if>
		<if test="null != param.date and param.date !=''">
			AND ${param.custTimeColumn} &gt;= #{param.creationTime1}
			AND ${param.custTimeColumn} &lt;= #{param.creationTime2}
		</if>
		<choose>
			<when test="&quot;EXACT_MATCH&quot; == param.matchType">
				<if test="param.orList !=null and param.orList.size()&gt;0">
					and
					<foreach close=")" collection="param.orList" item="item" open="(" separator="or">
						${item}
					</foreach>
				</if>
				<if test="null != param.saleUsage">
					and SALE_USEAGE IN
					<foreach close=")" collection="param.saleUsage" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</if>
				<if test="param.houseAreaLow != null">
					and SALE_AREA &gt;= #{param.houseAreaLow}
				</if>
				<if test="param.houseAreaHigh != null">
					and SALE_AREA &lt;= #{param.houseAreaHigh}
				</if>
				<if test="param.houseFloorLow != null">
					and SALE_FLOOR &gt;= #{param.houseFloorLow}
				</if>
				<if test="param.houseFloorHigh != null">
					and SALE_FLOOR &lt;= #{param.houseFloorHigh}
				</if>
				<if test="param.housePriceLow != null">
					and SALE_TOTAL_PRICE &gt;= #{param.housePriceLow}
				</if>
				<if test="param.housePriceHigh != null">
					and SALE_TOTAL_PRICE &lt;= #{param.housePriceHigh}
				</if>
				<if test="param.houseRoom != null">
					and SALE_ROOM &gt;= #{param.houseRoom}
				</if>
				<if test="param.houseRoom1 != null">
					and SALE_ROOM &lt;= #{param.houseRoom1}
				</if>
			</when>
			<otherwise>
				<if test="null != param.buildId and param.buildId.size &gt;0">
					and BUILD_ID IN
					<foreach close=")" collection="param.buildId" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</if>
			</otherwise>
		</choose>
		<choose>
			<when test=" 0 == param.bound or null == param.bound">
				AND COMP_ID = #{param.currentCompId}
				<choose>
					<when test="null != param.grId and param.grId !=''">
						AND GR_ID = #{param.grId}
					</when>
					<when test="null != param.deptId and param.deptId !=''">
						AND DEPT_ID = #{param.deptId}
					</when>
					<when test="null != param.areaId and param.areaId !=''">
						AND AREA_ID = #{param.areaId}
					</when>
					<when test="null != param.regId and param.regId !=''">
						AND REG_ID = #{param.regId}
					</when>
				</choose>
				<if test="param.isRegSectionControllStr != null and param.isRegSectionControllStr=='1' ">
					<if test="param.queryRange != null and param.queryRange != queryRangeId">
						and ${param.queryRange}=#{param.queryRange}
					</if>
					<if test="param.regSectionflag == '1' ">
						or
						<foreach close=")" collection="param.orList2" item="item" open="(" separator="or">
							#{item}
						</foreach>
					</if>
					<if test="param.regSectionflag == '2' ">
						and
						<foreach close=")" collection="param.orList2" item="item" open="(" separator="or">
							#{item}
						</foreach>
					</if>
				</if>
			</when>
			<when test="param.bound== 1">
				and CITY_SHARE_FLAG = 1 and USER_ID &gt; 0
				<if test="null != param.compIds and param.compIds.size()&gt;0">
					and COMP_ID IN
					<foreach close=")" collection="param.compIds" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</if>
				and CITY_ID = #{param.cityId}
			</when>
			<when test="param.bound== 2">
				and CITY_SHARE_FLAG = 1 and USER_ID &gt; 0 and CITY_ID = #{param.cityId}
			</when>
			<when test="param.bound== 'CITY_SHARE'">
				and CITY_ID = #{param.cityId} and CITY_SHARE_FLAG = 1 and COMP_ID !=#{param.currentCompId} and deptId={param.currentDeptId}
			</when>
		</choose>
		ORDER BY ${param.orderBy}
	</select>
	
	<select id="getFunSaleListByParam" resultMap="BaseResultMap">
		select TOP 10 BUILD_ID
		from FUN_SALE
		where SALE_PUBLISH = 1 and SALE_MAP &gt;= 3 and USER_ID = #{userId} and BUILD_ID in
		<foreach close=")" collection="buildIds" item="buildId" open="(" separator=",">
		 #{buildId}
		</foreach>
		group by BUILD_ID
	</select>
 
	<update id="updateHouseActionTimeByPlot">
		UPDATE ${tableName} SET ACTION_TIME = GETDATE() 
		WHERE PLATE_TYPE = 2 AND PUBLIC_COUNT = 0 AND COMP_ID = #{compId} AND ACTION_TIME &lt;= DATEADD(DD, -#{day},GETDATE())
        <if test="null != orgIds and orgIds.size &gt; 0">
          AND ORGANIZATION_ID IN
          <foreach close=")" collection="orgIds" item="orgId" open="(" separator=",">
            #{orgId}
          </foreach>
        </if>
	</update>
	
	<update id="updateHouseTrackTimeByPlot">
		UPDATE ${tableName} SET TRACK_TIME = GETDATE()
		WHERE PLATE_TYPE = 2 AND FROM_PUBLIC = #{fromPublic} AND COMP_ID = #{compId} AND TRACK_TIME &lt;= DATEADD(DD, -#{day},GETDATE())
        <if test="null != orgIds and orgIds.size &gt; 0">
          AND ORGANIZATION_ID IN
          <foreach close=")" collection="orgIds" item="orgId" open="(" separator=",">
            #{orgId}
          </foreach>
        </if>
       
	</update>
	
	<update id="updateHousePublicTimeByPlot">
		UPDATE ${tableName} SET PUBLIC_TIME = GETDATE()
		WHERE PLATE_TYPE = 1 AND COMP_ID = #{compId} AND PUBLIC_TIME &lt;= DATEADD(DD, -#{day}, GETDATE())
        <if test="null != orgIds and orgIds.size &gt; 0">
          AND ORGANIZATION_ID IN
          <foreach close=")" collection="orgIds" item="orgId" open="(" separator=",">
            #{orgId}
          </foreach>
        </if>
	</update>
	
	<update id="clearFlagByPlctSwotch">
		UPDATE FUN_SALE SET RED_FLAG = 0, ORANGE_FLAG = 0 WHERE COMP_ID = #{compId}
        <if test="null != orgIds and orgIds.size &gt; 0">
          AND ORGANIZATION_ID IN
          <foreach close=")" collection="orgIds" item="orgId" open="(" separator=",">
            #{orgId}
          </foreach>
        </if>
		UPDATE FUN_LEASE SET RED_FLAG = 0, ORANGE_FLAG = 0 WHERE COMP_ID = #{compId}
        <if test="null != orgIds and orgIds.size &gt; 0">
          AND ORGANIZATION_ID IN
          <foreach close=")" collection="orgIds" item="orgId" open="(" separator=",">
            #{orgId}
          </foreach>
        </if>
		UPDATE FUN_BUY_CUSTOMER SET RED_FLAG = 0, ORANGE_FLAG = 0 WHERE COMP_ID = #{compId}
        <if test="null != orgIds and orgIds.size &gt; 0">
          AND ORGANIZATION_ID IN
          <foreach close=")" collection="orgIds" item="orgId" open="(" separator=",">
            #{orgId}
          </foreach>
        </if>
		UPDATE FUN_RENT_CUSTOMER SET RED_FLAG = 0, ORANGE_FLAG = 0 WHERE COMP_ID = #{compId}
        <if test="null != orgIds and orgIds.size &gt; 0">
          AND ORGANIZATION_ID IN
          <foreach close=")" collection="orgIds" item="orgId" open="(" separator=",">
            #{orgId}
          </foreach>
        </if>
	</update>
	
	<select id="selectOneByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunSaleExample" resultMap="BaseResultMap">
    select 
    <if test="distinct">
      distinct
    </if>
    TOP 1
    <include refid="Base_Column_List" />
    from FUN_SALE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

	<select id="getFunSaleListByCompIdAndCaseIds" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" />
		FROM FUN_SALE
		WHERE COMP_ID = #{compId} AND SALE_ID IN
			<foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
				#{caseId}
			</foreach>
		ORDER BY CREATION_TIME DESC
	</select>
	
	<resultMap id="SosoViewDto" type="com.myfun.repository.searchdb.dto.SearchSosoViewDto">
		<result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
		<result column="SALE_STATUS" jdbcType="TINYINT" property="saleStatus" />
		<result column="SALE_ROOM" jdbcType="TINYINT" property="saleRoom" />
		<result column="SALE_HALL" jdbcType="TINYINT" property="saleHall" />
		<result column="SALE_WEI" jdbcType="TINYINT" property="saleWei" />
		<result column="SALE_YANG" jdbcType="TINYINT" property="saleYang" />
		<result column="CASE_TYPE" jdbcType="INTEGER" property="caseType" />
		<result column="SALE_ID" jdbcType="INTEGER" property="saleId" />
		<result column="USER_ID" jdbcType="INTEGER" property="userId" />
		<result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
		<result column="SALE_FLOOR" jdbcType="INTEGER" property="saleFloor" />
		<result column="SALE_FLOORS" jdbcType="INTEGER" property="saleFloors" />
		<result column="SALE_DOORS" jdbcType="INTEGER" property="saleDoors" />
		<result column="SALE_TOTAL_PRICE" jdbcType="NUMERIC" property="saleTotalPrice" />
		<result column="SALE_AREA" jdbcType="NUMERIC" property="saleArea" />
	</resultMap>
	
	<select id="getSosoViewDataList" resultMap="SosoViewDto">
		SELECT 
		A.BUILD_NAME,A.BUILD_ID,A.SALE_STATUS,A.SALE_FLOOR,A.SALE_FLOORS,A.SALE_DOORS,
		A.SALE_ROOM,A.SALE_HALL,A.SALE_WEI,A.SALE_YANG,A.SALE_AREA,A.SALE_TOTAL_PRICE
		,A.USER_ID,A.SALE_ID
		<if test="null != phone and phone != ''">
			,B.CASE_TYPE
		</if>
		FROM FUN_SALE A
		<choose>
			<when test="null != phone and phone != ''">
			JOIN FUN_PHONE B ON A.SALE_ID = B.CASE_ID AND B.CASE_TYPE = 1 AND PHONE = #{phone}
			</when>
			<otherwise>
				<if test="null != caseIds and caseIds.size &gt; 0">
					WHERE A.SALE_ID IN
					<foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
						#{caseId}
					</foreach>
				</if>
			</otherwise>
		</choose>
		AND A.COMP_ID = #{compId}
		<if test="2 == trueViewRang"> and A.AREA_ID = #{areaId}</if>
		<if test="3 == trueViewRang"> and A.REG_ID = #{regId}</if>
		<if test="4 == trueViewRang"> and A.DEPT_ID = #{deptId}</if>
		<if test="5 == trueViewRang"> and A.GR_ID = #{grId}</if>
		<if test="6 == trueViewRang"> and A.USER_ID = #{userId}</if>
		ORDER BY A.CREATION_TIME DESC
	</select>

	<select id="getCompSaleAddCountByDate" resultType="java.util.Map">
		SELECT  convert(nvarchar(10),CREATION_TIME,120) AS date ,ISNULL(COUNT(*),0) data
		FROM FUN_SALE WHERE  COMP_ID= #{compId} and SALE_STATUS &lt;= 4 AND CREATION_TIME &gt;= #{startTime}
		GROUP BY convert(nvarchar(10),CREATION_TIME,120)
	</select>
	<select id="getSaleCountGoupByDept" resultType="java.util.Map">
		SELECT  DEPT_ID deptId,ISNULL(count(*),0) data
		from FUN_SALE WHERE COMP_ID=#{compId} and SALE_STATUS &lt;= 4 GROUP BY DEPT_ID
	</select>
  <update id="updatePassRealNamePublish" parameterType="map">
  	update FUN_SALE set SALE_PUBLISH = SALE_PUBLISH where COMP_ID = #{compId} and DEPT_ID = #{deptId} and USER_ID = #{userId} and SALE_PUBLISH = 1
  </update>
	
	<select id="getAppAchieveMonthStatisticsRankDetailHouseAdd" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM FUN_SALE
		WHERE COMP_ID = #{compId} 
		<if test="2 == trueViewRang"> AND AREA_ID = #{trueViewRangId}</if>
		<if test="3 == trueViewRang"> AND REG_ID = #{trueViewRangId}</if>
		<if test="4 == trueViewRang"> AND DEPT_ID = #{trueViewRangId}</if>
		<if test="5 == trueViewRang"> AND GR_ID = #{trueViewRangId}</if>
		<if test="6 == trueViewRang"> AND USER_ID = #{trueViewRangId}</if>
		<if test="5 == trueViewRang and deptId != null">
			AND DEPT_ID = #{deptId}
		</if>
		AND SALE_ID IN
		<foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
			#{caseId}
		</foreach>
		ORDER BY CREATION_TIME DESC
	</select>
<select id="getAppAchieveMonthStatisticsRankDetailHouseAddForOrg" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM FUN_SALE
		WHERE COMP_ID = #{compId}
		<if test="null!=orgLikeWhereCause and ''!=orgLikeWhereCause">
		 AND  ${orgLikeWhereCause}
		 </if>
		AND SALE_ID IN
		<foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
			#{caseId}
		</foreach>
		ORDER BY CREATION_TIME DESC
	</select>

  <select id="getSaleLeaseInfo" resultMap="BaseResultMap">
    select IS_SALE_LEASE,SALE_LEASE_ID,BUILD_ID,SALE_ROOF
    from FUN_SALE WHERE SALE_ID = #{saleId,jdbcType=INTEGER}
  </select>
  
  <select id="getDealSaleList" resultMap="BaseResultMap">
    select SALE_ID,BUILD_NAME,SALE_ROOM,SALE_AREA,SALE_TOTAL_PRICE
    from FUN_SALE WHERE SALE_ID IN 
    <foreach close=")" collection="saleIds" index="index" item="saleId" open="(" separator=",">
		#{saleId}
	</foreach>
  </select>
    	 <select id="getHouseByIds" resultMap="BaseResultMap">
		SELECT
		SALE_AREA,BUILD_NAME,SALE_HALL,SALE_ID,THUMB_URL,SALE_TOTAL_PRICE,SALE_UNIT_PRICE,REGION_NAME,
		SALE_ROOM,SALE_SUBJECT,COMP_ID,CITY_ID,TAG_IDS,SALE_WEI,SALE_USEAGE,BUILD_ID,
		SALE_ROOF,SALE_UNIT,SALE_NUM,UNIT_FLOOR,USER_ID,ARCHIVE_ID,SALE_STATUS,TRACK_TIME,SECTION_NAME
		FROM FUN_SALE
		WHERE
	 	SALE_ID IN
		<foreach close=")" collection="saleIds" item="saleId" open="(" separator=",">
			#{saleId}
		</foreach>
	</select>

  <select id="getFunSaleListByCaseIds" resultMap="BaseResultMap">
    SELECT
    SALE_ID, SALE_NO, SALE_TOTAL_PRICE, SALE_STATUS, SALE_ROOM, SALE_AREA, SALE_DIRECT, ORGANIZATION_ID 
    FROM FUN_SALE
    WHERE COMP_ID = #{compId} AND BUILD_ID = #{buildId}
    <if test="null != caseIds and caseIds.size &gt; 0">
      AND SALE_ID IN
      <foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
        #{caseId}
      </foreach>                                      
    </if>
  </select>

  <select id="getFunListByCaseIds" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM FUN_SALE
    WHERE COMP_ID = #{compId}
    AND SALE_ID IN
    <foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
      #{caseId}
    </foreach>
    ORDER BY CREATION_TIME DESC
  </select>
 
  
  <select id="selectSaleInfoByCaseNo" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM FUN_SALE
    WHERE SALE_NO=#{caseNo}
  </select>
  
  <select id="selectHouseInfoListByIds" resultType="com.myfun.erpWeb.managecenter.transaction.vo.HouseInfoVO">
    SELECT
   SALE_ROOM as houseRoom,SALE_HALL as houseHall, SALE_WEI as houseWei,SALE_AREA as houseArea,SALE_ID as houseId,USER_ID as houseUserId,SALE_OWNER as ownerName,BUILD_NAME as buildName,SALE_TOTAL_PRICE as housePrice,ID_CARD as houseIdCard,ID_CARD_TYPE as houseIdCardType,CELL_PHONE as houseCellPhone
    FROM FUN_SALE
    WHERE COMP_ID = #{compId}
    AND SALE_ID IN
    <foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
      #{caseId}
    </foreach>
  </select>

  <update id="transDataForDeleteUser" parameterType="map">
  	update FUN_SALE set
  	USER_ID = NULL,
  	ARCHIVE_ID =  NUll,
  	SALE_SOURCE = 5 ,
  	SALE_LEVEL = 1 ,
  	UPDATE_TIME = #{paramMap.now} ,
  	SYNC_TIME = #{paramMap.now} ,
  	ACTION_TIME = #{paramMap.now} ,
  	TRACK_TIME = #{paramMap.now} ,
  	TRACK_TIME2 = #{paramMap.now} ,
  	SENDTOTENCENT = 0 ,
  	AREA_ID = #{paramMap.areaId} ,
  	REG_ID = #{paramMap.regId} ,
  	DEPT_ID = #{paramMap.deptId} ,
  	GR_ID = #{paramMap.grId} ,
  	PLATE_TYPE = 3 ,
  	ORANGE_FLAG = 0 ,
  	SALE_COOPERATE = 0 ,
  	CITY_SHARE_FLAG = 0 where USER_ID = #{paramMap.userId}
  </update>
  <update id="updateByCaseNo">
  	update FUN_SALE set
  	<if test="operatorType==1">
  	ACTION_TIME =  dateadd(dd,${days},ACTION_TIME)
  	</if>
  	<if test="operatorType==2">
  	TRACK_TIME = dateadd(dd,${days},TRACK_TIME)
  	</if>
  	<if test="operatorType==3">
  	PRIVATE_TIME = dateadd(dd,${days},PRIVATE_TIME)
  	</if>
  	 where SALE_NO = #{caseNo}
  </update>
  
  <!-- 新增的离职用户移交房源 -->
    <update id="transSaleData" parameterType="map">
  	update FUN_SALE set
  	USER_ID = NULL,
  	ARCHIVE_ID =  NUll,
  	SALE_SOURCE = 5 ,
  	SALE_LEVEL = 1 ,
  	UPDATE_TIME = #{paramMap.now} ,
  	SYNC_TIME = #{paramMap.now} ,
  	ACTION_TIME = #{paramMap.now} ,
  	TRACK_TIME = #{paramMap.now} ,
  	TRACK_TIME2 = #{paramMap.now} ,
  	SENDTOTENCENT = 0 ,
  	PLATE_TYPE = 3 ,
  	ORANGE_FLAG = 0 ,
  	SALE_COOPERATE = 0 ,
  	CITY_SHARE_FLAG = 0,
  	ORGANIZATION_ID = #{paramMap.organizationId},
  	USER_LEVEL = #{paramMap.userLevel},
  	TISSUE_LINE = #{paramMap.tissueLineHouse}
  	where USER_ID = #{paramMap.userId}
  </update>
   
  <update id="cleanEntrustInfoBySaleId">
    update FUN_SALE set HAS_RECORDED = 0, SALE_ENTRUST_PRICE = NULL, HAS_ENTRUST = 0 where SALE_ID = #{saleId}
  </update>

  <update id="setEntrustInfoBySaleId">
    update FUN_SALE set HAS_RECORDED = #{record}, HAS_ENTRUST = #{hasEntrust}, SALE_ENTRUST_PRICE = #{saleEntrustPrice} where SALE_ID = #{saleId}
  </update>
  <select id="countCroupeByUserId" resultType="java.util.Map">
    select USER_ID as userId, SUM(ISNULL(SALE_TOTAL_PRICE,0))*#{rate}*#{cityRate} as money, COUNT(USER_ID) AS count
    from FUN_SALE WHERE USER_ID IN
    (select USER_ID from FUN_USERS where
    COMP_ID  = #{compId}
    <if test="organizationId != null">
      and TISSUE_LINE like '%:${organizationId}:%'
    </if>
    <if test="position != null">
      and USER_POSITION = #{position}
    </if>
    <if test="userId != null">
      and USER_ID = #{userId}
    </if>
    )
    AND SALE_STATUS NOT IN (5,6,7)
    GROUP BY USER_ID
  </select>
  <select id="countCheckCroupeByUserId" resultType="java.util.Map">
    select FUNKAN_USER_ID as userId, SUM(ISNULL(SALE_TOTAL_PRICE,0))*#{rate}*#{cityRate} as money, COUNT(FUNKAN_USER_ID) AS count
    from FUN_SALE WHERE FUNKAN_USER_ID IN
    (select USER_ID from FUN_USERS where
    COMP_ID  = #{compId}
    <if test="organizationId != null">
      and TISSUE_LINE like '%:${organizationId}:%'
    </if>
    <if test="position != null">
      and USER_POSITION = #{position}
    </if>
    <if test="userId != null">
      and USER_ID = #{userId}
    </if>
    )
    AND SALE_STATUS NOT IN (5,6,7)
    GROUP BY FUNKAN_USER_ID
  </select>
  <select id="getPersonnalPortentialPerformance" resultType="java.util.Map">
    select SALE_ID as caseId, 1 as caseType, (BUILD_NAME + '/' + SALE_NO) as funNum, (cast(ISNULL(SALE_ROOM,0) as varchar(10)) + '房' + cast(ISNULL(SALE_HALL,0) as varchar(10)) + '厅' + cast(ISNULL(KITCHEN,0) as varchar(10)) + '厨' + cast(ISNULL(SALE_WEI,0) as varchar(10)) + '卫') as houseType, SALE_AREA as area, SALE_TOTAL_PRICE as totalPrice, '接盘人' as position, CREATION_TIME as inputTime, SALE_TOTAL_PRICE*#{offereeRate}*#{cityRate} as money, null as priceUnit, null as area, CREATION_TIME as funCreationTime
    from FUN_SALE WHERE COMP_ID = #{compId} and USER_ID = #{userId} and SALE_STATUS NOT IN (5,6,7)
    <if test="caseType != null and caseType == 2"><!-- 租售的筛选 -->
      and 1=0
    </if>
    UNION ALL
    select LEASE_ID as caseId, 2 as caseType, (BUILD_NAME + '/' + LEASE_NO) as funNum, (cast(ISNULL(LEASE_ROOM,0) as varchar(10)) + '房' + cast(ISNULL(LEASE_HALL,0) as varchar(10)) + '厅' + cast(ISNULL(KITCHEN,0) as varchar(10)) + '厨' + cast(ISNULL(LEASE_WEI,0) as varchar(10)) + '卫') as houseType, LEASE_AREA as area, LEASE_TOTAL_PRICE as totalPrice, '接盘人' as position, CREATION_TIME as inputTime, LEASE_TOTAL_PRICE*#{offereeRate}/100 as money, ISNULL(PRICE_UNIT,1) as priceUnit, ISNULL(LEASE_AREA,0) as area, CREATION_TIME as funCreationTime
    from FUN_LEASE WHERE COMP_ID = #{compId} and USER_ID = #{userId} and LEASE_STATUS NOT IN (5,6,7)
    <if test="caseType != null and caseType == 1"><!-- 租售的筛选 -->
      and 1=0
    </if>
    UNION ALL
    select SALE_ID as caseId, 1 as caseType, (BUILD_NAME + '/' + SALE_NO) as funNum, (cast(ISNULL(SALE_ROOM,0) as varchar(10)) + '房' + cast(ISNULL(SALE_HALL,0) as varchar(10)) + '厅' + cast(ISNULL(KITCHEN,0) as varchar(10)) + '厨' + cast(ISNULL(SALE_WEI,0) as varchar(10)) + '卫') as houseType, SALE_AREA as area, SALE_TOTAL_PRICE as totalPrice, '实勘人' as position, EXPLRTH_DATETIME as inputTime, SALE_TOTAL_PRICE*#{funCheckRate}*#{cityRate} as money, null as priceUnit, null as area, CREATION_TIME as funCreationTime
    from FUN_SALE WHERE COMP_ID = #{compId} and FUNKAN_USER_ID = #{userId} and SALE_STATUS NOT IN (5,6,7)
    <if test="caseType != null and caseType == 2"><!-- 租售的筛选 -->
      and 1=0
    </if>
    UNION ALL
    select LEASE_ID as caseId, 2 as caseType, (BUILD_NAME + '/' + LEASE_NO) as funNum, (cast(ISNULL(LEASE_ROOM,0) as varchar(10)) + '房' + cast(ISNULL(LEASE_HALL,0) as varchar(10)) + '厅' + cast(ISNULL(KITCHEN,0) as varchar(10)) + '厨' + cast(ISNULL(LEASE_WEI,0) as varchar(10)) + '卫') as houseType, LEASE_AREA as area, LEASE_TOTAL_PRICE as totalPrice, '实勘人' as position, EXPLRTH_DATETIME as inputTime, LEASE_TOTAL_PRICE*#{funCheckRate}/100 as money, ISNULL(PRICE_UNIT,1) as priceUnit, ISNULL(LEASE_AREA,0) as area, CREATION_TIME as funCreationTime
    from FUN_LEASE WHERE COMP_ID = #{compId} and FUNKAN_USER_ID = #{userId} and LEASE_STATUS NOT IN (5,6,7)
    <if test="caseType != null and caseType == 1"><!-- 租售的筛选 -->
      and 1=0
    </if>
    UNION ALL
    select A.SALE_ID as caseId, 1 as caseType, (A.BUILD_NAME + '/' + A.SALE_NO) as funNum, (cast(ISNULL(A.SALE_ROOM,0) as varchar(10)) + '房' + cast(ISNULL(A.SALE_HALL,0) as varchar(10)) + '厅' + cast(ISNULL(A.KITCHEN,0) as varchar(10)) + '厨' + cast(ISNULL(A.SALE_WEI,0) as varchar(10)) + '卫') as houseType, A.SALE_AREA as area, A.SALE_TOTAL_PRICE as totalPrice, '钥匙人' as position, B.CREATOR_TIME as inputTime, A.SALE_TOTAL_PRICE*#{submitKeyRate}*#{cityRate} as money, null as priceUnit, null as area, CREATION_TIME as funCreationTime
    from FUN_SALE as A left join FUN_KEY as B on A.SALE_ID = B.CASE_ID and B.CASE_TYPE = 1 WHERE A.COMP_ID = #{compId} and B.USER_ID = #{userId} and A.SALE_STATUS NOT IN (5,6,7) AND B.KEY_STATUS &lt;&gt; 3
    <if test="caseType != null and caseType == 2"><!-- 租售的筛选 -->
      and 1=0
    </if>
    UNION ALL
    select A.LEASE_ID as caseId, 2 as caseType, (A.BUILD_NAME + '/' + A.LEASE_NO) as funNum, (cast(ISNULL(A.LEASE_ROOM,0) as varchar(10)) + '房' + cast(ISNULL(A.LEASE_HALL,0) as varchar(10)) + '厅' + cast(ISNULL(A.KITCHEN,0) as varchar(10)) + '厨' + cast(ISNULL(A.LEASE_WEI,0) as varchar(10)) + '卫') as houseType, A.LEASE_AREA as area, A.LEASE_TOTAL_PRICE as totalPrice, '钥匙人' as position, B.CREATOR_TIME as inputTime, A.LEASE_TOTAL_PRICE*#{submitKeyRate}/100 as money, ISNULL(A.PRICE_UNIT,1) as priceUnit, ISNULL(A.LEASE_AREA,0) as area, CREATION_TIME as funCreationTime
    from FUN_LEASE as A left join FUN_KEY as B on A.LEASE_ID = B.CASE_ID and B.CASE_TYPE = 2 WHERE A.COMP_ID = #{compId} and B.USER_ID = #{userId} and A.LEASE_STATUS NOT IN (5,6,7) AND B.KEY_STATUS &lt;&gt; 3
    <if test="caseType != null and caseType == 1"><!-- 租售的筛选 -->
      and 1=0
    </if>
    UNION ALL
    select A.SALE_ID as caseId, 1 as caseType, (A.BUILD_NAME + '/' + A.SALE_NO) as funNum, (cast(ISNULL(A.SALE_ROOM,0) as varchar(10)) + '房' + cast(ISNULL(A.SALE_HALL,0) as varchar(10)) + '厅' + cast(ISNULL(A.KITCHEN,0) as varchar(10)) + '厨' + cast(ISNULL(A.SALE_WEI,0) as varchar(10)) + '卫') as houseType, A.SALE_AREA as area, A.SALE_TOTAL_PRICE as totalPrice, '备案人' as position, B.RECORD_TIME as inputTime, A.SALE_TOTAL_PRICE*#{recordRate}*#{cityRate} as money, null as priceUnit, null as area, CREATION_TIME as funCreationTime
    from FUN_SALE as A left join FUN_ENTRUST as B on A.SALE_ID = B.CASE_ID and B.CASE_TYPE = 1 WHERE A.COMP_ID = #{compId} and B.RECORD_USER = #{userId} and A.SALE_STATUS NOT IN (5,6,7)
    <if test="caseType != null and caseType == 2"><!-- 租售的筛选 -->
      and 1=0
    </if>
    UNION ALL
    select A.LEASE_ID as caseId, 2 as caseType, (A.BUILD_NAME + '/' + A.LEASE_NO) as funNum, (cast(ISNULL(A.LEASE_ROOM,0) as varchar(10)) + '房' + cast(ISNULL(A.LEASE_HALL,0) as varchar(10)) + '厅' + cast(ISNULL(A.KITCHEN,0) as varchar(10)) + '厨' + cast(ISNULL(A.LEASE_WEI,0) as varchar(10)) + '卫') as houseType, A.LEASE_AREA as area, A.LEASE_TOTAL_PRICE as totalPrice, '备案人' as position, B.RECORD_TIME as inputTime, A.LEASE_TOTAL_PRICE*#{recordRate}/100 as money, ISNULL(A.PRICE_UNIT,1) as priceUnit, ISNULL(A.LEASE_AREA,0) as area, CREATION_TIME as funCreationTime
    from FUN_LEASE as A left join FUN_ENTRUST as B on A.LEASE_ID = B.CASE_ID and B.CASE_TYPE = 2 WHERE A.COMP_ID = #{compId} and B.RECORD_USER = #{userId} and A.LEASE_STATUS NOT IN (5,6,7)
    <if test="caseType != null and caseType == 1"><!-- 租售的筛选 -->
      and 1=0
    </if>
  </select>
</mapper>