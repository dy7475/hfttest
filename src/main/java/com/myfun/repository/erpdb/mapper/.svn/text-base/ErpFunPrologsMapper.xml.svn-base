<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunPrologsMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunPrologs">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="NUMERIC" property="id" />
    <result column="MACADDR" jdbcType="VARCHAR" property="macaddr" />
    <result column="LOGIP" jdbcType="VARCHAR" property="logip" />
    <result column="PCDISKNO" jdbcType="VARCHAR" property="pcdiskno" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="SOFTVER" jdbcType="VARCHAR" property="softver" />
    <result column="LOGTYPE" jdbcType="VARCHAR" property="logtype" />
    <result column="LOGTIME" jdbcType="VARCHAR" property="logtime" />
    <result column="OUTTYPE" jdbcType="VARCHAR" property="outtype" />
    <result column="OUTTIME" jdbcType="VARCHAR" property="outtime" />
    <result column="LOGSID" jdbcType="VARCHAR" property="logsid" />
    <result column="VERNO" jdbcType="VARCHAR" property="verno" />
    <result column="ROUTEMAC" jdbcType="VARCHAR" property="routemac" />
    <result column="PCNAME" jdbcType="VARCHAR" property="pcname" />
    <result column="PCID" jdbcType="VARCHAR" property="pcid" />
    <result column="DEVICE_TYPE" jdbcType="TINYINT" property="deviceType" />
    <result column="VERNO_VERSION" jdbcType="TINYINT" property="vernoVersion" />
    <result column="LOGIN_ADDRESS" jdbcType="VARCHAR" property="loginAddress" />
    <result column="LOGIN_ABNORMAL" jdbcType="TINYINT" property="loginAbnormal" />
    <result column="NEW_DEVICE" jdbcType="TINYINT" property="newDevice" />
    <result column="MOBILE_BRAND" jdbcType="VARCHAR" property="mobileBrand" />
    <result column="LAT" jdbcType="NUMERIC" property="lat" />
    <result column="LNG" jdbcType="NUMERIC" property="lng" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="ORGANIZATION_PATH" jdbcType="VARCHAR" property="organizationPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, MACADDR, LOGIP, PCDISKNO, COMP_ID, DEPT_ID, USER_ID, USER_NAME, SOFTVER, LOGTYPE, 
    LOGTIME, OUTTYPE, OUTTIME, LOGSID, VERNO, ROUTEMAC, PCNAME, PCID, DEVICE_TYPE, VERNO_VERSION, 
    LOGIN_ADDRESS, LOGIN_ABNORMAL, NEW_DEVICE, MOBILE_BRAND, LAT, LNG, GR_ID, ORGANIZATION_PATH
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPrologsExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_PROLOGS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_PROLOGS
    where ID = #{id,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbggenerated-->
    delete from FUN_PROLOGS
    where ID = #{id,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPrologsExample">
    <!--@mbggenerated-->
    delete from FUN_PROLOGS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunPrologs" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_PROLOGS (MACADDR, LOGIP, PCDISKNO, 
      COMP_ID, DEPT_ID, USER_ID, 
      USER_NAME, SOFTVER, LOGTYPE, 
      LOGTIME, OUTTYPE, OUTTIME, 
      LOGSID, VERNO, ROUTEMAC, 
      PCNAME, PCID, DEVICE_TYPE, 
      VERNO_VERSION, LOGIN_ADDRESS, LOGIN_ABNORMAL, 
      NEW_DEVICE, MOBILE_BRAND, LAT, 
      LNG, GR_ID, ORGANIZATION_PATH
      )
    values (#{macaddr,jdbcType=VARCHAR}, #{logip,jdbcType=VARCHAR}, #{pcdiskno,jdbcType=VARCHAR}, 
      #{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{softver,jdbcType=VARCHAR}, #{logtype,jdbcType=VARCHAR}, 
      #{logtime,jdbcType=VARCHAR}, #{outtype,jdbcType=VARCHAR}, #{outtime,jdbcType=VARCHAR}, 
      #{logsid,jdbcType=VARCHAR}, #{verno,jdbcType=VARCHAR}, #{routemac,jdbcType=VARCHAR}, 
      #{pcname,jdbcType=VARCHAR}, #{pcid,jdbcType=VARCHAR}, #{deviceType,jdbcType=TINYINT}, 
      #{vernoVersion,jdbcType=TINYINT}, #{loginAddress,jdbcType=VARCHAR}, #{loginAbnormal,jdbcType=TINYINT}, 
      #{newDevice,jdbcType=TINYINT}, #{mobileBrand,jdbcType=VARCHAR}, #{lat,jdbcType=NUMERIC}, 
      #{lng,jdbcType=NUMERIC}, #{grId,jdbcType=INTEGER}, #{organizationPath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunPrologs" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_PROLOGS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="macaddr != null">
        MACADDR,
      </if>
      <if test="logip != null">
        LOGIP,
      </if>
      <if test="pcdiskno != null">
        PCDISKNO,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="softver != null">
        SOFTVER,
      </if>
      <if test="logtype != null">
        LOGTYPE,
      </if>
      <if test="logtime != null">
        LOGTIME,
      </if>
      <if test="outtype != null">
        OUTTYPE,
      </if>
      <if test="outtime != null">
        OUTTIME,
      </if>
      <if test="logsid != null">
        LOGSID,
      </if>
      <if test="verno != null">
        VERNO,
      </if>
      <if test="routemac != null">
        ROUTEMAC,
      </if>
      <if test="pcname != null">
        PCNAME,
      </if>
      <if test="pcid != null">
        PCID,
      </if>
      <if test="deviceType != null">
        DEVICE_TYPE,
      </if>
      <if test="vernoVersion != null">
        VERNO_VERSION,
      </if>
      <if test="loginAddress != null">
        LOGIN_ADDRESS,
      </if>
      <if test="loginAbnormal != null">
        LOGIN_ABNORMAL,
      </if>
      <if test="newDevice != null">
        NEW_DEVICE,
      </if>
      <if test="mobileBrand != null">
        MOBILE_BRAND,
      </if>
      <if test="lat != null">
        LAT,
      </if>
      <if test="lng != null">
        LNG,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="macaddr != null">
        #{macaddr,jdbcType=VARCHAR},
      </if>
      <if test="logip != null">
        #{logip,jdbcType=VARCHAR},
      </if>
      <if test="pcdiskno != null">
        #{pcdiskno,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="softver != null">
        #{softver,jdbcType=VARCHAR},
      </if>
      <if test="logtype != null">
        #{logtype,jdbcType=VARCHAR},
      </if>
      <if test="logtime != null">
        #{logtime,jdbcType=VARCHAR},
      </if>
      <if test="outtype != null">
        #{outtype,jdbcType=VARCHAR},
      </if>
      <if test="outtime != null">
        #{outtime,jdbcType=VARCHAR},
      </if>
      <if test="logsid != null">
        #{logsid,jdbcType=VARCHAR},
      </if>
      <if test="verno != null">
        #{verno,jdbcType=VARCHAR},
      </if>
      <if test="routemac != null">
        #{routemac,jdbcType=VARCHAR},
      </if>
      <if test="pcname != null">
        #{pcname,jdbcType=VARCHAR},
      </if>
      <if test="pcid != null">
        #{pcid,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=TINYINT},
      </if>
      <if test="vernoVersion != null">
        #{vernoVersion,jdbcType=TINYINT},
      </if>
      <if test="loginAddress != null">
        #{loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="loginAbnormal != null">
        #{loginAbnormal,jdbcType=TINYINT},
      </if>
      <if test="newDevice != null">
        #{newDevice,jdbcType=TINYINT},
      </if>
      <if test="mobileBrand != null">
        #{mobileBrand,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=NUMERIC},
      </if>
      <if test="lng != null">
        #{lng,jdbcType=NUMERIC},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        #{organizationPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPrologsExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_PROLOGS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROLOGS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=NUMERIC},
      </if>
      <if test="record.macaddr != null">
        MACADDR = #{record.macaddr,jdbcType=VARCHAR},
      </if>
      <if test="record.logip != null">
        LOGIP = #{record.logip,jdbcType=VARCHAR},
      </if>
      <if test="record.pcdiskno != null">
        PCDISKNO = #{record.pcdiskno,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.softver != null">
        SOFTVER = #{record.softver,jdbcType=VARCHAR},
      </if>
      <if test="record.logtype != null">
        LOGTYPE = #{record.logtype,jdbcType=VARCHAR},
      </if>
      <if test="record.logtime != null">
        LOGTIME = #{record.logtime,jdbcType=VARCHAR},
      </if>
      <if test="record.outtype != null">
        OUTTYPE = #{record.outtype,jdbcType=VARCHAR},
      </if>
      <if test="record.outtime != null">
        OUTTIME = #{record.outtime,jdbcType=VARCHAR},
      </if>
      <if test="record.logsid != null">
        LOGSID = #{record.logsid,jdbcType=VARCHAR},
      </if>
      <if test="record.verno != null">
        VERNO = #{record.verno,jdbcType=VARCHAR},
      </if>
      <if test="record.routemac != null">
        ROUTEMAC = #{record.routemac,jdbcType=VARCHAR},
      </if>
      <if test="record.pcname != null">
        PCNAME = #{record.pcname,jdbcType=VARCHAR},
      </if>
      <if test="record.pcid != null">
        PCID = #{record.pcid,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null">
        DEVICE_TYPE = #{record.deviceType,jdbcType=TINYINT},
      </if>
      <if test="record.vernoVersion != null">
        VERNO_VERSION = #{record.vernoVersion,jdbcType=TINYINT},
      </if>
      <if test="record.loginAddress != null">
        LOGIN_ADDRESS = #{record.loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.loginAbnormal != null">
        LOGIN_ABNORMAL = #{record.loginAbnormal,jdbcType=TINYINT},
      </if>
      <if test="record.newDevice != null">
        NEW_DEVICE = #{record.newDevice,jdbcType=TINYINT},
      </if>
      <if test="record.mobileBrand != null">
        MOBILE_BRAND = #{record.mobileBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null">
        LAT = #{record.lat,jdbcType=NUMERIC},
      </if>
      <if test="record.lng != null">
        LNG = #{record.lng,jdbcType=NUMERIC},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationPath != null">
        ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROLOGS
    set ID = #{record.id,jdbcType=NUMERIC},
      MACADDR = #{record.macaddr,jdbcType=VARCHAR},
      LOGIP = #{record.logip,jdbcType=VARCHAR},
      PCDISKNO = #{record.pcdiskno,jdbcType=VARCHAR},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      SOFTVER = #{record.softver,jdbcType=VARCHAR},
      LOGTYPE = #{record.logtype,jdbcType=VARCHAR},
      LOGTIME = #{record.logtime,jdbcType=VARCHAR},
      OUTTYPE = #{record.outtype,jdbcType=VARCHAR},
      OUTTIME = #{record.outtime,jdbcType=VARCHAR},
      LOGSID = #{record.logsid,jdbcType=VARCHAR},
      VERNO = #{record.verno,jdbcType=VARCHAR},
      ROUTEMAC = #{record.routemac,jdbcType=VARCHAR},
      PCNAME = #{record.pcname,jdbcType=VARCHAR},
      PCID = #{record.pcid,jdbcType=VARCHAR},
      DEVICE_TYPE = #{record.deviceType,jdbcType=TINYINT},
      VERNO_VERSION = #{record.vernoVersion,jdbcType=TINYINT},
      LOGIN_ADDRESS = #{record.loginAddress,jdbcType=VARCHAR},
      LOGIN_ABNORMAL = #{record.loginAbnormal,jdbcType=TINYINT},
      NEW_DEVICE = #{record.newDevice,jdbcType=TINYINT},
      MOBILE_BRAND = #{record.mobileBrand,jdbcType=VARCHAR},
      LAT = #{record.lat,jdbcType=NUMERIC},
      LNG = #{record.lng,jdbcType=NUMERIC},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunPrologs">
    <!--@mbggenerated-->
    update FUN_PROLOGS
    <set>
      <if test="macaddr != null">
        MACADDR = #{macaddr,jdbcType=VARCHAR},
      </if>
      <if test="logip != null">
        LOGIP = #{logip,jdbcType=VARCHAR},
      </if>
      <if test="pcdiskno != null">
        PCDISKNO = #{pcdiskno,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="softver != null">
        SOFTVER = #{softver,jdbcType=VARCHAR},
      </if>
      <if test="logtype != null">
        LOGTYPE = #{logtype,jdbcType=VARCHAR},
      </if>
      <if test="logtime != null">
        LOGTIME = #{logtime,jdbcType=VARCHAR},
      </if>
      <if test="outtype != null">
        OUTTYPE = #{outtype,jdbcType=VARCHAR},
      </if>
      <if test="outtime != null">
        OUTTIME = #{outtime,jdbcType=VARCHAR},
      </if>
      <if test="logsid != null">
        LOGSID = #{logsid,jdbcType=VARCHAR},
      </if>
      <if test="verno != null">
        VERNO = #{verno,jdbcType=VARCHAR},
      </if>
      <if test="routemac != null">
        ROUTEMAC = #{routemac,jdbcType=VARCHAR},
      </if>
      <if test="pcname != null">
        PCNAME = #{pcname,jdbcType=VARCHAR},
      </if>
      <if test="pcid != null">
        PCID = #{pcid,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        DEVICE_TYPE = #{deviceType,jdbcType=TINYINT},
      </if>
      <if test="vernoVersion != null">
        VERNO_VERSION = #{vernoVersion,jdbcType=TINYINT},
      </if>
      <if test="loginAddress != null">
        LOGIN_ADDRESS = #{loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="loginAbnormal != null">
        LOGIN_ABNORMAL = #{loginAbnormal,jdbcType=TINYINT},
      </if>
      <if test="newDevice != null">
        NEW_DEVICE = #{newDevice,jdbcType=TINYINT},
      </if>
      <if test="mobileBrand != null">
        MOBILE_BRAND = #{mobileBrand,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        LAT = #{lat,jdbcType=NUMERIC},
      </if>
      <if test="lng != null">
        LNG = #{lng,jdbcType=NUMERIC},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunPrologs">
    <!--@mbggenerated-->
    update FUN_PROLOGS
    set MACADDR = #{macaddr,jdbcType=VARCHAR},
      LOGIP = #{logip,jdbcType=VARCHAR},
      PCDISKNO = #{pcdiskno,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      SOFTVER = #{softver,jdbcType=VARCHAR},
      LOGTYPE = #{logtype,jdbcType=VARCHAR},
      LOGTIME = #{logtime,jdbcType=VARCHAR},
      OUTTYPE = #{outtype,jdbcType=VARCHAR},
      OUTTIME = #{outtime,jdbcType=VARCHAR},
      LOGSID = #{logsid,jdbcType=VARCHAR},
      VERNO = #{verno,jdbcType=VARCHAR},
      ROUTEMAC = #{routemac,jdbcType=VARCHAR},
      PCNAME = #{pcname,jdbcType=VARCHAR},
      PCID = #{pcid,jdbcType=VARCHAR},
      DEVICE_TYPE = #{deviceType,jdbcType=TINYINT},
      VERNO_VERSION = #{vernoVersion,jdbcType=TINYINT},
      LOGIN_ADDRESS = #{loginAddress,jdbcType=VARCHAR},
      LOGIN_ABNORMAL = #{loginAbnormal,jdbcType=TINYINT},
      NEW_DEVICE = #{newDevice,jdbcType=TINYINT},
      MOBILE_BRAND = #{mobileBrand,jdbcType=VARCHAR},
      LAT = #{lat,jdbcType=NUMERIC},
      LNG = #{lng,jdbcType=NUMERIC},
      GR_ID = #{grId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  
	<select id="getSysLoginLogs" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from FUN_PROLOGS
		<where>
			AND COMP_ID = #{pMap.compId}
			<choose>
				<when test="0 == pMap.deviceType">AND DEVICE_TYPE = 0</when>
				<otherwise>
					AND DEVICE_TYPE IN (1,2)
					<if test="1 == pMap.loginStatus">AND NEW_DEVICE = 1</if>
					<if test="2 == pMap.loginStatus">AND LOGIN_ABNORMAL = 1</if>
				</otherwise>
			</choose>
			<if test="null != pMap.deptId">AND DEPT_ID = #{pMap.deptId}</if>
			<if test="null != pMap.date1">AND LOGTIME &gt;= #{pMap.date1}</if>
			<if test="null != pMap.date2">AND LOGTIME &lt;= #{pMap.date2}</if>
			<if test="null != pMap.userId">AND USER_ID = #{pMap.userId}</if>
			<if test="null != pMap.grId">AND GR_ID = #{pMap.grId}</if>
            <if test="null != pMap.organizationId">
              and ORGANIZATION_PATH LIKE '%:${pMap.organizationId}:%'
            </if>
		</where>
		ORDER BY LOGTIME DESC
	</select>
	
	<select id="countModelData" resultType="int">
		SELECT
		COUNT (*) AS ATTR_NAME
		FROM
		FUN_PROLOGS WITH (NOLOCK)
		WHERE
		LOGTIME &gt; #{nowTime}
		AND COMP_ID = #{compId}
		AND USER_ID = #{userId}
	</select>

	<select id="getListData" resultMap="BaseResultMap">
		SELECT TOP 1 VERNO
		FROM FUN_PROLOGS
		WHERE DEVICE_TYPE = 0
		AND VERNO_VERSION = #{isPer}
		AND USER_ID = #{userId}
		ORDER BY ID desc
	</select>
	
	<update id="logout">
		UPDATE FUN_PROLOGS
		SET OUTTIME = GETDATE(),OUTTYPE = #{outType}
		WHERE ID = #{prologsId}
	</update>
	
	<resultMap id="ZtAppLoginListVoMap" type="com.myfun.erpWeb.managecenter.sysmanager.vo.ZtAppLoginListVo">
		<id column="ID" jdbcType="NUMERIC" property="id" />
	    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
	    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
	    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
	    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
	    <result column="LOGTIME" jdbcType="VARCHAR" property="logtime" />
	    <result column="PCID" jdbcType="VARCHAR" property="pcid" />
	    <result column="LOGIN_ADDRESS" jdbcType="VARCHAR" property="loginAddress" />
	    <result column="USER_POSITION" jdbcType="VARCHAR" property="userPosition" />
	    <result column="MOBILE_BRAND" jdbcType="VARCHAR" property="mobileBrand" />
	    <result column="USER_PHOTO" jdbcType="VARCHAR" property="userPhoto" />
	</resultMap>
	
	<select id="getZtAppLoginLogList" parameterType="com.myfun.erpWeb.managecenter.sysmanager.param.ZtGetAppLoginLogsParam" resultMap="ZtAppLoginListVoMap">
		SELECT A.ID,A.COMP_ID,A.DEPT_ID,A.USER_ID,A.USER_NAME,A.LOGTIME,A.PCID,A.LOGIN_ADDRESS,B.USER_POSITION,A.MOBILE_BRAND,B.USER_PHOTO FROM FUN_PROLOGS A 
		LEFT JOIN FUN_USERS B ON A.USER_ID = B.USER_ID 
		<where>
			AND A.COMP_ID = #{pMap.compId}
			<choose>
				<when test="0 == pMap.deviceType">
					AND A.DEVICE_TYPE = 0
				</when>
				<otherwise>
					AND A.DEVICE_TYPE IN (1,2)
				</otherwise>
			</choose>
			<if test="null != pMap.deptId">
				AND A.DEPT_ID = #{pMap.deptId}
			</if>
			<if test="null != pMap.areaId">
				AND B.AREA_ID = #{pMap.areaId}
			</if>
			<if test="null != pMap.regId">
				AND B.REG_ID = #{pMap.regId}
			</if>
			<if test="null != pMap.grId">
				AND A.GR_ID = #{pMap.grId}
			</if>
			<if test="null != pMap.userId">
				AND A.USER_ID = #{pMap.userId}
			</if>
			<if test="null != pMap.startTime">
				AND A.LOGTIME &gt;= #{pMap.startTime}
			</if>
			<if test="null != pMap.endTime">
				AND A.LOGTIME &lt;= #{pMap.endTime}
			</if>
            <if test="null != pMap.organizationId and pMap.organizationId != 0">
              and A.ORGANIZATION_PATH LIKE '%:${pMap.organizationId}:%'
            </if>
		</where>
		ORDER BY A.LOGTIME DESC
	</select>
</mapper>