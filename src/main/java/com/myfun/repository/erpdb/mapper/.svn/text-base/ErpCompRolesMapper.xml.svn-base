<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpCompRolesMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpCompRoles">
    <!--@mbggenerated-->
    <id column="AUTO_ID" jdbcType="INTEGER" property="autoId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="SEQ_NO" jdbcType="TINYINT" property="seqNo" />
    <result column="MANAGE_FLAG" jdbcType="TINYINT" property="manageFlag" />
    <result column="IS_COMP_ROLE" jdbcType="TINYINT" property="isCompRole" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="MANAGE_LEVEL" jdbcType="TINYINT" property="manageLevel" />
    <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
    <result column="PART_STATIST_COUNT" jdbcType="TINYINT" property="partStatistCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    AUTO_ID, ROLE_ID, COMP_ID, ROLE_NAME, SEQ_NO, MANAGE_FLAG, IS_COMP_ROLE, IS_DEL, 
    MANAGE_LEVEL, UPDATE_TIME, PART_STATIST_COUNT
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpCompRolesExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from COMP_ROLES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from COMP_ROLES
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from COMP_ROLES
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpCompRolesExample">
    <!--@mbggenerated-->
    delete from COMP_ROLES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="autoId" parameterType="com.myfun.repository.erpdb.po.ErpCompRoles" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into COMP_ROLES (ROLE_ID, COMP_ID, ROLE_NAME, 
      SEQ_NO, MANAGE_FLAG, IS_COMP_ROLE, 
      IS_DEL, MANAGE_LEVEL, UPDATE_TIME, 
      PART_STATIST_COUNT)
    values (#{roleId,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, 
      #{seqNo,jdbcType=TINYINT}, #{manageFlag,jdbcType=TINYINT}, #{isCompRole,jdbcType=TINYINT}, 
      #{isDel,jdbcType=TINYINT}, #{manageLevel,jdbcType=TINYINT}, #{updateTime,jdbcType=VARCHAR}, 
      #{partStatistCount,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="autoId" parameterType="com.myfun.repository.erpdb.po.ErpCompRoles" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into COMP_ROLES
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="seqNo != null">
        SEQ_NO,
      </if>
      <if test="manageFlag != null">
        MANAGE_FLAG,
      </if>
      <if test="isCompRole != null">
        IS_COMP_ROLE,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="manageLevel != null">
        MANAGE_LEVEL,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="partStatistCount != null">
        PART_STATIST_COUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=TINYINT},
      </if>
      <if test="manageFlag != null">
        #{manageFlag,jdbcType=TINYINT},
      </if>
      <if test="isCompRole != null">
        #{isCompRole,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="manageLevel != null">
        #{manageLevel,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="partStatistCount != null">
        #{partStatistCount,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpCompRolesExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from COMP_ROLES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update COMP_ROLES
    <set>
      <if test="record.autoId != null">
        AUTO_ID = #{record.autoId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null">
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.seqNo != null">
        SEQ_NO = #{record.seqNo,jdbcType=TINYINT},
      </if>
      <if test="record.manageFlag != null">
        MANAGE_FLAG = #{record.manageFlag,jdbcType=TINYINT},
      </if>
      <if test="record.isCompRole != null">
        IS_COMP_ROLE = #{record.isCompRole,jdbcType=TINYINT},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.manageLevel != null">
        MANAGE_LEVEL = #{record.manageLevel,jdbcType=TINYINT},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.partStatistCount != null">
        PART_STATIST_COUNT = #{record.partStatistCount,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update COMP_ROLES
    set AUTO_ID = #{record.autoId,jdbcType=INTEGER},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      SEQ_NO = #{record.seqNo,jdbcType=TINYINT},
      MANAGE_FLAG = #{record.manageFlag,jdbcType=TINYINT},
      IS_COMP_ROLE = #{record.isCompRole,jdbcType=TINYINT},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      MANAGE_LEVEL = #{record.manageLevel,jdbcType=TINYINT},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      PART_STATIST_COUNT = #{record.partStatistCount,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpCompRoles">
    <!--@mbggenerated-->
    update COMP_ROLES
    <set>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        SEQ_NO = #{seqNo,jdbcType=TINYINT},
      </if>
      <if test="manageFlag != null">
        MANAGE_FLAG = #{manageFlag,jdbcType=TINYINT},
      </if>
      <if test="isCompRole != null">
        IS_COMP_ROLE = #{isCompRole,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="manageLevel != null">
        MANAGE_LEVEL = #{manageLevel,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="partStatistCount != null">
        PART_STATIST_COUNT = #{partStatistCount,jdbcType=TINYINT},
      </if>
    </set>
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpCompRoles">
    <!--@mbggenerated-->
    update COMP_ROLES
    set ROLE_ID = #{roleId,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      SEQ_NO = #{seqNo,jdbcType=TINYINT},
      MANAGE_FLAG = #{manageFlag,jdbcType=TINYINT},
      IS_COMP_ROLE = #{isCompRole,jdbcType=TINYINT},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      MANAGE_LEVEL = #{manageLevel,jdbcType=TINYINT},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      PART_STATIST_COUNT = #{partStatistCount,jdbcType=TINYINT}
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </update>

	<select id="getCompRoleByUserEdition" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM COMP_ROLES
		<where>
			<if test="null != userPosition">
				and ROLE_ID = #{userPosition}
			</if>
			<if test="null != compId">
				and COMP_ID = #{compId}
			</if>
		</where>
	</select>
	
	<select id="getCompRoleListByRoleId" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM COMP_ROLES
		<where>
			<if test="null != userPosition">
				and ROLE_ID = #{userPosition}
			</if>
			<if test="null != compId">
				and COMP_ID = #{compId} AND IS_DEL=0
			</if>
		</where>
	</select>
	
	<select id="getLowerRoles" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM COMP_ROLES
		WHERE
		COMP_ID = #{compId} AND IS_DEL = 0 AND ROLE_ID = #{nowRole}
		AND SEQ_NO &gt; (SELECT SEQ_NO FROM COMP_ROLES WHERE COMP_ID = #{compId} AND ROLE_ID = #{role})
		<if test="isMix">
			AND ROLE_ID IN ('GENERAL_MANAGER', 'BRANCH_MANAGER', 'COMMON_BIZ')
		</if>
	</select>
	
	<select id="getByRoleId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from COMP_ROLES
		where comp_id = #{compId} and ROLE_ID=#{roleId}  AND IS_DEL = 0
	</select>
	
	<select id="getNextRoleSeq" resultType="java.lang.Integer">
		select max(SEQ_NO)+1
		from COMP_ROLES
		where comp_id = #{compId} and IS_DEL = 0
	</select>
	
	<select id="getAllCompRole" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM COMP_ROLES
		WHERE COMP_ID = #{compId} AND IS_DEL = 0
		ORDER BY SEQ_NO ASC,ROLE_ID DESC
	</select>
	
	<select id="countByRoleName" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM COMP_ROLES
		WHERE COMP_ID = #{compId} AND ROLE_NAME = #{roleName} AND IS_DEL = 0
	</select>
	
	<update id="addSeqForRight">
		UPDATE COMP_ROLES SET SEQ_NO=SEQ_NO+1
		WHERE COMP_ID = #{compId} AND SEQ_NO &gt; #{seqNow} AND IS_DEL = 0
	</update>
	
	<update id="updateRoleSeq">
		<foreach close="" collection="roleIdArr" index="index" item="roleId" open="" separator=";">
			UPDATE COMP_ROLES SET SEQ_NO=#{index}+2 ,UPDATE_TIME = GETDATE()
			WHERE COMP_ID = #{compId} AND ROLE_ID=#{roleId}
		</foreach>
	</update>
	
	<update id="updateRoleNameByRoleId">
		UPDATE COMP_ROLES SET UPDATE_TIME = GETDATE()
		<if test="roleName != null">
			, ROLE_NAME = #{roleName}
		</if>
		<if test="partStatistCount != null">
			, PART_STATIST_COUNT = #{partStatistCount}
		</if>
		WHERE ROLE_ID = #{roleId} AND COMP_ID = #{compId} AND IS_DEL = 0
	</update>

	<select id="getLowerRolesList" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM COMP_ROLES
		WHERE IS_DEL = 0 AND COMP_ID = #{compId}
		<if test="userPosition != null and '' != userPosition">
			AND SEQ_NO &gt; (SELECT SEQ_NO FROM COMP_ROLES WHERE COMP_ID = #{compId} AND ROLE_ID = #{userPosition})
		</if>
		<if test="isMix">
			AND ROLE_ID IN ('GENERAL_MANAGER', 'BRANCH_MANAGER', 'COMMON_BIZ')
		</if>
		<if test="propertyFlag">
			AND ROLE_ID IN ('GENERAL_MANAGER','COMMON_BIZ', 'PROPERTY_SERVER', 'BRANCH_MANAGER')
		</if>
		ORDER BY SEQ_NO
	</select>



    <resultMap id="extBaseResultVoMap" type="com.myfun.erpWeb.common.vo.ErpCompRolesVo">
        <id column="AUTO_ID" jdbcType="INTEGER" property="autoId" />
        <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
        <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
        <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
        <result column="SEQ_NO" jdbcType="TINYINT" property="seqNo" />
        <result column="MANAGE_FLAG" jdbcType="TINYINT" property="manageFlag" />
        <result column="IS_COMP_ROLE" jdbcType="TINYINT" property="isCompRole" />
        <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
        <result column="MANAGE_LEVEL" jdbcType="TINYINT" property="manageLevel" />
    </resultMap>
	<select id="getLowerRolesVoList" resultMap="extBaseResultVoMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM COMP_ROLES
		WHERE IS_DEL = 0 AND COMP_ID = #{compId}
		<if test="userPosition != null and '' != userPosition">
			AND SEQ_NO &gt; (SELECT SEQ_NO FROM COMP_ROLES WHERE COMP_ID = #{compId} AND ROLE_ID = #{userPosition})
		</if>
		<if test="isMix">
			AND ROLE_ID IN ('GENERAL_MANAGER', 'BRANCH_MANAGER', 'COMMON_BIZ')
		</if>
		ORDER BY SEQ_NO
	</select>

	<select id="getRoleByCompId" resultType="com.myfun.erpWeb.managecenter.sysmanager.vo.GetRoleByCompIdVo">
		SELECT AUTO_ID autoId,ROLE_ID roleId,ROLE_NAME roleName,SEQ_NO seqNo FROM COMP_ROLES  WHERE IS_DEL = 0 AND COMP_ID = #{compId}  ORDER BY SEQ_NO ASC
	</select>
	<select id="getLowRole" resultType="java.lang.String">
		SELECT TOP 1 ROLE_ID roleId FROM dbo.COMP_ROLES WHERE 
		IS_DEL = 0 AND COMP_ID = #{compId} 
		AND ROLE_ID &lt;&gt; 'SYSTEM_MANAGE' 
		ORDER BY SEQ_NO DESC
	</select>
	
	<select id="getMaxSeq" resultMap="BaseResultMap">
		SELECT max(SEQ_NO) SEQ_NO FROM dbo.COMP_ROLES WHERE IS_DEL = 0 AND COMP_ID = #{compId}  ORDER BY SEQ_NO DESC
	</select>

    <select id="getByCompId" resultMap="BaseResultMap">
        select top 1
        <include refid="Base_Column_List" />
        from COMP_ROLES
        where COMP_ID = #{erpCompId}
    </select>
</mapper>