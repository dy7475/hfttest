<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunPropertyKeyLogMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunPropertyKeyLog">
    <!--@mbggenerated-->
    <id column="FUN_PROPERTY_KEY_LOG_ID" jdbcType="INTEGER" property="funPropertyKeyLogId" />
    <result column="BORROW_PHONE" jdbcType="VARCHAR" property="borrowPhone" />
    <result column="BORROW_NAME" jdbcType="VARCHAR" property="borrowName" />
    <result column="CURRENT_DEPOSIT" jdbcType="DECIMAL" property="currentDeposit" />
    <result column="PAY_ID" jdbcType="VARCHAR" property="payId" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="MAX_BORROW_HOUR" jdbcType="INTEGER" property="maxBorrowHour" />
    <result column="KEY_STATUS" jdbcType="INTEGER" property="keyStatus" />
    <result column="DEPOSIT_STATUS" jdbcType="INTEGER" property="depositStatus" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="FUN_KEY_ID" jdbcType="INTEGER" property="funKeyId" />
    <result column="CASE_TYPE" jdbcType="INTEGER" property="caseType" />
    <result column="MAX_BORROW_TIME" jdbcType="TIMESTAMP" property="maxBorrowTime" />
    <result column="BUILD_FLOOR" jdbcType="VARCHAR" property="buildFloor" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="BUILD_ROOF" jdbcType="VARCHAR" property="buildRoof" />
    <result column="BUILD_UNIT" jdbcType="VARCHAR" property="buildUnit" />
    <result column="BUILD_NUM" jdbcType="VARCHAR" property="buildNum" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="ID_CARD_NUM" jdbcType="VARCHAR" property="idCardNum" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    FUN_PROPERTY_KEY_LOG_ID, BORROW_PHONE, BORROW_NAME, CURRENT_DEPOSIT, PAY_ID, CREATION_TIME, 
    MAX_BORROW_HOUR, KEY_STATUS, DEPOSIT_STATUS, USER_ID, FUN_KEY_ID, CASE_TYPE, MAX_BORROW_TIME, 
    BUILD_FLOOR, UPDATE_TIME, BUILD_ROOF, BUILD_UNIT, BUILD_NUM, USER_NAME, ID_CARD_NUM, 
    COMP_ID, DEPT_ID, CASE_ID, BUILD_NAME, BUILD_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPropertyKeyLogExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_PROPERTY_KEY_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_PROPERTY_KEY_LOG
    where FUN_PROPERTY_KEY_LOG_ID = #{funPropertyKeyLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_PROPERTY_KEY_LOG
    where FUN_PROPERTY_KEY_LOG_ID = #{funPropertyKeyLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPropertyKeyLogExample">
    <!--@mbggenerated-->
    delete from FUN_PROPERTY_KEY_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="funPropertyKeyLogId" parameterType="com.myfun.repository.erpdb.po.ErpFunPropertyKeyLog" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_PROPERTY_KEY_LOG (BORROW_PHONE, BORROW_NAME, CURRENT_DEPOSIT, 
      PAY_ID, CREATION_TIME, MAX_BORROW_HOUR, 
      KEY_STATUS, DEPOSIT_STATUS, USER_ID, 
      FUN_KEY_ID, CASE_TYPE, MAX_BORROW_TIME, 
      BUILD_FLOOR, UPDATE_TIME, BUILD_ROOF, 
      BUILD_UNIT, BUILD_NUM, USER_NAME, 
      ID_CARD_NUM, COMP_ID, DEPT_ID, 
      CASE_ID, BUILD_NAME, BUILD_ID
      )
    values (#{borrowPhone,jdbcType=VARCHAR}, #{borrowName,jdbcType=VARCHAR}, #{currentDeposit,jdbcType=DECIMAL}, 
      #{payId,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}, #{maxBorrowHour,jdbcType=INTEGER}, 
      #{keyStatus,jdbcType=INTEGER}, #{depositStatus,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{funKeyId,jdbcType=INTEGER}, #{caseType,jdbcType=INTEGER}, #{maxBorrowTime,jdbcType=TIMESTAMP}, 
      #{buildFloor,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{buildRoof,jdbcType=VARCHAR}, 
      #{buildUnit,jdbcType=VARCHAR}, #{buildNum,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{idCardNum,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{caseId,jdbcType=INTEGER}, #{buildName,jdbcType=VARCHAR}, #{buildId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="funPropertyKeyLogId" parameterType="com.myfun.repository.erpdb.po.ErpFunPropertyKeyLog" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_PROPERTY_KEY_LOG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="borrowPhone != null">
        BORROW_PHONE,
      </if>
      <if test="borrowName != null">
        BORROW_NAME,
      </if>
      <if test="currentDeposit != null">
        CURRENT_DEPOSIT,
      </if>
      <if test="payId != null">
        PAY_ID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="maxBorrowHour != null">
        MAX_BORROW_HOUR,
      </if>
      <if test="keyStatus != null">
        KEY_STATUS,
      </if>
      <if test="depositStatus != null">
        DEPOSIT_STATUS,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="funKeyId != null">
        FUN_KEY_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="maxBorrowTime != null">
        MAX_BORROW_TIME,
      </if>
      <if test="buildFloor != null">
        BUILD_FLOOR,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="buildRoof != null">
        BUILD_ROOF,
      </if>
      <if test="buildUnit != null">
        BUILD_UNIT,
      </if>
      <if test="buildNum != null">
        BUILD_NUM,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="idCardNum != null">
        ID_CARD_NUM,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="buildName != null">
        BUILD_NAME,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="borrowPhone != null">
        #{borrowPhone,jdbcType=VARCHAR},
      </if>
      <if test="borrowName != null">
        #{borrowName,jdbcType=VARCHAR},
      </if>
      <if test="currentDeposit != null">
        #{currentDeposit,jdbcType=DECIMAL},
      </if>
      <if test="payId != null">
        #{payId,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="maxBorrowHour != null">
        #{maxBorrowHour,jdbcType=INTEGER},
      </if>
      <if test="keyStatus != null">
        #{keyStatus,jdbcType=INTEGER},
      </if>
      <if test="depositStatus != null">
        #{depositStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="funKeyId != null">
        #{funKeyId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=INTEGER},
      </if>
      <if test="maxBorrowTime != null">
        #{maxBorrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildFloor != null">
        #{buildFloor,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildRoof != null">
        #{buildRoof,jdbcType=VARCHAR},
      </if>
      <if test="buildUnit != null">
        #{buildUnit,jdbcType=VARCHAR},
      </if>
      <if test="buildNum != null">
        #{buildNum,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="idCardNum != null">
        #{idCardNum,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPropertyKeyLogExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_PROPERTY_KEY_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROPERTY_KEY_LOG
    <set>
      <if test="record.funPropertyKeyLogId != null">
        FUN_PROPERTY_KEY_LOG_ID = #{record.funPropertyKeyLogId,jdbcType=INTEGER},
      </if>
      <if test="record.borrowPhone != null">
        BORROW_PHONE = #{record.borrowPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowName != null">
        BORROW_NAME = #{record.borrowName,jdbcType=VARCHAR},
      </if>
      <if test="record.currentDeposit != null">
        CURRENT_DEPOSIT = #{record.currentDeposit,jdbcType=DECIMAL},
      </if>
      <if test="record.payId != null">
        PAY_ID = #{record.payId,jdbcType=VARCHAR},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.maxBorrowHour != null">
        MAX_BORROW_HOUR = #{record.maxBorrowHour,jdbcType=INTEGER},
      </if>
      <if test="record.keyStatus != null">
        KEY_STATUS = #{record.keyStatus,jdbcType=INTEGER},
      </if>
      <if test="record.depositStatus != null">
        DEPOSIT_STATUS = #{record.depositStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.funKeyId != null">
        FUN_KEY_ID = #{record.funKeyId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      </if>
      <if test="record.maxBorrowTime != null">
        MAX_BORROW_TIME = #{record.maxBorrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buildFloor != null">
        BUILD_FLOOR = #{record.buildFloor,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buildRoof != null">
        BUILD_ROOF = #{record.buildRoof,jdbcType=VARCHAR},
      </if>
      <if test="record.buildUnit != null">
        BUILD_UNIT = #{record.buildUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.buildNum != null">
        BUILD_NUM = #{record.buildNum,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardNum != null">
        ID_CARD_NUM = #{record.idCardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.buildName != null">
        BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROPERTY_KEY_LOG
    set FUN_PROPERTY_KEY_LOG_ID = #{record.funPropertyKeyLogId,jdbcType=INTEGER},
      BORROW_PHONE = #{record.borrowPhone,jdbcType=VARCHAR},
      BORROW_NAME = #{record.borrowName,jdbcType=VARCHAR},
      CURRENT_DEPOSIT = #{record.currentDeposit,jdbcType=DECIMAL},
      PAY_ID = #{record.payId,jdbcType=VARCHAR},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      MAX_BORROW_HOUR = #{record.maxBorrowHour,jdbcType=INTEGER},
      KEY_STATUS = #{record.keyStatus,jdbcType=INTEGER},
      DEPOSIT_STATUS = #{record.depositStatus,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      FUN_KEY_ID = #{record.funKeyId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      MAX_BORROW_TIME = #{record.maxBorrowTime,jdbcType=TIMESTAMP},
      BUILD_FLOOR = #{record.buildFloor,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      BUILD_ROOF = #{record.buildRoof,jdbcType=VARCHAR},
      BUILD_UNIT = #{record.buildUnit,jdbcType=VARCHAR},
      BUILD_NUM = #{record.buildNum,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      ID_CARD_NUM = #{record.idCardNum,jdbcType=VARCHAR},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunPropertyKeyLog">
    <!--@mbggenerated-->
    update FUN_PROPERTY_KEY_LOG
    <set>
      <if test="borrowPhone != null">
        BORROW_PHONE = #{borrowPhone,jdbcType=VARCHAR},
      </if>
      <if test="borrowName != null">
        BORROW_NAME = #{borrowName,jdbcType=VARCHAR},
      </if>
      <if test="currentDeposit != null">
        CURRENT_DEPOSIT = #{currentDeposit,jdbcType=DECIMAL},
      </if>
      <if test="payId != null">
        PAY_ID = #{payId,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="maxBorrowHour != null">
        MAX_BORROW_HOUR = #{maxBorrowHour,jdbcType=INTEGER},
      </if>
      <if test="keyStatus != null">
        KEY_STATUS = #{keyStatus,jdbcType=INTEGER},
      </if>
      <if test="depositStatus != null">
        DEPOSIT_STATUS = #{depositStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="funKeyId != null">
        FUN_KEY_ID = #{funKeyId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=INTEGER},
      </if>
      <if test="maxBorrowTime != null">
        MAX_BORROW_TIME = #{maxBorrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildFloor != null">
        BUILD_FLOOR = #{buildFloor,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildRoof != null">
        BUILD_ROOF = #{buildRoof,jdbcType=VARCHAR},
      </if>
      <if test="buildUnit != null">
        BUILD_UNIT = #{buildUnit,jdbcType=VARCHAR},
      </if>
      <if test="buildNum != null">
        BUILD_NUM = #{buildNum,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="idCardNum != null">
        ID_CARD_NUM = #{idCardNum,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
    </set>
    where FUN_PROPERTY_KEY_LOG_ID = #{funPropertyKeyLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunPropertyKeyLog">
    <!--@mbggenerated-->
    update FUN_PROPERTY_KEY_LOG
    set BORROW_PHONE = #{borrowPhone,jdbcType=VARCHAR},
      BORROW_NAME = #{borrowName,jdbcType=VARCHAR},
      CURRENT_DEPOSIT = #{currentDeposit,jdbcType=DECIMAL},
      PAY_ID = #{payId,jdbcType=VARCHAR},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      MAX_BORROW_HOUR = #{maxBorrowHour,jdbcType=INTEGER},
      KEY_STATUS = #{keyStatus,jdbcType=INTEGER},
      DEPOSIT_STATUS = #{depositStatus,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      FUN_KEY_ID = #{funKeyId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=INTEGER},
      MAX_BORROW_TIME = #{maxBorrowTime,jdbcType=TIMESTAMP},
      BUILD_FLOOR = #{buildFloor,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      BUILD_ROOF = #{buildRoof,jdbcType=VARCHAR},
      BUILD_UNIT = #{buildUnit,jdbcType=VARCHAR},
      BUILD_NUM = #{buildNum,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      ID_CARD_NUM = #{idCardNum,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      BUILD_ID = #{buildId,jdbcType=INTEGER}
    where FUN_PROPERTY_KEY_LOG_ID = #{funPropertyKeyLogId,jdbcType=INTEGER}
  </update>
  <select id="selectKeyStatus" resultMap="BaseResultMap">
  SELECT KEY_STATUS, BORROW_NAME,USER_NAME, MAX_BORROW_TIME,CREATION_TIME FROM FUN_PROPERTY_KEY_LOG WHERE FUN_PROPERTY_KEY_LOG_ID = #{logId}
  </select>

  <update id="updatePropertyKeyLogByIdIn">
    UPDATE FUN_PROPERTY_KEY_LOG
    SET KEY_STATUS = #{keyStatus}  , UPDATE_TIME = GETDATE() WHERE FUN_PROPERTY_KEY_LOG_ID IN
    <foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </update>
</mapper>