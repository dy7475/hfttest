<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpAuditTemplateMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpAuditTemplate">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CASE_TYPE" jdbcType="INTEGER" property="caseType" />
    <result column="AUDIT_TYPE" jdbcType="INTEGER" property="auditType" />
    <result column="OVERDUE_AUDIT_TIME" jdbcType="INTEGER" property="overdueAuditTime" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="NEED_AUDIT" jdbcType="TINYINT" property="needAudit" />
    <result column="AUDIT_RESOURCE" jdbcType="TINYINT" property="auditResource" />
    <result column="CLASS_ID" jdbcType="INTEGER" property="classId" />
    <result column="ROLE_TYPE" jdbcType="TINYINT" property="roleType" />
    <result column="TEMPLATE_NAME" jdbcType="VARCHAR" property="templateName" />
    <result column="AUDIT_PROCESS_ID" jdbcType="INTEGER" property="auditProcessId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, CASE_TYPE, AUDIT_TYPE, OVERDUE_AUDIT_TIME, CREATION_TIME, UPDATE_TIME, 
    NEED_AUDIT, AUDIT_RESOURCE, CLASS_ID, ROLE_TYPE, TEMPLATE_NAME, AUDIT_PROCESS_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpAuditTemplateExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from AUDIT_TEMPLATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from AUDIT_TEMPLATE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from AUDIT_TEMPLATE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpAuditTemplateExample">
    <!--@mbggenerated-->
    delete from AUDIT_TEMPLATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpAuditTemplate" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into AUDIT_TEMPLATE (COMP_ID, CASE_TYPE, AUDIT_TYPE, 
      OVERDUE_AUDIT_TIME, CREATION_TIME, UPDATE_TIME, 
      NEED_AUDIT, AUDIT_RESOURCE, CLASS_ID, 
      ROLE_TYPE, TEMPLATE_NAME, AUDIT_PROCESS_ID
      )
    values (#{compId,jdbcType=INTEGER}, #{caseType,jdbcType=INTEGER}, #{auditType,jdbcType=INTEGER}, 
      #{overdueAuditTime,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{needAudit,jdbcType=TINYINT}, #{auditResource,jdbcType=TINYINT}, #{classId,jdbcType=INTEGER}, 
      #{roleType,jdbcType=TINYINT}, #{templateName,jdbcType=VARCHAR}, #{auditProcessId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpAuditTemplate" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into AUDIT_TEMPLATE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="auditType != null">
        AUDIT_TYPE,
      </if>
      <if test="overdueAuditTime != null">
        OVERDUE_AUDIT_TIME,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="needAudit != null">
        NEED_AUDIT,
      </if>
      <if test="auditResource != null">
        AUDIT_RESOURCE,
      </if>
      <if test="classId != null">
        CLASS_ID,
      </if>
      <if test="roleType != null">
        ROLE_TYPE,
      </if>
      <if test="templateName != null">
        TEMPLATE_NAME,
      </if>
      <if test="auditProcessId != null">
        AUDIT_PROCESS_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=INTEGER},
      </if>
      <if test="auditType != null">
        #{auditType,jdbcType=INTEGER},
      </if>
      <if test="overdueAuditTime != null">
        #{overdueAuditTime,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="needAudit != null">
        #{needAudit,jdbcType=TINYINT},
      </if>
      <if test="auditResource != null">
        #{auditResource,jdbcType=TINYINT},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=TINYINT},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="auditProcessId != null">
        #{auditProcessId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpAuditTemplateExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from AUDIT_TEMPLATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update AUDIT_TEMPLATE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      </if>
      <if test="record.auditType != null">
        AUDIT_TYPE = #{record.auditType,jdbcType=INTEGER},
      </if>
      <if test="record.overdueAuditTime != null">
        OVERDUE_AUDIT_TIME = #{record.overdueAuditTime,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.needAudit != null">
        NEED_AUDIT = #{record.needAudit,jdbcType=TINYINT},
      </if>
      <if test="record.auditResource != null">
        AUDIT_RESOURCE = #{record.auditResource,jdbcType=TINYINT},
      </if>
      <if test="record.classId != null">
        CLASS_ID = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.roleType != null">
        ROLE_TYPE = #{record.roleType,jdbcType=TINYINT},
      </if>
      <if test="record.templateName != null">
        TEMPLATE_NAME = #{record.templateName,jdbcType=VARCHAR},
      </if>
      <if test="record.auditProcessId != null">
        AUDIT_PROCESS_ID = #{record.auditProcessId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update AUDIT_TEMPLATE
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      AUDIT_TYPE = #{record.auditType,jdbcType=INTEGER},
      OVERDUE_AUDIT_TIME = #{record.overdueAuditTime,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      NEED_AUDIT = #{record.needAudit,jdbcType=TINYINT},
      AUDIT_RESOURCE = #{record.auditResource,jdbcType=TINYINT},
      CLASS_ID = #{record.classId,jdbcType=INTEGER},
      ROLE_TYPE = #{record.roleType,jdbcType=TINYINT},
      TEMPLATE_NAME = #{record.templateName,jdbcType=VARCHAR},
      AUDIT_PROCESS_ID = #{record.auditProcessId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpAuditTemplate">
    <!--@mbggenerated-->
    update AUDIT_TEMPLATE
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=INTEGER},
      </if>
      <if test="auditType != null">
        AUDIT_TYPE = #{auditType,jdbcType=INTEGER},
      </if>
      <if test="overdueAuditTime != null">
        OVERDUE_AUDIT_TIME = #{overdueAuditTime,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="needAudit != null">
        NEED_AUDIT = #{needAudit,jdbcType=TINYINT},
      </if>
      <if test="auditResource != null">
        AUDIT_RESOURCE = #{auditResource,jdbcType=TINYINT},
      </if>
      <if test="classId != null">
        CLASS_ID = #{classId,jdbcType=INTEGER},
      </if>
      <if test="roleType != null">
        ROLE_TYPE = #{roleType,jdbcType=TINYINT},
      </if>
      <if test="templateName != null">
        TEMPLATE_NAME = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="auditProcessId != null">
        AUDIT_PROCESS_ID = #{auditProcessId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpAuditTemplate">
    <!--@mbggenerated-->
    update AUDIT_TEMPLATE
    set COMP_ID = #{compId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=INTEGER},
      AUDIT_TYPE = #{auditType,jdbcType=INTEGER},
      OVERDUE_AUDIT_TIME = #{overdueAuditTime,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      NEED_AUDIT = #{needAudit,jdbcType=TINYINT},
      AUDIT_RESOURCE = #{auditResource,jdbcType=TINYINT},
      CLASS_ID = #{classId,jdbcType=INTEGER},
      ROLE_TYPE = #{roleType,jdbcType=TINYINT},
      TEMPLATE_NAME = #{templateName,jdbcType=VARCHAR},
      AUDIT_PROCESS_ID = #{auditProcessId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap extends="BaseResultMap" id="BaseResultDto" type="com.myfun.repository.erpdb.dto.ErpAuditTemplateDto">
  </resultMap>
	
	<select id="selectByAuditType" resultMap="BaseResultMap">
		SELECT ID, OVERDUE_AUDIT_TIME, NEED_AUDIT, CLASS_ID, AUDIT_PROCESS_ID
		FROM AUDIT_TEMPLATE
		WHERE COMP_ID = #{compId}
		AND AUDIT_TYPE = #{auditType}
		AND AUDIT_RESOURCE = #{auditResource}
		<if test="caseType != null and caseType != ''">
			AND CASE_TYPE = #{caseType}
		</if>
	</select>
	
	<select id="getBusinessAuditTemplate" resultMap="BaseResultDto">
		SELECT
		ID, CASE_TYPE, AUDIT_TYPE, OVERDUE_AUDIT_TIME, NEED_AUDIT,CLASS_ID,AUDIT_PROCESS_ID
		FROM AUDIT_TEMPLATE
		WHERE COMP_ID = #{compId}
		AND AUDIT_RESOURCE = #{auditResource}
		<if test="caseType != null and caseType != ''">
			AND CASE_TYPE = #{caseType}
		</if>
	</select>
	
	<delete id="deleteByCompId">
		delete from AUDIT_TEMPLATE where comp_id=#{compId}
		<if test="caseType != null">AND CASE_TYPE=#{caseType}</if>
		<if test="auditType != null">AND AUDIT_TYPE=#{auditType}</if>
	</delete>
	
	<insert id="copyAuditTemplate">
		<!-- 删除审核人模板，以下顺序不能变 -->
		DELETE FROM AUDIT_USER_TEMPLATE
		WHERE AUDIT_ID IN (
			SELECT ID FROM AUDIT_TEMPLATE WHERE COMP_ID=#{compId} AND CASE_TYPE=#{toCaseType} AND AUDIT_RESOURCE=1
		);
		<!-- 删除审核模板 -->
		DELETE FROM AUDIT_TEMPLATE WHERE COMP_ID=#{compId} AND CASE_TYPE=#{toCaseType} AND AUDIT_RESOURCE=1;
		<!-- 拷贝审核模板 -->
		INSERT INTO AUDIT_TEMPLATE(COMP_ID, CASE_TYPE, AUDIT_TYPE, OVERDUE_AUDIT_TIME, CREATION_TIME, UPDATE_TIME, NEED_AUDIT, AUDIT_RESOURCE)
		SELECT COMP_ID, #{toCaseType}, AUDIT_TYPE, OVERDUE_AUDIT_TIME, CREATION_TIME, UPDATE_TIME, NEED_AUDIT, AUDIT_RESOURCE
		FROM AUDIT_TEMPLATE WHERE COMP_ID=#{compId} AND CASE_TYPE=#{fromCaseType} AND AUDIT_RESOURCE=1
		AND AUDIT_TYPE IN
		<foreach close=")" collection="auditTypeSet" item="item" open="(" separator=",">
			#{item}
		</foreach>
		<!-- 拷贝审核人模板 -->
		INSERT INTO AUDIT_USER_TEMPLATE(AUDIT_ID, AUDIT_USER_TYPE, AUDIT_USER_ID, AUDIT_ROLE_ID, AUDIT_SEQ, EXAMINE_TYPE, CREATION_TIME)
		SELECT C.ID, A.AUDIT_USER_TYPE, A.AUDIT_USER_ID, A.AUDIT_ROLE_ID, A.AUDIT_SEQ, A.EXAMINE_TYPE, A.CREATION_TIME
		FROM AUDIT_USER_TEMPLATE A
		JOIN AUDIT_TEMPLATE B ON B.CASE_TYPE=#{fromCaseType} AND B.AUDIT_RESOURCE=1 AND B.ID=A.AUDIT_ID
		JOIN AUDIT_TEMPLATE C ON C.CASE_TYPE=#{toCaseType} AND C.AUDIT_RESOURCE=1 AND C.AUDIT_TYPE=B.AUDIT_TYPE AND C.COMP_ID=B.COMP_ID
		WHERE B.COMP_ID=#{compId}
	</insert>
	
	<insert id="copyAuditTemplateForOa">
		<!-- 删除审核人模板，以下顺序不能变 -->
		DELETE FROM AUDIT_USER_TEMPLATE
		WHERE AUDIT_ID IN (
			SELECT ID FROM AUDIT_TEMPLATE WHERE COMP_ID=#{compId} AND AUDIT_RESOURCE=#{auditResource} AND ID != #{templateId}
		);
		<!-- 删除审核模板 -->
		DELETE FROM AUDIT_TEMPLATE WHERE COMP_ID=#{compId} AND AUDIT_RESOURCE=#{auditResource} AND ID != #{templateId};
		<!-- 循环拷贝 -->
		<foreach close="" collection="auditTypeSet" item="item" open="" separator="">
			<!-- 拷贝审核模板 -->
			INSERT INTO AUDIT_TEMPLATE(COMP_ID, CASE_TYPE, AUDIT_TYPE, OVERDUE_AUDIT_TIME, CREATION_TIME, UPDATE_TIME, NEED_AUDIT, AUDIT_RESOURCE)
			SELECT COMP_ID, CASE_TYPE, #{item}, OVERDUE_AUDIT_TIME, CREATION_TIME, UPDATE_TIME, NEED_AUDIT, AUDIT_RESOURCE
			FROM AUDIT_TEMPLATE WHERE COMP_ID=#{compId} AND ID = #{templateId};
			<!-- 拷贝审核人模板 -->
			INSERT INTO AUDIT_USER_TEMPLATE(AUDIT_ID, AUDIT_USER_TYPE, AUDIT_USER_ID, AUDIT_ROLE_ID, AUDIT_SEQ, EXAMINE_TYPE, CREATION_TIME,ORGANIZATION_DEFINITION_ID)
			SELECT C.ID, A.AUDIT_USER_TYPE, A.AUDIT_USER_ID, A.AUDIT_ROLE_ID, A.AUDIT_SEQ, A.EXAMINE_TYPE, A.CREATION_TIME,A.ORGANIZATION_DEFINITION_ID
			FROM AUDIT_USER_TEMPLATE A
			JOIN AUDIT_TEMPLATE B ON B.ID = A.AUDIT_ID
			JOIN AUDIT_TEMPLATE C ON C.AUDIT_RESOURCE=#{auditResource} AND C.AUDIT_TYPE=#{item} AND C.COMP_ID=B.COMP_ID
			WHERE B.COMP_ID=#{compId} AND B.ID = #{templateId};
		</foreach>
	</insert>
	
	<select id="getAuditTemplate" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM AUDIT_TEMPLATE WHERE COMP_ID = #{compId}
		AND CASE_TYPE = #{caseType} AND AUDIT_TYPE = #{trackType}
	</select>

  <select id="selectAuditProcess" resultType="byte">
    SELECT top 1 A.SHARE_FLAG
    FROM AUDIT_PROCESS A join AUDIT_CLASS B ON　A.ID = B.AUDIT_PROCESS_ID  join AUDIT_TEMPLATE C ON B.AUDIT_PROCESS_ID = C.AUDIT_PROCESS_ID
    WHERE A.COMP_ID = #{compId}
    AND C.AUDIT_TYPE = #{auditType}
    AND C.AUDIT_RESOURCE = #{auditResource}
    AND C.NEED_AUDIT = 1
    <if test="caseType != null">
      AND C.CASE_TYPE = #{caseType}
    </if>
  </select>

    <select id="selectByAuditTypeByClassId" resultMap="BaseResultMap">
        SELECT top 1 C.ID,B.ID AS CLASS_ID, C.OVERDUE_AUDIT_TIME, C.NEED_AUDIT,C.ROLE_TYPE
        FROM AUDIT_PROCESS A join AUDIT_CLASS B ON　A.ID = B.AUDIT_PROCESS_ID  join AUDIT_TEMPLATE C ON B.AUDIT_PROCESS_ID = C.AUDIT_PROCESS_ID
        WHERE A.COMP_ID = #{compId}
        AND C.AUDIT_TYPE = #{auditType}
        AND C.AUDIT_RESOURCE = #{auditResource}
        AND C.NEED_AUDIT = 1
        <if test="caseType != null">
            AND C.CASE_TYPE = #{caseType}
        </if>
        <if test="classId != null">
            AND B.ID = #{classId}
        </if>
    </select>

</mapper>