<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunTrackMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunTrack">
    <!--@mbggenerated-->
    <id column="TRACK_ID" jdbcType="INTEGER" property="trackId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CASE_STATUS" jdbcType="TINYINT" property="caseStatus" />
    <result column="TRACK_TYPE" jdbcType="TINYINT" property="trackType" />
    <result column="TRACK_CLASSIC" jdbcType="VARCHAR" property="trackClassic" />
    <result column="TARGET_ID" jdbcType="INTEGER" property="targetId" />
    <result column="TARGET_NO" jdbcType="VARCHAR" property="targetNo" />
    <result column="TARGET_TYPE" jdbcType="TINYINT" property="targetType" />
    <result column="TARGET_BOUND" jdbcType="TINYINT" property="targetBound" />
    <result column="TARGET_FLAG" jdbcType="BIT" property="targetFlag" />
    <result column="EXAMIN_TIME" jdbcType="VARCHAR" property="examinTime" />
    <result column="TRACK_NO" jdbcType="VARCHAR" property="trackNo" />
    <result column="TRACK_CONTENT" jdbcType="VARCHAR" property="trackContent" />
    <result column="TRACK_WARM" jdbcType="BIT" property="trackWarm" />
    <result column="WARM_TIME" jdbcType="VARCHAR" property="warmTime" />
    <result column="WARM_CONTENT" jdbcType="VARCHAR" property="warmContent" />
    <result column="TRACK_KEY" jdbcType="BIT" property="trackKey" />
    <result column="CREATOR_UID" jdbcType="INTEGER" property="creatorUid" />
    <result column="CREATION_TIME" jdbcType="VARCHAR" property="creationTime" />
    <result column="USEAGE" jdbcType="TINYINT" property="useage" />
    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
    <result column="TARGET_USEAGE" jdbcType="TINYINT" property="targetUseage" />
    <result column="INDEX_SHOW" jdbcType="BIT" property="indexShow" />
    <result column="KEY_NUM" jdbcType="VARCHAR" property="keyNum" />
    <result column="TARGET_DEPT" jdbcType="INTEGER" property="targetDept" />
    <result column="INCLUDE_TRACK" jdbcType="TINYINT" property="includeTrack" />
    <result column="TRACK_RESULT" jdbcType="TINYINT" property="trackResult" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="DEL_TIME" jdbcType="VARCHAR" property="delTime" />
    <result column="DEL_USER" jdbcType="INTEGER" property="delUser" />
    <result column="DEL_USER_NAME" jdbcType="VARCHAR" property="delUserName" />
    <result column="TRACK_SOURCE" jdbcType="TINYINT" property="trackSource" />
    <result column="SPECIAL_END_TIME" jdbcType="TIMESTAMP" property="specialEndTime" />
    <result column="SCHEDULE_END_TIME" jdbcType="TIMESTAMP" property="scheduleEndTime" />
    <result column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="PROXY_URL" jdbcType="VARCHAR" property="proxyUrl" />
    <result column="IS_USER_TRACK" jdbcType="INTEGER" property="isUserTrack" />
    <result column="CASE_USER_ID" jdbcType="INTEGER" property="caseUserId" />
    <result column="TARGET_USER_ID" jdbcType="INTEGER" property="targetUserId" />
    <result column="CASE_DEPT_ID" jdbcType="INTEGER" property="caseDeptId" />
    <result column="IS_DELTRACK" jdbcType="TINYINT" property="isDeltrack" />
    <result column="FK_PHOTO_COUNT" jdbcType="INTEGER" property="fkPhotoCount" />
    <result column="DK_PHOTO_COUNT" jdbcType="INTEGER" property="dkPhotoCount" />
    <result column="RESPITE_END_TIME" jdbcType="TIMESTAMP" property="respiteEndTime" />
    <result column="VR_PHOTO" jdbcType="INTEGER" property="vrPhoto" />
    <result column="RESERVER_HOUSE_EVA_ID" jdbcType="INTEGER" property="reserverHouseEvaId" />
    <result column="ENTRUST_END_TIME" jdbcType="TIMESTAMP" property="entrustEndTime" />
    <result column="GR_NAME" jdbcType="VARCHAR" property="grName" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
    <result column="DK_HOUSE_INFO" jdbcType="VARCHAR" property="dkHouseInfo" />
    <result column="TRACK_TAGS" jdbcType="VARCHAR" property="trackTags" />
    <result column="MAKE_LOOK_ID" jdbcType="INTEGER" property="makeLookId" />
    <result column="IS_INTENTION" jdbcType="TINYINT" property="isIntention" />
    <result column="DAIKAN_NUM" jdbcType="INTEGER" property="daikanNum" />
    <result column="TAKE_LOOK_ID" jdbcType="INTEGER" property="takeLookId" />
    <result column="COOPERATE_TARGET_ID" jdbcType="INTEGER" property="cooperateTargetId" />
    <result column="TRACK_EXT" jdbcType="VARCHAR" property="trackExt" />
    <result column="ORGANIZATION_PATH" jdbcType="VARCHAR" property="organizationPath" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
    <result column="TARGET_ORGANIZATION_ID" jdbcType="INTEGER" property="targetOrganizationId" />
    <result column="CASE_ORGANIZATION_ID" jdbcType="INTEGER" property="caseOrganizationId" />
    <result column="ORGANIZATION_NAME" jdbcType="VARCHAR" property="organizationName" />
    <result column="CREATOR_USER_NAME" jdbcType="VARCHAR" property="creatorUserName" />
    <result column="KEY_VOUCHER_COUNT" jdbcType="INTEGER" property="keyVoucherCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    TRACK_ID, COMP_ID, DEPT_ID, CASE_TYPE, CASE_ID, CASE_STATUS, TRACK_TYPE, TRACK_CLASSIC, 
    TARGET_ID, TARGET_NO, TARGET_TYPE, TARGET_BOUND, TARGET_FLAG, EXAMIN_TIME, TRACK_NO, 
    TRACK_CONTENT, TRACK_WARM, WARM_TIME, WARM_CONTENT, TRACK_KEY, CREATOR_UID, CREATION_TIME, 
    USEAGE, CASE_NO, TARGET_USEAGE, INDEX_SHOW, KEY_NUM, TARGET_DEPT, INCLUDE_TRACK, 
    TRACK_RESULT, IS_DEL, DEL_TIME, DEL_USER, DEL_USER_NAME, TRACK_SOURCE, SPECIAL_END_TIME, 
    SCHEDULE_END_TIME, DEAL_ID, PROXY_URL, IS_USER_TRACK, CASE_USER_ID, TARGET_USER_ID, 
    CASE_DEPT_ID, IS_DELTRACK, FK_PHOTO_COUNT, DK_PHOTO_COUNT, RESPITE_END_TIME, VR_PHOTO, 
    RESERVER_HOUSE_EVA_ID, ENTRUST_END_TIME, GR_NAME, GR_ID, DEPT_NAME, DK_HOUSE_INFO, 
    TRACK_TAGS, MAKE_LOOK_ID, IS_INTENTION, DAIKAN_NUM, TAKE_LOOK_ID, COOPERATE_TARGET_ID, 
    TRACK_EXT, ORGANIZATION_PATH, ORGANIZATION_ID, TARGET_ORGANIZATION_ID, CASE_ORGANIZATION_ID, 
    ORGANIZATION_NAME, CREATOR_USER_NAME, KEY_VOUCHER_COUNT
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunTrackExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_TRACK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_TRACK
    where TRACK_ID = #{trackId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_TRACK
    where TRACK_ID = #{trackId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunTrackExample">
    <!--@mbggenerated-->
    delete from FUN_TRACK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunTrack">
    <!--@mbggenerated-->
    <selectKey keyProperty="trackId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_TRACK_TRACK_ID
    </selectKey>
    insert into FUN_TRACK (TRACK_ID, COMP_ID, DEPT_ID, 
      CASE_TYPE, CASE_ID, CASE_STATUS, 
      TRACK_TYPE, TRACK_CLASSIC, TARGET_ID, 
      TARGET_NO, TARGET_TYPE, TARGET_BOUND, 
      TARGET_FLAG, EXAMIN_TIME, TRACK_NO, 
      TRACK_CONTENT, TRACK_WARM, WARM_TIME, 
      WARM_CONTENT, TRACK_KEY, CREATOR_UID, 
      CREATION_TIME, USEAGE, CASE_NO, 
      TARGET_USEAGE, INDEX_SHOW, KEY_NUM, 
      TARGET_DEPT, INCLUDE_TRACK, TRACK_RESULT, 
      IS_DEL, DEL_TIME, DEL_USER, 
      DEL_USER_NAME, TRACK_SOURCE, SPECIAL_END_TIME, 
      SCHEDULE_END_TIME, DEAL_ID, PROXY_URL, 
      IS_USER_TRACK, CASE_USER_ID, TARGET_USER_ID, 
      CASE_DEPT_ID, IS_DELTRACK, FK_PHOTO_COUNT, 
      DK_PHOTO_COUNT, RESPITE_END_TIME, VR_PHOTO, 
      RESERVER_HOUSE_EVA_ID, ENTRUST_END_TIME, GR_NAME, 
      GR_ID, DEPT_NAME, DK_HOUSE_INFO, 
      TRACK_TAGS, MAKE_LOOK_ID, IS_INTENTION, 
      DAIKAN_NUM, TAKE_LOOK_ID, COOPERATE_TARGET_ID, 
      TRACK_EXT, ORGANIZATION_PATH, ORGANIZATION_ID, 
      TARGET_ORGANIZATION_ID, CASE_ORGANIZATION_ID, 
      ORGANIZATION_NAME, CREATOR_USER_NAME, KEY_VOUCHER_COUNT
      )
    values (#{trackId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{caseType,jdbcType=TINYINT}, #{caseId,jdbcType=INTEGER}, #{caseStatus,jdbcType=TINYINT}, 
      #{trackType,jdbcType=TINYINT}, #{trackClassic,jdbcType=VARCHAR}, #{targetId,jdbcType=INTEGER}, 
      #{targetNo,jdbcType=VARCHAR}, #{targetType,jdbcType=TINYINT}, #{targetBound,jdbcType=TINYINT}, 
      #{targetFlag,jdbcType=BIT}, #{examinTime,jdbcType=VARCHAR}, #{trackNo,jdbcType=VARCHAR}, 
      #{trackContent,jdbcType=VARCHAR}, #{trackWarm,jdbcType=BIT}, #{warmTime,jdbcType=VARCHAR}, 
      #{warmContent,jdbcType=VARCHAR}, #{trackKey,jdbcType=BIT}, #{creatorUid,jdbcType=INTEGER}, 
      #{creationTime,jdbcType=VARCHAR}, #{useage,jdbcType=TINYINT}, #{caseNo,jdbcType=VARCHAR}, 
      #{targetUseage,jdbcType=TINYINT}, #{indexShow,jdbcType=BIT}, #{keyNum,jdbcType=VARCHAR}, 
      #{targetDept,jdbcType=INTEGER}, #{includeTrack,jdbcType=TINYINT}, #{trackResult,jdbcType=TINYINT}, 
      #{isDel,jdbcType=TINYINT}, #{delTime,jdbcType=VARCHAR}, #{delUser,jdbcType=INTEGER}, 
      #{delUserName,jdbcType=VARCHAR}, #{trackSource,jdbcType=TINYINT}, #{specialEndTime,jdbcType=TIMESTAMP}, 
      #{scheduleEndTime,jdbcType=TIMESTAMP}, #{dealId,jdbcType=INTEGER}, #{proxyUrl,jdbcType=VARCHAR}, 
      #{isUserTrack,jdbcType=INTEGER}, #{caseUserId,jdbcType=INTEGER}, #{targetUserId,jdbcType=INTEGER}, 
      #{caseDeptId,jdbcType=INTEGER}, #{isDeltrack,jdbcType=TINYINT}, #{fkPhotoCount,jdbcType=INTEGER}, 
      #{dkPhotoCount,jdbcType=INTEGER}, #{respiteEndTime,jdbcType=TIMESTAMP}, #{vrPhoto,jdbcType=INTEGER}, 
      #{reserverHouseEvaId,jdbcType=INTEGER}, #{entrustEndTime,jdbcType=TIMESTAMP}, #{grName,jdbcType=VARCHAR}, 
      #{grId,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR}, #{dkHouseInfo,jdbcType=VARCHAR}, 
      #{trackTags,jdbcType=VARCHAR}, #{makeLookId,jdbcType=INTEGER}, #{isIntention,jdbcType=TINYINT}, 
      #{daikanNum,jdbcType=INTEGER}, #{takeLookId,jdbcType=INTEGER}, #{cooperateTargetId,jdbcType=INTEGER}, 
      #{trackExt,jdbcType=VARCHAR}, #{organizationPath,jdbcType=VARCHAR}, #{organizationId,jdbcType=INTEGER}, 
      #{targetOrganizationId,jdbcType=INTEGER}, #{caseOrganizationId,jdbcType=INTEGER}, 
      #{organizationName,jdbcType=VARCHAR}, #{creatorUserName,jdbcType=VARCHAR}, #{keyVoucherCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunTrack">
    <!--@mbggenerated-->
    <selectKey keyProperty="trackId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_TRACK_TRACK_ID
    </selectKey>
    insert into FUN_TRACK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      TRACK_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="caseStatus != null">
        CASE_STATUS,
      </if>
      <if test="trackType != null">
        TRACK_TYPE,
      </if>
      <if test="trackClassic != null">
        TRACK_CLASSIC,
      </if>
      <if test="targetId != null">
        TARGET_ID,
      </if>
      <if test="targetNo != null">
        TARGET_NO,
      </if>
      <if test="targetType != null">
        TARGET_TYPE,
      </if>
      <if test="targetBound != null">
        TARGET_BOUND,
      </if>
      <if test="targetFlag != null">
        TARGET_FLAG,
      </if>
      <if test="examinTime != null">
        EXAMIN_TIME,
      </if>
      <if test="trackNo != null">
        TRACK_NO,
      </if>
      <if test="trackContent != null">
        TRACK_CONTENT,
      </if>
      <if test="trackWarm != null">
        TRACK_WARM,
      </if>
      <if test="warmTime != null">
        WARM_TIME,
      </if>
      <if test="warmContent != null">
        WARM_CONTENT,
      </if>
      <if test="trackKey != null">
        TRACK_KEY,
      </if>
      <if test="creatorUid != null">
        CREATOR_UID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="useage != null">
        USEAGE,
      </if>
      <if test="caseNo != null">
        CASE_NO,
      </if>
      <if test="targetUseage != null">
        TARGET_USEAGE,
      </if>
      <if test="indexShow != null">
        INDEX_SHOW,
      </if>
      <if test="keyNum != null">
        KEY_NUM,
      </if>
      <if test="targetDept != null">
        TARGET_DEPT,
      </if>
      <if test="includeTrack != null">
        INCLUDE_TRACK,
      </if>
      <if test="trackResult != null">
        TRACK_RESULT,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="delTime != null">
        DEL_TIME,
      </if>
      <if test="delUser != null">
        DEL_USER,
      </if>
      <if test="delUserName != null">
        DEL_USER_NAME,
      </if>
      <if test="trackSource != null">
        TRACK_SOURCE,
      </if>
      <if test="specialEndTime != null">
        SPECIAL_END_TIME,
      </if>
      <if test="scheduleEndTime != null">
        SCHEDULE_END_TIME,
      </if>
      <if test="dealId != null">
        DEAL_ID,
      </if>
      <if test="proxyUrl != null">
        PROXY_URL,
      </if>
      <if test="isUserTrack != null">
        IS_USER_TRACK,
      </if>
      <if test="caseUserId != null">
        CASE_USER_ID,
      </if>
      <if test="targetUserId != null">
        TARGET_USER_ID,
      </if>
      <if test="caseDeptId != null">
        CASE_DEPT_ID,
      </if>
      <if test="isDeltrack != null">
        IS_DELTRACK,
      </if>
      <if test="fkPhotoCount != null">
        FK_PHOTO_COUNT,
      </if>
      <if test="dkPhotoCount != null">
        DK_PHOTO_COUNT,
      </if>
      <if test="respiteEndTime != null">
        RESPITE_END_TIME,
      </if>
      <if test="vrPhoto != null">
        VR_PHOTO,
      </if>
      <if test="reserverHouseEvaId != null">
        RESERVER_HOUSE_EVA_ID,
      </if>
      <if test="entrustEndTime != null">
        ENTRUST_END_TIME,
      </if>
      <if test="grName != null">
        GR_NAME,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="deptName != null">
        DEPT_NAME,
      </if>
      <if test="dkHouseInfo != null">
        DK_HOUSE_INFO,
      </if>
      <if test="trackTags != null">
        TRACK_TAGS,
      </if>
      <if test="makeLookId != null">
        MAKE_LOOK_ID,
      </if>
      <if test="isIntention != null">
        IS_INTENTION,
      </if>
      <if test="daikanNum != null">
        DAIKAN_NUM,
      </if>
      <if test="takeLookId != null">
        TAKE_LOOK_ID,
      </if>
      <if test="cooperateTargetId != null">
        COOPERATE_TARGET_ID,
      </if>
      <if test="trackExt != null">
        TRACK_EXT,
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
      <if test="targetOrganizationId != null">
        TARGET_ORGANIZATION_ID,
      </if>
      <if test="caseOrganizationId != null">
        CASE_ORGANIZATION_ID,
      </if>
      <if test="organizationName != null">
        ORGANIZATION_NAME,
      </if>
      <if test="creatorUserName != null">
        CREATOR_USER_NAME,
      </if>
      <if test="keyVoucherCount != null">
        KEY_VOUCHER_COUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{trackId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseStatus != null">
        #{caseStatus,jdbcType=TINYINT},
      </if>
      <if test="trackType != null">
        #{trackType,jdbcType=TINYINT},
      </if>
      <if test="trackClassic != null">
        #{trackClassic,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null">
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="targetNo != null">
        #{targetNo,jdbcType=VARCHAR},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=TINYINT},
      </if>
      <if test="targetBound != null">
        #{targetBound,jdbcType=TINYINT},
      </if>
      <if test="targetFlag != null">
        #{targetFlag,jdbcType=BIT},
      </if>
      <if test="examinTime != null">
        #{examinTime,jdbcType=VARCHAR},
      </if>
      <if test="trackNo != null">
        #{trackNo,jdbcType=VARCHAR},
      </if>
      <if test="trackContent != null">
        #{trackContent,jdbcType=VARCHAR},
      </if>
      <if test="trackWarm != null">
        #{trackWarm,jdbcType=BIT},
      </if>
      <if test="warmTime != null">
        #{warmTime,jdbcType=VARCHAR},
      </if>
      <if test="warmContent != null">
        #{warmContent,jdbcType=VARCHAR},
      </if>
      <if test="trackKey != null">
        #{trackKey,jdbcType=BIT},
      </if>
      <if test="creatorUid != null">
        #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=VARCHAR},
      </if>
      <if test="useage != null">
        #{useage,jdbcType=TINYINT},
      </if>
      <if test="caseNo != null">
        #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="targetUseage != null">
        #{targetUseage,jdbcType=TINYINT},
      </if>
      <if test="indexShow != null">
        #{indexShow,jdbcType=BIT},
      </if>
      <if test="keyNum != null">
        #{keyNum,jdbcType=VARCHAR},
      </if>
      <if test="targetDept != null">
        #{targetDept,jdbcType=INTEGER},
      </if>
      <if test="includeTrack != null">
        #{includeTrack,jdbcType=TINYINT},
      </if>
      <if test="trackResult != null">
        #{trackResult,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="delTime != null">
        #{delTime,jdbcType=VARCHAR},
      </if>
      <if test="delUser != null">
        #{delUser,jdbcType=INTEGER},
      </if>
      <if test="delUserName != null">
        #{delUserName,jdbcType=VARCHAR},
      </if>
      <if test="trackSource != null">
        #{trackSource,jdbcType=TINYINT},
      </if>
      <if test="specialEndTime != null">
        #{specialEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleEndTime != null">
        #{scheduleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealId != null">
        #{dealId,jdbcType=INTEGER},
      </if>
      <if test="proxyUrl != null">
        #{proxyUrl,jdbcType=VARCHAR},
      </if>
      <if test="isUserTrack != null">
        #{isUserTrack,jdbcType=INTEGER},
      </if>
      <if test="caseUserId != null">
        #{caseUserId,jdbcType=INTEGER},
      </if>
      <if test="targetUserId != null">
        #{targetUserId,jdbcType=INTEGER},
      </if>
      <if test="caseDeptId != null">
        #{caseDeptId,jdbcType=INTEGER},
      </if>
      <if test="isDeltrack != null">
        #{isDeltrack,jdbcType=TINYINT},
      </if>
      <if test="fkPhotoCount != null">
        #{fkPhotoCount,jdbcType=INTEGER},
      </if>
      <if test="dkPhotoCount != null">
        #{dkPhotoCount,jdbcType=INTEGER},
      </if>
      <if test="respiteEndTime != null">
        #{respiteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vrPhoto != null">
        #{vrPhoto,jdbcType=INTEGER},
      </if>
      <if test="reserverHouseEvaId != null">
        #{reserverHouseEvaId,jdbcType=INTEGER},
      </if>
      <if test="entrustEndTime != null">
        #{entrustEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grName != null">
        #{grName,jdbcType=VARCHAR},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="dkHouseInfo != null">
        #{dkHouseInfo,jdbcType=VARCHAR},
      </if>
      <if test="trackTags != null">
        #{trackTags,jdbcType=VARCHAR},
      </if>
      <if test="makeLookId != null">
        #{makeLookId,jdbcType=INTEGER},
      </if>
      <if test="isIntention != null">
        #{isIntention,jdbcType=TINYINT},
      </if>
      <if test="daikanNum != null">
        #{daikanNum,jdbcType=INTEGER},
      </if>
      <if test="takeLookId != null">
        #{takeLookId,jdbcType=INTEGER},
      </if>
      <if test="cooperateTargetId != null">
        #{cooperateTargetId,jdbcType=INTEGER},
      </if>
      <if test="trackExt != null">
        #{trackExt,jdbcType=VARCHAR},
      </if>
      <if test="organizationPath != null">
        #{organizationPath,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="targetOrganizationId != null">
        #{targetOrganizationId,jdbcType=INTEGER},
      </if>
      <if test="caseOrganizationId != null">
        #{caseOrganizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationName != null">
        #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="creatorUserName != null">
        #{creatorUserName,jdbcType=VARCHAR},
      </if>
      <if test="keyVoucherCount != null">
        #{keyVoucherCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunTrackExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_TRACK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_TRACK
    <set>
      <if test="record.trackId != null">
        TRACK_ID = #{record.trackId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseStatus != null">
        CASE_STATUS = #{record.caseStatus,jdbcType=TINYINT},
      </if>
      <if test="record.trackType != null">
        TRACK_TYPE = #{record.trackType,jdbcType=TINYINT},
      </if>
      <if test="record.trackClassic != null">
        TRACK_CLASSIC = #{record.trackClassic,jdbcType=VARCHAR},
      </if>
      <if test="record.targetId != null">
        TARGET_ID = #{record.targetId,jdbcType=INTEGER},
      </if>
      <if test="record.targetNo != null">
        TARGET_NO = #{record.targetNo,jdbcType=VARCHAR},
      </if>
      <if test="record.targetType != null">
        TARGET_TYPE = #{record.targetType,jdbcType=TINYINT},
      </if>
      <if test="record.targetBound != null">
        TARGET_BOUND = #{record.targetBound,jdbcType=TINYINT},
      </if>
      <if test="record.targetFlag != null">
        TARGET_FLAG = #{record.targetFlag,jdbcType=BIT},
      </if>
      <if test="record.examinTime != null">
        EXAMIN_TIME = #{record.examinTime,jdbcType=VARCHAR},
      </if>
      <if test="record.trackNo != null">
        TRACK_NO = #{record.trackNo,jdbcType=VARCHAR},
      </if>
      <if test="record.trackContent != null">
        TRACK_CONTENT = #{record.trackContent,jdbcType=VARCHAR},
      </if>
      <if test="record.trackWarm != null">
        TRACK_WARM = #{record.trackWarm,jdbcType=BIT},
      </if>
      <if test="record.warmTime != null">
        WARM_TIME = #{record.warmTime,jdbcType=VARCHAR},
      </if>
      <if test="record.warmContent != null">
        WARM_CONTENT = #{record.warmContent,jdbcType=VARCHAR},
      </if>
      <if test="record.trackKey != null">
        TRACK_KEY = #{record.trackKey,jdbcType=BIT},
      </if>
      <if test="record.creatorUid != null">
        CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=VARCHAR},
      </if>
      <if test="record.useage != null">
        USEAGE = #{record.useage,jdbcType=TINYINT},
      </if>
      <if test="record.caseNo != null">
        CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.targetUseage != null">
        TARGET_USEAGE = #{record.targetUseage,jdbcType=TINYINT},
      </if>
      <if test="record.indexShow != null">
        INDEX_SHOW = #{record.indexShow,jdbcType=BIT},
      </if>
      <if test="record.keyNum != null">
        KEY_NUM = #{record.keyNum,jdbcType=VARCHAR},
      </if>
      <if test="record.targetDept != null">
        TARGET_DEPT = #{record.targetDept,jdbcType=INTEGER},
      </if>
      <if test="record.includeTrack != null">
        INCLUDE_TRACK = #{record.includeTrack,jdbcType=TINYINT},
      </if>
      <if test="record.trackResult != null">
        TRACK_RESULT = #{record.trackResult,jdbcType=TINYINT},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.delTime != null">
        DEL_TIME = #{record.delTime,jdbcType=VARCHAR},
      </if>
      <if test="record.delUser != null">
        DEL_USER = #{record.delUser,jdbcType=INTEGER},
      </if>
      <if test="record.delUserName != null">
        DEL_USER_NAME = #{record.delUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.trackSource != null">
        TRACK_SOURCE = #{record.trackSource,jdbcType=TINYINT},
      </if>
      <if test="record.specialEndTime != null">
        SPECIAL_END_TIME = #{record.specialEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scheduleEndTime != null">
        SCHEDULE_END_TIME = #{record.scheduleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealId != null">
        DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      </if>
      <if test="record.proxyUrl != null">
        PROXY_URL = #{record.proxyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.isUserTrack != null">
        IS_USER_TRACK = #{record.isUserTrack,jdbcType=INTEGER},
      </if>
      <if test="record.caseUserId != null">
        CASE_USER_ID = #{record.caseUserId,jdbcType=INTEGER},
      </if>
      <if test="record.targetUserId != null">
        TARGET_USER_ID = #{record.targetUserId,jdbcType=INTEGER},
      </if>
      <if test="record.caseDeptId != null">
        CASE_DEPT_ID = #{record.caseDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.isDeltrack != null">
        IS_DELTRACK = #{record.isDeltrack,jdbcType=TINYINT},
      </if>
      <if test="record.fkPhotoCount != null">
        FK_PHOTO_COUNT = #{record.fkPhotoCount,jdbcType=INTEGER},
      </if>
      <if test="record.dkPhotoCount != null">
        DK_PHOTO_COUNT = #{record.dkPhotoCount,jdbcType=INTEGER},
      </if>
      <if test="record.respiteEndTime != null">
        RESPITE_END_TIME = #{record.respiteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vrPhoto != null">
        VR_PHOTO = #{record.vrPhoto,jdbcType=INTEGER},
      </if>
      <if test="record.reserverHouseEvaId != null">
        RESERVER_HOUSE_EVA_ID = #{record.reserverHouseEvaId,jdbcType=INTEGER},
      </if>
      <if test="record.entrustEndTime != null">
        ENTRUST_END_TIME = #{record.entrustEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grName != null">
        GR_NAME = #{record.grName,jdbcType=VARCHAR},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.deptName != null">
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.dkHouseInfo != null">
        DK_HOUSE_INFO = #{record.dkHouseInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.trackTags != null">
        TRACK_TAGS = #{record.trackTags,jdbcType=VARCHAR},
      </if>
      <if test="record.makeLookId != null">
        MAKE_LOOK_ID = #{record.makeLookId,jdbcType=INTEGER},
      </if>
      <if test="record.isIntention != null">
        IS_INTENTION = #{record.isIntention,jdbcType=TINYINT},
      </if>
      <if test="record.daikanNum != null">
        DAIKAN_NUM = #{record.daikanNum,jdbcType=INTEGER},
      </if>
      <if test="record.takeLookId != null">
        TAKE_LOOK_ID = #{record.takeLookId,jdbcType=INTEGER},
      </if>
      <if test="record.cooperateTargetId != null">
        COOPERATE_TARGET_ID = #{record.cooperateTargetId,jdbcType=INTEGER},
      </if>
      <if test="record.trackExt != null">
        TRACK_EXT = #{record.trackExt,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationPath != null">
        ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.targetOrganizationId != null">
        TARGET_ORGANIZATION_ID = #{record.targetOrganizationId,jdbcType=INTEGER},
      </if>
      <if test="record.caseOrganizationId != null">
        CASE_ORGANIZATION_ID = #{record.caseOrganizationId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationName != null">
        ORGANIZATION_NAME = #{record.organizationName,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorUserName != null">
        CREATOR_USER_NAME = #{record.creatorUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.keyVoucherCount != null">
        KEY_VOUCHER_COUNT = #{record.keyVoucherCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_TRACK
    set TRACK_ID = #{record.trackId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_STATUS = #{record.caseStatus,jdbcType=TINYINT},
      TRACK_TYPE = #{record.trackType,jdbcType=TINYINT},
      TRACK_CLASSIC = #{record.trackClassic,jdbcType=VARCHAR},
      TARGET_ID = #{record.targetId,jdbcType=INTEGER},
      TARGET_NO = #{record.targetNo,jdbcType=VARCHAR},
      TARGET_TYPE = #{record.targetType,jdbcType=TINYINT},
      TARGET_BOUND = #{record.targetBound,jdbcType=TINYINT},
      TARGET_FLAG = #{record.targetFlag,jdbcType=BIT},
      EXAMIN_TIME = #{record.examinTime,jdbcType=VARCHAR},
      TRACK_NO = #{record.trackNo,jdbcType=VARCHAR},
      TRACK_CONTENT = #{record.trackContent,jdbcType=VARCHAR},
      TRACK_WARM = #{record.trackWarm,jdbcType=BIT},
      WARM_TIME = #{record.warmTime,jdbcType=VARCHAR},
      WARM_CONTENT = #{record.warmContent,jdbcType=VARCHAR},
      TRACK_KEY = #{record.trackKey,jdbcType=BIT},
      CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=VARCHAR},
      USEAGE = #{record.useage,jdbcType=TINYINT},
      CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      TARGET_USEAGE = #{record.targetUseage,jdbcType=TINYINT},
      INDEX_SHOW = #{record.indexShow,jdbcType=BIT},
      KEY_NUM = #{record.keyNum,jdbcType=VARCHAR},
      TARGET_DEPT = #{record.targetDept,jdbcType=INTEGER},
      INCLUDE_TRACK = #{record.includeTrack,jdbcType=TINYINT},
      TRACK_RESULT = #{record.trackResult,jdbcType=TINYINT},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      DEL_TIME = #{record.delTime,jdbcType=VARCHAR},
      DEL_USER = #{record.delUser,jdbcType=INTEGER},
      DEL_USER_NAME = #{record.delUserName,jdbcType=VARCHAR},
      TRACK_SOURCE = #{record.trackSource,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{record.specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{record.scheduleEndTime,jdbcType=TIMESTAMP},
      DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      PROXY_URL = #{record.proxyUrl,jdbcType=VARCHAR},
      IS_USER_TRACK = #{record.isUserTrack,jdbcType=INTEGER},
      CASE_USER_ID = #{record.caseUserId,jdbcType=INTEGER},
      TARGET_USER_ID = #{record.targetUserId,jdbcType=INTEGER},
      CASE_DEPT_ID = #{record.caseDeptId,jdbcType=INTEGER},
      IS_DELTRACK = #{record.isDeltrack,jdbcType=TINYINT},
      FK_PHOTO_COUNT = #{record.fkPhotoCount,jdbcType=INTEGER},
      DK_PHOTO_COUNT = #{record.dkPhotoCount,jdbcType=INTEGER},
      RESPITE_END_TIME = #{record.respiteEndTime,jdbcType=TIMESTAMP},
      VR_PHOTO = #{record.vrPhoto,jdbcType=INTEGER},
      RESERVER_HOUSE_EVA_ID = #{record.reserverHouseEvaId,jdbcType=INTEGER},
      ENTRUST_END_TIME = #{record.entrustEndTime,jdbcType=TIMESTAMP},
      GR_NAME = #{record.grName,jdbcType=VARCHAR},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      DK_HOUSE_INFO = #{record.dkHouseInfo,jdbcType=VARCHAR},
      TRACK_TAGS = #{record.trackTags,jdbcType=VARCHAR},
      MAKE_LOOK_ID = #{record.makeLookId,jdbcType=INTEGER},
      IS_INTENTION = #{record.isIntention,jdbcType=TINYINT},
      DAIKAN_NUM = #{record.daikanNum,jdbcType=INTEGER},
      TAKE_LOOK_ID = #{record.takeLookId,jdbcType=INTEGER},
      COOPERATE_TARGET_ID = #{record.cooperateTargetId,jdbcType=INTEGER},
      TRACK_EXT = #{record.trackExt,jdbcType=VARCHAR},
      ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      TARGET_ORGANIZATION_ID = #{record.targetOrganizationId,jdbcType=INTEGER},
      CASE_ORGANIZATION_ID = #{record.caseOrganizationId,jdbcType=INTEGER},
      ORGANIZATION_NAME = #{record.organizationName,jdbcType=VARCHAR},
      CREATOR_USER_NAME = #{record.creatorUserName,jdbcType=VARCHAR},
      KEY_VOUCHER_COUNT = #{record.keyVoucherCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunTrack">
    <!--@mbggenerated-->
    update FUN_TRACK
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseStatus != null">
        CASE_STATUS = #{caseStatus,jdbcType=TINYINT},
      </if>
      <if test="trackType != null">
        TRACK_TYPE = #{trackType,jdbcType=TINYINT},
      </if>
      <if test="trackClassic != null">
        TRACK_CLASSIC = #{trackClassic,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null">
        TARGET_ID = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="targetNo != null">
        TARGET_NO = #{targetNo,jdbcType=VARCHAR},
      </if>
      <if test="targetType != null">
        TARGET_TYPE = #{targetType,jdbcType=TINYINT},
      </if>
      <if test="targetBound != null">
        TARGET_BOUND = #{targetBound,jdbcType=TINYINT},
      </if>
      <if test="targetFlag != null">
        TARGET_FLAG = #{targetFlag,jdbcType=BIT},
      </if>
      <if test="examinTime != null">
        EXAMIN_TIME = #{examinTime,jdbcType=VARCHAR},
      </if>
      <if test="trackNo != null">
        TRACK_NO = #{trackNo,jdbcType=VARCHAR},
      </if>
      <if test="trackContent != null">
        TRACK_CONTENT = #{trackContent,jdbcType=VARCHAR},
      </if>
      <if test="trackWarm != null">
        TRACK_WARM = #{trackWarm,jdbcType=BIT},
      </if>
      <if test="warmTime != null">
        WARM_TIME = #{warmTime,jdbcType=VARCHAR},
      </if>
      <if test="warmContent != null">
        WARM_CONTENT = #{warmContent,jdbcType=VARCHAR},
      </if>
      <if test="trackKey != null">
        TRACK_KEY = #{trackKey,jdbcType=BIT},
      </if>
      <if test="creatorUid != null">
        CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=VARCHAR},
      </if>
      <if test="useage != null">
        USEAGE = #{useage,jdbcType=TINYINT},
      </if>
      <if test="caseNo != null">
        CASE_NO = #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="targetUseage != null">
        TARGET_USEAGE = #{targetUseage,jdbcType=TINYINT},
      </if>
      <if test="indexShow != null">
        INDEX_SHOW = #{indexShow,jdbcType=BIT},
      </if>
      <if test="keyNum != null">
        KEY_NUM = #{keyNum,jdbcType=VARCHAR},
      </if>
      <if test="targetDept != null">
        TARGET_DEPT = #{targetDept,jdbcType=INTEGER},
      </if>
      <if test="includeTrack != null">
        INCLUDE_TRACK = #{includeTrack,jdbcType=TINYINT},
      </if>
      <if test="trackResult != null">
        TRACK_RESULT = #{trackResult,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="delTime != null">
        DEL_TIME = #{delTime,jdbcType=VARCHAR},
      </if>
      <if test="delUser != null">
        DEL_USER = #{delUser,jdbcType=INTEGER},
      </if>
      <if test="delUserName != null">
        DEL_USER_NAME = #{delUserName,jdbcType=VARCHAR},
      </if>
      <if test="trackSource != null">
        TRACK_SOURCE = #{trackSource,jdbcType=TINYINT},
      </if>
      <if test="specialEndTime != null">
        SPECIAL_END_TIME = #{specialEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleEndTime != null">
        SCHEDULE_END_TIME = #{scheduleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealId != null">
        DEAL_ID = #{dealId,jdbcType=INTEGER},
      </if>
      <if test="proxyUrl != null">
        PROXY_URL = #{proxyUrl,jdbcType=VARCHAR},
      </if>
      <if test="isUserTrack != null">
        IS_USER_TRACK = #{isUserTrack,jdbcType=INTEGER},
      </if>
      <if test="caseUserId != null">
        CASE_USER_ID = #{caseUserId,jdbcType=INTEGER},
      </if>
      <if test="targetUserId != null">
        TARGET_USER_ID = #{targetUserId,jdbcType=INTEGER},
      </if>
      <if test="caseDeptId != null">
        CASE_DEPT_ID = #{caseDeptId,jdbcType=INTEGER},
      </if>
      <if test="isDeltrack != null">
        IS_DELTRACK = #{isDeltrack,jdbcType=TINYINT},
      </if>
      <if test="fkPhotoCount != null">
        FK_PHOTO_COUNT = #{fkPhotoCount,jdbcType=INTEGER},
      </if>
      <if test="dkPhotoCount != null">
        DK_PHOTO_COUNT = #{dkPhotoCount,jdbcType=INTEGER},
      </if>
      <if test="respiteEndTime != null">
        RESPITE_END_TIME = #{respiteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vrPhoto != null">
        VR_PHOTO = #{vrPhoto,jdbcType=INTEGER},
      </if>
      <if test="reserverHouseEvaId != null">
        RESERVER_HOUSE_EVA_ID = #{reserverHouseEvaId,jdbcType=INTEGER},
      </if>
      <if test="entrustEndTime != null">
        ENTRUST_END_TIME = #{entrustEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grName != null">
        GR_NAME = #{grName,jdbcType=VARCHAR},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="dkHouseInfo != null">
        DK_HOUSE_INFO = #{dkHouseInfo,jdbcType=VARCHAR},
      </if>
      <if test="trackTags != null">
        TRACK_TAGS = #{trackTags,jdbcType=VARCHAR},
      </if>
      <if test="makeLookId != null">
        MAKE_LOOK_ID = #{makeLookId,jdbcType=INTEGER},
      </if>
      <if test="isIntention != null">
        IS_INTENTION = #{isIntention,jdbcType=TINYINT},
      </if>
      <if test="daikanNum != null">
        DAIKAN_NUM = #{daikanNum,jdbcType=INTEGER},
      </if>
      <if test="takeLookId != null">
        TAKE_LOOK_ID = #{takeLookId,jdbcType=INTEGER},
      </if>
      <if test="cooperateTargetId != null">
        COOPERATE_TARGET_ID = #{cooperateTargetId,jdbcType=INTEGER},
      </if>
      <if test="trackExt != null">
        TRACK_EXT = #{trackExt,jdbcType=VARCHAR},
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="targetOrganizationId != null">
        TARGET_ORGANIZATION_ID = #{targetOrganizationId,jdbcType=INTEGER},
      </if>
      <if test="caseOrganizationId != null">
        CASE_ORGANIZATION_ID = #{caseOrganizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationName != null">
        ORGANIZATION_NAME = #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="creatorUserName != null">
        CREATOR_USER_NAME = #{creatorUserName,jdbcType=VARCHAR},
      </if>
      <if test="keyVoucherCount != null">
        KEY_VOUCHER_COUNT = #{keyVoucherCount,jdbcType=INTEGER},
      </if>
    </set>
    where TRACK_ID = #{trackId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunTrack">
    <!--@mbggenerated-->
    update FUN_TRACK
    set COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_STATUS = #{caseStatus,jdbcType=TINYINT},
      TRACK_TYPE = #{trackType,jdbcType=TINYINT},
      TRACK_CLASSIC = #{trackClassic,jdbcType=VARCHAR},
      TARGET_ID = #{targetId,jdbcType=INTEGER},
      TARGET_NO = #{targetNo,jdbcType=VARCHAR},
      TARGET_TYPE = #{targetType,jdbcType=TINYINT},
      TARGET_BOUND = #{targetBound,jdbcType=TINYINT},
      TARGET_FLAG = #{targetFlag,jdbcType=BIT},
      EXAMIN_TIME = #{examinTime,jdbcType=VARCHAR},
      TRACK_NO = #{trackNo,jdbcType=VARCHAR},
      TRACK_CONTENT = #{trackContent,jdbcType=VARCHAR},
      TRACK_WARM = #{trackWarm,jdbcType=BIT},
      WARM_TIME = #{warmTime,jdbcType=VARCHAR},
      WARM_CONTENT = #{warmContent,jdbcType=VARCHAR},
      TRACK_KEY = #{trackKey,jdbcType=BIT},
      CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=VARCHAR},
      USEAGE = #{useage,jdbcType=TINYINT},
      CASE_NO = #{caseNo,jdbcType=VARCHAR},
      TARGET_USEAGE = #{targetUseage,jdbcType=TINYINT},
      INDEX_SHOW = #{indexShow,jdbcType=BIT},
      KEY_NUM = #{keyNum,jdbcType=VARCHAR},
      TARGET_DEPT = #{targetDept,jdbcType=INTEGER},
      INCLUDE_TRACK = #{includeTrack,jdbcType=TINYINT},
      TRACK_RESULT = #{trackResult,jdbcType=TINYINT},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      DEL_TIME = #{delTime,jdbcType=VARCHAR},
      DEL_USER = #{delUser,jdbcType=INTEGER},
      DEL_USER_NAME = #{delUserName,jdbcType=VARCHAR},
      TRACK_SOURCE = #{trackSource,jdbcType=TINYINT},
      SPECIAL_END_TIME = #{specialEndTime,jdbcType=TIMESTAMP},
      SCHEDULE_END_TIME = #{scheduleEndTime,jdbcType=TIMESTAMP},
      DEAL_ID = #{dealId,jdbcType=INTEGER},
      PROXY_URL = #{proxyUrl,jdbcType=VARCHAR},
      IS_USER_TRACK = #{isUserTrack,jdbcType=INTEGER},
      CASE_USER_ID = #{caseUserId,jdbcType=INTEGER},
      TARGET_USER_ID = #{targetUserId,jdbcType=INTEGER},
      CASE_DEPT_ID = #{caseDeptId,jdbcType=INTEGER},
      IS_DELTRACK = #{isDeltrack,jdbcType=TINYINT},
      FK_PHOTO_COUNT = #{fkPhotoCount,jdbcType=INTEGER},
      DK_PHOTO_COUNT = #{dkPhotoCount,jdbcType=INTEGER},
      RESPITE_END_TIME = #{respiteEndTime,jdbcType=TIMESTAMP},
      VR_PHOTO = #{vrPhoto,jdbcType=INTEGER},
      RESERVER_HOUSE_EVA_ID = #{reserverHouseEvaId,jdbcType=INTEGER},
      ENTRUST_END_TIME = #{entrustEndTime,jdbcType=TIMESTAMP},
      GR_NAME = #{grName,jdbcType=VARCHAR},
      GR_ID = #{grId,jdbcType=INTEGER},
      DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      DK_HOUSE_INFO = #{dkHouseInfo,jdbcType=VARCHAR},
      TRACK_TAGS = #{trackTags,jdbcType=VARCHAR},
      MAKE_LOOK_ID = #{makeLookId,jdbcType=INTEGER},
      IS_INTENTION = #{isIntention,jdbcType=TINYINT},
      DAIKAN_NUM = #{daikanNum,jdbcType=INTEGER},
      TAKE_LOOK_ID = #{takeLookId,jdbcType=INTEGER},
      COOPERATE_TARGET_ID = #{cooperateTargetId,jdbcType=INTEGER},
      TRACK_EXT = #{trackExt,jdbcType=VARCHAR},
      ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      TARGET_ORGANIZATION_ID = #{targetOrganizationId,jdbcType=INTEGER},
      CASE_ORGANIZATION_ID = #{caseOrganizationId,jdbcType=INTEGER},
      ORGANIZATION_NAME = #{organizationName,jdbcType=VARCHAR},
      CREATOR_USER_NAME = #{creatorUserName,jdbcType=VARCHAR},
      KEY_VOUCHER_COUNT = #{keyVoucherCount,jdbcType=INTEGER}
    where TRACK_ID = #{trackId,jdbcType=INTEGER}
  </update>
	<resultMap extends="BaseResultMap" id="ErpFunTrackDtoMap" type="com.myfun.repository.erpdb.dto.ErpFunTrackDto" />
  <resultMap extends="BaseResultMap" id="DtoBaseResultMap" type="com.myfun.repository.erpdb.dto.ErpFunTrackDto">
    <result column="OWNER_USER_ID" jdbcType="INTEGER" property="ownerUserId" />
  </resultMap>
  <select id="countTodayExplrthAndLook" resultType="java.lang.Integer">
    select count(1) as attrCount
    from FUN_TRACK
    where TARGET_FLAG = '1'
    and CREATOR_UID = #{conditionModel.wlUser,jdbcType=INTEGER}
    and TRACK_TYPE = #{conditionModel.trackType,jdbcType=TINYINT}
    and EXAMIN_TIME &lt;=#{startTime,jdbcType=VARCHAR}
    and EXAMIN_TIME &gt;=#{endTime,jdbcType=VARCHAR}
  </select>
	<select id="getSaleErrorTrackCoreInfo" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		<![CDATA[
			from FUN_TRACK where case_id in (
				select sale_id from fun_sale where cell_phone like '%:;:;:18181%'
			) and track_content like '%*****%' and case_type=1;
		]]>
	</select>
	<select id="getLeaseErrorTrackCoreInfo" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		<![CDATA[
			from FUN_TRACK where case_id in (
				select lease_id from fun_lease where cell_phone like '%:;:;:18181%'
			) and track_content like '%*****%' and case_type=2;
		]]>
	</select>
	
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true">  
	    insert into FUN_TRACK (TRACK_ID,CASE_NO,CASE_ID,COMP_ID,DEPT_ID,CASE_TYPE,TRACK_TYPE,
	    	TRACK_CLASSIC,TRACK_CONTENT, TRACK_WARM,CREATOR_UID,CREATION_TIME)   
	    values  
	    <foreach close=")" collection="resList" index="index" item="item" open="(" separator=",">  
	        ((SELECT next value for SEQ_FUN_TRACK_TRACK_ID),
	        	#{item.caseNo},#{item.caseId},#{item.compId},#{item.deptId},#{item.caseType},'13','[ 业务跟进 ]',#{item.content},'0','999',getdate())  
	    </foreach>  
	</insert>  
	 <insert id="insertFunTrack" parameterType="com.myfun.repository.erpdb.po.ErpFunTrack">
    <selectKey keyProperty="trackId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_TRACK_TRACK_ID
    </selectKey>
    insert into FUN_TRACK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      TRACK_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="caseStatus != null">
        CASE_STATUS,
      </if>
      <if test="trackType != null">
        TRACK_TYPE,
      </if>
      <if test="trackClassic != null">
        TRACK_CLASSIC,
      </if>
      <if test="targetId != null">
        TARGET_ID,
      </if>
      <if test="targetNo != null">
        TARGET_NO,
      </if>
      <if test="targetType != null">
        TARGET_TYPE,
      </if>
      <if test="targetBound != null">
        TARGET_BOUND,
      </if>
      <if test="targetFlag != null">
        TARGET_FLAG,
      </if>
      <if test="examinTime != null">
        EXAMIN_TIME,
      </if>
      <if test="trackNo != null">
        TRACK_NO,
      </if>
      <if test="trackContent != null">
        TRACK_CONTENT,
      </if>
      <if test="trackWarm != null">
        TRACK_WARM,
      </if>
      <if test="warmTime != null">
        WARM_TIME,
      </if>
      <if test="warmContent != null">
        WARM_CONTENT,
      </if>
      <if test="trackKey != null">
        TRACK_KEY,
      </if>
      <if test="creatorUid != null">
        CREATOR_UID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="useage != null">
        USEAGE,
      </if>
      <if test="caseNo != null">
        CASE_NO,
      </if>
      <if test="targetUseage != null">
        TARGET_USEAGE,
      </if>
      <if test="indexShow != null">
        INDEX_SHOW,
      </if>
      <if test="keyNum != null">
        KEY_NUM,
      </if>
      <if test="targetDept != null">
        TARGET_DEPT,
      </if>
      <if test="includeTrack != null">
        INCLUDE_TRACK,
      </if>
      <if test="trackResult != null">
        TRACK_RESULT,
      </if>
      <if test="organizationName != null">
        ORGANIZATION_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{trackId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseStatus != null">
        #{caseStatus,jdbcType=TINYINT},
      </if>
      <if test="trackType != null">
        #{trackType,jdbcType=TINYINT},
      </if>
      <if test="trackClassic != null">
        #{trackClassic,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null">
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="targetNo != null">
        #{targetNo,jdbcType=VARCHAR},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=TINYINT},
      </if>
      <if test="targetBound != null">
        #{targetBound,jdbcType=TINYINT},
      </if>
      <if test="targetFlag != null">
        #{targetFlag,jdbcType=BIT},
      </if>
      <if test="examinTime != null">
        #{examinTime,jdbcType=VARCHAR},
      </if>
      <if test="trackNo != null">
        #{trackNo,jdbcType=VARCHAR},
      </if>
      <if test="trackContent != null">
        #{trackContent,jdbcType=VARCHAR},
      </if>
      <if test="trackWarm != null">
        #{trackWarm,jdbcType=BIT},
      </if>
      <if test="warmTime != null">
        #{warmTime,jdbcType=VARCHAR},
      </if>
      <if test="warmContent != null">
        #{warmContent,jdbcType=VARCHAR},
      </if>
      <if test="trackKey != null">
        #{trackKey,jdbcType=BIT},
      </if>
      <if test="creatorUid != null">
        #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=VARCHAR},
      </if>
      <if test="useage != null">
        #{useage,jdbcType=TINYINT},
      </if>
      <if test="caseNo != null">
        #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="targetUseage != null">
        #{targetUseage,jdbcType=TINYINT},
      </if>
      <if test="indexShow != null">
        #{indexShow,jdbcType=BIT},
      </if>
      <if test="keyNum != null">
        #{keyNum,jdbcType=VARCHAR},
      </if>
      <if test="targetDept != null">
        #{targetDept,jdbcType=INTEGER},
      </if>
      <if test="includeTrack != null">
        #{includeTrack,jdbcType=TINYINT},
      </if>
      <if test="trackResult != null">
        #{trackResult,jdbcType=TINYINT},
      </if>
      <if test="organizationName != null">
        #{organizationName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
	<select id="selectPhoneErrorList" resultMap="BaseResultMap">
		SELECT CASE_ID,CASE_TYPE
		from FUN_TRACK where creation_time &gt;= '2017-06-16'
		and creation_time &lt;= '2017-06-26 13:15:00'
		and track_content like '%共有人电话:%'
		GROUP BY CASE_ID,CASE_TYPE
	</select>
	
	<select id="getTrackDeal" resultMap="BaseResultMap">
		SELECT CASE_ID,CASE_TYPE,TRACK_ID
		from FUN_TRACK where 
		CASE_ID = #{caseId}
		and CASE_TYPE = #{caseType}
		and TRACK_TYPE = '14'
		and CASE_STATUS = '5'
		and CONVERT (VARCHAR (10),CREATION_TIME,120) = CONVERT (VARCHAR (10),'${createTime}',120) 
	</select>
	
	<select id="getCaseStatusByTrackIds" resultMap="BaseResultMap">
		SELECT TRACK_ID,CASE_STATUS
		from FUN_TRACK where 
		TRACK_ID IN
		<foreach close=")" collection="arrs" item="trackId" open="(" separator=",">
          #{trackId}
        </foreach>
	</select>
	
	<select id="getByTrackIds" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		from FUN_TRACK 
		where TRACK_ID IN
		<foreach close=")" collection="recordIds" item="item" open="(" separator=",">
			#{item}
		</foreach>
		order by TRACK_ID DESC
	</select>
	
	<select id="getTrackResultById" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
        from FUN_TRACK where TRACK_ID = #{trackId} and TRACK_RESULT = 1
	</select>
	
	<select id="getTrackIds" resultType="java.lang.Integer">
		SELECT TRACK_ID
		FROM FUN_TRACK
		WHERE COMP_ID = #{compId}
		AND CASE_ID = #{caseId} AND CASE_TYPE = #{caseType}
		AND TARGET_FLAG IS NULL AND CASE_STATUS IN
		<foreach close=")" collection="caseStatus" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</select>
	
	<update id="updateTargetFlag">
		UPDATE FUN_TRACK SET TARGET_FLAG=#{targetFlag} WHERE  COMP_ID = #{compId}
		AND TRACK_ID IN
		<foreach close=")" collection="trackIds" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</update>
	
	<select id="getErpFunTrackList" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from FUN_TRACK
		where COMP_ID = #{param.compId} and CASE_TYPE = #{param.caseType} and CASE_ID IN
		<foreach close=")" collection="param.caseIds" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</select>
	
	<update id="updateFunTrackById">
		UPDATE FUN_TRACK SET TARGET_FLAG=#{targetFlag} WHERE  COMP_ID = #{compId} AND TRACK_ID IN 
		<foreach close=")" collection="trackIds" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</update>
	
	<select id="getBasicDaiKanHotrankHouse" resultType="java.util.Map">
		SELECT TOP 10 TARGET_ID caseId, TARGET_TYPE caseType, COUNT(1) counts
		FROM FUN_TRACK
		WHERE COMP_ID = #{compId} AND TRACK_TYPE = 4 AND TARGET_FLAG = 1
		AND CREATION_TIME &gt;= #{startTime} AND TARGET_TYPE IN (1, 2) AND CASE_USER_ID = #{userId}
		GROUP BY TARGET_ID, TARGET_TYPE
		ORDER BY COUNT(1) DESC
	</select>
	
	<select id="getBasicDaiKanHotrankCust" resultType="java.util.Map">
		SELECT TOP 10 CASE_ID caseId, CASE_TYPE caseType, COUNT(1) counts
		FROM FUN_TRACK
		WHERE COMP_ID = #{compId} AND TRACK_TYPE = 4 AND TARGET_FLAG = 1
		AND CREATION_TIME &gt;= #{startTime} AND CASE_TYPE IN (3, 4) AND CASE_USER_ID = #{userId}
		GROUP BY CASE_ID, CASE_TYPE
		ORDER BY COUNT(1) DESC
	</select>
	
	<select id="getCount" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM FUN_TRACK
		WHERE COMP_ID = #{compId} AND CASE_TYPE = #{caseType} AND TRACK_TYPE =#{trackType} AND CREATOR_UID = #{userId} 
		AND CREATION_TIME &gt;=#{startDate} AND CREATION_TIME &lt;=#{endDate} AND TARGET_FLAG=#{targetFlag}
	</select>
	
	<select id="getTrackZhList" resultType="java.util.Map">
		SELECT CASE_ID caseId,CASE_TYPE caseType FROM FUN_TRACK
		WHERE TRACK_TYPE = 27
		AND COMP_ID = #{compId}
		AND CREATION_TIME &gt;= #{startTime}
	</select>

  <select id="getkeyTrackInfo" resultType="java.util.Map">
    select top 1 TRACK_CONTENT trackContent,B.USER_NAME trackUserName,B.USER_MOBILE trackUserMobile
    from FUN_TRACK A LEFT join FUN_USERS B ON A.CREATOR_UID=B.USER_ID
    where A.CASE_ID=#{caseId} and A.CASE_TYPE=#{caseType} and A.TRACK_TYPE =#{trackType}
    order by A.CREATION_TIME desc
  </select>

  <select id="getErpFunTrackByMap" resultMap="BaseResultMap">
    select TRACK_ID from FUN_TRACK where COMP_ID=#{param.compId} and CASE_TYPE=#{param.caseType}
    and CASE_ID IN
    <foreach close=")" collection="param.caseIds" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and TARGET_FLAG is null
    and CASE_STATUS IN
    <foreach close=")" collection="param.caseStatus" item="item" open="(" separator=",">
    #{item}
    </foreach>
  </select>

  <insert id="insertFunTrackByList" parameterType="java.util.ArrayList" useGeneratedKeys="true">
     INSERT INTO FUN_TRACK (TRACK_ID,CREATION_TIME,CREATOR_UID,COMP_ID,DEPT_ID,CASE_TYPE,TRACK_TYPE,
     TRACK_CLASSIC,TRACK_WARM,TRACK_CONTENT,CASE_ID,CASE_NO,CASE_USER_ID,CASE_DEPT_ID) values
    <foreach close=";" collection="list" index="index" item="item" separator=",">
      ( (NEXT VALUE FOR SEQ_FUN_TRACK_TRACK_ID),#{item.creationTime},#{item.creatorUid},#{item.compId},#{item.deptId},#{item.caseType},#{item.trackType},
      #{item.trackClassic},#{item.trackWarm},#{item.trackContent},#{item.caseId},#{item.caseNo},#{item.caseUserId},#{item.caseDeptId})
    </foreach>
  </insert>

	<update id="updateTrackByCaseId">
		UPDATE A SET A.COMP_ID = #{erpFunUsers.compId},A.DEPT_ID = #{erpFunUsers.deptId}
		FROM FUN_TRACK A 
		<choose>
			<when test="1 == caseType">
				JOIN FUN_SALE B ON A.CASE_ID = B.SALE_ID WHERE A.CASE_TYPE = 1 
			</when>
			<when test="2 == caseType">
				JOIN FUN_LEASE B ON A.CASE_ID = B.LEASE_ID WHERE A.CASE_TYPE = 2 
			</when>
			<when test="3 == caseType">
				JOIN FUN_BUY_CUSTOMER B ON A.CASE_ID = B.BUY_CUST_ID WHERE A.CASE_TYPE = 3 
			</when>
			<when test="4 == caseType">
				JOIN FUN_RENT_CUSTOMER B ON A.CASE_ID = B.RENT_CUST_ID WHERE A.CASE_TYPE = 4 
			</when>
		</choose>
		AND B.USER_ID = #{erpFunUsers.userId}
	</update>

	<select id="getErpFunTrackDtoList" resultMap="ErpFunTrackDtoMap">
		select
		<include refid="Base_Column_List" />
		from ${queryTable}
		where TRACK_ID in
		<foreach close=")" collection="trackIdsList" item="item" open="(" separator=",">
			#{item}
		</foreach>
		<if test="trackTypeList != null and trackTypeList.size()&gt;0">
			AND TRACK_TYPE in
			<foreach close=")" collection="trackTypeList" item="item" open="(" separator=",">
				#{item}
			</foreach>
		</if>
	</select>
	
	<select id="getErpFunTrackRentCustomerList" resultMap="BaseResultMap">
		select CASE_ID,CASE_TYPE,CREATION_TIME,TARGET_ID,TARGET_TYPE,CREATOR_UID
		from FUN_TRACK
		where COMP_ID = #{compId} and TRACK_TYPE = 4 and TARGET_FLAG = 1 and
		((CASE_TYPE = #{caseType} and CASE_ID in
		<foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
			#{caseId}
		</foreach>) or (TARGET_TYPE = #{caseType} and TARGET_ID in
		<foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
			#{caseId}
		</foreach>
		))
        <if test="caseType == 3">
          order by CREATION_TIME DESC
        </if>
	</select>
	
	<select id="getErpFunTrackNo" resultType="java.lang.String">
		select TOP 1 TRACK_NO
		from FUN_TRACK
		where CASE_TYPE = #{caseType} and TRACK_TYPE = #{trackType} and TARGET_FLAG = #{targetFlag} and CASE_ID = #{caseId}
		order by TRACK_ID DESC
	</select>


<!-- 	<select id="getErpFunTrackDtoList" resultMap="ErpFunTrackDtoMap">
		select
		<include refid="Base_Column_List" />
		from FUN_TRACK
		where TRACK_ID in
		<foreach close=")" collection="trackIdsList" item="item" open="(" separator=",">
			#{item}
		</foreach>
		<if test="trackTypeList != null and trackTypeList.size()>0">
			AND TRACK_TYPE in
			<foreach close=")" collection="trackTypeList" item="item" open="(" separator=",">
				#{item}
			</foreach>
		</if>
	</select> -->

	<select id="getYsTrackByCaseIds" resultMap="BaseResultMap">
		SELECT
		MAX(TRACK_ID) TRACK_ID,CASE_ID,CASE_TYPE,CREATOR_UID
		FROM FUN_TRACK WHERE COMP_ID = #{compId} AND TARGET_FLAG = 1
		AND CASE_TYPE = #{caseType}
		AND TRACK_TYPE = #{trackType}
		AND CASE_ID IN
		<foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
			#{caseId}
		</foreach>
		GROUP BY CASE_ID,CASE_TYPE,CREATOR_UID
	</select>

	<select id="getFunTrackByCaseIds" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM FUN_TRACK WHERE COMP_ID = #{compId} AND TARGET_FLAG = 1
		AND CASE_TYPE = #{caseType}
		AND TRACK_TYPE = #{trackType}
		<if test="null != caseIds and caseIds.size &gt; 0">
			AND CASE_ID IN
			<foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
				#{caseId}
			</foreach>
		</if>
		<if test="null != deptIds and deptIds.size &gt; 0">
			AND DEPT_ID IN
			<foreach close=")" collection="deptIds" index="index" item="deptId" open="(" separator=",">
				#{deptId}
			</foreach>
		</if>
		<if test="null != grId">and GR_ID = #{grId}</if>
		<if test="null != userId">and CREATOR_UID = #{userId}</if>
		<if test="null != startTime and startTime != ''"> and CREATION_TIME &gt;= #{startTime}</if>
		<if test="null != endTime and endTime != ''">
			AND CREATION_TIME &lt;= #{endTime}
		</if>
		ORDER BY CREATION_TIME DESC
	</select>


    <select id="getFunTrackByCaseIdsForOrg" resultMap="BaseResultMap">
      SELECT
      <include refid="Base_Column_List" />
      FROM FUN_TRACK WHERE COMP_ID = #{compId} AND TARGET_FLAG = 1
      AND TRACK_TYPE = #{trackType}
      <if test="caseType!=null">
        AND CASE_TYPE = #{caseType}
      </if>
      <if test="null != caseIds and caseIds.size &gt; 0">
        AND CASE_ID IN
        <foreach close=")" collection="caseIds" index="index" item="caseId" open="(" separator=",">
          #{caseId}
        </foreach>
      </if>
      <if test="whereCause!=null and whereCause!=''">
        and ${whereCause}
      </if>
      <if test="partnerIds != null and partnerIds.size &gt;0 ">
        and PARTNER_ID in
        <foreach close=")" collection="partnerIds" item="id" open="(" separator=",">
          #{id}
        </foreach>
      </if>
      <if test="null != userId">
        and CREATOR_UID = #{userId}
      </if>
      <if test="null != startTime and startTime != ''">
        and CREATION_TIME &gt;= #{startTime}
      </if>
      <if test="null != endTime and endTime != ''">
        AND CREATION_TIME &lt;= #{endTime}
      </if>
      ORDER BY CREATION_TIME DESC
    </select>

  <select id="countDataByCaseIdsAndTrackType" resultType="com.myfun.erpWeb.managecenter.constract.vo.CommonSelectVO">
    select case_id selectKey,count(1) selectValue
    from FUN_TRACK where comp_id=#{compId}
    and track_type=#{trackType} and case_type=#{caseType} AND TRACK_CLASSIC = '[ 封盘到期 ]'
    and case_id in <foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
    #{caseId}
  </foreach>
    group by case_id
  </select>
  
  <select id="selectByOneExample" parameterType="com.myfun.repository.erpdb.po.ErpFunTrackExample" resultMap="BaseResultMap">
    select TOP 1
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_TRACK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <insert id="insertBatchForTransForSale">
    INSERT INTO FUN_TRACK (TRACK_ID,CREATION_TIME,CREATOR_UID,COMP_ID,DEPT_ID,CASE_TYPE,TRACK_TYPE,TRACK_CLASSIC,
    TRACK_WARM,TRACK_CONTENT,CASE_ID,CASE_NO,CASE_USER_ID,ORGANIZATION_ID,ORGANIZATION_NAME,ORGANIZATION_PATH,CASE_ORGANIZATION_ID,CREATOR_USER_NAME)
    SELECT NEXT VALUE FOR SEQ_FUN_TRACK_TRACK_ID, getdate(), #{currentUserId},#{compId},#{currentDeptId},#{caseType},#{trackType},#{trackClassic},
    0,#{content},SALE_ID,SALE_NO,#{srcUserId},#{createOrganizationId},#{createOrganizationName},#{createOrganizationPath},#{caseOrganizationId},#{createUsername}
    FROM FUN_SALE WHERE COMP_ID = #{compId} AND USER_ID = #{srcUserId}
<!--    <foreach collection="caseList" item="salePo" separator=",">-->
<!--      (NEXT VALUE FOR SEQ_FUN_TRACK_TRACK_ID, getdate(), #{currentUserId},#{compId},#{currentDeptId},#{caseType},#{trackType},#{trackClassic},-->
<!--      0,#{content},#{salePo.saleId},#{salePo.saleNo},#{srcUserId},#{createOrganizationId},#{createOrganizationName},#{createOrganizationPath},#{caseOrganizationId},#{createUsername})-->
<!--    </foreach>-->
  </insert>

  <insert id="insertBatchForTransForLease">
    INSERT INTO FUN_TRACK (TRACK_ID,CREATION_TIME,CREATOR_UID,COMP_ID,DEPT_ID,CASE_TYPE,TRACK_TYPE,TRACK_CLASSIC,
    TRACK_WARM,TRACK_CONTENT,CASE_ID,CASE_NO,CASE_USER_ID,ORGANIZATION_ID,ORGANIZATION_NAME,ORGANIZATION_PATH,CASE_ORGANIZATION_ID,CREATOR_USER_NAME)
    SELECT NEXT VALUE FOR SEQ_FUN_TRACK_TRACK_ID, getdate(), #{currentUserId},#{compId},#{currentDeptId},#{caseType},#{trackType},#{trackClassic},
    0,#{content},LEASE_ID,LEASE_NO,#{srcUserId},#{createOrganizationId},#{createOrganizationName},#{createOrganizationPath},#{caseOrganizationId},#{createUsername}
    FROM FUN_LEASE WHERE COMP_ID = #{compId} AND USER_ID = #{srcUserId}
<!--    <foreach collection="caseList" item="salePo" separator=",">-->
<!--      (NEXT VALUE FOR SEQ_FUN_TRACK_TRACK_ID, getdate(), #{currentUserId},#{compId},#{currentDeptId},#{caseType},#{trackType},#{trackClassic},-->
<!--      0,#{content},#{salePo.leaseId},#{salePo.leaseNo},#{srcUserId},#{createOrganizationId},#{createOrganizationName},#{createOrganizationPath},#{caseOrganizationId},#{createUsername})-->
<!--    </foreach>-->
  </insert>

  <insert id="insertBatchForTransForBuyCust">
    INSERT INTO FUN_TRACK (TRACK_ID,CREATION_TIME,CREATOR_UID,COMP_ID,DEPT_ID,CASE_TYPE,TRACK_TYPE,TRACK_CLASSIC,
    TRACK_WARM,TRACK_CONTENT,CASE_ID,CASE_NO,CASE_USER_ID,ORGANIZATION_ID,ORGANIZATION_NAME,ORGANIZATION_PATH,CASE_ORGANIZATION_ID,CREATOR_USER_NAME)
    select NEXT VALUE FOR SEQ_FUN_TRACK_TRACK_ID, getdate(), #{currentUserId},#{compId},#{currentDeptId},#{caseType},#{trackType},#{trackClassic},
    0,#{content},BUY_CUST_ID,BUY_CUST_NO,#{srcUserId},#{createOrganizationId},#{createOrganizationName},#{createOrganizationPath},#{caseOrganizationId},#{createUsername}
    FROM FUN_BUY_CUSTOMER WHERE COMP_ID = #{compId} AND USER_ID = #{srcUserId}
<!--    <foreach collection="caseList" item="salePo" separator=",">-->
<!--      ( NEXT VALUE FOR SEQ_FUN_TRACK_TRACK_ID, getdate(), #{currentUserId},#{compId},#{currentDeptId},#{caseType},#{trackType},#{trackClassic},-->
<!--      0,#{content},#{salePo.buyCustId},#{salePo.buyCustNo},#{srcUserId},#{createOrganizationId},#{createOrganizationName},#{createOrganizationPath},#{caseOrganizationId},#{createUsername})-->
<!--    </foreach>-->
  </insert>

  <insert id="insertBatchForTransForRentCust">
    INSERT INTO FUN_TRACK (TRACK_ID,CREATION_TIME,CREATOR_UID,COMP_ID,DEPT_ID,CASE_TYPE,TRACK_TYPE,TRACK_CLASSIC,
    TRACK_WARM,TRACK_CONTENT,CASE_ID,CASE_NO,CASE_USER_ID,ORGANIZATION_ID,ORGANIZATION_NAME,ORGANIZATION_PATH,CASE_ORGANIZATION_ID,CREATOR_USER_NAME)
    select NEXT VALUE FOR SEQ_FUN_TRACK_TRACK_ID, getdate(), #{currentUserId},#{compId},#{currentDeptId},#{caseType},#{trackType},#{trackClassic},
    0,#{content},RENT_CUST_ID,RENT_CUST_NO,#{srcUserId},#{createOrganizationId},#{createOrganizationName},#{createOrganizationPath},#{caseOrganizationId},#{createUsername}
    FROM FUN_RENT_CUSTOMER WHERE COMP_ID = #{compId} AND USER_ID = #{srcUserId}
<!--    <foreach collection="caseList" item="salePo" separator=",">-->
<!--      (NEXT VALUE FOR SEQ_FUN_TRACK_TRACK_ID, getdate(), #{currentUserId},#{compId},#{currentDeptId},#{caseType},#{trackType},#{trackClassic},-->
<!--      0,#{content},#{salePo.rentCustId},#{salePo.rentCustNo},#{srcUserId},#{createOrganizationId},#{createOrganizationName},#{createOrganizationPath},#{caseOrganizationId},#{createUsername})-->
<!--    </foreach>-->
  </insert>
  <select id="countTakeLookTime" resultType="java.util.Map">
    select TARGET_ID as caseId, TARGET_TYPE as caseType, COUNT(*) as count
    from FUN_TRACK
    where
    COMP_ID = #{compId}
    and CREATOR_UID = #{userId}
    <if test="saleId != null and leaseId != null">
      and
      ((TARGET_ID IN
      <foreach collection="saleId" separator="," open="(" close=")" item="caseId">
        #{caseId}
      </foreach>
      and TARGET_TYPE = 1)
      or
      (TARGET_ID IN
      <foreach collection="leaseId" separator="," open="(" close=")" item="caseId">
        #{caseId}
      </foreach>
      and TARGET_TYPE = 2))
    </if>
    <if test="saleId != null and leaseId == null">
      and
      TARGET_ID IN
      <foreach collection="saleId" separator="," open="(" close=")" item="caseId">
        #{caseId}
      </foreach>
      and TARGET_TYPE = 1
    </if>
    <if test="saleId == null and leaseId != null">
      and
      TARGET_ID IN
      <foreach collection="leaseId" separator="," open="(" close=")" item="caseId">
        #{caseId}
      </foreach>
      and TARGET_TYPE = 2
    </if>
    GROUP BY TARGET_ID,TARGET_TYPE
  </select>
  <select id="getTrackByIdAndTable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from ${queryTable}
    where COMP_ID = #{compId} AND IS_DEL != 1
    AND TRACK_ID = #{trackId}
  </select>

</mapper>