<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpTaskAssessmentTargetMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpTaskAssessmentTarget">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="SALARY_TYPE_ID" jdbcType="INTEGER" property="salaryTypeId" />
    <result column="STANRDASSESSMENT_TARGET_ID" jdbcType="INTEGER" property="stanrdassessmentTargetId" />
    <result column="TASK_PERCENT" jdbcType="NUMERIC" property="taskPercent" />
    <result column="HOUSE_ADD_COUNT" jdbcType="INTEGER" property="houseAddCount" />
    <result column="PER_HOUSE_MONEY" jdbcType="NUMERIC" property="perHouseMoney" />
    <result column="CUST_ADD_COUNT" jdbcType="INTEGER" property="custAddCount" />
    <result column="PER_CUST_MONEY" jdbcType="NUMERIC" property="perCustMoney" />
    <result column="FANKAN_COUNT" jdbcType="INTEGER" property="fankanCount" />
    <result column="PER_FANKAN_MONEY" jdbcType="NUMERIC" property="perFankanMoney" />
    <result column="DAIKAN_COUNT" jdbcType="INTEGER" property="daikanCount" />
    <result column="PER_DAIKAN_MONEY" jdbcType="NUMERIC" property="perDaikanMoney" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="SALARY_MONEY" jdbcType="NUMERIC" property="salaryMoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, SALARY_TYPE_ID, STANRDASSESSMENT_TARGET_ID, TASK_PERCENT, HOUSE_ADD_COUNT, 
    PER_HOUSE_MONEY, CUST_ADD_COUNT, PER_CUST_MONEY, FANKAN_COUNT, PER_FANKAN_MONEY, 
    DAIKAN_COUNT, PER_DAIKAN_MONEY, CREATION_TIME, SALARY_MONEY
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpTaskAssessmentTargetExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TASK_ASSESSMENT_TARGET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from TASK_ASSESSMENT_TARGET
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from TASK_ASSESSMENT_TARGET
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpTaskAssessmentTargetExample">
    <!--@mbggenerated-->
    delete from TASK_ASSESSMENT_TARGET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpTaskAssessmentTarget" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into TASK_ASSESSMENT_TARGET (COMP_ID, SALARY_TYPE_ID, STANRDASSESSMENT_TARGET_ID, 
      TASK_PERCENT, HOUSE_ADD_COUNT, PER_HOUSE_MONEY, 
      CUST_ADD_COUNT, PER_CUST_MONEY, FANKAN_COUNT, 
      PER_FANKAN_MONEY, DAIKAN_COUNT, PER_DAIKAN_MONEY, 
      CREATION_TIME, SALARY_MONEY)
    values (#{compId,jdbcType=INTEGER}, #{salaryTypeId,jdbcType=INTEGER}, #{stanrdassessmentTargetId,jdbcType=INTEGER}, 
      #{taskPercent,jdbcType=NUMERIC}, #{houseAddCount,jdbcType=INTEGER}, #{perHouseMoney,jdbcType=NUMERIC}, 
      #{custAddCount,jdbcType=INTEGER}, #{perCustMoney,jdbcType=NUMERIC}, #{fankanCount,jdbcType=INTEGER}, 
      #{perFankanMoney,jdbcType=NUMERIC}, #{daikanCount,jdbcType=INTEGER}, #{perDaikanMoney,jdbcType=NUMERIC}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{salaryMoney,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpTaskAssessmentTarget" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into TASK_ASSESSMENT_TARGET
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="salaryTypeId != null">
        SALARY_TYPE_ID,
      </if>
      <if test="stanrdassessmentTargetId != null">
        STANRDASSESSMENT_TARGET_ID,
      </if>
      <if test="taskPercent != null">
        TASK_PERCENT,
      </if>
      <if test="houseAddCount != null">
        HOUSE_ADD_COUNT,
      </if>
      <if test="perHouseMoney != null">
        PER_HOUSE_MONEY,
      </if>
      <if test="custAddCount != null">
        CUST_ADD_COUNT,
      </if>
      <if test="perCustMoney != null">
        PER_CUST_MONEY,
      </if>
      <if test="fankanCount != null">
        FANKAN_COUNT,
      </if>
      <if test="perFankanMoney != null">
        PER_FANKAN_MONEY,
      </if>
      <if test="daikanCount != null">
        DAIKAN_COUNT,
      </if>
      <if test="perDaikanMoney != null">
        PER_DAIKAN_MONEY,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="salaryMoney != null">
        SALARY_MONEY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="salaryTypeId != null">
        #{salaryTypeId,jdbcType=INTEGER},
      </if>
      <if test="stanrdassessmentTargetId != null">
        #{stanrdassessmentTargetId,jdbcType=INTEGER},
      </if>
      <if test="taskPercent != null">
        #{taskPercent,jdbcType=NUMERIC},
      </if>
      <if test="houseAddCount != null">
        #{houseAddCount,jdbcType=INTEGER},
      </if>
      <if test="perHouseMoney != null">
        #{perHouseMoney,jdbcType=NUMERIC},
      </if>
      <if test="custAddCount != null">
        #{custAddCount,jdbcType=INTEGER},
      </if>
      <if test="perCustMoney != null">
        #{perCustMoney,jdbcType=NUMERIC},
      </if>
      <if test="fankanCount != null">
        #{fankanCount,jdbcType=INTEGER},
      </if>
      <if test="perFankanMoney != null">
        #{perFankanMoney,jdbcType=NUMERIC},
      </if>
      <if test="daikanCount != null">
        #{daikanCount,jdbcType=INTEGER},
      </if>
      <if test="perDaikanMoney != null">
        #{perDaikanMoney,jdbcType=NUMERIC},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="salaryMoney != null">
        #{salaryMoney,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpTaskAssessmentTargetExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from TASK_ASSESSMENT_TARGET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update TASK_ASSESSMENT_TARGET
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.salaryTypeId != null">
        SALARY_TYPE_ID = #{record.salaryTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.stanrdassessmentTargetId != null">
        STANRDASSESSMENT_TARGET_ID = #{record.stanrdassessmentTargetId,jdbcType=INTEGER},
      </if>
      <if test="record.taskPercent != null">
        TASK_PERCENT = #{record.taskPercent,jdbcType=NUMERIC},
      </if>
      <if test="record.houseAddCount != null">
        HOUSE_ADD_COUNT = #{record.houseAddCount,jdbcType=INTEGER},
      </if>
      <if test="record.perHouseMoney != null">
        PER_HOUSE_MONEY = #{record.perHouseMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.custAddCount != null">
        CUST_ADD_COUNT = #{record.custAddCount,jdbcType=INTEGER},
      </if>
      <if test="record.perCustMoney != null">
        PER_CUST_MONEY = #{record.perCustMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.fankanCount != null">
        FANKAN_COUNT = #{record.fankanCount,jdbcType=INTEGER},
      </if>
      <if test="record.perFankanMoney != null">
        PER_FANKAN_MONEY = #{record.perFankanMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.daikanCount != null">
        DAIKAN_COUNT = #{record.daikanCount,jdbcType=INTEGER},
      </if>
      <if test="record.perDaikanMoney != null">
        PER_DAIKAN_MONEY = #{record.perDaikanMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.salaryMoney != null">
        SALARY_MONEY = #{record.salaryMoney,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update TASK_ASSESSMENT_TARGET
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      SALARY_TYPE_ID = #{record.salaryTypeId,jdbcType=INTEGER},
      STANRDASSESSMENT_TARGET_ID = #{record.stanrdassessmentTargetId,jdbcType=INTEGER},
      TASK_PERCENT = #{record.taskPercent,jdbcType=NUMERIC},
      HOUSE_ADD_COUNT = #{record.houseAddCount,jdbcType=INTEGER},
      PER_HOUSE_MONEY = #{record.perHouseMoney,jdbcType=NUMERIC},
      CUST_ADD_COUNT = #{record.custAddCount,jdbcType=INTEGER},
      PER_CUST_MONEY = #{record.perCustMoney,jdbcType=NUMERIC},
      FANKAN_COUNT = #{record.fankanCount,jdbcType=INTEGER},
      PER_FANKAN_MONEY = #{record.perFankanMoney,jdbcType=NUMERIC},
      DAIKAN_COUNT = #{record.daikanCount,jdbcType=INTEGER},
      PER_DAIKAN_MONEY = #{record.perDaikanMoney,jdbcType=NUMERIC},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      SALARY_MONEY = #{record.salaryMoney,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpTaskAssessmentTarget">
    <!--@mbggenerated-->
    update TASK_ASSESSMENT_TARGET
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="salaryTypeId != null">
        SALARY_TYPE_ID = #{salaryTypeId,jdbcType=INTEGER},
      </if>
      <if test="stanrdassessmentTargetId != null">
        STANRDASSESSMENT_TARGET_ID = #{stanrdassessmentTargetId,jdbcType=INTEGER},
      </if>
      <if test="taskPercent != null">
        TASK_PERCENT = #{taskPercent,jdbcType=NUMERIC},
      </if>
      <if test="houseAddCount != null">
        HOUSE_ADD_COUNT = #{houseAddCount,jdbcType=INTEGER},
      </if>
      <if test="perHouseMoney != null">
        PER_HOUSE_MONEY = #{perHouseMoney,jdbcType=NUMERIC},
      </if>
      <if test="custAddCount != null">
        CUST_ADD_COUNT = #{custAddCount,jdbcType=INTEGER},
      </if>
      <if test="perCustMoney != null">
        PER_CUST_MONEY = #{perCustMoney,jdbcType=NUMERIC},
      </if>
      <if test="fankanCount != null">
        FANKAN_COUNT = #{fankanCount,jdbcType=INTEGER},
      </if>
      <if test="perFankanMoney != null">
        PER_FANKAN_MONEY = #{perFankanMoney,jdbcType=NUMERIC},
      </if>
      <if test="daikanCount != null">
        DAIKAN_COUNT = #{daikanCount,jdbcType=INTEGER},
      </if>
      <if test="perDaikanMoney != null">
        PER_DAIKAN_MONEY = #{perDaikanMoney,jdbcType=NUMERIC},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="salaryMoney != null">
        SALARY_MONEY = #{salaryMoney,jdbcType=NUMERIC},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpTaskAssessmentTarget">
    <!--@mbggenerated-->
    update TASK_ASSESSMENT_TARGET
    set COMP_ID = #{compId,jdbcType=INTEGER},
      SALARY_TYPE_ID = #{salaryTypeId,jdbcType=INTEGER},
      STANRDASSESSMENT_TARGET_ID = #{stanrdassessmentTargetId,jdbcType=INTEGER},
      TASK_PERCENT = #{taskPercent,jdbcType=NUMERIC},
      HOUSE_ADD_COUNT = #{houseAddCount,jdbcType=INTEGER},
      PER_HOUSE_MONEY = #{perHouseMoney,jdbcType=NUMERIC},
      CUST_ADD_COUNT = #{custAddCount,jdbcType=INTEGER},
      PER_CUST_MONEY = #{perCustMoney,jdbcType=NUMERIC},
      FANKAN_COUNT = #{fankanCount,jdbcType=INTEGER},
      PER_FANKAN_MONEY = #{perFankanMoney,jdbcType=NUMERIC},
      DAIKAN_COUNT = #{daikanCount,jdbcType=INTEGER},
      PER_DAIKAN_MONEY = #{perDaikanMoney,jdbcType=NUMERIC},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      SALARY_MONEY = #{salaryMoney,jdbcType=NUMERIC}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>