<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpCompRoleOpersMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpCompRoleOpers">
    <!--@mbggenerated-->
    <id column="AUTO_ID" jdbcType="INTEGER" property="autoId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="OPER_ID" jdbcType="VARCHAR" property="operId" />
    <result column="OPER_TYPE" jdbcType="INTEGER" property="operType" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="SOURCE_COMP_ID" jdbcType="INTEGER" property="sourceCompId" />
    <result column="GROUP_ID" jdbcType="INTEGER" property="groupId" />
    <result column="PARTNER_OPER" jdbcType="TINYINT" property="partnerOper" />
    <result column="ORGANIZATION_DEFINITION_ID" jdbcType="INTEGER" property="organizationDefinitionId" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    AUTO_ID, COMP_ID, ROLE_ID, OPER_ID, OPER_TYPE, DEPT_ID, REG_ID, AREA_ID, SOURCE_COMP_ID, 
    GROUP_ID, PARTNER_OPER, ORGANIZATION_DEFINITION_ID, ORGANIZATION_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpCompRoleOpersExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from COMP_ROLE_OPERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from COMP_ROLE_OPERS
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from COMP_ROLE_OPERS
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpCompRoleOpersExample">
    <!--@mbggenerated-->
    delete from COMP_ROLE_OPERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="autoId" parameterType="com.myfun.repository.erpdb.po.ErpCompRoleOpers" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into COMP_ROLE_OPERS (COMP_ID, ROLE_ID, OPER_ID, 
      OPER_TYPE, DEPT_ID, REG_ID, 
      AREA_ID, SOURCE_COMP_ID, GROUP_ID, 
      PARTNER_OPER, ORGANIZATION_DEFINITION_ID, 
      ORGANIZATION_ID)
    values (#{compId,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{operId,jdbcType=VARCHAR}, 
      #{operType,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{regId,jdbcType=INTEGER}, 
      #{areaId,jdbcType=INTEGER}, #{sourceCompId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, 
      #{partnerOper,jdbcType=TINYINT}, #{organizationDefinitionId,jdbcType=INTEGER}, 
      #{organizationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="autoId" parameterType="com.myfun.repository.erpdb.po.ErpCompRoleOpers" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into COMP_ROLE_OPERS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="operId != null">
        OPER_ID,
      </if>
      <if test="operType != null">
        OPER_TYPE,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="sourceCompId != null">
        SOURCE_COMP_ID,
      </if>
      <if test="groupId != null">
        GROUP_ID,
      </if>
      <if test="partnerOper != null">
        PARTNER_OPER,
      </if>
      <if test="organizationDefinitionId != null">
        ORGANIZATION_DEFINITION_ID,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="operId != null">
        #{operId,jdbcType=VARCHAR},
      </if>
      <if test="operType != null">
        #{operType,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="sourceCompId != null">
        #{sourceCompId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="partnerOper != null">
        #{partnerOper,jdbcType=TINYINT},
      </if>
      <if test="organizationDefinitionId != null">
        #{organizationDefinitionId,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpCompRoleOpersExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from COMP_ROLE_OPERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update COMP_ROLE_OPERS
    <set>
      <if test="record.autoId != null">
        AUTO_ID = #{record.autoId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.operId != null">
        OPER_ID = #{record.operId,jdbcType=VARCHAR},
      </if>
      <if test="record.operType != null">
        OPER_TYPE = #{record.operType,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.sourceCompId != null">
        SOURCE_COMP_ID = #{record.sourceCompId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.partnerOper != null">
        PARTNER_OPER = #{record.partnerOper,jdbcType=TINYINT},
      </if>
      <if test="record.organizationDefinitionId != null">
        ORGANIZATION_DEFINITION_ID = #{record.organizationDefinitionId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update COMP_ROLE_OPERS
    set AUTO_ID = #{record.autoId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      OPER_ID = #{record.operId,jdbcType=VARCHAR},
      OPER_TYPE = #{record.operType,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      SOURCE_COMP_ID = #{record.sourceCompId,jdbcType=INTEGER},
      GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      PARTNER_OPER = #{record.partnerOper,jdbcType=TINYINT},
      ORGANIZATION_DEFINITION_ID = #{record.organizationDefinitionId,jdbcType=INTEGER},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpCompRoleOpers">
    <!--@mbggenerated-->
    update COMP_ROLE_OPERS
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="operId != null">
        OPER_ID = #{operId,jdbcType=VARCHAR},
      </if>
      <if test="operType != null">
        OPER_TYPE = #{operType,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="sourceCompId != null">
        SOURCE_COMP_ID = #{sourceCompId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        GROUP_ID = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="partnerOper != null">
        PARTNER_OPER = #{partnerOper,jdbcType=TINYINT},
      </if>
      <if test="organizationDefinitionId != null">
        ORGANIZATION_DEFINITION_ID = #{organizationDefinitionId,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
    </set>
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpCompRoleOpers">
    <!--@mbggenerated-->
    update COMP_ROLE_OPERS
    set COMP_ID = #{compId,jdbcType=INTEGER},
      ROLE_ID = #{roleId,jdbcType=VARCHAR},
      OPER_ID = #{operId,jdbcType=VARCHAR},
      OPER_TYPE = #{operType,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      SOURCE_COMP_ID = #{sourceCompId,jdbcType=INTEGER},
      GROUP_ID = #{groupId,jdbcType=INTEGER},
      PARTNER_OPER = #{partnerOper,jdbcType=TINYINT},
      ORGANIZATION_DEFINITION_ID = #{organizationDefinitionId,jdbcType=INTEGER},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER}
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </update>
	
	<select id="parseQueryColumnForUserOpers" resultMap="BaseResultMap">
		select COMP_ID,GROUP_ID,DEPT_ID,REG_ID,AREA_ID,SOURCE_COMP_ID
		from COMP_ROLE_OPERS 
		where COMP_ID = #{compId} and ROLE_ID = #{roleId}
		group by GROUP_ID,DEPT_ID,REG_ID,AREA_ID,SOURCE_COMP_ID,COMP_ID
	</select>

  <delete id="deleteCompRoleOpersByRegId">
    delete from COMP_ROLE_OPERS
    where COMP_ID = #{compId} AND REG_ID=#{regId}
  </delete>
	
	<select id="getCheckedCommonMapOpers" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from COMP_ROLE_OPERS
		where COMP_ID = #{compId} and ${column} = #{columnValue} 
		and ROLE_ID= #{roleId} and OPER_TYPE=#{operType}
	</select>

  <insert id="insertByDynamicId">
    insert into COMP_ROLE_OPERS(COMP_ID,${columnName},ROLE_ID,OPER_ID,OPER_TYPE,PARTNER_OPER)
    values(#{compId},#{columnValue},#{roleId},#{operId},#{operType},#{partnerOper})
  </insert>

  <delete id="deleteByDynamincId">
    delete COMP_ROLE_OPERS where comp_id=#{compId} and role_id=#{roleId} and ${columnName} =#{columnValue} and OPER_ID in
    <foreach close=")" collection="operIds" item="operId" open="(" separator=",">
      #{operId}
    </foreach>
  </delete>
  <delete id="deleteByDynamincId2">
    delete COMP_ROLE_OPERS where COMP_ID = #{compId} and ROLE_ID = #{roleId} 
      <if test="null != operIds">
        and oper_id in
        <foreach close=")" collection="operIds" item="operId" open="(" separator=",">
          #{operId}
        </foreach>
      </if>
      <choose>
        <when test="'AREA_ID' == columnName">
          and ( DEPT_ID in (select DEPT_ID from FUN_DEPTS where AREA_ID = #{columnValue} and COMP_ID = #{compId})
          or REG_ID in (select REG_ID from FUN_REGION where AREA_ID = #{columnValue} and COMP_ID = #{compId}))
        </when>
        <when test="'REG_ID' == columnName">
          and DEPT_ID in (select DEPT_ID from FUN_DEPTS where REG_ID = #{columnValue} and COMP_ID = #{compId})
        </when>
        <when test="'DEPT_ID' == columnName">
          and GROUP_ID in (select GR_ID from FUN_DEPTSGROUP where DEPT_ID =#{columnValue} and COMP_ID = #{compId})
        </when>
        <when test="'GROUP_ID' == columnName">
          and GROUP_ID = #{columnValue}
        </when>
        <when test="'SOURCE_COMP_ID' == columnName">
          and ( DEPT_ID in (select DEPT_ID from FUN_DEPTS where COMP_ID = #{compId})
            or REG_ID in (select REG_ID from FUN_REGION where COMP_ID = #{compId})
            or AREA_ID in (select AREA_ID from FUN_AREA where COMP_ID = #{compId})
          )
        </when>
      </choose>
  </delete>

	<select id="getCompRoleOpersByRoleId" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from COMP_ROLE_OPERS
		where comp_id=#{compId} and role_id=#{roleId}
	</select>
  <select id="getCompRoleOpersByCompId" parameterType="com.myfun.repository.erpdb.po.ErpCompRoleOpers" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM COMP_ROLE_OPERS where  COMP_ID = #{compId,jdbcType=INTEGER}
  </select>
  
  <select id="getTOP4RoleOpers" resultType="com.myfun.erpWeb.managecenter.sysmanager.vo.GetCompRoleInfoVo">
  	SELECT TOP 4 A.ROLE_ID roleId,B.OPER_ID operId,B.OPER_NAME operName
  	FROM COMP_ROLE_OPERS A 
  	JOIN 
  	FUN_OPERS B ON A.OPER_ID = B.OPER_ID WHERE A.ROLE_ID = #{roleId}
  </select>
  
  <insert id="insertRoleOper">
  	INSERT INTO  COMP_ROLE_OPERS(COMP_ID,ROLE_ID,OPER_ID,OPER_TYPE,DEPT_ID,REG_ID,AREA_ID,SOURCE_COMP_ID,GROUP_ID)
  	SELECT  A.COMP_ID, #{roleId} ROLE_ID, A.OPER_ID,A.OPER_TYPE,A.DEPT_ID,A.REG_ID,A.AREA_ID,A.SOURCE_COMP_ID,A.GROUP_ID 
	FROM FUN_COMP_PERMISSION A LEFT JOIN COMP_ROLE_OPERS B ON A.COMP_ID = B.COMP_ID AND A.SOURCE_COMP_ID = B.SOURCE_COMP_ID 
	AND A.OPER_ID = B.OPER_ID AND B.ROLE_ID = #{roleId} 
	WHERE B.AUTO_ID IS NULL AND A.COMP_ID = #{compId} AND A.TEMPLATE_ID = #{templateId}  AND A.OPER_ID IN
 	<foreach close=")" collection="opers" item="operId" open="(" separator=",">
      #{operId}
    </foreach>
  </insert>
  <insert id="insertRoleOpersByTemplateId">
  	INSERT INTO COMP_ROLE_OPERS ([COMP_ID], [ROLE_ID], [OPER_ID], [OPER_TYPE], [DEPT_ID], [REG_ID], [AREA_ID], [SOURCE_COMP_ID], [GROUP_ID]) 
	SELECT COMP_ID, #{roleId}, OPER_ID, OPER_TYPE, DEPT_ID, REG_ID, AREA_ID, SOURCE_COMP_ID, GROUP_ID FROM 
	FUN_COMP_PERMISSION WHERE COMP_ID = #{compId} AND TEMPLATE_ID = #{permissionTemplateId}
  </insert>
  <select id="getQueryColumnForUserOpers" resultMap="BaseResultMap">
  	SELECT COMP_ID,GROUP_ID,DEPT_ID,REG_ID,AREA_ID,SOURCE_COMP_ID FROM FUN_COMP_PERMISSION 
	WHERE COMP_ID = #{compId} AND TEMPLATE_ID = #{permissionTemplateId} GROUP BY GROUP_ID,DEPT_ID,REG_ID,AREA_ID,SOURCE_COMP_ID,COMP_ID
  </select>
  <select id="parseQueryColumnOrganizationForUserOpers" resultMap="BaseResultMap">
		select COMP_ID,ORGANIZATION_ID
		from COMP_ROLE_OPERS
		where COMP_ID = #{compId} and ROLE_ID = #{roleId}
		group by COMP_ID,ORGANIZATION_ID
	</select>
    <delete id="deleteByDynaminc2NewOrg">
      delete COMP_ROLE_OPERS where COMP_ID = #{compId} and ROLE_ID = #{roleId} AND ORGANIZATION_ID = #{organizationId} 
      <if test="null != operIds">
        and oper_id in
        <foreach close=")" collection="operIds" item="operId" open="(" separator=",">
          #{operId}
        </foreach>
      </if>
    </delete>

  <delete id="deleteByDynamincNewOrg">
    delete COMP_ROLE_OPERS where comp_id=#{compId} and role_id=#{roleId} AND ORGANIZATION_ID = #{organizationId} and OPER_ID in
    <foreach close=")" collection="operIds" item="operId" open="(" separator=",">
      #{operId}
    </foreach>
  </delete>
  <insert id="insertByDynamicIdNewOrg">
       insert into COMP_ROLE_OPERS(COMP_ID,ORGANIZATION_ID, ORGANIZATION_DEFINITION_ID,ROLE_ID,OPER_ID,OPER_TYPE,PARTNER_OPER)
       values(#{compId},#{organizationId},#{organizationDefinitionId},#{roleId},#{operId},#{operType},#{partnerOper})
  </insert>

  <delete id="deleteErpCompRoleOpersByErpCompId">
	DELETE FROM COMP_ROLE_OPERS
	WHERE COMP_ID = #{erpCompId}
  </delete>

  <insert id="insertErpCompRoleOpersNew">
  	INSERT INTO COMP_ROLE_OPERS ([COMP_ID], [ROLE_ID], [OPER_ID], [OPER_TYPE], [SOURCE_COMP_ID], [ORGANIZATION_ID])
  	SELECT #{erpCompId}, A.ROLE_ID, A.OPER_ID, A.OPER_TYPE, #{erpCompId},0  FROM ROLE_OPERS A JOIN dbo.FUN_OPERS B ON B.OPER_ID = A.OPER_ID AND (B.ORGANIZATION_TYPE IS NULL OR B.ORGANIZATION_TYPE = 1) WHERE ROLE_ID IN (
  		SELECT  ROLE_ID from COMP_ROLES where COMP_ID = #{erpCompId} AND IS_DEL = 0
  	)
  </insert>

  <update id="updateManageOper">
    UPDATE dbo.COMP_ROLE_OPERS SET ORGANIZATION_DEFINITION_ID = 0
      FROM COMP_ROLE_OPERS A
      JOIN dbo.FUN_OPERS B ON A.OPER_ID = B.OPER_ID AND B.OPER_TYPE > 0 AND B.ORGANIZATION_TYPE = 1
      JOIN dbo.FUN_ROLES C ON A.ROLE_ID = C.ROLE_ID AND C.MANAGE_LEVEL = 1
    WHERE A.COMP_ID = #{erpCompId}

     UPDATE dbo.COMP_ROLE_OPERS SET ORGANIZATION_DEFINITION_ID = D.DEFINITION_ID
      FROM COMP_ROLE_OPERS A
      JOIN dbo.FUN_OPERS B ON A.OPER_ID = B.OPER_ID AND B.OPER_TYPE > 0 AND B.ORGANIZATION_TYPE = 1
      JOIN dbo.FUN_ROLES C ON A.ROLE_ID = C.ROLE_ID AND C.MANAGE_LEVEL > 1
	  JOIN dbo.FUN_ORGANIZATION_DEFINITION D ON C.MANAGE_LEVEL = D.DEFINITION_LEVEL AND  D.COMP_ID = #{erpCompId}
    WHERE A.COMP_ID = #{erpCompId}
  </update>

  <delete id="deleteOpers">
    DELETE A FROM COMP_ROLE_OPERS A
      JOIN dbo.FUN_OPERS B ON A.OPER_ID = B.OPER_ID AND B.OPER_TYPE > 0 AND B.ORGANIZATION_TYPE = 1
      JOIN dbo.FUN_ROLES C ON A.ROLE_ID = C.ROLE_ID AND C.MANAGE_LEVEL = 0
    WHERE A.COMP_ID = #{erpCompId}
  </delete>

  <insert id="insertErpCompRoleOpers">
  	INSERT INTO COMP_ROLE_OPERS ([COMP_ID], [ROLE_ID], [OPER_ID], [OPER_TYPE], [SOURCE_COMP_ID])
    SELECT #{erpCompId}, ROLE_ID, OPER_ID, OPER_TYPE, #{erpCompId} FROM ROLE_OPERS WHERE ROLE_ID IN (
    SELECT  ROLE_ID from COMP_ROLES where COMP_ID = #{erpCompId} AND IS_DEL = 0
    )
  </insert>

  <delete id="deleteRoleOpersByCompIdAndRoleNew">
        DELETE A FROM COMP_ROLE_OPERS  A JOIN FUN_OPERS B ON B.OPER_ID = A.OPER_ID AND B.ORGANIZATION_TYPE IS NULL
        WHERE A.ROLE_ID = #{roleId}
        AND A.COMP_ID = #{erpCompId}
        AND A.OPER_ID NOT IN (${operId})
    </delete>
</mapper>