<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunUserRankExaminationMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunUserRankExamination" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="CURRENT_P_ID" property="currentPId" jdbcType="INTEGER" />
    <result column="REGIST_TIME" property="registTime" jdbcType="TIMESTAMP" />
    <result column="PERSON_ACHIEVEMENT" property="personAchievement" jdbcType="NUMERIC" />
    <result column="TEAM_ACHIEVEMENT" property="teamAchievement" jdbcType="NUMERIC" />
    <result column="ACHIEVEMENT_RANK" property="achievementRank" jdbcType="INTEGER" />
    <result column="D_ASSESSMENT_TIME" property="dAssessmentTime" jdbcType="TIMESTAMP" />
    <result column="PERSON_ACHIEVEMENT_TIME" property="personAchievementTime" jdbcType="TIMESTAMP" />
    <result column="TEAM_ACHIEVEMENT_TIME" property="teamAchievementTime" jdbcType="TIMESTAMP" />
    <result column="PERSON_ACHIEVEMENT_NOW" property="personAchievementNow" jdbcType="NUMERIC" />
    <result column="TEAM_ACHIEVEMENT_NOW" property="teamAchievementNow" jdbcType="NUMERIC" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, COMP_ID, CITY_ID, USER_ID, ROLE_ID, CURRENT_P_ID, REGIST_TIME, PERSON_ACHIEVEMENT, 
    TEAM_ACHIEVEMENT, ACHIEVEMENT_RANK, D_ASSESSMENT_TIME, PERSON_ACHIEVEMENT_TIME, TEAM_ACHIEVEMENT_TIME, 
    PERSON_ACHIEVEMENT_NOW, TEAM_ACHIEVEMENT_NOW, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpFunUserRankExaminationExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_USER_RANK_EXAMINATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_USER_RANK_EXAMINATION
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_USER_RANK_EXAMINATION
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUserRankExaminationExample" >
    <!--@mbggenerated-->
    delete from FUN_USER_RANK_EXAMINATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunUserRankExamination" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_USER_RANK_EXAMINATION (COMP_ID, CITY_ID, USER_ID, 
      ROLE_ID, CURRENT_P_ID, REGIST_TIME, 
      PERSON_ACHIEVEMENT, TEAM_ACHIEVEMENT, ACHIEVEMENT_RANK, 
      D_ASSESSMENT_TIME, PERSON_ACHIEVEMENT_TIME, 
      TEAM_ACHIEVEMENT_TIME, PERSON_ACHIEVEMENT_NOW, 
      TEAM_ACHIEVEMENT_NOW, CREATE_TIME, UPDATE_TIME
      )
    values (#{compId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{roleId,jdbcType=VARCHAR}, #{currentPId,jdbcType=INTEGER}, #{registTime,jdbcType=TIMESTAMP}, 
      #{personAchievement,jdbcType=NUMERIC}, #{teamAchievement,jdbcType=NUMERIC}, #{achievementRank,jdbcType=INTEGER}, 
      #{dAssessmentTime,jdbcType=TIMESTAMP}, #{personAchievementTime,jdbcType=TIMESTAMP}, 
      #{teamAchievementTime,jdbcType=TIMESTAMP}, #{personAchievementNow,jdbcType=NUMERIC}, 
      #{teamAchievementNow,jdbcType=NUMERIC}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunUserRankExamination" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_USER_RANK_EXAMINATION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="currentPId != null" >
        CURRENT_P_ID,
      </if>
      <if test="registTime != null" >
        REGIST_TIME,
      </if>
      <if test="personAchievement != null" >
        PERSON_ACHIEVEMENT,
      </if>
      <if test="teamAchievement != null" >
        TEAM_ACHIEVEMENT,
      </if>
      <if test="achievementRank != null" >
        ACHIEVEMENT_RANK,
      </if>
      <if test="dAssessmentTime != null" >
        D_ASSESSMENT_TIME,
      </if>
      <if test="personAchievementTime != null" >
        PERSON_ACHIEVEMENT_TIME,
      </if>
      <if test="teamAchievementTime != null" >
        TEAM_ACHIEVEMENT_TIME,
      </if>
      <if test="personAchievementNow != null" >
        PERSON_ACHIEVEMENT_NOW,
      </if>
      <if test="teamAchievementNow != null" >
        TEAM_ACHIEVEMENT_NOW,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="currentPId != null" >
        #{currentPId,jdbcType=INTEGER},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personAchievement != null" >
        #{personAchievement,jdbcType=NUMERIC},
      </if>
      <if test="teamAchievement != null" >
        #{teamAchievement,jdbcType=NUMERIC},
      </if>
      <if test="achievementRank != null" >
        #{achievementRank,jdbcType=INTEGER},
      </if>
      <if test="dAssessmentTime != null" >
        #{dAssessmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personAchievementTime != null" >
        #{personAchievementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teamAchievementTime != null" >
        #{teamAchievementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personAchievementNow != null" >
        #{personAchievementNow,jdbcType=NUMERIC},
      </if>
      <if test="teamAchievementNow != null" >
        #{teamAchievementNow,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUserRankExaminationExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from FUN_USER_RANK_EXAMINATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_USER_RANK_EXAMINATION
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null" >
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.currentPId != null" >
        CURRENT_P_ID = #{record.currentPId,jdbcType=INTEGER},
      </if>
      <if test="record.registTime != null" >
        REGIST_TIME = #{record.registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.personAchievement != null" >
        PERSON_ACHIEVEMENT = #{record.personAchievement,jdbcType=NUMERIC},
      </if>
      <if test="record.teamAchievement != null" >
        TEAM_ACHIEVEMENT = #{record.teamAchievement,jdbcType=NUMERIC},
      </if>
      <if test="record.achievementRank != null" >
        ACHIEVEMENT_RANK = #{record.achievementRank,jdbcType=INTEGER},
      </if>
      <if test="record.dAssessmentTime != null" >
        D_ASSESSMENT_TIME = #{record.dAssessmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.personAchievementTime != null" >
        PERSON_ACHIEVEMENT_TIME = #{record.personAchievementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.teamAchievementTime != null" >
        TEAM_ACHIEVEMENT_TIME = #{record.teamAchievementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.personAchievementNow != null" >
        PERSON_ACHIEVEMENT_NOW = #{record.personAchievementNow,jdbcType=NUMERIC},
      </if>
      <if test="record.teamAchievementNow != null" >
        TEAM_ACHIEVEMENT_NOW = #{record.teamAchievementNow,jdbcType=NUMERIC},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_USER_RANK_EXAMINATION
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      CURRENT_P_ID = #{record.currentPId,jdbcType=INTEGER},
      REGIST_TIME = #{record.registTime,jdbcType=TIMESTAMP},
      PERSON_ACHIEVEMENT = #{record.personAchievement,jdbcType=NUMERIC},
      TEAM_ACHIEVEMENT = #{record.teamAchievement,jdbcType=NUMERIC},
      ACHIEVEMENT_RANK = #{record.achievementRank,jdbcType=INTEGER},
      D_ASSESSMENT_TIME = #{record.dAssessmentTime,jdbcType=TIMESTAMP},
      PERSON_ACHIEVEMENT_TIME = #{record.personAchievementTime,jdbcType=TIMESTAMP},
      TEAM_ACHIEVEMENT_TIME = #{record.teamAchievementTime,jdbcType=TIMESTAMP},
      PERSON_ACHIEVEMENT_NOW = #{record.personAchievementNow,jdbcType=NUMERIC},
      TEAM_ACHIEVEMENT_NOW = #{record.teamAchievementNow,jdbcType=NUMERIC},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunUserRankExamination" >
    <!--@mbggenerated-->
    update FUN_USER_RANK_EXAMINATION
    <set >
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="currentPId != null" >
        CURRENT_P_ID = #{currentPId,jdbcType=INTEGER},
      </if>
      <if test="registTime != null" >
        REGIST_TIME = #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personAchievement != null" >
        PERSON_ACHIEVEMENT = #{personAchievement,jdbcType=NUMERIC},
      </if>
      <if test="teamAchievement != null" >
        TEAM_ACHIEVEMENT = #{teamAchievement,jdbcType=NUMERIC},
      </if>
      <if test="achievementRank != null" >
        ACHIEVEMENT_RANK = #{achievementRank,jdbcType=INTEGER},
      </if>
      <if test="dAssessmentTime != null" >
        D_ASSESSMENT_TIME = #{dAssessmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personAchievementTime != null" >
        PERSON_ACHIEVEMENT_TIME = #{personAchievementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teamAchievementTime != null" >
        TEAM_ACHIEVEMENT_TIME = #{teamAchievementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personAchievementNow != null" >
        PERSON_ACHIEVEMENT_NOW = #{personAchievementNow,jdbcType=NUMERIC},
      </if>
      <if test="teamAchievementNow != null" >
        TEAM_ACHIEVEMENT_NOW = #{teamAchievementNow,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunUserRankExamination" >
    <!--@mbggenerated-->
    update FUN_USER_RANK_EXAMINATION
    set COMP_ID = #{compId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ROLE_ID = #{roleId,jdbcType=VARCHAR},
      CURRENT_P_ID = #{currentPId,jdbcType=INTEGER},
      REGIST_TIME = #{registTime,jdbcType=TIMESTAMP},
      PERSON_ACHIEVEMENT = #{personAchievement,jdbcType=NUMERIC},
      TEAM_ACHIEVEMENT = #{teamAchievement,jdbcType=NUMERIC},
      ACHIEVEMENT_RANK = #{achievementRank,jdbcType=INTEGER},
      D_ASSESSMENT_TIME = #{dAssessmentTime,jdbcType=TIMESTAMP},
      PERSON_ACHIEVEMENT_TIME = #{personAchievementTime,jdbcType=TIMESTAMP},
      TEAM_ACHIEVEMENT_TIME = #{teamAchievementTime,jdbcType=TIMESTAMP},
      PERSON_ACHIEVEMENT_NOW = #{personAchievementNow,jdbcType=NUMERIC},
      TEAM_ACHIEVEMENT_NOW = #{teamAchievementNow,jdbcType=NUMERIC},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectUserRank" resultType="java.lang.Integer">
    SELECT ACHIEVEMENT_RANK FROM FUN_USER_RANK_EXAMINATION WHERE COMP_ID = #{compId} AND USER_ID = #{userId}
  </select>
</mapper>