<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpBuildingSetSettingMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpBuildingSetSetting">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="BUILD_LOCK" jdbcType="TINYINT" property="buildLock" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="BUILD_ROOF_NAME" jdbcType="VARCHAR" property="buildRoofName" />
    <result column="BUILD_UNIT_NAME" jdbcType="VARCHAR" property="buildUnitName" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, BUILD_ID, BUILD_LOCK, CREATION_TIME, BUILD_ROOF_NAME, BUILD_UNIT_NAME, 
    DEPT_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildingSetSettingExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BUILDING_SET_SETTING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from BUILDING_SET_SETTING
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from BUILDING_SET_SETTING
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildingSetSettingExample">
    <!--@mbggenerated-->
    delete from BUILDING_SET_SETTING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpBuildingSetSetting" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into BUILDING_SET_SETTING (COMP_ID, BUILD_ID, BUILD_LOCK, 
      CREATION_TIME, BUILD_ROOF_NAME, BUILD_UNIT_NAME, 
      DEPT_ID)
    values (#{compId,jdbcType=INTEGER}, #{buildId,jdbcType=INTEGER}, #{buildLock,jdbcType=TINYINT}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{buildRoofName,jdbcType=VARCHAR}, #{buildUnitName,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpBuildingSetSetting" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into BUILDING_SET_SETTING
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="buildLock != null">
        BUILD_LOCK,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="buildRoofName != null">
        BUILD_ROOF_NAME,
      </if>
      <if test="buildUnitName != null">
        BUILD_UNIT_NAME,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildLock != null">
        #{buildLock,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildRoofName != null">
        #{buildRoofName,jdbcType=VARCHAR},
      </if>
      <if test="buildUnitName != null">
        #{buildUnitName,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpBuildingSetSettingExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from BUILDING_SET_SETTING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update BUILDING_SET_SETTING
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.buildLock != null">
        BUILD_LOCK = #{record.buildLock,jdbcType=TINYINT},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buildRoofName != null">
        BUILD_ROOF_NAME = #{record.buildRoofName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildUnitName != null">
        BUILD_UNIT_NAME = #{record.buildUnitName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update BUILDING_SET_SETTING
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      BUILD_LOCK = #{record.buildLock,jdbcType=TINYINT},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      BUILD_ROOF_NAME = #{record.buildRoofName,jdbcType=VARCHAR},
      BUILD_UNIT_NAME = #{record.buildUnitName,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpBuildingSetSetting">
    <!--@mbggenerated-->
    update BUILDING_SET_SETTING
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildLock != null">
        BUILD_LOCK = #{buildLock,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildRoofName != null">
        BUILD_ROOF_NAME = #{buildRoofName,jdbcType=VARCHAR},
      </if>
      <if test="buildUnitName != null">
        BUILD_UNIT_NAME = #{buildUnitName,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpBuildingSetSetting">
    <!--@mbggenerated-->
    update BUILDING_SET_SETTING
    set COMP_ID = #{compId,jdbcType=INTEGER},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      BUILD_LOCK = #{buildLock,jdbcType=TINYINT},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      BUILD_ROOF_NAME = #{buildRoofName,jdbcType=VARCHAR},
      BUILD_UNIT_NAME = #{buildUnitName,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
	
	<select id="selectByBuildId" resultMap="BaseResultMap">
		SELECT TOP 1
		<include refid="Base_Column_List" />
		FROM BUILDING_SET_SETTING
		WHERE
		COMP_ID = 0 AND BUILD_ID = #{buildId} ORDER BY ID DESC
	</select>
	
	<update id="updateLockBuildRule">
		UPDATE BUILDING_SET_SETTING SET BUILD_LOCK = #{buildLock},DEPT_ID = #{deptId}
		WHERE COMP_ID = 0 AND BUILD_ID = #{buildId}
	</update>
	
	<delete id="delBuildById">
		delete from BUILDING_SET_SETTING
		where COMP_ID = 0 and BUILD_ID = #{buildId}
	</delete>


  <update id="updateBuildLock">
    UPDATE BUILDING_SET_SETTING SET BUILD_LOCK = #{buildLock}
    WHERE COMP_ID = 0 AND BUILD_ID = #{buildId}
  </update>

</mapper>