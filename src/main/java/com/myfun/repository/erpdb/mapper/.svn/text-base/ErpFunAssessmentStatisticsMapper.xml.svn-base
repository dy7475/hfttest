<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunAssessmentStatisticsMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunAssessmentStatistics">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_POSITION" jdbcType="VARCHAR" property="userPosition" />
    <result column="ASSESSMENT_CYCLE_START" jdbcType="TIMESTAMP" property="assessmentCycleStart" />
    <result column="ASSESSMENT_CYCLE_END" jdbcType="TIMESTAMP" property="assessmentCycleEnd" />
    <result column="ASSESSMENT_MONTH" jdbcType="VARCHAR" property="assessmentMonth" />
    <result column="USER_COUNT" jdbcType="NUMERIC" property="userCount" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="XZ_FXZ_COUNT" jdbcType="NUMERIC" property="xzFxzCount" />
    <result column="XZ_KXZ_COUNT" jdbcType="NUMERIC" property="xzKxzCount" />
    <result column="XZ_GJ_COUNT" jdbcType="NUMERIC" property="xzGjCount" />
    <result column="XZ_TPSC_COUNT" jdbcType="NUMERIC" property="xzTpscCount" />
    <result column="XZ_SPSC_COUNT" jdbcType="NUMERIC" property="xzSpscCount" />
    <result column="XZ_VRSC_COUNT" jdbcType="NUMERIC" property="xzVrscCount" />
    <result column="XZ_ZFY_COUNT" jdbcType="NUMERIC" property="xzZfyCount" />
    <result column="XZ_IPCALL_COUNT" jdbcType="NUMERIC" property="xzIpcallCount" />
    <result column="XZ_KFDP_COUNT" jdbcType="NUMERIC" property="xzKfdpCount" />
    <result column="XZ_HBFX_COUNT" jdbcType="NUMERIC" property="xzHbfxCount" />
    <result column="XZ_YSTJ_COUNT" jdbcType="NUMERIC" property="xzYstjCount" />
    <result column="XZ_PTWT_COUNT" jdbcType="NUMERIC" property="xzPtwtCount" />
    <result column="XZ_XSWT_COUNT" jdbcType="NUMERIC" property="xzXswtCount" />
    <result column="XZ_DJWT_COUNT" jdbcType="NUMERIC" property="xzDjwtCount" />
    <result column="XZ_BZWT_COUNT" jdbcType="NUMERIC" property="xzBzwtCount" />
    <result column="XZ_FK_COUNT" jdbcType="NUMERIC" property="xzFkCount" />
    <result column="XZ_YJ_COUNT" jdbcType="NUMERIC" property="xzYjCount" />
    <result column="XZ_DK_COUNT" jdbcType="NUMERIC" property="xzDkCount" />
    <result column="XZYX_FXZ_COUNT" jdbcType="NUMERIC" property="xzyxFxzCount" />
    <result column="XZYX_KXZ_COUNT" jdbcType="NUMERIC" property="xzyxKxzCount" />
    <result column="XZYX_GJ_COUNT" jdbcType="NUMERIC" property="xzyxGjCount" />
    <result column="XZYX_TPSC_COUNT" jdbcType="NUMERIC" property="xzyxTpscCount" />
    <result column="XZYX_SPSC_COUNT" jdbcType="NUMERIC" property="xzyxSpscCount" />
    <result column="XZYX_VRSC_COUNT" jdbcType="NUMERIC" property="xzyxVrscCount" />
    <result column="XZYX_ZFY_COUNT" jdbcType="NUMERIC" property="xzyxZfyCount" />
    <result column="XZYX_IPCALL_COUNT" jdbcType="NUMERIC" property="xzyxIpcallCount" />
    <result column="XZYX_KFDP_COUNT" jdbcType="NUMERIC" property="xzyxKfdpCount" />
    <result column="XZYX_HBFX_COUNT" jdbcType="NUMERIC" property="xzyxHbfxCount" />
    <result column="XZYX_YSTJ_COUNT" jdbcType="NUMERIC" property="xzyxYstjCount" />
    <result column="XZYX_PTWT_COUNT" jdbcType="NUMERIC" property="xzyxPtwtCount" />
    <result column="XZYX_XSWT_COUNT" jdbcType="NUMERIC" property="xzyxXswtCount" />
    <result column="XZYX_DJWT_COUNT" jdbcType="NUMERIC" property="xzyxDjwtCount" />
    <result column="XZYX_BZWT_COUNT" jdbcType="NUMERIC" property="xzyxBzwtCount" />
    <result column="XZYX_FK_COUNT" jdbcType="NUMERIC" property="xzyxFkCount" />
    <result column="XZYX_YJ_COUNT" jdbcType="NUMERIC" property="xzyxYjCount" />
    <result column="XZYX_DK_COUNT" jdbcType="NUMERIC" property="xzyxDkCount" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="CHECK_TYPE" jdbcType="TINYINT" property="checkType" />
    <result column="ROLE_WAGE_CONFIG_ID" jdbcType="INTEGER" property="roleWageConfigId" />
    <result column="XZ_PROFIT_AMOUNT" jdbcType="NUMERIC" property="xzProfitAmount" />
    <result column="XZYX_PROFIT_AMOUNT" jdbcType="NUMERIC" property="xzyxProfitAmount" />
    <result column="DEAL_FLAG" jdbcType="TINYINT" property="dealFlag" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="XZ_FDJ_COUNT" jdbcType="NUMERIC" property="xzFdjCount" />
    <result column="XZYX_FDJ_COUNT" jdbcType="NUMERIC" property="xzyxFdjCount" />
    <result column="XZ_BUILDINFO_COUNT" jdbcType="NUMERIC" property="xzBuildinfoCount" />
    <result column="XZYX_BUILDINFO_COUNT" jdbcType="NUMERIC" property="xzyxBuildinfoCount" />
    <result column="XZ_SOSO_COUNT" jdbcType="NUMERIC" property="xzSosoCount" />
    <result column="XZYX_SOSO_COUNT" jdbcType="NUMERIC" property="xzyxSosoCount" />
    <result column="XZ_FPUBLIC_ZP_COUNT" jdbcType="NUMERIC" property="xzFpublicZpCount" />
    <result column="XZYX_FPUBLIC_ZP_COUNT" jdbcType="NUMERIC" property="xzyxFpublicZpCount" />
    <result column="XZ_FSHARE_ZP_COUNT" jdbcType="NUMERIC" property="xzFshareZpCount" />
    <result column="XZYX_FSHARE_ZP_COUNT" jdbcType="NUMERIC" property="xzyxFshareZpCount" />
    <result column="XZ_FZYX_COUNT" jdbcType="NUMERIC" property="xzFzyxCount" />
    <result column="XZYX_FZYX_COUNT" jdbcType="NUMERIC" property="xzyxFzyxCount" />
    <result column="XZ_KDJ_COUNT" jdbcType="NUMERIC" property="xzKdjCount" />
    <result column="XZYX_KDJ_COUNT" jdbcType="NUMERIC" property="xzyxKdjCount" />
    <result column="XZ_KPUBLIC_ZP_COUNT" jdbcType="NUMERIC" property="xzKpublicZpCount" />
    <result column="XZYX_KPUBLIC_ZP_COUNT" jdbcType="NUMERIC" property="xzyxKpublicZpCount" />
    <result column="XZ_KSHARE_ZP_COUNT" jdbcType="NUMERIC" property="xzKshareZpCount" />
    <result column="XZYX_KSHARE_ZP_COUNT" jdbcType="NUMERIC" property="xzyxKshareZpCount" />
    <result column="XZ_KZYX_COUNT" jdbcType="NUMERIC" property="xzKzyxCount" />
    <result column="XZYX_KZYX_COUNT" jdbcType="NUMERIC" property="xzyxKzyxCount" />
    <result column="XZ_QXZH_COUNT" jdbcType="NUMERIC" property="xzQxzhCount" />
    <result column="XZYX_QXZH_COUNT" jdbcType="NUMERIC" property="xzyxQxzhCount" />
    <result column="EFFECTIVE_STATUS" jdbcType="TINYINT" property="effectiveStatus" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
    <result column="ORGANIZATION_PATH" jdbcType="VARCHAR" property="organizationPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, CITY_ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, USER_POSITION, ASSESSMENT_CYCLE_START, 
    ASSESSMENT_CYCLE_END, ASSESSMENT_MONTH, USER_COUNT, CREATE_TIME, XZ_FXZ_COUNT, XZ_KXZ_COUNT, 
    XZ_GJ_COUNT, XZ_TPSC_COUNT, XZ_SPSC_COUNT, XZ_VRSC_COUNT, XZ_ZFY_COUNT, XZ_IPCALL_COUNT, 
    XZ_KFDP_COUNT, XZ_HBFX_COUNT, XZ_YSTJ_COUNT, XZ_PTWT_COUNT, XZ_XSWT_COUNT, XZ_DJWT_COUNT, 
    XZ_BZWT_COUNT, XZ_FK_COUNT, XZ_YJ_COUNT, XZ_DK_COUNT, XZYX_FXZ_COUNT, XZYX_KXZ_COUNT, 
    XZYX_GJ_COUNT, XZYX_TPSC_COUNT, XZYX_SPSC_COUNT, XZYX_VRSC_COUNT, XZYX_ZFY_COUNT, 
    XZYX_IPCALL_COUNT, XZYX_KFDP_COUNT, XZYX_HBFX_COUNT, XZYX_YSTJ_COUNT, XZYX_PTWT_COUNT, 
    XZYX_XSWT_COUNT, XZYX_DJWT_COUNT, XZYX_BZWT_COUNT, XZYX_FK_COUNT, XZYX_YJ_COUNT, 
    XZYX_DK_COUNT, USER_ID, CASE_TYPE, CHECK_TYPE, ROLE_WAGE_CONFIG_ID, XZ_PROFIT_AMOUNT, 
    XZYX_PROFIT_AMOUNT, DEAL_FLAG, ARCHIVE_ID, XZ_FDJ_COUNT, XZYX_FDJ_COUNT, XZ_BUILDINFO_COUNT, 
    XZYX_BUILDINFO_COUNT, XZ_SOSO_COUNT, XZYX_SOSO_COUNT, XZ_FPUBLIC_ZP_COUNT, XZYX_FPUBLIC_ZP_COUNT, 
    XZ_FSHARE_ZP_COUNT, XZYX_FSHARE_ZP_COUNT, XZ_FZYX_COUNT, XZYX_FZYX_COUNT, XZ_KDJ_COUNT, 
    XZYX_KDJ_COUNT, XZ_KPUBLIC_ZP_COUNT, XZYX_KPUBLIC_ZP_COUNT, XZ_KSHARE_ZP_COUNT, XZYX_KSHARE_ZP_COUNT, 
    XZ_KZYX_COUNT, XZYX_KZYX_COUNT, XZ_QXZH_COUNT, XZYX_QXZH_COUNT, EFFECTIVE_STATUS, 
    ORGANIZATION_ID, ORGANIZATION_PATH
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunAssessmentStatisticsExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_ASSESSMENT_STATISTICS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_ASSESSMENT_STATISTICS
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_ASSESSMENT_STATISTICS
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunAssessmentStatisticsExample">
    <!--@mbggenerated-->
    delete from FUN_ASSESSMENT_STATISTICS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunAssessmentStatistics">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_ASSESSMENT_STATISTICS (CITY_ID, COMP_ID, AREA_ID, 
      REG_ID, DEPT_ID, GR_ID, 
      USER_POSITION, ASSESSMENT_CYCLE_START, ASSESSMENT_CYCLE_END, 
      ASSESSMENT_MONTH, USER_COUNT, CREATE_TIME, 
      XZ_FXZ_COUNT, XZ_KXZ_COUNT, XZ_GJ_COUNT, 
      XZ_TPSC_COUNT, XZ_SPSC_COUNT, XZ_VRSC_COUNT, 
      XZ_ZFY_COUNT, XZ_IPCALL_COUNT, XZ_KFDP_COUNT, 
      XZ_HBFX_COUNT, XZ_YSTJ_COUNT, XZ_PTWT_COUNT, 
      XZ_XSWT_COUNT, XZ_DJWT_COUNT, XZ_BZWT_COUNT, 
      XZ_FK_COUNT, XZ_YJ_COUNT, XZ_DK_COUNT, 
      XZYX_FXZ_COUNT, XZYX_KXZ_COUNT, XZYX_GJ_COUNT, 
      XZYX_TPSC_COUNT, XZYX_SPSC_COUNT, XZYX_VRSC_COUNT, 
      XZYX_ZFY_COUNT, XZYX_IPCALL_COUNT, XZYX_KFDP_COUNT, 
      XZYX_HBFX_COUNT, XZYX_YSTJ_COUNT, XZYX_PTWT_COUNT, 
      XZYX_XSWT_COUNT, XZYX_DJWT_COUNT, XZYX_BZWT_COUNT, 
      XZYX_FK_COUNT, XZYX_YJ_COUNT, XZYX_DK_COUNT, 
      USER_ID, CASE_TYPE, CHECK_TYPE, 
      ROLE_WAGE_CONFIG_ID, XZ_PROFIT_AMOUNT, XZYX_PROFIT_AMOUNT, 
      DEAL_FLAG, ARCHIVE_ID, XZ_FDJ_COUNT, 
      XZYX_FDJ_COUNT, XZ_BUILDINFO_COUNT, XZYX_BUILDINFO_COUNT, 
      XZ_SOSO_COUNT, XZYX_SOSO_COUNT, XZ_FPUBLIC_ZP_COUNT, 
      XZYX_FPUBLIC_ZP_COUNT, XZ_FSHARE_ZP_COUNT, XZYX_FSHARE_ZP_COUNT, 
      XZ_FZYX_COUNT, XZYX_FZYX_COUNT, XZ_KDJ_COUNT, 
      XZYX_KDJ_COUNT, XZ_KPUBLIC_ZP_COUNT, XZYX_KPUBLIC_ZP_COUNT, 
      XZ_KSHARE_ZP_COUNT, XZYX_KSHARE_ZP_COUNT, XZ_KZYX_COUNT, 
      XZYX_KZYX_COUNT, XZ_QXZH_COUNT, XZYX_QXZH_COUNT, 
      EFFECTIVE_STATUS, ORGANIZATION_ID, ORGANIZATION_PATH
      )
    values (#{cityId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{regId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, 
      #{userPosition,jdbcType=VARCHAR}, #{assessmentCycleStart,jdbcType=TIMESTAMP}, #{assessmentCycleEnd,jdbcType=TIMESTAMP}, 
      #{assessmentMonth,jdbcType=VARCHAR}, #{userCount,jdbcType=NUMERIC}, #{createTime,jdbcType=TIMESTAMP}, 
      #{xzFxzCount,jdbcType=NUMERIC}, #{xzKxzCount,jdbcType=NUMERIC}, #{xzGjCount,jdbcType=NUMERIC}, 
      #{xzTpscCount,jdbcType=NUMERIC}, #{xzSpscCount,jdbcType=NUMERIC}, #{xzVrscCount,jdbcType=NUMERIC}, 
      #{xzZfyCount,jdbcType=NUMERIC}, #{xzIpcallCount,jdbcType=NUMERIC}, #{xzKfdpCount,jdbcType=NUMERIC}, 
      #{xzHbfxCount,jdbcType=NUMERIC}, #{xzYstjCount,jdbcType=NUMERIC}, #{xzPtwtCount,jdbcType=NUMERIC}, 
      #{xzXswtCount,jdbcType=NUMERIC}, #{xzDjwtCount,jdbcType=NUMERIC}, #{xzBzwtCount,jdbcType=NUMERIC}, 
      #{xzFkCount,jdbcType=NUMERIC}, #{xzYjCount,jdbcType=NUMERIC}, #{xzDkCount,jdbcType=NUMERIC}, 
      #{xzyxFxzCount,jdbcType=NUMERIC}, #{xzyxKxzCount,jdbcType=NUMERIC}, #{xzyxGjCount,jdbcType=NUMERIC}, 
      #{xzyxTpscCount,jdbcType=NUMERIC}, #{xzyxSpscCount,jdbcType=NUMERIC}, #{xzyxVrscCount,jdbcType=NUMERIC}, 
      #{xzyxZfyCount,jdbcType=NUMERIC}, #{xzyxIpcallCount,jdbcType=NUMERIC}, #{xzyxKfdpCount,jdbcType=NUMERIC}, 
      #{xzyxHbfxCount,jdbcType=NUMERIC}, #{xzyxYstjCount,jdbcType=NUMERIC}, #{xzyxPtwtCount,jdbcType=NUMERIC}, 
      #{xzyxXswtCount,jdbcType=NUMERIC}, #{xzyxDjwtCount,jdbcType=NUMERIC}, #{xzyxBzwtCount,jdbcType=NUMERIC}, 
      #{xzyxFkCount,jdbcType=NUMERIC}, #{xzyxYjCount,jdbcType=NUMERIC}, #{xzyxDkCount,jdbcType=NUMERIC}, 
      #{userId,jdbcType=INTEGER}, #{caseType,jdbcType=TINYINT}, #{checkType,jdbcType=TINYINT}, 
      #{roleWageConfigId,jdbcType=INTEGER}, #{xzProfitAmount,jdbcType=NUMERIC}, #{xzyxProfitAmount,jdbcType=NUMERIC}, 
      #{dealFlag,jdbcType=TINYINT}, #{archiveId,jdbcType=INTEGER}, #{xzFdjCount,jdbcType=NUMERIC}, 
      #{xzyxFdjCount,jdbcType=NUMERIC}, #{xzBuildinfoCount,jdbcType=NUMERIC}, #{xzyxBuildinfoCount,jdbcType=NUMERIC}, 
      #{xzSosoCount,jdbcType=NUMERIC}, #{xzyxSosoCount,jdbcType=NUMERIC}, #{xzFpublicZpCount,jdbcType=NUMERIC}, 
      #{xzyxFpublicZpCount,jdbcType=NUMERIC}, #{xzFshareZpCount,jdbcType=NUMERIC}, #{xzyxFshareZpCount,jdbcType=NUMERIC}, 
      #{xzFzyxCount,jdbcType=NUMERIC}, #{xzyxFzyxCount,jdbcType=NUMERIC}, #{xzKdjCount,jdbcType=NUMERIC}, 
      #{xzyxKdjCount,jdbcType=NUMERIC}, #{xzKpublicZpCount,jdbcType=NUMERIC}, #{xzyxKpublicZpCount,jdbcType=NUMERIC}, 
      #{xzKshareZpCount,jdbcType=NUMERIC}, #{xzyxKshareZpCount,jdbcType=NUMERIC}, #{xzKzyxCount,jdbcType=NUMERIC}, 
      #{xzyxKzyxCount,jdbcType=NUMERIC}, #{xzQxzhCount,jdbcType=NUMERIC}, #{xzyxQxzhCount,jdbcType=NUMERIC}, 
      #{effectiveStatus,jdbcType=TINYINT}, #{organizationId,jdbcType=INTEGER}, #{organizationPath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunAssessmentStatistics">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_ASSESSMENT_STATISTICS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="userPosition != null">
        USER_POSITION,
      </if>
      <if test="assessmentCycleStart != null">
        ASSESSMENT_CYCLE_START,
      </if>
      <if test="assessmentCycleEnd != null">
        ASSESSMENT_CYCLE_END,
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH,
      </if>
      <if test="userCount != null">
        USER_COUNT,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="xzFxzCount != null">
        XZ_FXZ_COUNT,
      </if>
      <if test="xzKxzCount != null">
        XZ_KXZ_COUNT,
      </if>
      <if test="xzGjCount != null">
        XZ_GJ_COUNT,
      </if>
      <if test="xzTpscCount != null">
        XZ_TPSC_COUNT,
      </if>
      <if test="xzSpscCount != null">
        XZ_SPSC_COUNT,
      </if>
      <if test="xzVrscCount != null">
        XZ_VRSC_COUNT,
      </if>
      <if test="xzZfyCount != null">
        XZ_ZFY_COUNT,
      </if>
      <if test="xzIpcallCount != null">
        XZ_IPCALL_COUNT,
      </if>
      <if test="xzKfdpCount != null">
        XZ_KFDP_COUNT,
      </if>
      <if test="xzHbfxCount != null">
        XZ_HBFX_COUNT,
      </if>
      <if test="xzYstjCount != null">
        XZ_YSTJ_COUNT,
      </if>
      <if test="xzPtwtCount != null">
        XZ_PTWT_COUNT,
      </if>
      <if test="xzXswtCount != null">
        XZ_XSWT_COUNT,
      </if>
      <if test="xzDjwtCount != null">
        XZ_DJWT_COUNT,
      </if>
      <if test="xzBzwtCount != null">
        XZ_BZWT_COUNT,
      </if>
      <if test="xzFkCount != null">
        XZ_FK_COUNT,
      </if>
      <if test="xzYjCount != null">
        XZ_YJ_COUNT,
      </if>
      <if test="xzDkCount != null">
        XZ_DK_COUNT,
      </if>
      <if test="xzyxFxzCount != null">
        XZYX_FXZ_COUNT,
      </if>
      <if test="xzyxKxzCount != null">
        XZYX_KXZ_COUNT,
      </if>
      <if test="xzyxGjCount != null">
        XZYX_GJ_COUNT,
      </if>
      <if test="xzyxTpscCount != null">
        XZYX_TPSC_COUNT,
      </if>
      <if test="xzyxSpscCount != null">
        XZYX_SPSC_COUNT,
      </if>
      <if test="xzyxVrscCount != null">
        XZYX_VRSC_COUNT,
      </if>
      <if test="xzyxZfyCount != null">
        XZYX_ZFY_COUNT,
      </if>
      <if test="xzyxIpcallCount != null">
        XZYX_IPCALL_COUNT,
      </if>
      <if test="xzyxKfdpCount != null">
        XZYX_KFDP_COUNT,
      </if>
      <if test="xzyxHbfxCount != null">
        XZYX_HBFX_COUNT,
      </if>
      <if test="xzyxYstjCount != null">
        XZYX_YSTJ_COUNT,
      </if>
      <if test="xzyxPtwtCount != null">
        XZYX_PTWT_COUNT,
      </if>
      <if test="xzyxXswtCount != null">
        XZYX_XSWT_COUNT,
      </if>
      <if test="xzyxDjwtCount != null">
        XZYX_DJWT_COUNT,
      </if>
      <if test="xzyxBzwtCount != null">
        XZYX_BZWT_COUNT,
      </if>
      <if test="xzyxFkCount != null">
        XZYX_FK_COUNT,
      </if>
      <if test="xzyxYjCount != null">
        XZYX_YJ_COUNT,
      </if>
      <if test="xzyxDkCount != null">
        XZYX_DK_COUNT,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="checkType != null">
        CHECK_TYPE,
      </if>
      <if test="roleWageConfigId != null">
        ROLE_WAGE_CONFIG_ID,
      </if>
      <if test="xzProfitAmount != null">
        XZ_PROFIT_AMOUNT,
      </if>
      <if test="xzyxProfitAmount != null">
        XZYX_PROFIT_AMOUNT,
      </if>
      <if test="dealFlag != null">
        DEAL_FLAG,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="xzFdjCount != null">
        XZ_FDJ_COUNT,
      </if>
      <if test="xzyxFdjCount != null">
        XZYX_FDJ_COUNT,
      </if>
      <if test="xzBuildinfoCount != null">
        XZ_BUILDINFO_COUNT,
      </if>
      <if test="xzyxBuildinfoCount != null">
        XZYX_BUILDINFO_COUNT,
      </if>
      <if test="xzSosoCount != null">
        XZ_SOSO_COUNT,
      </if>
      <if test="xzyxSosoCount != null">
        XZYX_SOSO_COUNT,
      </if>
      <if test="xzFpublicZpCount != null">
        XZ_FPUBLIC_ZP_COUNT,
      </if>
      <if test="xzyxFpublicZpCount != null">
        XZYX_FPUBLIC_ZP_COUNT,
      </if>
      <if test="xzFshareZpCount != null">
        XZ_FSHARE_ZP_COUNT,
      </if>
      <if test="xzyxFshareZpCount != null">
        XZYX_FSHARE_ZP_COUNT,
      </if>
      <if test="xzFzyxCount != null">
        XZ_FZYX_COUNT,
      </if>
      <if test="xzyxFzyxCount != null">
        XZYX_FZYX_COUNT,
      </if>
      <if test="xzKdjCount != null">
        XZ_KDJ_COUNT,
      </if>
      <if test="xzyxKdjCount != null">
        XZYX_KDJ_COUNT,
      </if>
      <if test="xzKpublicZpCount != null">
        XZ_KPUBLIC_ZP_COUNT,
      </if>
      <if test="xzyxKpublicZpCount != null">
        XZYX_KPUBLIC_ZP_COUNT,
      </if>
      <if test="xzKshareZpCount != null">
        XZ_KSHARE_ZP_COUNT,
      </if>
      <if test="xzyxKshareZpCount != null">
        XZYX_KSHARE_ZP_COUNT,
      </if>
      <if test="xzKzyxCount != null">
        XZ_KZYX_COUNT,
      </if>
      <if test="xzyxKzyxCount != null">
        XZYX_KZYX_COUNT,
      </if>
      <if test="xzQxzhCount != null">
        XZ_QXZH_COUNT,
      </if>
      <if test="xzyxQxzhCount != null">
        XZYX_QXZH_COUNT,
      </if>
      <if test="effectiveStatus != null">
        EFFECTIVE_STATUS,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userPosition != null">
        #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="assessmentCycleStart != null">
        #{assessmentCycleStart,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentCycleEnd != null">
        #{assessmentCycleEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentMonth != null">
        #{assessmentMonth,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null">
        #{userCount,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="xzFxzCount != null">
        #{xzFxzCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKxzCount != null">
        #{xzKxzCount,jdbcType=NUMERIC},
      </if>
      <if test="xzGjCount != null">
        #{xzGjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzTpscCount != null">
        #{xzTpscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzSpscCount != null">
        #{xzSpscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzVrscCount != null">
        #{xzVrscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzZfyCount != null">
        #{xzZfyCount,jdbcType=NUMERIC},
      </if>
      <if test="xzIpcallCount != null">
        #{xzIpcallCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKfdpCount != null">
        #{xzKfdpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzHbfxCount != null">
        #{xzHbfxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzYstjCount != null">
        #{xzYstjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzPtwtCount != null">
        #{xzPtwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzXswtCount != null">
        #{xzXswtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzDjwtCount != null">
        #{xzDjwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzBzwtCount != null">
        #{xzBzwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzFkCount != null">
        #{xzFkCount,jdbcType=NUMERIC},
      </if>
      <if test="xzYjCount != null">
        #{xzYjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzDkCount != null">
        #{xzDkCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFxzCount != null">
        #{xzyxFxzCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKxzCount != null">
        #{xzyxKxzCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxGjCount != null">
        #{xzyxGjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxTpscCount != null">
        #{xzyxTpscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxSpscCount != null">
        #{xzyxSpscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxVrscCount != null">
        #{xzyxVrscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxZfyCount != null">
        #{xzyxZfyCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxIpcallCount != null">
        #{xzyxIpcallCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKfdpCount != null">
        #{xzyxKfdpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxHbfxCount != null">
        #{xzyxHbfxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxYstjCount != null">
        #{xzyxYstjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxPtwtCount != null">
        #{xzyxPtwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxXswtCount != null">
        #{xzyxXswtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxDjwtCount != null">
        #{xzyxDjwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxBzwtCount != null">
        #{xzyxBzwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFkCount != null">
        #{xzyxFkCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxYjCount != null">
        #{xzyxYjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxDkCount != null">
        #{xzyxDkCount,jdbcType=NUMERIC},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="checkType != null">
        #{checkType,jdbcType=TINYINT},
      </if>
      <if test="roleWageConfigId != null">
        #{roleWageConfigId,jdbcType=INTEGER},
      </if>
      <if test="xzProfitAmount != null">
        #{xzProfitAmount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxProfitAmount != null">
        #{xzyxProfitAmount,jdbcType=NUMERIC},
      </if>
      <if test="dealFlag != null">
        #{dealFlag,jdbcType=TINYINT},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="xzFdjCount != null">
        #{xzFdjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFdjCount != null">
        #{xzyxFdjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzBuildinfoCount != null">
        #{xzBuildinfoCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxBuildinfoCount != null">
        #{xzyxBuildinfoCount,jdbcType=NUMERIC},
      </if>
      <if test="xzSosoCount != null">
        #{xzSosoCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxSosoCount != null">
        #{xzyxSosoCount,jdbcType=NUMERIC},
      </if>
      <if test="xzFpublicZpCount != null">
        #{xzFpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFpublicZpCount != null">
        #{xzyxFpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzFshareZpCount != null">
        #{xzFshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFshareZpCount != null">
        #{xzyxFshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzFzyxCount != null">
        #{xzFzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFzyxCount != null">
        #{xzyxFzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKdjCount != null">
        #{xzKdjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKdjCount != null">
        #{xzyxKdjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKpublicZpCount != null">
        #{xzKpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKpublicZpCount != null">
        #{xzyxKpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKshareZpCount != null">
        #{xzKshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKshareZpCount != null">
        #{xzyxKshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKzyxCount != null">
        #{xzKzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKzyxCount != null">
        #{xzyxKzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzQxzhCount != null">
        #{xzQxzhCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxQxzhCount != null">
        #{xzyxQxzhCount,jdbcType=NUMERIC},
      </if>
      <if test="effectiveStatus != null">
        #{effectiveStatus,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        #{organizationPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunAssessmentStatisticsExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_ASSESSMENT_STATISTICS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ASSESSMENT_STATISTICS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.userPosition != null">
        USER_POSITION = #{record.userPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.assessmentCycleStart != null">
        ASSESSMENT_CYCLE_START = #{record.assessmentCycleStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.assessmentCycleEnd != null">
        ASSESSMENT_CYCLE_END = #{record.assessmentCycleEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.assessmentMonth != null">
        ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.userCount != null">
        USER_COUNT = #{record.userCount,jdbcType=NUMERIC},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.xzFxzCount != null">
        XZ_FXZ_COUNT = #{record.xzFxzCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzKxzCount != null">
        XZ_KXZ_COUNT = #{record.xzKxzCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzGjCount != null">
        XZ_GJ_COUNT = #{record.xzGjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzTpscCount != null">
        XZ_TPSC_COUNT = #{record.xzTpscCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzSpscCount != null">
        XZ_SPSC_COUNT = #{record.xzSpscCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzVrscCount != null">
        XZ_VRSC_COUNT = #{record.xzVrscCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzZfyCount != null">
        XZ_ZFY_COUNT = #{record.xzZfyCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzIpcallCount != null">
        XZ_IPCALL_COUNT = #{record.xzIpcallCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzKfdpCount != null">
        XZ_KFDP_COUNT = #{record.xzKfdpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzHbfxCount != null">
        XZ_HBFX_COUNT = #{record.xzHbfxCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzYstjCount != null">
        XZ_YSTJ_COUNT = #{record.xzYstjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzPtwtCount != null">
        XZ_PTWT_COUNT = #{record.xzPtwtCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzXswtCount != null">
        XZ_XSWT_COUNT = #{record.xzXswtCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzDjwtCount != null">
        XZ_DJWT_COUNT = #{record.xzDjwtCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzBzwtCount != null">
        XZ_BZWT_COUNT = #{record.xzBzwtCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzFkCount != null">
        XZ_FK_COUNT = #{record.xzFkCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzYjCount != null">
        XZ_YJ_COUNT = #{record.xzYjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzDkCount != null">
        XZ_DK_COUNT = #{record.xzDkCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxFxzCount != null">
        XZYX_FXZ_COUNT = #{record.xzyxFxzCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxKxzCount != null">
        XZYX_KXZ_COUNT = #{record.xzyxKxzCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxGjCount != null">
        XZYX_GJ_COUNT = #{record.xzyxGjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxTpscCount != null">
        XZYX_TPSC_COUNT = #{record.xzyxTpscCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxSpscCount != null">
        XZYX_SPSC_COUNT = #{record.xzyxSpscCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxVrscCount != null">
        XZYX_VRSC_COUNT = #{record.xzyxVrscCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxZfyCount != null">
        XZYX_ZFY_COUNT = #{record.xzyxZfyCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxIpcallCount != null">
        XZYX_IPCALL_COUNT = #{record.xzyxIpcallCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxKfdpCount != null">
        XZYX_KFDP_COUNT = #{record.xzyxKfdpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxHbfxCount != null">
        XZYX_HBFX_COUNT = #{record.xzyxHbfxCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxYstjCount != null">
        XZYX_YSTJ_COUNT = #{record.xzyxYstjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxPtwtCount != null">
        XZYX_PTWT_COUNT = #{record.xzyxPtwtCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxXswtCount != null">
        XZYX_XSWT_COUNT = #{record.xzyxXswtCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxDjwtCount != null">
        XZYX_DJWT_COUNT = #{record.xzyxDjwtCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxBzwtCount != null">
        XZYX_BZWT_COUNT = #{record.xzyxBzwtCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxFkCount != null">
        XZYX_FK_COUNT = #{record.xzyxFkCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxYjCount != null">
        XZYX_YJ_COUNT = #{record.xzyxYjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxDkCount != null">
        XZYX_DK_COUNT = #{record.xzyxDkCount,jdbcType=NUMERIC},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
      <if test="record.checkType != null">
        CHECK_TYPE = #{record.checkType,jdbcType=TINYINT},
      </if>
      <if test="record.roleWageConfigId != null">
        ROLE_WAGE_CONFIG_ID = #{record.roleWageConfigId,jdbcType=INTEGER},
      </if>
      <if test="record.xzProfitAmount != null">
        XZ_PROFIT_AMOUNT = #{record.xzProfitAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxProfitAmount != null">
        XZYX_PROFIT_AMOUNT = #{record.xzyxProfitAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.dealFlag != null">
        DEAL_FLAG = #{record.dealFlag,jdbcType=TINYINT},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.xzFdjCount != null">
        XZ_FDJ_COUNT = #{record.xzFdjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxFdjCount != null">
        XZYX_FDJ_COUNT = #{record.xzyxFdjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzBuildinfoCount != null">
        XZ_BUILDINFO_COUNT = #{record.xzBuildinfoCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxBuildinfoCount != null">
        XZYX_BUILDINFO_COUNT = #{record.xzyxBuildinfoCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzSosoCount != null">
        XZ_SOSO_COUNT = #{record.xzSosoCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxSosoCount != null">
        XZYX_SOSO_COUNT = #{record.xzyxSosoCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzFpublicZpCount != null">
        XZ_FPUBLIC_ZP_COUNT = #{record.xzFpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxFpublicZpCount != null">
        XZYX_FPUBLIC_ZP_COUNT = #{record.xzyxFpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzFshareZpCount != null">
        XZ_FSHARE_ZP_COUNT = #{record.xzFshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxFshareZpCount != null">
        XZYX_FSHARE_ZP_COUNT = #{record.xzyxFshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzFzyxCount != null">
        XZ_FZYX_COUNT = #{record.xzFzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxFzyxCount != null">
        XZYX_FZYX_COUNT = #{record.xzyxFzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzKdjCount != null">
        XZ_KDJ_COUNT = #{record.xzKdjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxKdjCount != null">
        XZYX_KDJ_COUNT = #{record.xzyxKdjCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzKpublicZpCount != null">
        XZ_KPUBLIC_ZP_COUNT = #{record.xzKpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxKpublicZpCount != null">
        XZYX_KPUBLIC_ZP_COUNT = #{record.xzyxKpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzKshareZpCount != null">
        XZ_KSHARE_ZP_COUNT = #{record.xzKshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxKshareZpCount != null">
        XZYX_KSHARE_ZP_COUNT = #{record.xzyxKshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzKzyxCount != null">
        XZ_KZYX_COUNT = #{record.xzKzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxKzyxCount != null">
        XZYX_KZYX_COUNT = #{record.xzyxKzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzQxzhCount != null">
        XZ_QXZH_COUNT = #{record.xzQxzhCount,jdbcType=NUMERIC},
      </if>
      <if test="record.xzyxQxzhCount != null">
        XZYX_QXZH_COUNT = #{record.xzyxQxzhCount,jdbcType=NUMERIC},
      </if>
      <if test="record.effectiveStatus != null">
        EFFECTIVE_STATUS = #{record.effectiveStatus,jdbcType=TINYINT},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationPath != null">
        ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ASSESSMENT_STATISTICS
    set ID = #{record.id,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_POSITION = #{record.userPosition,jdbcType=VARCHAR},
      ASSESSMENT_CYCLE_START = #{record.assessmentCycleStart,jdbcType=TIMESTAMP},
      ASSESSMENT_CYCLE_END = #{record.assessmentCycleEnd,jdbcType=TIMESTAMP},
      ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR},
      USER_COUNT = #{record.userCount,jdbcType=NUMERIC},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      XZ_FXZ_COUNT = #{record.xzFxzCount,jdbcType=NUMERIC},
      XZ_KXZ_COUNT = #{record.xzKxzCount,jdbcType=NUMERIC},
      XZ_GJ_COUNT = #{record.xzGjCount,jdbcType=NUMERIC},
      XZ_TPSC_COUNT = #{record.xzTpscCount,jdbcType=NUMERIC},
      XZ_SPSC_COUNT = #{record.xzSpscCount,jdbcType=NUMERIC},
      XZ_VRSC_COUNT = #{record.xzVrscCount,jdbcType=NUMERIC},
      XZ_ZFY_COUNT = #{record.xzZfyCount,jdbcType=NUMERIC},
      XZ_IPCALL_COUNT = #{record.xzIpcallCount,jdbcType=NUMERIC},
      XZ_KFDP_COUNT = #{record.xzKfdpCount,jdbcType=NUMERIC},
      XZ_HBFX_COUNT = #{record.xzHbfxCount,jdbcType=NUMERIC},
      XZ_YSTJ_COUNT = #{record.xzYstjCount,jdbcType=NUMERIC},
      XZ_PTWT_COUNT = #{record.xzPtwtCount,jdbcType=NUMERIC},
      XZ_XSWT_COUNT = #{record.xzXswtCount,jdbcType=NUMERIC},
      XZ_DJWT_COUNT = #{record.xzDjwtCount,jdbcType=NUMERIC},
      XZ_BZWT_COUNT = #{record.xzBzwtCount,jdbcType=NUMERIC},
      XZ_FK_COUNT = #{record.xzFkCount,jdbcType=NUMERIC},
      XZ_YJ_COUNT = #{record.xzYjCount,jdbcType=NUMERIC},
      XZ_DK_COUNT = #{record.xzDkCount,jdbcType=NUMERIC},
      XZYX_FXZ_COUNT = #{record.xzyxFxzCount,jdbcType=NUMERIC},
      XZYX_KXZ_COUNT = #{record.xzyxKxzCount,jdbcType=NUMERIC},
      XZYX_GJ_COUNT = #{record.xzyxGjCount,jdbcType=NUMERIC},
      XZYX_TPSC_COUNT = #{record.xzyxTpscCount,jdbcType=NUMERIC},
      XZYX_SPSC_COUNT = #{record.xzyxSpscCount,jdbcType=NUMERIC},
      XZYX_VRSC_COUNT = #{record.xzyxVrscCount,jdbcType=NUMERIC},
      XZYX_ZFY_COUNT = #{record.xzyxZfyCount,jdbcType=NUMERIC},
      XZYX_IPCALL_COUNT = #{record.xzyxIpcallCount,jdbcType=NUMERIC},
      XZYX_KFDP_COUNT = #{record.xzyxKfdpCount,jdbcType=NUMERIC},
      XZYX_HBFX_COUNT = #{record.xzyxHbfxCount,jdbcType=NUMERIC},
      XZYX_YSTJ_COUNT = #{record.xzyxYstjCount,jdbcType=NUMERIC},
      XZYX_PTWT_COUNT = #{record.xzyxPtwtCount,jdbcType=NUMERIC},
      XZYX_XSWT_COUNT = #{record.xzyxXswtCount,jdbcType=NUMERIC},
      XZYX_DJWT_COUNT = #{record.xzyxDjwtCount,jdbcType=NUMERIC},
      XZYX_BZWT_COUNT = #{record.xzyxBzwtCount,jdbcType=NUMERIC},
      XZYX_FK_COUNT = #{record.xzyxFkCount,jdbcType=NUMERIC},
      XZYX_YJ_COUNT = #{record.xzyxYjCount,jdbcType=NUMERIC},
      XZYX_DK_COUNT = #{record.xzyxDkCount,jdbcType=NUMERIC},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      CHECK_TYPE = #{record.checkType,jdbcType=TINYINT},
      ROLE_WAGE_CONFIG_ID = #{record.roleWageConfigId,jdbcType=INTEGER},
      XZ_PROFIT_AMOUNT = #{record.xzProfitAmount,jdbcType=NUMERIC},
      XZYX_PROFIT_AMOUNT = #{record.xzyxProfitAmount,jdbcType=NUMERIC},
      DEAL_FLAG = #{record.dealFlag,jdbcType=TINYINT},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      XZ_FDJ_COUNT = #{record.xzFdjCount,jdbcType=NUMERIC},
      XZYX_FDJ_COUNT = #{record.xzyxFdjCount,jdbcType=NUMERIC},
      XZ_BUILDINFO_COUNT = #{record.xzBuildinfoCount,jdbcType=NUMERIC},
      XZYX_BUILDINFO_COUNT = #{record.xzyxBuildinfoCount,jdbcType=NUMERIC},
      XZ_SOSO_COUNT = #{record.xzSosoCount,jdbcType=NUMERIC},
      XZYX_SOSO_COUNT = #{record.xzyxSosoCount,jdbcType=NUMERIC},
      XZ_FPUBLIC_ZP_COUNT = #{record.xzFpublicZpCount,jdbcType=NUMERIC},
      XZYX_FPUBLIC_ZP_COUNT = #{record.xzyxFpublicZpCount,jdbcType=NUMERIC},
      XZ_FSHARE_ZP_COUNT = #{record.xzFshareZpCount,jdbcType=NUMERIC},
      XZYX_FSHARE_ZP_COUNT = #{record.xzyxFshareZpCount,jdbcType=NUMERIC},
      XZ_FZYX_COUNT = #{record.xzFzyxCount,jdbcType=NUMERIC},
      XZYX_FZYX_COUNT = #{record.xzyxFzyxCount,jdbcType=NUMERIC},
      XZ_KDJ_COUNT = #{record.xzKdjCount,jdbcType=NUMERIC},
      XZYX_KDJ_COUNT = #{record.xzyxKdjCount,jdbcType=NUMERIC},
      XZ_KPUBLIC_ZP_COUNT = #{record.xzKpublicZpCount,jdbcType=NUMERIC},
      XZYX_KPUBLIC_ZP_COUNT = #{record.xzyxKpublicZpCount,jdbcType=NUMERIC},
      XZ_KSHARE_ZP_COUNT = #{record.xzKshareZpCount,jdbcType=NUMERIC},
      XZYX_KSHARE_ZP_COUNT = #{record.xzyxKshareZpCount,jdbcType=NUMERIC},
      XZ_KZYX_COUNT = #{record.xzKzyxCount,jdbcType=NUMERIC},
      XZYX_KZYX_COUNT = #{record.xzyxKzyxCount,jdbcType=NUMERIC},
      XZ_QXZH_COUNT = #{record.xzQxzhCount,jdbcType=NUMERIC},
      XZYX_QXZH_COUNT = #{record.xzyxQxzhCount,jdbcType=NUMERIC},
      EFFECTIVE_STATUS = #{record.effectiveStatus,jdbcType=TINYINT},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunAssessmentStatistics">
    <!--@mbggenerated-->
    update FUN_ASSESSMENT_STATISTICS
    <set>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userPosition != null">
        USER_POSITION = #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="assessmentCycleStart != null">
        ASSESSMENT_CYCLE_START = #{assessmentCycleStart,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentCycleEnd != null">
        ASSESSMENT_CYCLE_END = #{assessmentCycleEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null">
        USER_COUNT = #{userCount,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="xzFxzCount != null">
        XZ_FXZ_COUNT = #{xzFxzCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKxzCount != null">
        XZ_KXZ_COUNT = #{xzKxzCount,jdbcType=NUMERIC},
      </if>
      <if test="xzGjCount != null">
        XZ_GJ_COUNT = #{xzGjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzTpscCount != null">
        XZ_TPSC_COUNT = #{xzTpscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzSpscCount != null">
        XZ_SPSC_COUNT = #{xzSpscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzVrscCount != null">
        XZ_VRSC_COUNT = #{xzVrscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzZfyCount != null">
        XZ_ZFY_COUNT = #{xzZfyCount,jdbcType=NUMERIC},
      </if>
      <if test="xzIpcallCount != null">
        XZ_IPCALL_COUNT = #{xzIpcallCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKfdpCount != null">
        XZ_KFDP_COUNT = #{xzKfdpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzHbfxCount != null">
        XZ_HBFX_COUNT = #{xzHbfxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzYstjCount != null">
        XZ_YSTJ_COUNT = #{xzYstjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzPtwtCount != null">
        XZ_PTWT_COUNT = #{xzPtwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzXswtCount != null">
        XZ_XSWT_COUNT = #{xzXswtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzDjwtCount != null">
        XZ_DJWT_COUNT = #{xzDjwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzBzwtCount != null">
        XZ_BZWT_COUNT = #{xzBzwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzFkCount != null">
        XZ_FK_COUNT = #{xzFkCount,jdbcType=NUMERIC},
      </if>
      <if test="xzYjCount != null">
        XZ_YJ_COUNT = #{xzYjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzDkCount != null">
        XZ_DK_COUNT = #{xzDkCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFxzCount != null">
        XZYX_FXZ_COUNT = #{xzyxFxzCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKxzCount != null">
        XZYX_KXZ_COUNT = #{xzyxKxzCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxGjCount != null">
        XZYX_GJ_COUNT = #{xzyxGjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxTpscCount != null">
        XZYX_TPSC_COUNT = #{xzyxTpscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxSpscCount != null">
        XZYX_SPSC_COUNT = #{xzyxSpscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxVrscCount != null">
        XZYX_VRSC_COUNT = #{xzyxVrscCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxZfyCount != null">
        XZYX_ZFY_COUNT = #{xzyxZfyCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxIpcallCount != null">
        XZYX_IPCALL_COUNT = #{xzyxIpcallCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKfdpCount != null">
        XZYX_KFDP_COUNT = #{xzyxKfdpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxHbfxCount != null">
        XZYX_HBFX_COUNT = #{xzyxHbfxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxYstjCount != null">
        XZYX_YSTJ_COUNT = #{xzyxYstjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxPtwtCount != null">
        XZYX_PTWT_COUNT = #{xzyxPtwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxXswtCount != null">
        XZYX_XSWT_COUNT = #{xzyxXswtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxDjwtCount != null">
        XZYX_DJWT_COUNT = #{xzyxDjwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxBzwtCount != null">
        XZYX_BZWT_COUNT = #{xzyxBzwtCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFkCount != null">
        XZYX_FK_COUNT = #{xzyxFkCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxYjCount != null">
        XZYX_YJ_COUNT = #{xzyxYjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxDkCount != null">
        XZYX_DK_COUNT = #{xzyxDkCount,jdbcType=NUMERIC},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="checkType != null">
        CHECK_TYPE = #{checkType,jdbcType=TINYINT},
      </if>
      <if test="roleWageConfigId != null">
        ROLE_WAGE_CONFIG_ID = #{roleWageConfigId,jdbcType=INTEGER},
      </if>
      <if test="xzProfitAmount != null">
        XZ_PROFIT_AMOUNT = #{xzProfitAmount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxProfitAmount != null">
        XZYX_PROFIT_AMOUNT = #{xzyxProfitAmount,jdbcType=NUMERIC},
      </if>
      <if test="dealFlag != null">
        DEAL_FLAG = #{dealFlag,jdbcType=TINYINT},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="xzFdjCount != null">
        XZ_FDJ_COUNT = #{xzFdjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFdjCount != null">
        XZYX_FDJ_COUNT = #{xzyxFdjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzBuildinfoCount != null">
        XZ_BUILDINFO_COUNT = #{xzBuildinfoCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxBuildinfoCount != null">
        XZYX_BUILDINFO_COUNT = #{xzyxBuildinfoCount,jdbcType=NUMERIC},
      </if>
      <if test="xzSosoCount != null">
        XZ_SOSO_COUNT = #{xzSosoCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxSosoCount != null">
        XZYX_SOSO_COUNT = #{xzyxSosoCount,jdbcType=NUMERIC},
      </if>
      <if test="xzFpublicZpCount != null">
        XZ_FPUBLIC_ZP_COUNT = #{xzFpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFpublicZpCount != null">
        XZYX_FPUBLIC_ZP_COUNT = #{xzyxFpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzFshareZpCount != null">
        XZ_FSHARE_ZP_COUNT = #{xzFshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFshareZpCount != null">
        XZYX_FSHARE_ZP_COUNT = #{xzyxFshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzFzyxCount != null">
        XZ_FZYX_COUNT = #{xzFzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxFzyxCount != null">
        XZYX_FZYX_COUNT = #{xzyxFzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKdjCount != null">
        XZ_KDJ_COUNT = #{xzKdjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKdjCount != null">
        XZYX_KDJ_COUNT = #{xzyxKdjCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKpublicZpCount != null">
        XZ_KPUBLIC_ZP_COUNT = #{xzKpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKpublicZpCount != null">
        XZYX_KPUBLIC_ZP_COUNT = #{xzyxKpublicZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKshareZpCount != null">
        XZ_KSHARE_ZP_COUNT = #{xzKshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKshareZpCount != null">
        XZYX_KSHARE_ZP_COUNT = #{xzyxKshareZpCount,jdbcType=NUMERIC},
      </if>
      <if test="xzKzyxCount != null">
        XZ_KZYX_COUNT = #{xzKzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxKzyxCount != null">
        XZYX_KZYX_COUNT = #{xzyxKzyxCount,jdbcType=NUMERIC},
      </if>
      <if test="xzQxzhCount != null">
        XZ_QXZH_COUNT = #{xzQxzhCount,jdbcType=NUMERIC},
      </if>
      <if test="xzyxQxzhCount != null">
        XZYX_QXZH_COUNT = #{xzyxQxzhCount,jdbcType=NUMERIC},
      </if>
      <if test="effectiveStatus != null">
        EFFECTIVE_STATUS = #{effectiveStatus,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunAssessmentStatistics">
    <!--@mbggenerated-->
    update FUN_ASSESSMENT_STATISTICS
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_POSITION = #{userPosition,jdbcType=VARCHAR},
      ASSESSMENT_CYCLE_START = #{assessmentCycleStart,jdbcType=TIMESTAMP},
      ASSESSMENT_CYCLE_END = #{assessmentCycleEnd,jdbcType=TIMESTAMP},
      ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR},
      USER_COUNT = #{userCount,jdbcType=NUMERIC},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      XZ_FXZ_COUNT = #{xzFxzCount,jdbcType=NUMERIC},
      XZ_KXZ_COUNT = #{xzKxzCount,jdbcType=NUMERIC},
      XZ_GJ_COUNT = #{xzGjCount,jdbcType=NUMERIC},
      XZ_TPSC_COUNT = #{xzTpscCount,jdbcType=NUMERIC},
      XZ_SPSC_COUNT = #{xzSpscCount,jdbcType=NUMERIC},
      XZ_VRSC_COUNT = #{xzVrscCount,jdbcType=NUMERIC},
      XZ_ZFY_COUNT = #{xzZfyCount,jdbcType=NUMERIC},
      XZ_IPCALL_COUNT = #{xzIpcallCount,jdbcType=NUMERIC},
      XZ_KFDP_COUNT = #{xzKfdpCount,jdbcType=NUMERIC},
      XZ_HBFX_COUNT = #{xzHbfxCount,jdbcType=NUMERIC},
      XZ_YSTJ_COUNT = #{xzYstjCount,jdbcType=NUMERIC},
      XZ_PTWT_COUNT = #{xzPtwtCount,jdbcType=NUMERIC},
      XZ_XSWT_COUNT = #{xzXswtCount,jdbcType=NUMERIC},
      XZ_DJWT_COUNT = #{xzDjwtCount,jdbcType=NUMERIC},
      XZ_BZWT_COUNT = #{xzBzwtCount,jdbcType=NUMERIC},
      XZ_FK_COUNT = #{xzFkCount,jdbcType=NUMERIC},
      XZ_YJ_COUNT = #{xzYjCount,jdbcType=NUMERIC},
      XZ_DK_COUNT = #{xzDkCount,jdbcType=NUMERIC},
      XZYX_FXZ_COUNT = #{xzyxFxzCount,jdbcType=NUMERIC},
      XZYX_KXZ_COUNT = #{xzyxKxzCount,jdbcType=NUMERIC},
      XZYX_GJ_COUNT = #{xzyxGjCount,jdbcType=NUMERIC},
      XZYX_TPSC_COUNT = #{xzyxTpscCount,jdbcType=NUMERIC},
      XZYX_SPSC_COUNT = #{xzyxSpscCount,jdbcType=NUMERIC},
      XZYX_VRSC_COUNT = #{xzyxVrscCount,jdbcType=NUMERIC},
      XZYX_ZFY_COUNT = #{xzyxZfyCount,jdbcType=NUMERIC},
      XZYX_IPCALL_COUNT = #{xzyxIpcallCount,jdbcType=NUMERIC},
      XZYX_KFDP_COUNT = #{xzyxKfdpCount,jdbcType=NUMERIC},
      XZYX_HBFX_COUNT = #{xzyxHbfxCount,jdbcType=NUMERIC},
      XZYX_YSTJ_COUNT = #{xzyxYstjCount,jdbcType=NUMERIC},
      XZYX_PTWT_COUNT = #{xzyxPtwtCount,jdbcType=NUMERIC},
      XZYX_XSWT_COUNT = #{xzyxXswtCount,jdbcType=NUMERIC},
      XZYX_DJWT_COUNT = #{xzyxDjwtCount,jdbcType=NUMERIC},
      XZYX_BZWT_COUNT = #{xzyxBzwtCount,jdbcType=NUMERIC},
      XZYX_FK_COUNT = #{xzyxFkCount,jdbcType=NUMERIC},
      XZYX_YJ_COUNT = #{xzyxYjCount,jdbcType=NUMERIC},
      XZYX_DK_COUNT = #{xzyxDkCount,jdbcType=NUMERIC},
      USER_ID = #{userId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      CHECK_TYPE = #{checkType,jdbcType=TINYINT},
      ROLE_WAGE_CONFIG_ID = #{roleWageConfigId,jdbcType=INTEGER},
      XZ_PROFIT_AMOUNT = #{xzProfitAmount,jdbcType=NUMERIC},
      XZYX_PROFIT_AMOUNT = #{xzyxProfitAmount,jdbcType=NUMERIC},
      DEAL_FLAG = #{dealFlag,jdbcType=TINYINT},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      XZ_FDJ_COUNT = #{xzFdjCount,jdbcType=NUMERIC},
      XZYX_FDJ_COUNT = #{xzyxFdjCount,jdbcType=NUMERIC},
      XZ_BUILDINFO_COUNT = #{xzBuildinfoCount,jdbcType=NUMERIC},
      XZYX_BUILDINFO_COUNT = #{xzyxBuildinfoCount,jdbcType=NUMERIC},
      XZ_SOSO_COUNT = #{xzSosoCount,jdbcType=NUMERIC},
      XZYX_SOSO_COUNT = #{xzyxSosoCount,jdbcType=NUMERIC},
      XZ_FPUBLIC_ZP_COUNT = #{xzFpublicZpCount,jdbcType=NUMERIC},
      XZYX_FPUBLIC_ZP_COUNT = #{xzyxFpublicZpCount,jdbcType=NUMERIC},
      XZ_FSHARE_ZP_COUNT = #{xzFshareZpCount,jdbcType=NUMERIC},
      XZYX_FSHARE_ZP_COUNT = #{xzyxFshareZpCount,jdbcType=NUMERIC},
      XZ_FZYX_COUNT = #{xzFzyxCount,jdbcType=NUMERIC},
      XZYX_FZYX_COUNT = #{xzyxFzyxCount,jdbcType=NUMERIC},
      XZ_KDJ_COUNT = #{xzKdjCount,jdbcType=NUMERIC},
      XZYX_KDJ_COUNT = #{xzyxKdjCount,jdbcType=NUMERIC},
      XZ_KPUBLIC_ZP_COUNT = #{xzKpublicZpCount,jdbcType=NUMERIC},
      XZYX_KPUBLIC_ZP_COUNT = #{xzyxKpublicZpCount,jdbcType=NUMERIC},
      XZ_KSHARE_ZP_COUNT = #{xzKshareZpCount,jdbcType=NUMERIC},
      XZYX_KSHARE_ZP_COUNT = #{xzyxKshareZpCount,jdbcType=NUMERIC},
      XZ_KZYX_COUNT = #{xzKzyxCount,jdbcType=NUMERIC},
      XZYX_KZYX_COUNT = #{xzyxKzyxCount,jdbcType=NUMERIC},
      XZ_QXZH_COUNT = #{xzQxzhCount,jdbcType=NUMERIC},
      XZYX_QXZH_COUNT = #{xzyxQxzhCount,jdbcType=NUMERIC},
      EFFECTIVE_STATUS = #{effectiveStatus,jdbcType=TINYINT},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateFxzOrKxzAmount">
  update FUN_ASSESSMENT_STATISTICS 
  set
    <if test="(param.caseType == 1 || param.caseType == 2) and param.validFlag == 1">
    XZ_FXZ_COUNT = XZ_FXZ_COUNT - #{count}
    </if>
    <if test="(param.caseType == 3 || param.caseType == 4) and param.validFlag == 1">
    XZ_KXZ_COUNT = XZ_KXZ_COUNT - #{count}
    </if>
    <if test="(param.caseType == 1 || param.caseType == 2) and param.validFlag == 0">
    XZ_FXZ_COUNT = XZ_FXZ_COUNT + #{count}
    </if>
    <if test="(param.caseType == 3 || param.caseType == 4) and param.validFlag == 0">
    XZ_KXZ_COUNT = XZ_KXZ_COUNT + #{count}
    </if>
  	WHERE CITY_ID = #{param.cityId}
    AND COMP_ID = #{param.compId}
    AND AREA_ID = #{param.areaId}
    AND REG_ID = #{param.regId}
    AND DEPT_ID = #{param.deptId}
    AND GR_ID = #{param.grId}
    AND USER_ID = #{param.userId}
    AND ASSESSMENT_MONTH = #{param.assessmentMonth}
    AND CASE_TYPE = #{caseType}
  </update>
  <insert id="initAssessmentStaticsData">
    INSERT INTO FUN_ASSESSMENT_STATISTICS (ROLE_WAGE_CONFIG_ID,CITY_ID,comp_id,area_id,reg_id,dept_id,gr_id,user_id, USER_POSITION,CREATE_TIME,
          ASSESSMENT_MONTH,ARCHIVE_ID,USER_COUNT,CASE_TYPE, CHECK_TYPE, EFFECTIVE_STATUS)
    SELECT #{roleWageConfigId},a.CITY_ID,a.comp_id,a.area_id,a.reg_id,a.dept_id,a.gr_id,a.user_id,a.USER_POSITION,GETDATE(),#{assessMentMonth},a.ARCHIVE_ID,
    #{newDeptCount} ,#{caseType},#{checkType}, #{effectiveThisMonth}
    FROM FUN_USERS a
    WHERE a.COMP_ID=#{compId} and a.user_writeoff=0 and USER_POSITION=#{roleId}
    <if test="null != userId">
     and  a.user_id = #{userId}
    </if>
  </insert>

  <insert id="initAssessmentStaticsDataNew">
    INSERT INTO FUN_ASSESSMENT_STATISTICS (AREA_ID,REG_ID, DEPT_ID, GR_ID,ROLE_WAGE_CONFIG_ID,CITY_ID,comp_id,ORGANIZATION_ID,ORGANIZATION_PATH,user_id, USER_POSITION,CREATE_TIME,
    ASSESSMENT_MONTH,ARCHIVE_ID,USER_COUNT,CASE_TYPE, CHECK_TYPE, EFFECTIVE_STATUS)
    SELECT AREA_ID,REG_ID, DEPT_ID, GR_ID,#{roleWageConfigId},a.CITY_ID,a.comp_id,a.ORGANIZATION_ID,a.TISSUE_LINE,a.user_id,a.USER_POSITION,GETDATE(),#{assessMentMonth},a.ARCHIVE_ID,
    #{newDeptCount} ,#{caseType},#{checkType}, #{effectiveThisMonth}
    FROM FUN_USERS a
    WHERE a.COMP_ID=#{compId} and a.user_writeoff=0 and USER_POSITION=#{roleId}
    <if test="null != userId">
      and  a.user_id = #{userId}
    </if>
  </insert>

  <update id="updateDataById">
    UPDATE FUN_ASSESSMENT_STATISTICS set
      <if test="validFlag == 0">
        XZYX_${fieldName} = XZYX_${fieldName}+${itemCount}
      </if>
      <if test="validFlag == 1">
        XZYX_${fieldName} = XZYX_${fieldName}-${itemCount}
      </if>
    WHERE id=#{id}
  </update>
    <update id="updateAmountById">
      update FUN_ASSESSMENT_STATISTICS set
        <if test="param.validFlag == 0">
            XZYX_PROFIT_AMOUNT = XZYX_PROFIT_AMOUNT+${totalAmount}
        </if>
        <if test="param.validFlag == 1">
            XZYX_PROFIT_AMOUNT = XZYX_PROFIT_AMOUNT-${totalAmount}
        </if>
        WHERE id=#{param.assessmentId}
    </update>

  <update id="updateAssessmentStatistic">
    update FUN_ASSESSMENT_STATISTICS set ROLE_WAGE_CONFIG_ID=#{id},USER_POSITION = #{userPosition}
    where comp_id=#{compId} and user_id=#{userId} and ASSESSMENT_MONTH = #{assessMentMonth}
  </update>
  <insert id="mergeAssessmentStaticsData">

    insert into FUN_ASSESSMENT_STATISTICS(ROLE_WAGE_CONFIG_ID,CITY_ID,comp_id,area_id,reg_id,dept_id,gr_id,user_id, USER_POSITION,CREATE_TIME,
              ASSESSMENT_MONTH,ARCHIVE_ID,USER_COUNT,CASE_TYPE, CHECK_TYPE)
    select  #{roleWageConfigId},a.CITY_ID,a.comp_id,a.area_id,a.reg_id,a.dept_id,a.gr_id,a.user_id,a.USER_POSITION,GETDATE(),#{assessmentMonth},a.ARCHIVE_ID,1,1,2
    from FUN_USERS a
    where comp_id= #{compId} and USER_POSITION=#{roleId} and a.USER_WRITEOFF=0
    and user_id not in(
        select user_id from FUN_ASSESSMENT_STATISTICS where comp_id= #{compId} and USER_POSITION=#{roleId} and ASSESSMENT_MONTH=#{assessmentMonth} and CASE_TYPE=1 and CHECK_TYPE=2
    );
    insert into FUN_ASSESSMENT_STATISTICS(ROLE_WAGE_CONFIG_ID,CITY_ID,comp_id,area_id,reg_id,dept_id,gr_id,user_id, USER_POSITION,CREATE_TIME,
              ASSESSMENT_MONTH,ARCHIVE_ID,USER_COUNT,CASE_TYPE, CHECK_TYPE)
    select  #{roleWageConfigId},a.CITY_ID,a.comp_id,a.area_id,a.reg_id,a.dept_id,a.gr_id,a.user_id,a.USER_POSITION,GETDATE(),#{assessmentMonth},a.ARCHIVE_ID,1,2,2
    from FUN_USERS a
    where comp_id= #{compId} and USER_POSITION=#{roleId} and a.USER_WRITEOFF=0
    and user_id not in(
        select user_id from FUN_ASSESSMENT_STATISTICS where comp_id= #{compId} and USER_POSITION=#{roleId} and ASSESSMENT_MONTH=#{assessmentMonth} and CASE_TYPE=2 and CHECK_TYPE=2
    )
  </insert>

  <select id="getStatisticsSum" resultMap="BaseResultMap">
    SELECT
      isnull(SUM(XZYX_FXZ_COUNT), 0) AS XZYX_FXZ_COUNT,isnull(SUM(XZ_FXZ_COUNT), 0) AS XZ_FXZ_COUNT,
      isnull(SUM(XZYX_KXZ_COUNT), 0) AS XZYX_KXZ_COUNT,isnull(SUM(XZ_KXZ_COUNT), 0) AS XZ_KXZ_COUNT,
      isnull(SUM(XZYX_FK_COUNT), 0) AS XZYX_FK_COUNT,isnull(SUM(XZ_FK_COUNT), 0) AS XZ_FK_COUNT,
      isnull(SUM(XZYX_DK_COUNT), 0) AS XZYX_DK_COUNT,isnull(SUM(XZ_DK_COUNT), 0) AS XZ_DK_COUNT,
      isnull(SUM(XZYX_PROFIT_AMOUNT), 0) AS XZYX_PROFIT_AMOUNT,
      isnull(SUM(USER_COUNT), 0) USER_COUNT, CASE_TYPE,USER_ID,ROLE_WAGE_CONFIG_ID,CHECK_TYPE,USER_POSITION,ASSESSMENT_MONTH
    FROM FUN_ASSESSMENT_STATISTICS
    WHERE COMP_ID=#{compId} AND ASSESSMENT_MONTH = #{assessmentMonth} and deal_flag=0 and EFFECTIVE_STATUS = 1
    <if test="null != userIdSet and userIdSet.size() &gt; 0">
      and USER_ID IN <foreach close=")" collection="userIdSet" item="userId" open="(" separator=",">
      #{userId}
    </foreach>
    </if>
    <if test="null != checkType">
      and CHECK_TYPE = #{checkType}
    </if>
    GROUP BY CASE_TYPE,USER_ID,ROLE_WAGE_CONFIG_ID,CHECK_TYPE,USER_POSITION,ASSESSMENT_MONTH
  </select>
</mapper>