<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpRenovationCustomerMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpRenovationCustomer">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="LAST_TRACK_UID" jdbcType="INTEGER" property="lastTrackUid" />
    <result column="LAST_TRACK_CONTENT" jdbcType="VARCHAR" property="lastTrackContent" />
    <result column="LAST_TRACK_TIME" jdbcType="TIMESTAMP" property="lastTrackTime" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="CUST_STATUS" jdbcType="TINYINT" property="custStatus" />
    <result column="CUST_VISIT" jdbcType="TINYINT" property="custVisit" />
    <result column="CUST_NAME" jdbcType="VARCHAR" property="custName" />
    <result column="CUST_SEX" jdbcType="TINYINT" property="custSex" />
    <result column="CUST_ID_CARD" jdbcType="VARCHAR" property="custIdCard" />
    <result column="CUST_MOBILE" jdbcType="VARCHAR" property="custMobile" />
    <result column="CUST_LEVEL" jdbcType="TINYINT" property="custLevel" />
    <result column="CUST_EMAIL" jdbcType="VARCHAR" property="custEmail" />
    <result column="CUST_QQ" jdbcType="VARCHAR" property="custQq" />
    <result column="CUST_VEHICLE" jdbcType="VARCHAR" property="custVehicle" />
    <result column="CUST_CAR_TYPE" jdbcType="VARCHAR" property="custCarType" />
    <result column="CUST_SOURCE" jdbcType="TINYINT" property="custSource" />
    <result column="INTENT_PRODUCT" jdbcType="VARCHAR" property="intentProduct" />
    <result column="INTENT_PRICE_LOW" jdbcType="NUMERIC" property="intentPriceLow" />
    <result column="INTENT_PRICE_HIGH" jdbcType="NUMERIC" property="intentPriceHigh" />
    <result column="CUST_REMARKS" jdbcType="VARCHAR" property="custRemarks" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="HOUSE_REG" jdbcType="INTEGER" property="houseReg" />
    <result column="REGION_NAME" jdbcType="VARCHAR" property="regionName" />
    <result column="SECTION_ID" jdbcType="INTEGER" property="sectionId" />
    <result column="SECTION_NAME" jdbcType="VARCHAR" property="sectionName" />
    <result column="HOUSE_ROUND" jdbcType="TINYINT" property="houseRound" />
    <result column="HOUSE_USEAGE" jdbcType="TINYINT" property="houseUseage" />
    <result column="HOUSE_ROOF" jdbcType="VARCHAR" property="houseRoof" />
    <result column="HOUSE_UNIT" jdbcType="VARCHAR" property="houseUnit" />
    <result column="HOUSE_FLOOR" jdbcType="VARCHAR" property="houseFloor" />
    <result column="HOUSE_NUM" jdbcType="VARCHAR" property="houseNum" />
    <result column="HOUSE_TYPE" jdbcType="TINYINT" property="houseType" />
    <result column="HOUSE_ROOM" jdbcType="TINYINT" property="houseRoom" />
    <result column="HOUSE_HALL" jdbcType="TINYINT" property="houseHall" />
    <result column="HOUSE_WEI" jdbcType="TINYINT" property="houseWei" />
    <result column="HOUSE_YANG" jdbcType="TINYINT" property="houseYang" />
    <result column="HOUSE_AREA" jdbcType="NUMERIC" property="houseArea" />
    <result column="HOUSE_INNERAREA" jdbcType="NUMERIC" property="houseInnerarea" />
    <result column="HOUSE_FITMENT" jdbcType="TINYINT" property="houseFitment" />
    <result column="HOUSE_LADDER" jdbcType="INTEGER" property="houseLadder" />
    <result column="HOUSE_DOORS" jdbcType="TINYINT" property="houseDoors" />
    <result column="HOUSE_RIGHT" jdbcType="TINYINT" property="houseRight" />
    <result column="HOUSE_RIGHT_YEAR" jdbcType="INTEGER" property="houseRightYear" />
    <result column="HOUSE_RIGHT_TYPE" jdbcType="TINYINT" property="houseRightType" />
    <result column="HOUSE_RIGHT_DATE" jdbcType="TIMESTAMP" property="houseRightDate" />
    <result column="HOUSE_DIRECT" jdbcType="TINYINT" property="houseDirect" />
    <result column="HOUSE_YEAR" jdbcType="INTEGER" property="houseYear" />
    <result column="RENOVATION_NO" jdbcType="VARCHAR" property="renovationNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, USER_ID, ARCHIVE_ID, LAST_TRACK_UID, 
    LAST_TRACK_CONTENT, LAST_TRACK_TIME, CREATION_TIME, CUST_STATUS, CUST_VISIT, CUST_NAME, 
    CUST_SEX, CUST_ID_CARD, CUST_MOBILE, CUST_LEVEL, CUST_EMAIL, CUST_QQ, CUST_VEHICLE, 
    CUST_CAR_TYPE, CUST_SOURCE, INTENT_PRODUCT, INTENT_PRICE_LOW, INTENT_PRICE_HIGH, 
    CUST_REMARKS, BUILD_ID, BUILD_NAME, HOUSE_REG, REGION_NAME, SECTION_ID, SECTION_NAME, 
    HOUSE_ROUND, HOUSE_USEAGE, HOUSE_ROOF, HOUSE_UNIT, HOUSE_FLOOR, HOUSE_NUM, HOUSE_TYPE, 
    HOUSE_ROOM, HOUSE_HALL, HOUSE_WEI, HOUSE_YANG, HOUSE_AREA, HOUSE_INNERAREA, HOUSE_FITMENT, 
    HOUSE_LADDER, HOUSE_DOORS, HOUSE_RIGHT, HOUSE_RIGHT_YEAR, HOUSE_RIGHT_TYPE, HOUSE_RIGHT_DATE, 
    HOUSE_DIRECT, HOUSE_YEAR, RENOVATION_NO
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpRenovationCustomerExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from RENOVATION_CUSTOMER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from RENOVATION_CUSTOMER
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from RENOVATION_CUSTOMER
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpRenovationCustomerExample">
    <!--@mbggenerated-->
    delete from RENOVATION_CUSTOMER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpRenovationCustomer" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into RENOVATION_CUSTOMER (COMP_ID, AREA_ID, REG_ID, 
      DEPT_ID, GR_ID, USER_ID, 
      ARCHIVE_ID, LAST_TRACK_UID, LAST_TRACK_CONTENT, 
      LAST_TRACK_TIME, CREATION_TIME, CUST_STATUS, 
      CUST_VISIT, CUST_NAME, CUST_SEX, 
      CUST_ID_CARD, CUST_MOBILE, CUST_LEVEL, 
      CUST_EMAIL, CUST_QQ, CUST_VEHICLE, 
      CUST_CAR_TYPE, CUST_SOURCE, INTENT_PRODUCT, 
      INTENT_PRICE_LOW, INTENT_PRICE_HIGH, CUST_REMARKS, 
      BUILD_ID, BUILD_NAME, HOUSE_REG, 
      REGION_NAME, SECTION_ID, SECTION_NAME, 
      HOUSE_ROUND, HOUSE_USEAGE, HOUSE_ROOF, 
      HOUSE_UNIT, HOUSE_FLOOR, HOUSE_NUM, 
      HOUSE_TYPE, HOUSE_ROOM, HOUSE_HALL, 
      HOUSE_WEI, HOUSE_YANG, HOUSE_AREA, 
      HOUSE_INNERAREA, HOUSE_FITMENT, HOUSE_LADDER, 
      HOUSE_DOORS, HOUSE_RIGHT, HOUSE_RIGHT_YEAR, 
      HOUSE_RIGHT_TYPE, HOUSE_RIGHT_DATE, HOUSE_DIRECT, 
      HOUSE_YEAR, RENOVATION_NO)
    values (#{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{regId,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{archiveId,jdbcType=INTEGER}, #{lastTrackUid,jdbcType=INTEGER}, #{lastTrackContent,jdbcType=VARCHAR}, 
      #{lastTrackTime,jdbcType=TIMESTAMP}, #{creationTime,jdbcType=TIMESTAMP}, #{custStatus,jdbcType=TINYINT}, 
      #{custVisit,jdbcType=TINYINT}, #{custName,jdbcType=VARCHAR}, #{custSex,jdbcType=TINYINT}, 
      #{custIdCard,jdbcType=VARCHAR}, #{custMobile,jdbcType=VARCHAR}, #{custLevel,jdbcType=TINYINT}, 
      #{custEmail,jdbcType=VARCHAR}, #{custQq,jdbcType=VARCHAR}, #{custVehicle,jdbcType=VARCHAR}, 
      #{custCarType,jdbcType=VARCHAR}, #{custSource,jdbcType=TINYINT}, #{intentProduct,jdbcType=VARCHAR}, 
      #{intentPriceLow,jdbcType=NUMERIC}, #{intentPriceHigh,jdbcType=NUMERIC}, #{custRemarks,jdbcType=VARCHAR}, 
      #{buildId,jdbcType=INTEGER}, #{buildName,jdbcType=VARCHAR}, #{houseReg,jdbcType=INTEGER}, 
      #{regionName,jdbcType=VARCHAR}, #{sectionId,jdbcType=INTEGER}, #{sectionName,jdbcType=VARCHAR}, 
      #{houseRound,jdbcType=TINYINT}, #{houseUseage,jdbcType=TINYINT}, #{houseRoof,jdbcType=VARCHAR}, 
      #{houseUnit,jdbcType=VARCHAR}, #{houseFloor,jdbcType=VARCHAR}, #{houseNum,jdbcType=VARCHAR}, 
      #{houseType,jdbcType=TINYINT}, #{houseRoom,jdbcType=TINYINT}, #{houseHall,jdbcType=TINYINT}, 
      #{houseWei,jdbcType=TINYINT}, #{houseYang,jdbcType=TINYINT}, #{houseArea,jdbcType=NUMERIC}, 
      #{houseInnerarea,jdbcType=NUMERIC}, #{houseFitment,jdbcType=TINYINT}, #{houseLadder,jdbcType=INTEGER}, 
      #{houseDoors,jdbcType=TINYINT}, #{houseRight,jdbcType=TINYINT}, #{houseRightYear,jdbcType=INTEGER}, 
      #{houseRightType,jdbcType=TINYINT}, #{houseRightDate,jdbcType=TIMESTAMP}, #{houseDirect,jdbcType=TINYINT}, 
      #{houseYear,jdbcType=INTEGER}, #{renovationNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpRenovationCustomer" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into RENOVATION_CUSTOMER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="lastTrackUid != null">
        LAST_TRACK_UID,
      </if>
      <if test="lastTrackContent != null">
        LAST_TRACK_CONTENT,
      </if>
      <if test="lastTrackTime != null">
        LAST_TRACK_TIME,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="custStatus != null">
        CUST_STATUS,
      </if>
      <if test="custVisit != null">
        CUST_VISIT,
      </if>
      <if test="custName != null">
        CUST_NAME,
      </if>
      <if test="custSex != null">
        CUST_SEX,
      </if>
      <if test="custIdCard != null">
        CUST_ID_CARD,
      </if>
      <if test="custMobile != null">
        CUST_MOBILE,
      </if>
      <if test="custLevel != null">
        CUST_LEVEL,
      </if>
      <if test="custEmail != null">
        CUST_EMAIL,
      </if>
      <if test="custQq != null">
        CUST_QQ,
      </if>
      <if test="custVehicle != null">
        CUST_VEHICLE,
      </if>
      <if test="custCarType != null">
        CUST_CAR_TYPE,
      </if>
      <if test="custSource != null">
        CUST_SOURCE,
      </if>
      <if test="intentProduct != null">
        INTENT_PRODUCT,
      </if>
      <if test="intentPriceLow != null">
        INTENT_PRICE_LOW,
      </if>
      <if test="intentPriceHigh != null">
        INTENT_PRICE_HIGH,
      </if>
      <if test="custRemarks != null">
        CUST_REMARKS,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="buildName != null">
        BUILD_NAME,
      </if>
      <if test="houseReg != null">
        HOUSE_REG,
      </if>
      <if test="regionName != null">
        REGION_NAME,
      </if>
      <if test="sectionId != null">
        SECTION_ID,
      </if>
      <if test="sectionName != null">
        SECTION_NAME,
      </if>
      <if test="houseRound != null">
        HOUSE_ROUND,
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE,
      </if>
      <if test="houseRoof != null">
        HOUSE_ROOF,
      </if>
      <if test="houseUnit != null">
        HOUSE_UNIT,
      </if>
      <if test="houseFloor != null">
        HOUSE_FLOOR,
      </if>
      <if test="houseNum != null">
        HOUSE_NUM,
      </if>
      <if test="houseType != null">
        HOUSE_TYPE,
      </if>
      <if test="houseRoom != null">
        HOUSE_ROOM,
      </if>
      <if test="houseHall != null">
        HOUSE_HALL,
      </if>
      <if test="houseWei != null">
        HOUSE_WEI,
      </if>
      <if test="houseYang != null">
        HOUSE_YANG,
      </if>
      <if test="houseArea != null">
        HOUSE_AREA,
      </if>
      <if test="houseInnerarea != null">
        HOUSE_INNERAREA,
      </if>
      <if test="houseFitment != null">
        HOUSE_FITMENT,
      </if>
      <if test="houseLadder != null">
        HOUSE_LADDER,
      </if>
      <if test="houseDoors != null">
        HOUSE_DOORS,
      </if>
      <if test="houseRight != null">
        HOUSE_RIGHT,
      </if>
      <if test="houseRightYear != null">
        HOUSE_RIGHT_YEAR,
      </if>
      <if test="houseRightType != null">
        HOUSE_RIGHT_TYPE,
      </if>
      <if test="houseRightDate != null">
        HOUSE_RIGHT_DATE,
      </if>
      <if test="houseDirect != null">
        HOUSE_DIRECT,
      </if>
      <if test="houseYear != null">
        HOUSE_YEAR,
      </if>
      <if test="renovationNo != null">
        RENOVATION_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="lastTrackUid != null">
        #{lastTrackUid,jdbcType=INTEGER},
      </if>
      <if test="lastTrackContent != null">
        #{lastTrackContent,jdbcType=VARCHAR},
      </if>
      <if test="lastTrackTime != null">
        #{lastTrackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="custStatus != null">
        #{custStatus,jdbcType=TINYINT},
      </if>
      <if test="custVisit != null">
        #{custVisit,jdbcType=TINYINT},
      </if>
      <if test="custName != null">
        #{custName,jdbcType=VARCHAR},
      </if>
      <if test="custSex != null">
        #{custSex,jdbcType=TINYINT},
      </if>
      <if test="custIdCard != null">
        #{custIdCard,jdbcType=VARCHAR},
      </if>
      <if test="custMobile != null">
        #{custMobile,jdbcType=VARCHAR},
      </if>
      <if test="custLevel != null">
        #{custLevel,jdbcType=TINYINT},
      </if>
      <if test="custEmail != null">
        #{custEmail,jdbcType=VARCHAR},
      </if>
      <if test="custQq != null">
        #{custQq,jdbcType=VARCHAR},
      </if>
      <if test="custVehicle != null">
        #{custVehicle,jdbcType=VARCHAR},
      </if>
      <if test="custCarType != null">
        #{custCarType,jdbcType=VARCHAR},
      </if>
      <if test="custSource != null">
        #{custSource,jdbcType=TINYINT},
      </if>
      <if test="intentProduct != null">
        #{intentProduct,jdbcType=VARCHAR},
      </if>
      <if test="intentPriceLow != null">
        #{intentPriceLow,jdbcType=NUMERIC},
      </if>
      <if test="intentPriceHigh != null">
        #{intentPriceHigh,jdbcType=NUMERIC},
      </if>
      <if test="custRemarks != null">
        #{custRemarks,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="houseReg != null">
        #{houseReg,jdbcType=INTEGER},
      </if>
      <if test="regionName != null">
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="sectionId != null">
        #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sectionName != null">
        #{sectionName,jdbcType=VARCHAR},
      </if>
      <if test="houseRound != null">
        #{houseRound,jdbcType=TINYINT},
      </if>
      <if test="houseUseage != null">
        #{houseUseage,jdbcType=TINYINT},
      </if>
      <if test="houseRoof != null">
        #{houseRoof,jdbcType=VARCHAR},
      </if>
      <if test="houseUnit != null">
        #{houseUnit,jdbcType=VARCHAR},
      </if>
      <if test="houseFloor != null">
        #{houseFloor,jdbcType=VARCHAR},
      </if>
      <if test="houseNum != null">
        #{houseNum,jdbcType=VARCHAR},
      </if>
      <if test="houseType != null">
        #{houseType,jdbcType=TINYINT},
      </if>
      <if test="houseRoom != null">
        #{houseRoom,jdbcType=TINYINT},
      </if>
      <if test="houseHall != null">
        #{houseHall,jdbcType=TINYINT},
      </if>
      <if test="houseWei != null">
        #{houseWei,jdbcType=TINYINT},
      </if>
      <if test="houseYang != null">
        #{houseYang,jdbcType=TINYINT},
      </if>
      <if test="houseArea != null">
        #{houseArea,jdbcType=NUMERIC},
      </if>
      <if test="houseInnerarea != null">
        #{houseInnerarea,jdbcType=NUMERIC},
      </if>
      <if test="houseFitment != null">
        #{houseFitment,jdbcType=TINYINT},
      </if>
      <if test="houseLadder != null">
        #{houseLadder,jdbcType=INTEGER},
      </if>
      <if test="houseDoors != null">
        #{houseDoors,jdbcType=TINYINT},
      </if>
      <if test="houseRight != null">
        #{houseRight,jdbcType=TINYINT},
      </if>
      <if test="houseRightYear != null">
        #{houseRightYear,jdbcType=INTEGER},
      </if>
      <if test="houseRightType != null">
        #{houseRightType,jdbcType=TINYINT},
      </if>
      <if test="houseRightDate != null">
        #{houseRightDate,jdbcType=TIMESTAMP},
      </if>
      <if test="houseDirect != null">
        #{houseDirect,jdbcType=TINYINT},
      </if>
      <if test="houseYear != null">
        #{houseYear,jdbcType=INTEGER},
      </if>
      <if test="renovationNo != null">
        #{renovationNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpRenovationCustomerExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from RENOVATION_CUSTOMER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update RENOVATION_CUSTOMER
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.lastTrackUid != null">
        LAST_TRACK_UID = #{record.lastTrackUid,jdbcType=INTEGER},
      </if>
      <if test="record.lastTrackContent != null">
        LAST_TRACK_CONTENT = #{record.lastTrackContent,jdbcType=VARCHAR},
      </if>
      <if test="record.lastTrackTime != null">
        LAST_TRACK_TIME = #{record.lastTrackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.custStatus != null">
        CUST_STATUS = #{record.custStatus,jdbcType=TINYINT},
      </if>
      <if test="record.custVisit != null">
        CUST_VISIT = #{record.custVisit,jdbcType=TINYINT},
      </if>
      <if test="record.custName != null">
        CUST_NAME = #{record.custName,jdbcType=VARCHAR},
      </if>
      <if test="record.custSex != null">
        CUST_SEX = #{record.custSex,jdbcType=TINYINT},
      </if>
      <if test="record.custIdCard != null">
        CUST_ID_CARD = #{record.custIdCard,jdbcType=VARCHAR},
      </if>
      <if test="record.custMobile != null">
        CUST_MOBILE = #{record.custMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.custLevel != null">
        CUST_LEVEL = #{record.custLevel,jdbcType=TINYINT},
      </if>
      <if test="record.custEmail != null">
        CUST_EMAIL = #{record.custEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.custQq != null">
        CUST_QQ = #{record.custQq,jdbcType=VARCHAR},
      </if>
      <if test="record.custVehicle != null">
        CUST_VEHICLE = #{record.custVehicle,jdbcType=VARCHAR},
      </if>
      <if test="record.custCarType != null">
        CUST_CAR_TYPE = #{record.custCarType,jdbcType=VARCHAR},
      </if>
      <if test="record.custSource != null">
        CUST_SOURCE = #{record.custSource,jdbcType=TINYINT},
      </if>
      <if test="record.intentProduct != null">
        INTENT_PRODUCT = #{record.intentProduct,jdbcType=VARCHAR},
      </if>
      <if test="record.intentPriceLow != null">
        INTENT_PRICE_LOW = #{record.intentPriceLow,jdbcType=NUMERIC},
      </if>
      <if test="record.intentPriceHigh != null">
        INTENT_PRICE_HIGH = #{record.intentPriceHigh,jdbcType=NUMERIC},
      </if>
      <if test="record.custRemarks != null">
        CUST_REMARKS = #{record.custRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.buildName != null">
        BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.houseReg != null">
        HOUSE_REG = #{record.houseReg,jdbcType=INTEGER},
      </if>
      <if test="record.regionName != null">
        REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionId != null">
        SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      </if>
      <if test="record.sectionName != null">
        SECTION_NAME = #{record.sectionName,jdbcType=VARCHAR},
      </if>
      <if test="record.houseRound != null">
        HOUSE_ROUND = #{record.houseRound,jdbcType=TINYINT},
      </if>
      <if test="record.houseUseage != null">
        HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      </if>
      <if test="record.houseRoof != null">
        HOUSE_ROOF = #{record.houseRoof,jdbcType=VARCHAR},
      </if>
      <if test="record.houseUnit != null">
        HOUSE_UNIT = #{record.houseUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.houseFloor != null">
        HOUSE_FLOOR = #{record.houseFloor,jdbcType=VARCHAR},
      </if>
      <if test="record.houseNum != null">
        HOUSE_NUM = #{record.houseNum,jdbcType=VARCHAR},
      </if>
      <if test="record.houseType != null">
        HOUSE_TYPE = #{record.houseType,jdbcType=TINYINT},
      </if>
      <if test="record.houseRoom != null">
        HOUSE_ROOM = #{record.houseRoom,jdbcType=TINYINT},
      </if>
      <if test="record.houseHall != null">
        HOUSE_HALL = #{record.houseHall,jdbcType=TINYINT},
      </if>
      <if test="record.houseWei != null">
        HOUSE_WEI = #{record.houseWei,jdbcType=TINYINT},
      </if>
      <if test="record.houseYang != null">
        HOUSE_YANG = #{record.houseYang,jdbcType=TINYINT},
      </if>
      <if test="record.houseArea != null">
        HOUSE_AREA = #{record.houseArea,jdbcType=NUMERIC},
      </if>
      <if test="record.houseInnerarea != null">
        HOUSE_INNERAREA = #{record.houseInnerarea,jdbcType=NUMERIC},
      </if>
      <if test="record.houseFitment != null">
        HOUSE_FITMENT = #{record.houseFitment,jdbcType=TINYINT},
      </if>
      <if test="record.houseLadder != null">
        HOUSE_LADDER = #{record.houseLadder,jdbcType=INTEGER},
      </if>
      <if test="record.houseDoors != null">
        HOUSE_DOORS = #{record.houseDoors,jdbcType=TINYINT},
      </if>
      <if test="record.houseRight != null">
        HOUSE_RIGHT = #{record.houseRight,jdbcType=TINYINT},
      </if>
      <if test="record.houseRightYear != null">
        HOUSE_RIGHT_YEAR = #{record.houseRightYear,jdbcType=INTEGER},
      </if>
      <if test="record.houseRightType != null">
        HOUSE_RIGHT_TYPE = #{record.houseRightType,jdbcType=TINYINT},
      </if>
      <if test="record.houseRightDate != null">
        HOUSE_RIGHT_DATE = #{record.houseRightDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.houseDirect != null">
        HOUSE_DIRECT = #{record.houseDirect,jdbcType=TINYINT},
      </if>
      <if test="record.houseYear != null">
        HOUSE_YEAR = #{record.houseYear,jdbcType=INTEGER},
      </if>
      <if test="record.renovationNo != null">
        RENOVATION_NO = #{record.renovationNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update RENOVATION_CUSTOMER
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      LAST_TRACK_UID = #{record.lastTrackUid,jdbcType=INTEGER},
      LAST_TRACK_CONTENT = #{record.lastTrackContent,jdbcType=VARCHAR},
      LAST_TRACK_TIME = #{record.lastTrackTime,jdbcType=TIMESTAMP},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      CUST_STATUS = #{record.custStatus,jdbcType=TINYINT},
      CUST_VISIT = #{record.custVisit,jdbcType=TINYINT},
      CUST_NAME = #{record.custName,jdbcType=VARCHAR},
      CUST_SEX = #{record.custSex,jdbcType=TINYINT},
      CUST_ID_CARD = #{record.custIdCard,jdbcType=VARCHAR},
      CUST_MOBILE = #{record.custMobile,jdbcType=VARCHAR},
      CUST_LEVEL = #{record.custLevel,jdbcType=TINYINT},
      CUST_EMAIL = #{record.custEmail,jdbcType=VARCHAR},
      CUST_QQ = #{record.custQq,jdbcType=VARCHAR},
      CUST_VEHICLE = #{record.custVehicle,jdbcType=VARCHAR},
      CUST_CAR_TYPE = #{record.custCarType,jdbcType=VARCHAR},
      CUST_SOURCE = #{record.custSource,jdbcType=TINYINT},
      INTENT_PRODUCT = #{record.intentProduct,jdbcType=VARCHAR},
      INTENT_PRICE_LOW = #{record.intentPriceLow,jdbcType=NUMERIC},
      INTENT_PRICE_HIGH = #{record.intentPriceHigh,jdbcType=NUMERIC},
      CUST_REMARKS = #{record.custRemarks,jdbcType=VARCHAR},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      HOUSE_REG = #{record.houseReg,jdbcType=INTEGER},
      REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{record.sectionName,jdbcType=VARCHAR},
      HOUSE_ROUND = #{record.houseRound,jdbcType=TINYINT},
      HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      HOUSE_ROOF = #{record.houseRoof,jdbcType=VARCHAR},
      HOUSE_UNIT = #{record.houseUnit,jdbcType=VARCHAR},
      HOUSE_FLOOR = #{record.houseFloor,jdbcType=VARCHAR},
      HOUSE_NUM = #{record.houseNum,jdbcType=VARCHAR},
      HOUSE_TYPE = #{record.houseType,jdbcType=TINYINT},
      HOUSE_ROOM = #{record.houseRoom,jdbcType=TINYINT},
      HOUSE_HALL = #{record.houseHall,jdbcType=TINYINT},
      HOUSE_WEI = #{record.houseWei,jdbcType=TINYINT},
      HOUSE_YANG = #{record.houseYang,jdbcType=TINYINT},
      HOUSE_AREA = #{record.houseArea,jdbcType=NUMERIC},
      HOUSE_INNERAREA = #{record.houseInnerarea,jdbcType=NUMERIC},
      HOUSE_FITMENT = #{record.houseFitment,jdbcType=TINYINT},
      HOUSE_LADDER = #{record.houseLadder,jdbcType=INTEGER},
      HOUSE_DOORS = #{record.houseDoors,jdbcType=TINYINT},
      HOUSE_RIGHT = #{record.houseRight,jdbcType=TINYINT},
      HOUSE_RIGHT_YEAR = #{record.houseRightYear,jdbcType=INTEGER},
      HOUSE_RIGHT_TYPE = #{record.houseRightType,jdbcType=TINYINT},
      HOUSE_RIGHT_DATE = #{record.houseRightDate,jdbcType=TIMESTAMP},
      HOUSE_DIRECT = #{record.houseDirect,jdbcType=TINYINT},
      HOUSE_YEAR = #{record.houseYear,jdbcType=INTEGER},
      RENOVATION_NO = #{record.renovationNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpRenovationCustomer">
    <!--@mbggenerated-->
    update RENOVATION_CUSTOMER
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="lastTrackUid != null">
        LAST_TRACK_UID = #{lastTrackUid,jdbcType=INTEGER},
      </if>
      <if test="lastTrackContent != null">
        LAST_TRACK_CONTENT = #{lastTrackContent,jdbcType=VARCHAR},
      </if>
      <if test="lastTrackTime != null">
        LAST_TRACK_TIME = #{lastTrackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="custStatus != null">
        CUST_STATUS = #{custStatus,jdbcType=TINYINT},
      </if>
      <if test="custVisit != null">
        CUST_VISIT = #{custVisit,jdbcType=TINYINT},
      </if>
      <if test="custName != null">
        CUST_NAME = #{custName,jdbcType=VARCHAR},
      </if>
      <if test="custSex != null">
        CUST_SEX = #{custSex,jdbcType=TINYINT},
      </if>
      <if test="custIdCard != null">
        CUST_ID_CARD = #{custIdCard,jdbcType=VARCHAR},
      </if>
      <if test="custMobile != null">
        CUST_MOBILE = #{custMobile,jdbcType=VARCHAR},
      </if>
      <if test="custLevel != null">
        CUST_LEVEL = #{custLevel,jdbcType=TINYINT},
      </if>
      <if test="custEmail != null">
        CUST_EMAIL = #{custEmail,jdbcType=VARCHAR},
      </if>
      <if test="custQq != null">
        CUST_QQ = #{custQq,jdbcType=VARCHAR},
      </if>
      <if test="custVehicle != null">
        CUST_VEHICLE = #{custVehicle,jdbcType=VARCHAR},
      </if>
      <if test="custCarType != null">
        CUST_CAR_TYPE = #{custCarType,jdbcType=VARCHAR},
      </if>
      <if test="custSource != null">
        CUST_SOURCE = #{custSource,jdbcType=TINYINT},
      </if>
      <if test="intentProduct != null">
        INTENT_PRODUCT = #{intentProduct,jdbcType=VARCHAR},
      </if>
      <if test="intentPriceLow != null">
        INTENT_PRICE_LOW = #{intentPriceLow,jdbcType=NUMERIC},
      </if>
      <if test="intentPriceHigh != null">
        INTENT_PRICE_HIGH = #{intentPriceHigh,jdbcType=NUMERIC},
      </if>
      <if test="custRemarks != null">
        CUST_REMARKS = #{custRemarks,jdbcType=VARCHAR},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="houseReg != null">
        HOUSE_REG = #{houseReg,jdbcType=INTEGER},
      </if>
      <if test="regionName != null">
        REGION_NAME = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="sectionId != null">
        SECTION_ID = #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sectionName != null">
        SECTION_NAME = #{sectionName,jdbcType=VARCHAR},
      </if>
      <if test="houseRound != null">
        HOUSE_ROUND = #{houseRound,jdbcType=TINYINT},
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      </if>
      <if test="houseRoof != null">
        HOUSE_ROOF = #{houseRoof,jdbcType=VARCHAR},
      </if>
      <if test="houseUnit != null">
        HOUSE_UNIT = #{houseUnit,jdbcType=VARCHAR},
      </if>
      <if test="houseFloor != null">
        HOUSE_FLOOR = #{houseFloor,jdbcType=VARCHAR},
      </if>
      <if test="houseNum != null">
        HOUSE_NUM = #{houseNum,jdbcType=VARCHAR},
      </if>
      <if test="houseType != null">
        HOUSE_TYPE = #{houseType,jdbcType=TINYINT},
      </if>
      <if test="houseRoom != null">
        HOUSE_ROOM = #{houseRoom,jdbcType=TINYINT},
      </if>
      <if test="houseHall != null">
        HOUSE_HALL = #{houseHall,jdbcType=TINYINT},
      </if>
      <if test="houseWei != null">
        HOUSE_WEI = #{houseWei,jdbcType=TINYINT},
      </if>
      <if test="houseYang != null">
        HOUSE_YANG = #{houseYang,jdbcType=TINYINT},
      </if>
      <if test="houseArea != null">
        HOUSE_AREA = #{houseArea,jdbcType=NUMERIC},
      </if>
      <if test="houseInnerarea != null">
        HOUSE_INNERAREA = #{houseInnerarea,jdbcType=NUMERIC},
      </if>
      <if test="houseFitment != null">
        HOUSE_FITMENT = #{houseFitment,jdbcType=TINYINT},
      </if>
      <if test="houseLadder != null">
        HOUSE_LADDER = #{houseLadder,jdbcType=INTEGER},
      </if>
      <if test="houseDoors != null">
        HOUSE_DOORS = #{houseDoors,jdbcType=TINYINT},
      </if>
      <if test="houseRight != null">
        HOUSE_RIGHT = #{houseRight,jdbcType=TINYINT},
      </if>
      <if test="houseRightYear != null">
        HOUSE_RIGHT_YEAR = #{houseRightYear,jdbcType=INTEGER},
      </if>
      <if test="houseRightType != null">
        HOUSE_RIGHT_TYPE = #{houseRightType,jdbcType=TINYINT},
      </if>
      <if test="houseRightDate != null">
        HOUSE_RIGHT_DATE = #{houseRightDate,jdbcType=TIMESTAMP},
      </if>
      <if test="houseDirect != null">
        HOUSE_DIRECT = #{houseDirect,jdbcType=TINYINT},
      </if>
      <if test="houseYear != null">
        HOUSE_YEAR = #{houseYear,jdbcType=INTEGER},
      </if>
      <if test="renovationNo != null">
        RENOVATION_NO = #{renovationNo,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpRenovationCustomer">
    <!--@mbggenerated-->
    update RENOVATION_CUSTOMER
    set COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      LAST_TRACK_UID = #{lastTrackUid,jdbcType=INTEGER},
      LAST_TRACK_CONTENT = #{lastTrackContent,jdbcType=VARCHAR},
      LAST_TRACK_TIME = #{lastTrackTime,jdbcType=TIMESTAMP},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      CUST_STATUS = #{custStatus,jdbcType=TINYINT},
      CUST_VISIT = #{custVisit,jdbcType=TINYINT},
      CUST_NAME = #{custName,jdbcType=VARCHAR},
      CUST_SEX = #{custSex,jdbcType=TINYINT},
      CUST_ID_CARD = #{custIdCard,jdbcType=VARCHAR},
      CUST_MOBILE = #{custMobile,jdbcType=VARCHAR},
      CUST_LEVEL = #{custLevel,jdbcType=TINYINT},
      CUST_EMAIL = #{custEmail,jdbcType=VARCHAR},
      CUST_QQ = #{custQq,jdbcType=VARCHAR},
      CUST_VEHICLE = #{custVehicle,jdbcType=VARCHAR},
      CUST_CAR_TYPE = #{custCarType,jdbcType=VARCHAR},
      CUST_SOURCE = #{custSource,jdbcType=TINYINT},
      INTENT_PRODUCT = #{intentProduct,jdbcType=VARCHAR},
      INTENT_PRICE_LOW = #{intentPriceLow,jdbcType=NUMERIC},
      INTENT_PRICE_HIGH = #{intentPriceHigh,jdbcType=NUMERIC},
      CUST_REMARKS = #{custRemarks,jdbcType=VARCHAR},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      HOUSE_REG = #{houseReg,jdbcType=INTEGER},
      REGION_NAME = #{regionName,jdbcType=VARCHAR},
      SECTION_ID = #{sectionId,jdbcType=INTEGER},
      SECTION_NAME = #{sectionName,jdbcType=VARCHAR},
      HOUSE_ROUND = #{houseRound,jdbcType=TINYINT},
      HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      HOUSE_ROOF = #{houseRoof,jdbcType=VARCHAR},
      HOUSE_UNIT = #{houseUnit,jdbcType=VARCHAR},
      HOUSE_FLOOR = #{houseFloor,jdbcType=VARCHAR},
      HOUSE_NUM = #{houseNum,jdbcType=VARCHAR},
      HOUSE_TYPE = #{houseType,jdbcType=TINYINT},
      HOUSE_ROOM = #{houseRoom,jdbcType=TINYINT},
      HOUSE_HALL = #{houseHall,jdbcType=TINYINT},
      HOUSE_WEI = #{houseWei,jdbcType=TINYINT},
      HOUSE_YANG = #{houseYang,jdbcType=TINYINT},
      HOUSE_AREA = #{houseArea,jdbcType=NUMERIC},
      HOUSE_INNERAREA = #{houseInnerarea,jdbcType=NUMERIC},
      HOUSE_FITMENT = #{houseFitment,jdbcType=TINYINT},
      HOUSE_LADDER = #{houseLadder,jdbcType=INTEGER},
      HOUSE_DOORS = #{houseDoors,jdbcType=TINYINT},
      HOUSE_RIGHT = #{houseRight,jdbcType=TINYINT},
      HOUSE_RIGHT_YEAR = #{houseRightYear,jdbcType=INTEGER},
      HOUSE_RIGHT_TYPE = #{houseRightType,jdbcType=TINYINT},
      HOUSE_RIGHT_DATE = #{houseRightDate,jdbcType=TIMESTAMP},
      HOUSE_DIRECT = #{houseDirect,jdbcType=TINYINT},
      HOUSE_YEAR = #{houseYear,jdbcType=INTEGER},
      RENOVATION_NO = #{renovationNo,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  	
	<select id="getRenovationStatistic" resultType="java.util.Map">
		SELECT
		<if test="dimension == 1">COMP_ID as compId,AREA_ID as areaId,REG_ID as regId,DEPT_ID as deptId,GR_ID as grId,USER_ID as userId,</if>
		<if test="dimension == 2">BUILD_ID as buildId,BUILD_NAME as buildName,</if>
		<!-- 状态 -->
		<if test="statisticType == 1">
			SUM(1) xzCount,
			SUM(IIF(CUST_STATUS=0,1,0)) yxCount,
			SUM(IIF(CUST_STATUS=1,1,0)) wxCount,
			SUM(IIF(CUST_STATUS=2,1,0)) zhCount,
			SUM(IIF(CUST_STATUS=3,1,0)) yzxCount,
			SUM(IIF(CUST_VISIT=1,1,0)) dfCount
		</if>
		<!-- 来源 0=到店 1=开发 2=分配 3=间接 4=现收 5=网络-->
		<if test="statisticType == 2">
			SUM(IIF(CUST_STATUS=0,1,0)) ddCount,
			SUM(IIF(CUST_STATUS=1,1,0)) kfCount,
			SUM(IIF(CUST_STATUS=2,1,0)) fpCount,
			SUM(IIF(CUST_STATUS=3,1,0)) jjCount,
			SUM(IIF(CUST_STATUS=4,1,0)) xsCount,
			SUM(IIF(CUST_STATUS=5,1,0)) wlCount
		</if>
		<!-- 面积 -->
		<if test="statisticType == 3">${houseAreaSql}</if>
		FROM RENOVATION_CUSTOMER
		WHERE COMP_ID=#{compId} AND ${serchRange} = #{serchRangeId}
		<if test="dimension == 2">
			AND BUILD_ID &gt; 0
		</if>
		<if test="startTime != null and startTime != ''">AND CREATION_TIME &gt; #{startTime}</if>
		<if test="endTime != null and endTime != ''">AND CREATION_TIME &lt; #{endTime}</if>
		<if test="dimension == 1">
			GROUP BY COMP_ID,AREA_ID,REG_ID,DEPT_ID,GR_ID,USER_ID
			ORDER BY COMP_ID,AREA_ID,REG_ID,DEPT_ID,GR_ID,USER_ID
		</if>
		<if test="dimension == 2">
			GROUP BY BUILD_ID,BUILD_NAME
			ORDER BY BUILD_ID
		</if>
	</select>
	
	<select id="getRenovationList" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" />
		FROM RENOVATION_CUSTOMER
		WHERE COMP_ID=#{compId} 
		<if test="param.areaId != null and param.areaId != ''">
		AND AREA_ID = #{param.areaId}
		</if>
		<if test="param.regId != null and param.regId != ''">
		AND REG_ID = #{param.regId}
		</if>
		<if test="param.grId != null and param.grId != ''">
		AND GR_ID = #{param.grId}
		</if>
		<if test="param.deptId != null and param.deptId != ''">
		AND DEPT_ID = #{param.deptId}
		</if>
		<if test="userId != null and userId != ''">
		AND USER_ID = #{userId}
		</if>
		<if test="houseUseage != null">
			AND HOUSE_USEAGE = #{houseUseage}
		</if>
		<if test="intentPricelow != null or intentPricehigh != null">
			AND (
				(
				<trim prefixOverrides="AND">
					<if test="intentPricelow != null">INTENT_PRICE_LOW &gt;= #{intentPricelow}</if>
				</trim>
				) OR (   
				<trim prefixOverrides="AND">
					<if test="intentPricehigh != null">AND INTENT_PRICE_HIGH &gt;= #{intentPricelow}</if>
				</trim>
				)
			)
			AND (
				(
				<trim prefixOverrides="AND">
					<if test="intentPricelow != null">INTENT_PRICE_LOW &lt;= #{intentPricehigh}</if>
				</trim>
				) OR (   
				<trim prefixOverrides="AND">
					<if test="intentPricehigh != null">AND INTENT_PRICE_HIGH &lt;= #{intentPricehigh}</if>
				</trim>
				)
			)
		</if>
		<if test="custStatus != null">
			AND CUST_STATUS = #{custStatus}
		</if>
		<if test="likeStr != null and likeStr != ''">
			AND (
			(RENOVATION_NO LIKE #{likeStr})
			OR(CUST_MOBILE LIKE #{likeStr})
			OR(CUST_NAME LIKE #{likeStr})
			)
		</if>
		ORDER BY CREATION_TIME DESC
	</select>
</mapper>