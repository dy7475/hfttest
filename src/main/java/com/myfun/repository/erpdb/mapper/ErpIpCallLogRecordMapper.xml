<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpIpCallLogRecordMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpIpCallLogRecord">
    <!--@mbggenerated-->
    <id column="RECORD_ID" jdbcType="INTEGER" property="recordId" />
    <result column="CASE_TYPE" jdbcType="INTEGER" property="caseType" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CASE_AREA_ID" jdbcType="INTEGER" property="caseAreaId" />
    <result column="CASE_REG_ID" jdbcType="INTEGER" property="caseRegId" />
    <result column="CASE_DEPT_ID" jdbcType="INTEGER" property="caseDeptId" />
    <result column="CASE_GR_ID" jdbcType="INTEGER" property="caseGrId" />
    <result column="CASE_USER_ID" jdbcType="INTEGER" property="caseUserId" />
    <result column="CALL_USER_ID" jdbcType="INTEGER" property="callUserId" />
    <result column="CALL_COUNT" jdbcType="INTEGER" property="callCount" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="MERGE_KEY" jdbcType="VARCHAR" property="mergeKey" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    RECORD_ID, CASE_TYPE, COMP_ID, CASE_AREA_ID, CASE_REG_ID, CASE_DEPT_ID, CASE_GR_ID, 
    CASE_USER_ID, CALL_USER_ID, CALL_COUNT, CREATE_DATE, CASE_ID, MERGE_KEY
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpIpCallLogRecordExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from IP_CALL_LOG_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from IP_CALL_LOG_RECORD
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from IP_CALL_LOG_RECORD
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpIpCallLogRecordExample">
    <!--@mbggenerated-->
    delete from IP_CALL_LOG_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="recordId" parameterType="com.myfun.repository.erpdb.po.ErpIpCallLogRecord" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into IP_CALL_LOG_RECORD (CASE_TYPE, COMP_ID, CASE_AREA_ID, 
      CASE_REG_ID, CASE_DEPT_ID, CASE_GR_ID, 
      CASE_USER_ID, CALL_USER_ID, CALL_COUNT, 
      CREATE_DATE, CASE_ID, MERGE_KEY
      )
    values (#{caseType,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{caseAreaId,jdbcType=INTEGER}, 
      #{caseRegId,jdbcType=INTEGER}, #{caseDeptId,jdbcType=INTEGER}, #{caseGrId,jdbcType=INTEGER}, 
      #{caseUserId,jdbcType=INTEGER}, #{callUserId,jdbcType=INTEGER}, #{callCount,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{caseId,jdbcType=INTEGER}, #{mergeKey,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="recordId" parameterType="com.myfun.repository.erpdb.po.ErpIpCallLogRecord" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into IP_CALL_LOG_RECORD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="caseAreaId != null">
        CASE_AREA_ID,
      </if>
      <if test="caseRegId != null">
        CASE_REG_ID,
      </if>
      <if test="caseDeptId != null">
        CASE_DEPT_ID,
      </if>
      <if test="caseGrId != null">
        CASE_GR_ID,
      </if>
      <if test="caseUserId != null">
        CASE_USER_ID,
      </if>
      <if test="callUserId != null">
        CALL_USER_ID,
      </if>
      <if test="callCount != null">
        CALL_COUNT,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="mergeKey != null">
        MERGE_KEY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="caseType != null">
        #{caseType,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseAreaId != null">
        #{caseAreaId,jdbcType=INTEGER},
      </if>
      <if test="caseRegId != null">
        #{caseRegId,jdbcType=INTEGER},
      </if>
      <if test="caseDeptId != null">
        #{caseDeptId,jdbcType=INTEGER},
      </if>
      <if test="caseGrId != null">
        #{caseGrId,jdbcType=INTEGER},
      </if>
      <if test="caseUserId != null">
        #{caseUserId,jdbcType=INTEGER},
      </if>
      <if test="callUserId != null">
        #{callUserId,jdbcType=INTEGER},
      </if>
      <if test="callCount != null">
        #{callCount,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="mergeKey != null">
        #{mergeKey,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpIpCallLogRecordExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from IP_CALL_LOG_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update IP_CALL_LOG_RECORD
    <set>
      <if test="record.recordId != null">
        RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.caseAreaId != null">
        CASE_AREA_ID = #{record.caseAreaId,jdbcType=INTEGER},
      </if>
      <if test="record.caseRegId != null">
        CASE_REG_ID = #{record.caseRegId,jdbcType=INTEGER},
      </if>
      <if test="record.caseDeptId != null">
        CASE_DEPT_ID = #{record.caseDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.caseGrId != null">
        CASE_GR_ID = #{record.caseGrId,jdbcType=INTEGER},
      </if>
      <if test="record.caseUserId != null">
        CASE_USER_ID = #{record.caseUserId,jdbcType=INTEGER},
      </if>
      <if test="record.callUserId != null">
        CALL_USER_ID = #{record.callUserId,jdbcType=INTEGER},
      </if>
      <if test="record.callCount != null">
        CALL_COUNT = #{record.callCount,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.mergeKey != null">
        MERGE_KEY = #{record.mergeKey,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update IP_CALL_LOG_RECORD
    set RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CASE_AREA_ID = #{record.caseAreaId,jdbcType=INTEGER},
      CASE_REG_ID = #{record.caseRegId,jdbcType=INTEGER},
      CASE_DEPT_ID = #{record.caseDeptId,jdbcType=INTEGER},
      CASE_GR_ID = #{record.caseGrId,jdbcType=INTEGER},
      CASE_USER_ID = #{record.caseUserId,jdbcType=INTEGER},
      CALL_USER_ID = #{record.callUserId,jdbcType=INTEGER},
      CALL_COUNT = #{record.callCount,jdbcType=INTEGER},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      MERGE_KEY = #{record.mergeKey,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpIpCallLogRecord">
    <!--@mbggenerated-->
    update IP_CALL_LOG_RECORD
    <set>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="caseAreaId != null">
        CASE_AREA_ID = #{caseAreaId,jdbcType=INTEGER},
      </if>
      <if test="caseRegId != null">
        CASE_REG_ID = #{caseRegId,jdbcType=INTEGER},
      </if>
      <if test="caseDeptId != null">
        CASE_DEPT_ID = #{caseDeptId,jdbcType=INTEGER},
      </if>
      <if test="caseGrId != null">
        CASE_GR_ID = #{caseGrId,jdbcType=INTEGER},
      </if>
      <if test="caseUserId != null">
        CASE_USER_ID = #{caseUserId,jdbcType=INTEGER},
      </if>
      <if test="callUserId != null">
        CALL_USER_ID = #{callUserId,jdbcType=INTEGER},
      </if>
      <if test="callCount != null">
        CALL_COUNT = #{callCount,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="mergeKey != null">
        MERGE_KEY = #{mergeKey,jdbcType=VARCHAR},
      </if>
    </set>
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpIpCallLogRecord">
    <!--@mbggenerated-->
    update IP_CALL_LOG_RECORD
    set CASE_TYPE = #{caseType,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      CASE_AREA_ID = #{caseAreaId,jdbcType=INTEGER},
      CASE_REG_ID = #{caseRegId,jdbcType=INTEGER},
      CASE_DEPT_ID = #{caseDeptId,jdbcType=INTEGER},
      CASE_GR_ID = #{caseGrId,jdbcType=INTEGER},
      CASE_USER_ID = #{caseUserId,jdbcType=INTEGER},
      CALL_USER_ID = #{callUserId,jdbcType=INTEGER},
      CALL_COUNT = #{callCount,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      MERGE_KEY = #{mergeKey,jdbcType=VARCHAR}
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>
  
	<update id="addHouseCallCount" parameterType="com.myfun.repository.erpdb.po.ErpIpCallLogRecord">
		merge into IP_CALL_LOG_RECORD aim using
			(select 
			#{compId} as COMP_ID,#{caseAreaId} as CASE_AREA_ID,#{caseRegId} as CASE_REG_ID,
			#{caseDeptId} as CASE_DEPT_ID,#{caseGrId} as CASE_GR_ID,#{caseUserId} as CASE_USER_ID,
			#{callUserId} as CALL_USER_ID,#{createDate} as CREATE_DATE,#{caseId} as CASE_ID,
			#{caseType} as CASE_TYPE,1 as CALL_COUNT) src
			on aim.COMP_ID = src.COMP_ID and aim.CASE_AREA_ID = src.CASE_AREA_ID
			and aim.CASE_REG_ID = src.CASE_REG_ID and aim.CASE_DEPT_ID = src.CASE_DEPT_ID
			and aim.CASE_GR_ID = src.CASE_GR_ID and aim.CASE_USER_ID = src.CASE_USER_ID
			and aim.CALL_USER_ID = src.CALL_USER_ID and aim.CASE_TYPE = src.CASE_TYPE
			and aim.CASE_ID = src.CASE_ID and aim.CREATE_DATE = src.CREATE_DATE
			when not matched then insert(COMP_ID, CASE_TYPE, CASE_ID, CASE_AREA_ID, CASE_REG_ID, CASE_DEPT_ID, CASE_GR_ID, 
			CASE_USER_ID, CALL_USER_ID, CREATE_DATE, CALL_COUNT)
			values(src.COMP_ID,SRC.CASE_TYPE,SRC.CASE_ID,SRC.CASE_AREA_ID,src.CASE_REG_ID,src.CASE_DEPT_ID,src.CASE_GR_ID,src.CASE_USER_ID,
			src.CALL_USER_ID,src.CREATE_DATE,src.CALL_COUNT);
	</update>
</mapper>