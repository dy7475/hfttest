<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpHouseorcustFlowAnalysisMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpHouseorcustFlowAnalysis" >
    <!--@mbggenerated-->
    <id column="ANALYSIS_ID" property="analysisId" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="AREA_ID" property="areaId" jdbcType="INTEGER" />
    <result column="REG_ID" property="regId" jdbcType="INTEGER" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="GR_ID" property="grId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="CASE_ID" property="caseId" jdbcType="INTEGER" />
    <result column="CASE_TYPE" property="caseType" jdbcType="TINYINT" />
    <result column="CASE_CREATE_TIME" property="caseCreateTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="STATUS_CHANGE_TIME" property="statusChangeTime" jdbcType="TIMESTAMP" />
    <result column="CASE_STATUS" property="caseStatus" jdbcType="TINYINT" />
    <result column="BUILD_ID" property="buildId" jdbcType="INTEGER" />
    <result column="AREA" property="area" jdbcType="NUMERIC" />
    <result column="PRICE" property="price" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ANALYSIS_ID, COMP_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, USER_ID, ARCHIVE_ID, CASE_ID, 
    CASE_TYPE, CASE_CREATE_TIME, CREATE_TIME, STATUS_CHANGE_TIME, CASE_STATUS, BUILD_ID, 
    AREA, PRICE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from HOUSEORCUST_FLOW_ANALYSIS
    where ANALYSIS_ID = #{analysisId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from HOUSEORCUST_FLOW_ANALYSIS
    where ANALYSIS_ID = #{analysisId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpHouseorcustFlowAnalysis" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="analysisId" order="BEFORE" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into HOUSEORCUST_FLOW_ANALYSIS (ANALYSIS_ID, COMP_ID, AREA_ID, 
      REG_ID, DEPT_ID, GR_ID, 
      USER_ID, ARCHIVE_ID, CASE_ID, 
      CASE_TYPE, CASE_CREATE_TIME, CREATE_TIME, 
      STATUS_CHANGE_TIME, CASE_STATUS, BUILD_ID, 
      AREA, PRICE)
    values (#{analysisId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{regId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, 
      #{caseType,jdbcType=TINYINT}, #{caseCreateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{statusChangeTime,jdbcType=TIMESTAMP}, #{caseStatus,jdbcType=TINYINT}, #{buildId,jdbcType=INTEGER}, 
      #{area,jdbcType=NUMERIC}, #{price,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpHouseorcustFlowAnalysis" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="analysisId" order="BEFORE" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into HOUSEORCUST_FLOW_ANALYSIS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ANALYSIS_ID,
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="areaId != null" >
        AREA_ID,
      </if>
      <if test="regId != null" >
        REG_ID,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="grId != null" >
        GR_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="caseId != null" >
        CASE_ID,
      </if>
      <if test="caseType != null" >
        CASE_TYPE,
      </if>
      <if test="caseCreateTime != null" >
        CASE_CREATE_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="statusChangeTime != null" >
        STATUS_CHANGE_TIME,
      </if>
      <if test="caseStatus != null" >
        CASE_STATUS,
      </if>
      <if test="buildId != null" >
        BUILD_ID,
      </if>
      <if test="area != null" >
        AREA,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{analysisId,jdbcType=INTEGER},
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null" >
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null" >
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="caseCreateTime != null" >
        #{caseCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusChangeTime != null" >
        #{statusChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="caseStatus != null" >
        #{caseStatus,jdbcType=TINYINT},
      </if>
      <if test="buildId != null" >
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        #{area,jdbcType=NUMERIC},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpHouseorcustFlowAnalysis" >
    <!--@mbggenerated-->
    update HOUSEORCUST_FLOW_ANALYSIS
    <set >
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null" >
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null" >
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="caseCreateTime != null" >
        CASE_CREATE_TIME = #{caseCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusChangeTime != null" >
        STATUS_CHANGE_TIME = #{statusChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="caseStatus != null" >
        CASE_STATUS = #{caseStatus,jdbcType=TINYINT},
      </if>
      <if test="buildId != null" >
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        AREA = #{area,jdbcType=NUMERIC},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=INTEGER},
      </if>
    </set>
    where ANALYSIS_ID = #{analysisId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpHouseorcustFlowAnalysis" >
    <!--@mbggenerated-->
    update HOUSEORCUST_FLOW_ANALYSIS
    set COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      CASE_CREATE_TIME = #{caseCreateTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      STATUS_CHANGE_TIME = #{statusChangeTime,jdbcType=TIMESTAMP},
      CASE_STATUS = #{caseStatus,jdbcType=TINYINT},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      AREA = #{area,jdbcType=NUMERIC},
      PRICE = #{price,jdbcType=INTEGER}
    where ANALYSIS_ID = #{analysisId,jdbcType=INTEGER}
  </update>
  <select id="getHouseCustFlowAnalysisCountList" resultType="java.util.Map">
    select CASE_STATUS AS caseStatus,COUNT(1) AS statusCount,DATEPART(MONTH,CASE_CREATE_TIME) AS monthofyear
    from HOUSEORCUST_FLOW_ANALYSIS
    <where>
      AND COMP_ID = #{param.compId}
      <if test="null != param.newSqlCaseTypeIn" >
      	AND CASE_TYPE IN
      	<foreach collection="param.newSqlCaseTypeIn" item="caseType" open="(" close=")" separator=",">
          #{caseType}
        </foreach>
      </if>
      <if test="null != param.areaId">
		AND AREA_ID = #{param.areaId}
      </if>
      <if test="null != param.regId">
		AND REG_ID = #{param.regId}
      </if>
      <if test="null != param.deptId">
		AND DEPT_ID = #{param.deptId}
      </if>
      <if test="null != param.userId">
		AND USER_ID = #{param.userId}
      </if>
      <if test="null != param.startTime and '' != param.startTime">
		AND CASE_CREATE_TIME &gt;= #{param.startTime}
      </if>
      <if test="null != param.endTime and '' != param.endTime">
		AND CASE_CREATE_TIME &lt;= #{param.endTime}
      </if>
    </where>
    GROUP BY CASE_STATUS,DATEPART(MONTH, CASE_CREATE_TIME) 
    ORDER BY CASE_STATUS ASC,DATEPART(MONTH, CASE_CREATE_TIME) ASC
  </select>
</mapper>