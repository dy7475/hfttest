<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunRewardPunishmentClassMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentClass">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CLASS_NAME" jdbcType="VARCHAR" property="className" />
    <result column="CLASS_SEQ" jdbcType="INTEGER" property="classSeq" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="REWARD_PUNISHMENT_TYPE" jdbcType="TINYINT" property="rewardPunishmentType" />
    <result column="AMOUNT" jdbcType="NUMERIC" property="amount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, CLASS_NAME, CLASS_SEQ, IS_DEL, COMP_ID, CREATE_TIME, REWARD_PUNISHMENT_TYPE, 
    AMOUNT
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentClassExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_REWARD_PUNISHMENT_CLASS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_REWARD_PUNISHMENT_CLASS
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_REWARD_PUNISHMENT_CLASS
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentClassExample">
    <!--@mbggenerated-->
    delete from FUN_REWARD_PUNISHMENT_CLASS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentClass" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_REWARD_PUNISHMENT_CLASS (CLASS_NAME, CLASS_SEQ, IS_DEL, 
      COMP_ID, CREATE_TIME, REWARD_PUNISHMENT_TYPE, 
      AMOUNT)
    values (#{className,jdbcType=VARCHAR}, #{classSeq,jdbcType=INTEGER}, #{isDel,jdbcType=TINYINT}, 
      #{compId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{rewardPunishmentType,jdbcType=TINYINT}, 
      #{amount,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentClass" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_REWARD_PUNISHMENT_CLASS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="className != null">
        CLASS_NAME,
      </if>
      <if test="classSeq != null">
        CLASS_SEQ,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="rewardPunishmentType != null">
        REWARD_PUNISHMENT_TYPE,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="classSeq != null">
        #{classSeq,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rewardPunishmentType != null">
        #{rewardPunishmentType,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentClassExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_REWARD_PUNISHMENT_CLASS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_REWARD_PUNISHMENT_CLASS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.className != null">
        CLASS_NAME = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.classSeq != null">
        CLASS_SEQ = #{record.classSeq,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rewardPunishmentType != null">
        REWARD_PUNISHMENT_TYPE = #{record.rewardPunishmentType,jdbcType=TINYINT},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_REWARD_PUNISHMENT_CLASS
    set ID = #{record.id,jdbcType=INTEGER},
      CLASS_NAME = #{record.className,jdbcType=VARCHAR},
      CLASS_SEQ = #{record.classSeq,jdbcType=INTEGER},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      REWARD_PUNISHMENT_TYPE = #{record.rewardPunishmentType,jdbcType=TINYINT},
      AMOUNT = #{record.amount,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentClass">
    <!--@mbggenerated-->
    update FUN_REWARD_PUNISHMENT_CLASS
    <set>
      <if test="className != null">
        CLASS_NAME = #{className,jdbcType=VARCHAR},
      </if>
      <if test="classSeq != null">
        CLASS_SEQ = #{classSeq,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rewardPunishmentType != null">
        REWARD_PUNISHMENT_TYPE = #{rewardPunishmentType,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=NUMERIC},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunRewardPunishmentClass">
    <!--@mbggenerated-->
    update FUN_REWARD_PUNISHMENT_CLASS
    set CLASS_NAME = #{className,jdbcType=VARCHAR},
      CLASS_SEQ = #{classSeq,jdbcType=INTEGER},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      COMP_ID = #{compId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      REWARD_PUNISHMENT_TYPE = #{rewardPunishmentType,jdbcType=TINYINT},
      AMOUNT = #{amount,jdbcType=NUMERIC}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getClassById" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from FUN_REWARD_PUNISHMENT_CLASS where id=#{classId}
  </select>
	
	<select id="getClassByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from FUN_REWARD_PUNISHMENT_CLASS where id in
	<foreach collection="classIds" open="(" close=")" item="classId" separator=",">
		#{classId}
	</foreach>
  </select>
  
</mapper>