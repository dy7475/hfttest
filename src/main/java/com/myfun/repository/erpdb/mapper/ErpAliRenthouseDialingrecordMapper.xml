<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpAliRenthouseDialingrecordMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpAliRenthouseDialingrecord" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ALI_USER_ID" property="aliUserId" jdbcType="VARCHAR" />
    <result column="ZHIMA_OPEN_ID" property="zhimaOpenId" jdbcType="VARCHAR" />
    <result column="ROOM_CODE" property="roomCode" jdbcType="VARCHAR" />
    <result column="FLATS_TAG" property="flatsTag" jdbcType="INTEGER" />
    <result column="RECORD_TIME" property="recordTime" jdbcType="TIMESTAMP" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="CASE_ID" property="caseId" jdbcType="INTEGER" />
    <result column="CASE_TYPE" property="caseType" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, ALI_USER_ID, ZHIMA_OPEN_ID, ROOM_CODE, FLATS_TAG, RECORD_TIME, CITY_ID, CASE_ID, 
    CASE_TYPE, COMP_ID, DEPT_ID, USER_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpAliRenthouseDialingrecordExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ALI_RENTHOUSE_DIALINGRECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from ALI_RENTHOUSE_DIALINGRECORD
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from ALI_RENTHOUSE_DIALINGRECORD
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpAliRenthouseDialingrecordExample" >
    <!--@mbggenerated-->
    delete from ALI_RENTHOUSE_DIALINGRECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpAliRenthouseDialingrecord" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into ALI_RENTHOUSE_DIALINGRECORD (ALI_USER_ID, ZHIMA_OPEN_ID, ROOM_CODE, 
      FLATS_TAG, RECORD_TIME, CITY_ID, 
      CASE_ID, CASE_TYPE, COMP_ID, 
      DEPT_ID, USER_ID)
    values (#{aliUserId,jdbcType=VARCHAR}, #{zhimaOpenId,jdbcType=VARCHAR}, #{roomCode,jdbcType=VARCHAR}, 
      #{flatsTag,jdbcType=INTEGER}, #{recordTime,jdbcType=TIMESTAMP}, #{cityId,jdbcType=INTEGER}, 
      #{caseId,jdbcType=INTEGER}, #{caseType,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpAliRenthouseDialingrecord" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into ALI_RENTHOUSE_DIALINGRECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="aliUserId != null" >
        ALI_USER_ID,
      </if>
      <if test="zhimaOpenId != null" >
        ZHIMA_OPEN_ID,
      </if>
      <if test="roomCode != null" >
        ROOM_CODE,
      </if>
      <if test="flatsTag != null" >
        FLATS_TAG,
      </if>
      <if test="recordTime != null" >
        RECORD_TIME,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="caseId != null" >
        CASE_ID,
      </if>
      <if test="caseType != null" >
        CASE_TYPE,
      </if>
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="aliUserId != null" >
        #{aliUserId,jdbcType=VARCHAR},
      </if>
      <if test="zhimaOpenId != null" >
        #{zhimaOpenId,jdbcType=VARCHAR},
      </if>
      <if test="roomCode != null" >
        #{roomCode,jdbcType=VARCHAR},
      </if>
      <if test="flatsTag != null" >
        #{flatsTag,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        #{caseType,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpAliRenthouseDialingrecordExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from ALI_RENTHOUSE_DIALINGRECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update ALI_RENTHOUSE_DIALINGRECORD
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.aliUserId != null" >
        ALI_USER_ID = #{record.aliUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.zhimaOpenId != null" >
        ZHIMA_OPEN_ID = #{record.zhimaOpenId,jdbcType=VARCHAR},
      </if>
      <if test="record.roomCode != null" >
        ROOM_CODE = #{record.roomCode,jdbcType=VARCHAR},
      </if>
      <if test="record.flatsTag != null" >
        FLATS_TAG = #{record.flatsTag,jdbcType=INTEGER},
      </if>
      <if test="record.recordTime != null" >
        RECORD_TIME = #{record.recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cityId != null" >
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null" >
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null" >
        CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update ALI_RENTHOUSE_DIALINGRECORD
    set ID = #{record.id,jdbcType=INTEGER},
      ALI_USER_ID = #{record.aliUserId,jdbcType=VARCHAR},
      ZHIMA_OPEN_ID = #{record.zhimaOpenId,jdbcType=VARCHAR},
      ROOM_CODE = #{record.roomCode,jdbcType=VARCHAR},
      FLATS_TAG = #{record.flatsTag,jdbcType=INTEGER},
      RECORD_TIME = #{record.recordTime,jdbcType=TIMESTAMP},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpAliRenthouseDialingrecord" >
    <!--@mbggenerated-->
    update ALI_RENTHOUSE_DIALINGRECORD
    <set >
      <if test="aliUserId != null" >
        ALI_USER_ID = #{aliUserId,jdbcType=VARCHAR},
      </if>
      <if test="zhimaOpenId != null" >
        ZHIMA_OPEN_ID = #{zhimaOpenId,jdbcType=VARCHAR},
      </if>
      <if test="roomCode != null" >
        ROOM_CODE = #{roomCode,jdbcType=VARCHAR},
      </if>
      <if test="flatsTag != null" >
        FLATS_TAG = #{flatsTag,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        RECORD_TIME = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null" >
        CASE_TYPE = #{caseType,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpAliRenthouseDialingrecord" >
    <!--@mbggenerated-->
    update ALI_RENTHOUSE_DIALINGRECORD
    set ALI_USER_ID = #{aliUserId,jdbcType=VARCHAR},
      ZHIMA_OPEN_ID = #{zhimaOpenId,jdbcType=VARCHAR},
      ROOM_CODE = #{roomCode,jdbcType=VARCHAR},
      FLATS_TAG = #{flatsTag,jdbcType=INTEGER},
      RECORD_TIME = #{recordTime,jdbcType=TIMESTAMP},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>