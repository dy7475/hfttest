<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunMlTaskFileMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunMlTaskFile">
    <!--@mbggenerated-->
    <id column="TASK_FILE_ID" jdbcType="INTEGER" property="taskFileId" />
    <result column="TASK_ID" jdbcType="INTEGER" property="taskId" />
    <result column="FILE_NAME" jdbcType="VARCHAR" property="fileName" />
    <result column="FILE_ADDR" jdbcType="VARCHAR" property="fileAddr" />
    <result column="FILE_SIZE" jdbcType="VARCHAR" property="fileSize" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    TASK_FILE_ID, TASK_ID, FILE_NAME, FILE_ADDR, FILE_SIZE
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskFileExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_ML_TASK_FILE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_ML_TASK_FILE
    where TASK_FILE_ID = #{taskFileId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_ML_TASK_FILE
    where TASK_FILE_ID = #{taskFileId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskFileExample">
    <!--@mbggenerated-->
    delete from FUN_ML_TASK_FILE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="taskFileId" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskFile" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ML_TASK_FILE (TASK_ID, FILE_NAME, FILE_ADDR, 
      FILE_SIZE)
    values (#{taskId,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{fileAddr,jdbcType=VARCHAR}, 
      #{fileSize,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="taskFileId" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskFile" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ML_TASK_FILE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        TASK_ID,
      </if>
      <if test="fileName != null">
        FILE_NAME,
      </if>
      <if test="fileAddr != null">
        FILE_ADDR,
      </if>
      <if test="fileSize != null">
        FILE_SIZE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileAddr != null">
        #{fileAddr,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskFileExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_ML_TASK_FILE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ML_TASK_FILE
    <set>
      <if test="record.taskFileId != null">
        TASK_FILE_ID = #{record.taskFileId,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        TASK_ID = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null">
        FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileAddr != null">
        FILE_ADDR = #{record.fileAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        FILE_SIZE = #{record.fileSize,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ML_TASK_FILE
    set TASK_FILE_ID = #{record.taskFileId,jdbcType=INTEGER},
      TASK_ID = #{record.taskId,jdbcType=INTEGER},
      FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      FILE_ADDR = #{record.fileAddr,jdbcType=VARCHAR},
      FILE_SIZE = #{record.fileSize,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskFile">
    <!--@mbggenerated-->
    update FUN_ML_TASK_FILE
    <set>
      <if test="taskId != null">
        TASK_ID = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileAddr != null">
        FILE_ADDR = #{fileAddr,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        FILE_SIZE = #{fileSize,jdbcType=VARCHAR},
      </if>
    </set>
    where TASK_FILE_ID = #{taskFileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunMlTaskFile">
    <!--@mbggenerated-->
    update FUN_ML_TASK_FILE
    set TASK_ID = #{taskId,jdbcType=INTEGER},
      FILE_NAME = #{fileName,jdbcType=VARCHAR},
      FILE_ADDR = #{fileAddr,jdbcType=VARCHAR},
      FILE_SIZE = #{fileSize,jdbcType=VARCHAR}
    where TASK_FILE_ID = #{taskFileId,jdbcType=INTEGER}
  </update>
</mapper>