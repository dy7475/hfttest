<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunUsersInvitedMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunUsersInvited">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_MOBILE" jdbcType="VARCHAR" property="userMobile" />
    <result column="USER_SEX" jdbcType="TINYINT" property="userSex" />
    <result column="USER_POSITION" jdbcType="VARCHAR" property="userPosition" />
    <result column="PERSONNEL_LEVELS" jdbcType="VARCHAR" property="personnelLevels" />
    <result column="LEVELS_ID" jdbcType="INTEGER" property="levelsId" />
    <result column="SERVICE_REG" jdbcType="VARCHAR" property="serviceReg" />
    <result column="SERVICE_ZONE" jdbcType="VARCHAR" property="serviceZone" />
    <result column="SERVICE_ZONE_IDS" jdbcType="VARCHAR" property="serviceZoneIds" />
    <result column="RANGE_IDS" jdbcType="VARCHAR" property="rangeIds" />
    <result column="RANGE_TYPE" jdbcType="INTEGER" property="rangeType" />
    <result column="COMP_NO" jdbcType="VARCHAR" property="compNo" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="INVITE_STATUS" jdbcType="TINYINT" property="inviteStatus" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_UID" jdbcType="INTEGER" property="createUid" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="ROLE_LEVEL_ID" jdbcType="INTEGER" property="roleLevelId" />
    <result column="CURRENT_P_ID" jdbcType="INTEGER" property="currentPId" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
    <result column="ORGANIZATION_PATH" jdbcType="VARCHAR" property="organizationPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, AREA_ID, DEPT_ID, REG_ID, GR_ID, USER_MOBILE, USER_SEX, USER_POSITION, 
    PERSONNEL_LEVELS, LEVELS_ID, SERVICE_REG, SERVICE_ZONE, SERVICE_ZONE_IDS, RANGE_IDS, 
    RANGE_TYPE, COMP_NO, CITY_ID, INVITE_STATUS, USER_NAME, CREATE_TIME, CREATE_UID, 
    UPDATE_TIME, ROLE_LEVEL_ID, CURRENT_P_ID, ORGANIZATION_ID, ORGANIZATION_PATH
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUsersInvitedExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_USERS_INVITED
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_USERS_INVITED
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_USERS_INVITED
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUsersInvitedExample">
    <!--@mbggenerated-->
    delete from FUN_USERS_INVITED
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunUsersInvited" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_USERS_INVITED (COMP_ID, AREA_ID, DEPT_ID, 
      REG_ID, GR_ID, USER_MOBILE, 
      USER_SEX, USER_POSITION, PERSONNEL_LEVELS, 
      LEVELS_ID, SERVICE_REG, SERVICE_ZONE, 
      SERVICE_ZONE_IDS, RANGE_IDS, RANGE_TYPE, 
      COMP_NO, CITY_ID, INVITE_STATUS, 
      USER_NAME, CREATE_TIME, CREATE_UID, 
      UPDATE_TIME, ROLE_LEVEL_ID, CURRENT_P_ID, 
      ORGANIZATION_ID, ORGANIZATION_PATH)
    values (#{compId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{regId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, #{userMobile,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=TINYINT}, #{userPosition,jdbcType=VARCHAR}, #{personnelLevels,jdbcType=VARCHAR}, 
      #{levelsId,jdbcType=INTEGER}, #{serviceReg,jdbcType=VARCHAR}, #{serviceZone,jdbcType=VARCHAR}, 
      #{serviceZoneIds,jdbcType=VARCHAR}, #{rangeIds,jdbcType=VARCHAR}, #{rangeType,jdbcType=INTEGER}, 
      #{compNo,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER}, #{inviteStatus,jdbcType=TINYINT}, 
      #{userName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUid,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{roleLevelId,jdbcType=INTEGER}, #{currentPId,jdbcType=INTEGER}, 
      #{organizationId,jdbcType=INTEGER}, #{organizationPath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunUsersInvited" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_USERS_INVITED
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="userMobile != null">
        USER_MOBILE,
      </if>
      <if test="userSex != null">
        USER_SEX,
      </if>
      <if test="userPosition != null">
        USER_POSITION,
      </if>
      <if test="personnelLevels != null">
        PERSONNEL_LEVELS,
      </if>
      <if test="levelsId != null">
        LEVELS_ID,
      </if>
      <if test="serviceReg != null">
        SERVICE_REG,
      </if>
      <if test="serviceZone != null">
        SERVICE_ZONE,
      </if>
      <if test="serviceZoneIds != null">
        SERVICE_ZONE_IDS,
      </if>
      <if test="rangeIds != null">
        RANGE_IDS,
      </if>
      <if test="rangeType != null">
        RANGE_TYPE,
      </if>
      <if test="compNo != null">
        COMP_NO,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="inviteStatus != null">
        INVITE_STATUS,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUid != null">
        CREATE_UID,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="roleLevelId != null">
        ROLE_LEVEL_ID,
      </if>
      <if test="currentPId != null">
        CURRENT_P_ID,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=TINYINT},
      </if>
      <if test="userPosition != null">
        #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="personnelLevels != null">
        #{personnelLevels,jdbcType=VARCHAR},
      </if>
      <if test="levelsId != null">
        #{levelsId,jdbcType=INTEGER},
      </if>
      <if test="serviceReg != null">
        #{serviceReg,jdbcType=VARCHAR},
      </if>
      <if test="serviceZone != null">
        #{serviceZone,jdbcType=VARCHAR},
      </if>
      <if test="serviceZoneIds != null">
        #{serviceZoneIds,jdbcType=VARCHAR},
      </if>
      <if test="rangeIds != null">
        #{rangeIds,jdbcType=VARCHAR},
      </if>
      <if test="rangeType != null">
        #{rangeType,jdbcType=INTEGER},
      </if>
      <if test="compNo != null">
        #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="inviteStatus != null">
        #{inviteStatus,jdbcType=TINYINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleLevelId != null">
        #{roleLevelId,jdbcType=INTEGER},
      </if>
      <if test="currentPId != null">
        #{currentPId,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        #{organizationPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunUsersInvitedExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_USERS_INVITED
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_USERS_INVITED
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.userMobile != null">
        USER_MOBILE = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null">
        USER_SEX = #{record.userSex,jdbcType=TINYINT},
      </if>
      <if test="record.userPosition != null">
        USER_POSITION = #{record.userPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.personnelLevels != null">
        PERSONNEL_LEVELS = #{record.personnelLevels,jdbcType=VARCHAR},
      </if>
      <if test="record.levelsId != null">
        LEVELS_ID = #{record.levelsId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceReg != null">
        SERVICE_REG = #{record.serviceReg,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceZone != null">
        SERVICE_ZONE = #{record.serviceZone,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceZoneIds != null">
        SERVICE_ZONE_IDS = #{record.serviceZoneIds,jdbcType=VARCHAR},
      </if>
      <if test="record.rangeIds != null">
        RANGE_IDS = #{record.rangeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.rangeType != null">
        RANGE_TYPE = #{record.rangeType,jdbcType=INTEGER},
      </if>
      <if test="record.compNo != null">
        COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.inviteStatus != null">
        INVITE_STATUS = #{record.inviteStatus,jdbcType=TINYINT},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUid != null">
        CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.roleLevelId != null">
        ROLE_LEVEL_ID = #{record.roleLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.currentPId != null">
        CURRENT_P_ID = #{record.currentPId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationPath != null">
        ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_USERS_INVITED
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      USER_MOBILE = #{record.userMobile,jdbcType=VARCHAR},
      USER_SEX = #{record.userSex,jdbcType=TINYINT},
      USER_POSITION = #{record.userPosition,jdbcType=VARCHAR},
      PERSONNEL_LEVELS = #{record.personnelLevels,jdbcType=VARCHAR},
      LEVELS_ID = #{record.levelsId,jdbcType=INTEGER},
      SERVICE_REG = #{record.serviceReg,jdbcType=VARCHAR},
      SERVICE_ZONE = #{record.serviceZone,jdbcType=VARCHAR},
      SERVICE_ZONE_IDS = #{record.serviceZoneIds,jdbcType=VARCHAR},
      RANGE_IDS = #{record.rangeIds,jdbcType=VARCHAR},
      RANGE_TYPE = #{record.rangeType,jdbcType=INTEGER},
      COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      INVITE_STATUS = #{record.inviteStatus,jdbcType=TINYINT},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      ROLE_LEVEL_ID = #{record.roleLevelId,jdbcType=INTEGER},
      CURRENT_P_ID = #{record.currentPId,jdbcType=INTEGER},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunUsersInvited">
    <!--@mbggenerated-->
    update FUN_USERS_INVITED
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userMobile != null">
        USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        USER_SEX = #{userSex,jdbcType=TINYINT},
      </if>
      <if test="userPosition != null">
        USER_POSITION = #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="personnelLevels != null">
        PERSONNEL_LEVELS = #{personnelLevels,jdbcType=VARCHAR},
      </if>
      <if test="levelsId != null">
        LEVELS_ID = #{levelsId,jdbcType=INTEGER},
      </if>
      <if test="serviceReg != null">
        SERVICE_REG = #{serviceReg,jdbcType=VARCHAR},
      </if>
      <if test="serviceZone != null">
        SERVICE_ZONE = #{serviceZone,jdbcType=VARCHAR},
      </if>
      <if test="serviceZoneIds != null">
        SERVICE_ZONE_IDS = #{serviceZoneIds,jdbcType=VARCHAR},
      </if>
      <if test="rangeIds != null">
        RANGE_IDS = #{rangeIds,jdbcType=VARCHAR},
      </if>
      <if test="rangeType != null">
        RANGE_TYPE = #{rangeType,jdbcType=INTEGER},
      </if>
      <if test="compNo != null">
        COMP_NO = #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="inviteStatus != null">
        INVITE_STATUS = #{inviteStatus,jdbcType=TINYINT},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        CREATE_UID = #{createUid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleLevelId != null">
        ROLE_LEVEL_ID = #{roleLevelId,jdbcType=INTEGER},
      </if>
      <if test="currentPId != null">
        CURRENT_P_ID = #{currentPId,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunUsersInvited">
    <!--@mbggenerated-->
    update FUN_USERS_INVITED
    set COMP_ID = #{compId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      USER_SEX = #{userSex,jdbcType=TINYINT},
      USER_POSITION = #{userPosition,jdbcType=VARCHAR},
      PERSONNEL_LEVELS = #{personnelLevels,jdbcType=VARCHAR},
      LEVELS_ID = #{levelsId,jdbcType=INTEGER},
      SERVICE_REG = #{serviceReg,jdbcType=VARCHAR},
      SERVICE_ZONE = #{serviceZone,jdbcType=VARCHAR},
      SERVICE_ZONE_IDS = #{serviceZoneIds,jdbcType=VARCHAR},
      RANGE_IDS = #{rangeIds,jdbcType=VARCHAR},
      RANGE_TYPE = #{rangeType,jdbcType=INTEGER},
      COMP_NO = #{compNo,jdbcType=VARCHAR},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      INVITE_STATUS = #{inviteStatus,jdbcType=TINYINT},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_UID = #{createUid,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      ROLE_LEVEL_ID = #{roleLevelId,jdbcType=INTEGER},
      CURRENT_P_ID = #{currentPId,jdbcType=INTEGER},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateDataForArea">
		update FUN_USERS_INVITED set AREA_ID = #{areaId} where COMP_ID = #{compId} and REG_ID= #{regId}
  </update>

  <select id="getNotConsentUser" resultType="com.myfun.erpWeb.managecenter.sysmanager.vo.GetCompNotInviteUserRoleVo">
      SELECT USER_POSITION userPosition,USER_NAME userName,ID inviteId FROM dbo.FUN_USERS_INVITED WHERE INVITE_STATUS = 0 AND COMP_ID = #{compId}
  </select>
  <select id="getUserByinviteId" resultMap="BaseResultMap">
      SELECT <include refid="Base_Column_List" /> FROM dbo.FUN_USERS_INVITED WHERE ID =  #{inviteId}
  </select>
</mapper>