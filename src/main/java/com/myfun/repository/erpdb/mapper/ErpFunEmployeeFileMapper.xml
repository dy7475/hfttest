<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunEmployeeFileMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunEmployeeFile">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="EMPLOYEE_DOC_ID" jdbcType="INTEGER" property="employeeDocId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="FILE_TYPE" jdbcType="TINYINT" property="fileType" />
    <result column="FILE_URL" jdbcType="VARCHAR" property="fileUrl" />
    <result column="FILE_STATUS" jdbcType="TINYINT" property="fileStatus" />
    <result column="CREATOR_UID" jdbcType="INTEGER" property="creatorUid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, COMP_ID, EMPLOYEE_DOC_ID, ARCHIVE_ID, CREATION_TIME, UPDATE_TIME, FILE_TYPE, 
    FILE_URL, FILE_STATUS, CREATOR_UID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunEmployeeFileExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_EMPLOYEE_FILE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_EMPLOYEE_FILE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_EMPLOYEE_FILE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunEmployeeFileExample">
    <!--@mbggenerated-->
    delete from FUN_EMPLOYEE_FILE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunEmployeeFile" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_EMPLOYEE_FILE (COMP_ID, EMPLOYEE_DOC_ID, ARCHIVE_ID, 
      CREATION_TIME, UPDATE_TIME, FILE_TYPE, 
      FILE_URL, FILE_STATUS, CREATOR_UID
      )
    values (#{compId,jdbcType=INTEGER}, #{employeeDocId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{fileType,jdbcType=TINYINT}, 
      #{fileUrl,jdbcType=VARCHAR}, #{fileStatus,jdbcType=TINYINT}, #{creatorUid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunEmployeeFile" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_EMPLOYEE_FILE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="employeeDocId != null">
        EMPLOYEE_DOC_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="fileType != null">
        FILE_TYPE,
      </if>
      <if test="fileUrl != null">
        FILE_URL,
      </if>
      <if test="fileStatus != null">
        FILE_STATUS,
      </if>
      <if test="creatorUid != null">
        CREATOR_UID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="employeeDocId != null">
        #{employeeDocId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=TINYINT},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileStatus != null">
        #{fileStatus,jdbcType=TINYINT},
      </if>
      <if test="creatorUid != null">
        #{creatorUid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunEmployeeFileExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_EMPLOYEE_FILE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_EMPLOYEE_FILE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeDocId != null">
        EMPLOYEE_DOC_ID = #{record.employeeDocId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileType != null">
        FILE_TYPE = #{record.fileType,jdbcType=TINYINT},
      </if>
      <if test="record.fileUrl != null">
        FILE_URL = #{record.fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.fileStatus != null">
        FILE_STATUS = #{record.fileStatus,jdbcType=TINYINT},
      </if>
      <if test="record.creatorUid != null">
        CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_EMPLOYEE_FILE
    set ID = #{record.id,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      EMPLOYEE_DOC_ID = #{record.employeeDocId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      FILE_TYPE = #{record.fileType,jdbcType=TINYINT},
      FILE_URL = #{record.fileUrl,jdbcType=VARCHAR},
      FILE_STATUS = #{record.fileStatus,jdbcType=TINYINT},
      CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunEmployeeFile">
    <!--@mbggenerated-->
    update FUN_EMPLOYEE_FILE
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="employeeDocId != null">
        EMPLOYEE_DOC_ID = #{employeeDocId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileType != null">
        FILE_TYPE = #{fileType,jdbcType=TINYINT},
      </if>
      <if test="fileUrl != null">
        FILE_URL = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileStatus != null">
        FILE_STATUS = #{fileStatus,jdbcType=TINYINT},
      </if>
      <if test="creatorUid != null">
        CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunEmployeeFile">
    <!--@mbggenerated-->
    update FUN_EMPLOYEE_FILE
    set COMP_ID = #{compId,jdbcType=INTEGER},
      EMPLOYEE_DOC_ID = #{employeeDocId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      FILE_TYPE = #{fileType,jdbcType=TINYINT},
      FILE_URL = #{fileUrl,jdbcType=VARCHAR},
      FILE_STATUS = #{fileStatus,jdbcType=TINYINT},
      CREATOR_UID = #{creatorUid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
	<select id="getEmployeeFile" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from FUN_EMPLOYEE_FILE
		where COMP_ID = #{compId} and EMPLOYEE_DOC_ID = #{employeeDocId}  and  FILE_STATUS ='0'
	</select>
</mapper>