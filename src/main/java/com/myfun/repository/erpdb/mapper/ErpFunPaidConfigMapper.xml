<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunPaidConfigMapper" >
	<resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunPaidConfig" >
		<!--@mbggenerated-->
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="COMP_ID" property="compId" jdbcType="INTEGER" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="UPDATE_UID" property="updateUid" jdbcType="INTEGER" />
		<result column="HOUSE_ADD" property="houseAdd" jdbcType="INTEGER" />
		<result column="CUST_ADD" property="custAdd" jdbcType="INTEGER" />
		<result column="FK_COUNT" property="fkCount" jdbcType="INTEGER" />
		<result column="DK_COUNT" property="dkCount" jdbcType="INTEGER" />
		<result column="KEY_COUNT" property="keyCount" jdbcType="INTEGER" />
		<result column="TRUE_HOUSE" property="trueHouse" jdbcType="INTEGER" />
		<result column="SALE_DEAL" property="saleDeal" jdbcType="INTEGER" />
		<result column="RENT_DEAL" property="rentDeal" jdbcType="INTEGER" />
		<result column="NEW_HOUSE" property="newHouse" jdbcType="INTEGER" />
		<result column="BUILD_BIDDING" property="buildBidding" jdbcType="INTEGER" />
		<result column="HOUSE_BIDDING" property="houseBidding" jdbcType="INTEGER" />
		<result column="IS_EXEC" property="isExec" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause" >
		<!--@mbggenerated-->
		<where >
			<foreach collection="oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause" >
		<!--@mbggenerated-->
		<where >
			<foreach collection="example.oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List" >
		<!--@mbggenerated-->
		ID, COMP_ID, CREATE_TIME, UPDATE_TIME, UPDATE_UID, HOUSE_ADD, CUST_ADD, FK_COUNT,
		DK_COUNT, KEY_COUNT, TRUE_HOUSE, SALE_DEAL, RENT_DEAL, NEW_HOUSE, BUILD_BIDDING,
		HOUSE_BIDDING, IS_EXEC
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpFunPaidConfigExample" >
		<!--@mbggenerated-->
		select
		<if test="distinct" >
			distinct
		</if>
		<include refid="Base_Column_List" />
		from FUN_PAID_CONFIG
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null" >
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		<!--@mbggenerated-->
		select
		<include refid="Base_Column_List" />
		from FUN_PAID_CONFIG
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
		<!--@mbggenerated-->
		delete from FUN_PAID_CONFIG
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPaidConfigExample" >
		<!--@mbggenerated-->
		delete from FUN_PAID_CONFIG
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunPaidConfig" useGeneratedKeys="true" keyProperty="id" >
		<!--@mbggenerated-->
		insert into FUN_PAID_CONFIG (COMP_ID, CREATE_TIME, UPDATE_TIME,
		UPDATE_UID, HOUSE_ADD, CUST_ADD,
		FK_COUNT, DK_COUNT, KEY_COUNT,
		TRUE_HOUSE, SALE_DEAL, RENT_DEAL,
		NEW_HOUSE, BUILD_BIDDING, HOUSE_BIDDING,
		IS_EXEC)
		values (#{compId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
		#{updateUid,jdbcType=INTEGER}, #{houseAdd,jdbcType=INTEGER}, #{custAdd,jdbcType=INTEGER},
		#{fkCount,jdbcType=INTEGER}, #{dkCount,jdbcType=INTEGER}, #{keyCount,jdbcType=INTEGER},
		#{trueHouse,jdbcType=INTEGER}, #{saleDeal,jdbcType=INTEGER}, #{rentDeal,jdbcType=INTEGER},
		#{newHouse,jdbcType=INTEGER}, #{buildBidding,jdbcType=INTEGER}, #{houseBidding,jdbcType=INTEGER},
		#{isExec,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunPaidConfig" useGeneratedKeys="true" keyProperty="id" >
		<!--@mbggenerated-->
		insert into FUN_PAID_CONFIG
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="compId != null" >
				COMP_ID,
			</if>
			<if test="createTime != null" >
				CREATE_TIME,
			</if>
			<if test="updateTime != null" >
				UPDATE_TIME,
			</if>
			<if test="updateUid != null" >
				UPDATE_UID,
			</if>
			<if test="houseAdd != null" >
				HOUSE_ADD,
			</if>
			<if test="custAdd != null" >
				CUST_ADD,
			</if>
			<if test="fkCount != null" >
				FK_COUNT,
			</if>
			<if test="dkCount != null" >
				DK_COUNT,
			</if>
			<if test="keyCount != null" >
				KEY_COUNT,
			</if>
			<if test="trueHouse != null" >
				TRUE_HOUSE,
			</if>
			<if test="saleDeal != null" >
				SALE_DEAL,
			</if>
			<if test="rentDeal != null" >
				RENT_DEAL,
			</if>
			<if test="newHouse != null" >
				NEW_HOUSE,
			</if>
			<if test="buildBidding != null" >
				BUILD_BIDDING,
			</if>
			<if test="houseBidding != null" >
				HOUSE_BIDDING,
			</if>
			<if test="isExec != null" >
				IS_EXEC,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="compId != null" >
				#{compId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null" >
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null" >
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUid != null" >
				#{updateUid,jdbcType=INTEGER},
			</if>
			<if test="houseAdd != null" >
				#{houseAdd,jdbcType=INTEGER},
			</if>
			<if test="custAdd != null" >
				#{custAdd,jdbcType=INTEGER},
			</if>
			<if test="fkCount != null" >
				#{fkCount,jdbcType=INTEGER},
			</if>
			<if test="dkCount != null" >
				#{dkCount,jdbcType=INTEGER},
			</if>
			<if test="keyCount != null" >
				#{keyCount,jdbcType=INTEGER},
			</if>
			<if test="trueHouse != null" >
				#{trueHouse,jdbcType=INTEGER},
			</if>
			<if test="saleDeal != null" >
				#{saleDeal,jdbcType=INTEGER},
			</if>
			<if test="rentDeal != null" >
				#{rentDeal,jdbcType=INTEGER},
			</if>
			<if test="newHouse != null" >
				#{newHouse,jdbcType=INTEGER},
			</if>
			<if test="buildBidding != null" >
				#{buildBidding,jdbcType=INTEGER},
			</if>
			<if test="houseBidding != null" >
				#{houseBidding,jdbcType=INTEGER},
			</if>
			<if test="isExec != null" >
				#{isExec,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunPaidConfigExample" resultType="java.lang.Integer" >
		<!--@mbggenerated-->
		select count(*) from FUN_PAID_CONFIG
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map" >
		<!--@mbggenerated-->
		update FUN_PAID_CONFIG
		<set >
			<if test="record.id != null" >
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.compId != null" >
				COMP_ID = #{record.compId,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null" >
				CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null" >
				UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateUid != null" >
				UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
			</if>
			<if test="record.houseAdd != null" >
				HOUSE_ADD = #{record.houseAdd,jdbcType=INTEGER},
			</if>
			<if test="record.custAdd != null" >
				CUST_ADD = #{record.custAdd,jdbcType=INTEGER},
			</if>
			<if test="record.fkCount != null" >
				FK_COUNT = #{record.fkCount,jdbcType=INTEGER},
			</if>
			<if test="record.dkCount != null" >
				DK_COUNT = #{record.dkCount,jdbcType=INTEGER},
			</if>
			<if test="record.keyCount != null" >
				KEY_COUNT = #{record.keyCount,jdbcType=INTEGER},
			</if>
			<if test="record.trueHouse != null" >
				TRUE_HOUSE = #{record.trueHouse,jdbcType=INTEGER},
			</if>
			<if test="record.saleDeal != null" >
				SALE_DEAL = #{record.saleDeal,jdbcType=INTEGER},
			</if>
			<if test="record.rentDeal != null" >
				RENT_DEAL = #{record.rentDeal,jdbcType=INTEGER},
			</if>
			<if test="record.newHouse != null" >
				NEW_HOUSE = #{record.newHouse,jdbcType=INTEGER},
			</if>
			<if test="record.buildBidding != null" >
				BUILD_BIDDING = #{record.buildBidding,jdbcType=INTEGER},
			</if>
			<if test="record.houseBidding != null" >
				HOUSE_BIDDING = #{record.houseBidding,jdbcType=INTEGER},
			</if>
			<if test="record.isExec != null" >
				IS_EXEC = #{record.isExec,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map" >
		<!--@mbggenerated-->
		update FUN_PAID_CONFIG
		set ID = #{record.id,jdbcType=INTEGER},
		COMP_ID = #{record.compId,jdbcType=INTEGER},
		CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
		UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
		UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
		HOUSE_ADD = #{record.houseAdd,jdbcType=INTEGER},
		CUST_ADD = #{record.custAdd,jdbcType=INTEGER},
		FK_COUNT = #{record.fkCount,jdbcType=INTEGER},
		DK_COUNT = #{record.dkCount,jdbcType=INTEGER},
		KEY_COUNT = #{record.keyCount,jdbcType=INTEGER},
		TRUE_HOUSE = #{record.trueHouse,jdbcType=INTEGER},
		SALE_DEAL = #{record.saleDeal,jdbcType=INTEGER},
		RENT_DEAL = #{record.rentDeal,jdbcType=INTEGER},
		NEW_HOUSE = #{record.newHouse,jdbcType=INTEGER},
		BUILD_BIDDING = #{record.buildBidding,jdbcType=INTEGER},
		HOUSE_BIDDING = #{record.houseBidding,jdbcType=INTEGER},
		IS_EXEC = #{record.isExec,jdbcType=INTEGER}
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunPaidConfig" >
		<!--@mbggenerated-->
		update FUN_PAID_CONFIG
		<set >
			<if test="compId != null" >
				COMP_ID = #{compId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null" >
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null" >
				UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUid != null" >
				UPDATE_UID = #{updateUid,jdbcType=INTEGER},
			</if>
			<if test="houseAdd != null" >
				HOUSE_ADD = #{houseAdd,jdbcType=INTEGER},
			</if>
			<if test="custAdd != null" >
				CUST_ADD = #{custAdd,jdbcType=INTEGER},
			</if>
			<if test="fkCount != null" >
				FK_COUNT = #{fkCount,jdbcType=INTEGER},
			</if>
			<if test="dkCount != null" >
				DK_COUNT = #{dkCount,jdbcType=INTEGER},
			</if>
			<if test="keyCount != null" >
				KEY_COUNT = #{keyCount,jdbcType=INTEGER},
			</if>
			<if test="trueHouse != null" >
				TRUE_HOUSE = #{trueHouse,jdbcType=INTEGER},
			</if>
			<if test="saleDeal != null" >
				SALE_DEAL = #{saleDeal,jdbcType=INTEGER},
			</if>
			<if test="rentDeal != null" >
				RENT_DEAL = #{rentDeal,jdbcType=INTEGER},
			</if>
			<if test="newHouse != null" >
				NEW_HOUSE = #{newHouse,jdbcType=INTEGER},
			</if>
			<if test="buildBidding != null" >
				BUILD_BIDDING = #{buildBidding,jdbcType=INTEGER},
			</if>
			<if test="houseBidding != null" >
				HOUSE_BIDDING = #{houseBidding,jdbcType=INTEGER},
			</if>
			<if test="isExec != null" >
				IS_EXEC = #{isExec,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunPaidConfig" >
		<!--@mbggenerated-->
		update FUN_PAID_CONFIG
		set COMP_ID = #{compId,jdbcType=INTEGER},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
		UPDATE_UID = #{updateUid,jdbcType=INTEGER},
		HOUSE_ADD = #{houseAdd,jdbcType=INTEGER},
		CUST_ADD = #{custAdd,jdbcType=INTEGER},
		FK_COUNT = #{fkCount,jdbcType=INTEGER},
		DK_COUNT = #{dkCount,jdbcType=INTEGER},
		KEY_COUNT = #{keyCount,jdbcType=INTEGER},
		TRUE_HOUSE = #{trueHouse,jdbcType=INTEGER},
		SALE_DEAL = #{saleDeal,jdbcType=INTEGER},
		RENT_DEAL = #{rentDeal,jdbcType=INTEGER},
		NEW_HOUSE = #{newHouse,jdbcType=INTEGER},
		BUILD_BIDDING = #{buildBidding,jdbcType=INTEGER},
		HOUSE_BIDDING = #{houseBidding,jdbcType=INTEGER},
		IS_EXEC = #{isExec,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	
	<select id="getFunPaidConfig" resultMap="BaseResultMap">
		select top 1
		<include refid="Base_Column_List"/>
		from FUN_PAID_CONFIG
		where COMP_ID = #{compId}
		order by CREATE_TIME desc
	</select>
</mapper>