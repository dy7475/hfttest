<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.erpdb.dao.ErpCityshareBorkerPurchaseMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpCityshareBorkerPurchase" >
    <!--@mbggenerated-->
    <id column="PURCHASE_ID" property="purchaseId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="RETURN_STATUS" property="returnStatus" jdbcType="TINYINT" />
    <result column="CREATION_TIME" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="SHAREHOUSE_ID" property="sharehouseId" jdbcType="INTEGER" />
    <result column="PURCHASE_TYPE" property="purchaseType" jdbcType="TINYINT" />
    <result column="MANAGER_GET_MONEY" property="managerGetMoney" jdbcType="DECIMAL" />
    <result column="SHARE_GET_MONEY" property="shareGetMoney" jdbcType="DECIMAL" />
    <result column="VIEW_STATUS" property="viewStatus" jdbcType="TINYINT" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="SHARE_RETURN" property="shareReturn" jdbcType="TINYINT" />
    <result column="MANAGER_RETURN" property="managerReturn" jdbcType="TINYINT" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="TARGET_COMPLAIN_FLAG" property="targetComplainFlag" jdbcType="TINYINT" />
    <result column="COMPLAIN_FLAG" property="complainFlag" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    PURCHASE_ID, USER_ID, RETURN_STATUS, CREATION_TIME, CITY_ID, SHAREHOUSE_ID, PURCHASE_TYPE, 
    MANAGER_GET_MONEY, SHARE_GET_MONEY, VIEW_STATUS, ARCHIVE_ID, SHARE_RETURN, MANAGER_RETURN, 
    COMP_ID, TARGET_COMPLAIN_FLAG, COMPLAIN_FLAG
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.erpdb.po.ErpCityshareBorkerPurchaseExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CITYSHARE_BORKER_PURCHASE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from CITYSHARE_BORKER_PURCHASE
    where PURCHASE_ID = #{purchaseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from CITYSHARE_BORKER_PURCHASE
    where PURCHASE_ID = #{purchaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpCityshareBorkerPurchaseExample" >
    <!--@mbggenerated-->
    delete from CITYSHARE_BORKER_PURCHASE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpCityshareBorkerPurchase" useGeneratedKeys="true" keyProperty="purchaseId" >
    <!--@mbggenerated-->
    insert into CITYSHARE_BORKER_PURCHASE (USER_ID, RETURN_STATUS, CREATION_TIME, 
      CITY_ID, SHAREHOUSE_ID, PURCHASE_TYPE, 
      MANAGER_GET_MONEY, SHARE_GET_MONEY, VIEW_STATUS, 
      ARCHIVE_ID, SHARE_RETURN, MANAGER_RETURN, 
      COMP_ID, TARGET_COMPLAIN_FLAG, COMPLAIN_FLAG
      )
    values (#{userId,jdbcType=INTEGER}, #{returnStatus,jdbcType=TINYINT}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{cityId,jdbcType=INTEGER}, #{sharehouseId,jdbcType=INTEGER}, #{purchaseType,jdbcType=TINYINT}, 
      #{managerGetMoney,jdbcType=DECIMAL}, #{shareGetMoney,jdbcType=DECIMAL}, #{viewStatus,jdbcType=TINYINT}, 
      #{archiveId,jdbcType=INTEGER}, #{shareReturn,jdbcType=TINYINT}, #{managerReturn,jdbcType=TINYINT}, 
      #{compId,jdbcType=INTEGER}, #{targetComplainFlag,jdbcType=TINYINT}, #{complainFlag,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpCityshareBorkerPurchase" useGeneratedKeys="true" keyProperty="purchaseId" >
    <!--@mbggenerated-->
    insert into CITYSHARE_BORKER_PURCHASE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="returnStatus != null" >
        RETURN_STATUS,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="sharehouseId != null" >
        SHAREHOUSE_ID,
      </if>
      <if test="purchaseType != null" >
        PURCHASE_TYPE,
      </if>
      <if test="managerGetMoney != null" >
        MANAGER_GET_MONEY,
      </if>
      <if test="shareGetMoney != null" >
        SHARE_GET_MONEY,
      </if>
      <if test="viewStatus != null" >
        VIEW_STATUS,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="shareReturn != null" >
        SHARE_RETURN,
      </if>
      <if test="managerReturn != null" >
        MANAGER_RETURN,
      </if>
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="targetComplainFlag != null" >
        TARGET_COMPLAIN_FLAG,
      </if>
      <if test="complainFlag != null" >
        COMPLAIN_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="returnStatus != null" >
        #{returnStatus,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="sharehouseId != null" >
        #{sharehouseId,jdbcType=INTEGER},
      </if>
      <if test="purchaseType != null" >
        #{purchaseType,jdbcType=TINYINT},
      </if>
      <if test="managerGetMoney != null" >
        #{managerGetMoney,jdbcType=DECIMAL},
      </if>
      <if test="shareGetMoney != null" >
        #{shareGetMoney,jdbcType=DECIMAL},
      </if>
      <if test="viewStatus != null" >
        #{viewStatus,jdbcType=TINYINT},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="shareReturn != null" >
        #{shareReturn,jdbcType=TINYINT},
      </if>
      <if test="managerReturn != null" >
        #{managerReturn,jdbcType=TINYINT},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="targetComplainFlag != null" >
        #{targetComplainFlag,jdbcType=TINYINT},
      </if>
      <if test="complainFlag != null" >
        #{complainFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpCityshareBorkerPurchaseExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from CITYSHARE_BORKER_PURCHASE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update CITYSHARE_BORKER_PURCHASE
    <set >
      <if test="record.purchaseId != null" >
        PURCHASE_ID = #{record.purchaseId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.returnStatus != null" >
        RETURN_STATUS = #{record.returnStatus,jdbcType=TINYINT},
      </if>
      <if test="record.creationTime != null" >
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cityId != null" >
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.sharehouseId != null" >
        SHAREHOUSE_ID = #{record.sharehouseId,jdbcType=INTEGER},
      </if>
      <if test="record.purchaseType != null" >
        PURCHASE_TYPE = #{record.purchaseType,jdbcType=TINYINT},
      </if>
      <if test="record.managerGetMoney != null" >
        MANAGER_GET_MONEY = #{record.managerGetMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.shareGetMoney != null" >
        SHARE_GET_MONEY = #{record.shareGetMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.viewStatus != null" >
        VIEW_STATUS = #{record.viewStatus,jdbcType=TINYINT},
      </if>
      <if test="record.archiveId != null" >
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.shareReturn != null" >
        SHARE_RETURN = #{record.shareReturn,jdbcType=TINYINT},
      </if>
      <if test="record.managerReturn != null" >
        MANAGER_RETURN = #{record.managerReturn,jdbcType=TINYINT},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.targetComplainFlag != null" >
        TARGET_COMPLAIN_FLAG = #{record.targetComplainFlag,jdbcType=TINYINT},
      </if>
      <if test="record.complainFlag != null" >
        COMPLAIN_FLAG = #{record.complainFlag,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update CITYSHARE_BORKER_PURCHASE
    set PURCHASE_ID = #{record.purchaseId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      RETURN_STATUS = #{record.returnStatus,jdbcType=TINYINT},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      SHAREHOUSE_ID = #{record.sharehouseId,jdbcType=INTEGER},
      PURCHASE_TYPE = #{record.purchaseType,jdbcType=TINYINT},
      MANAGER_GET_MONEY = #{record.managerGetMoney,jdbcType=DECIMAL},
      SHARE_GET_MONEY = #{record.shareGetMoney,jdbcType=DECIMAL},
      VIEW_STATUS = #{record.viewStatus,jdbcType=TINYINT},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      SHARE_RETURN = #{record.shareReturn,jdbcType=TINYINT},
      MANAGER_RETURN = #{record.managerReturn,jdbcType=TINYINT},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      TARGET_COMPLAIN_FLAG = #{record.targetComplainFlag,jdbcType=TINYINT},
      COMPLAIN_FLAG = #{record.complainFlag,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpCityshareBorkerPurchase" >
    <!--@mbggenerated-->
    update CITYSHARE_BORKER_PURCHASE
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="returnStatus != null" >
        RETURN_STATUS = #{returnStatus,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="sharehouseId != null" >
        SHAREHOUSE_ID = #{sharehouseId,jdbcType=INTEGER},
      </if>
      <if test="purchaseType != null" >
        PURCHASE_TYPE = #{purchaseType,jdbcType=TINYINT},
      </if>
      <if test="managerGetMoney != null" >
        MANAGER_GET_MONEY = #{managerGetMoney,jdbcType=DECIMAL},
      </if>
      <if test="shareGetMoney != null" >
        SHARE_GET_MONEY = #{shareGetMoney,jdbcType=DECIMAL},
      </if>
      <if test="viewStatus != null" >
        VIEW_STATUS = #{viewStatus,jdbcType=TINYINT},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="shareReturn != null" >
        SHARE_RETURN = #{shareReturn,jdbcType=TINYINT},
      </if>
      <if test="managerReturn != null" >
        MANAGER_RETURN = #{managerReturn,jdbcType=TINYINT},
      </if>
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="targetComplainFlag != null" >
        TARGET_COMPLAIN_FLAG = #{targetComplainFlag,jdbcType=TINYINT},
      </if>
      <if test="complainFlag != null" >
        COMPLAIN_FLAG = #{complainFlag,jdbcType=TINYINT},
      </if>
    </set>
    where PURCHASE_ID = #{purchaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpCityshareBorkerPurchase" >
    <!--@mbggenerated-->
    update CITYSHARE_BORKER_PURCHASE
    set USER_ID = #{userId,jdbcType=INTEGER},
      RETURN_STATUS = #{returnStatus,jdbcType=TINYINT},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      SHAREHOUSE_ID = #{sharehouseId,jdbcType=INTEGER},
      PURCHASE_TYPE = #{purchaseType,jdbcType=TINYINT},
      MANAGER_GET_MONEY = #{managerGetMoney,jdbcType=DECIMAL},
      SHARE_GET_MONEY = #{shareGetMoney,jdbcType=DECIMAL},
      VIEW_STATUS = #{viewStatus,jdbcType=TINYINT},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      SHARE_RETURN = #{shareReturn,jdbcType=TINYINT},
      MANAGER_RETURN = #{managerReturn,jdbcType=TINYINT},
      COMP_ID = #{compId,jdbcType=INTEGER},
      TARGET_COMPLAIN_FLAG = #{targetComplainFlag,jdbcType=TINYINT},
      COMPLAIN_FLAG = #{complainFlag,jdbcType=TINYINT}
    where PURCHASE_ID = #{purchaseId,jdbcType=INTEGER}
  </update>
</mapper>