<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpTrackPhotoMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpTrackPhoto">
    <!--@mbggenerated-->
    <id column="PHOTO_ID" jdbcType="INTEGER" property="photoId" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
    <result column="TRACK_ID" jdbcType="INTEGER" property="trackId" />
    <result column="PHOTO_ADDR" jdbcType="VARCHAR" property="photoAddr" />
    <result column="UPLOAD_USER" jdbcType="INTEGER" property="uploadUser" />
    <result column="UPLOAD_DATE" jdbcType="TIMESTAMP" property="uploadDate" />
    <result column="PHOTO_STATUS" jdbcType="INTEGER" property="photoStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    PHOTO_ID, CASE_ID, CASE_TYPE, TRACK_ID, PHOTO_ADDR, UPLOAD_USER, UPLOAD_DATE, PHOTO_STATUS
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from TRACK_PHOTO
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from TRACK_PHOTO
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpTrackPhoto">
    <!--@mbggenerated-->
    insert into TRACK_PHOTO (PHOTO_ID, CASE_ID, CASE_TYPE, 
      TRACK_ID, PHOTO_ADDR, UPLOAD_USER, 
      UPLOAD_DATE, PHOTO_STATUS)
    values (#{photoId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{caseType,jdbcType=TINYINT}, 
      #{trackId,jdbcType=INTEGER}, #{photoAddr,jdbcType=VARCHAR}, #{uploadUser,jdbcType=INTEGER}, 
      #{uploadDate,jdbcType=TIMESTAMP}, #{photoStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpTrackPhoto">
    <!--@mbggenerated-->
    insert into TRACK_PHOTO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="photoId != null">
        PHOTO_ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="trackId != null">
        TRACK_ID,
      </if>
      <if test="photoAddr != null">
        PHOTO_ADDR,
      </if>
      <if test="uploadUser != null">
        UPLOAD_USER,
      </if>
      <if test="uploadDate != null">
        UPLOAD_DATE,
      </if>
      <if test="photoStatus != null">
        PHOTO_STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="photoId != null">
        #{photoId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
      <if test="trackId != null">
        #{trackId,jdbcType=INTEGER},
      </if>
      <if test="photoAddr != null">
        #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="uploadUser != null">
        #{uploadUser,jdbcType=INTEGER},
      </if>
      <if test="uploadDate != null">
        #{uploadDate,jdbcType=TIMESTAMP},
      </if>
      <if test="photoStatus != null">
        #{photoStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpTrackPhoto">
    <!--@mbggenerated-->
    update TRACK_PHOTO
    <set>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
      <if test="trackId != null">
        TRACK_ID = #{trackId,jdbcType=INTEGER},
      </if>
      <if test="photoAddr != null">
        PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="uploadUser != null">
        UPLOAD_USER = #{uploadUser,jdbcType=INTEGER},
      </if>
      <if test="uploadDate != null">
        UPLOAD_DATE = #{uploadDate,jdbcType=TIMESTAMP},
      </if>
      <if test="photoStatus != null">
        PHOTO_STATUS = #{photoStatus,jdbcType=INTEGER},
      </if>
    </set>
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpTrackPhoto">
    <!--@mbggenerated-->
    update TRACK_PHOTO
    set CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT},
      TRACK_ID = #{trackId,jdbcType=INTEGER},
      PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      UPLOAD_USER = #{uploadUser,jdbcType=INTEGER},
      UPLOAD_DATE = #{uploadDate,jdbcType=TIMESTAMP},
      PHOTO_STATUS = #{photoStatus,jdbcType=INTEGER}
    where PHOTO_ID = #{photoId,jdbcType=INTEGER}
  </update>

  <select id="selectLastPhotoId" resultType="java.lang.Integer">
    select top 1 PHOTO_ID
    from TRACK_PHOTO_FASTDFS order by PHOTO_ID asc
  </select>

  <select id="getPhotoListOrderByPhotoIdDesc" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select top 50 PHOTO_ID,PHOTO_ADDR
    from TRACK_PHOTO
    where photo_addr IS not null and photo_addr not like 'group%'
    <if test="photoId != null and photoId > 0">AND PHOTO_ID &lt; #{photoId}</if>
    order by PHOTO_ID desc
  </select>
  
  <select id="getPhotoListByTrackId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select   <include refid="Base_Column_List" />
    from TRACK_PHOTO
    where TRACK_ID = #{trackId,jdbcType=INTEGER}
    order by PHOTO_ID desc
  </select>

  <insert id="insertList">
    INSERT INTO TRACK_PHOTO_FASTDFS(PHOTO_ID, PHOTO_ADDR, OLD_ADDR)
    VALUES
    <foreach collection="photoList" item="item" separator=",">
      (#{item.photoId},#{item.photoAddr},#{item.oldAddr})
    </foreach>
  </insert>

  <update id="updatePhotoAddrForList">
    <foreach collection="photoList" item="item" separator=";">
      update TRACK_PHOTO_FASTDFS
      set PHOTO_ADDR=#{item.photoAddr}
      where PHOTO_ID = #{item.photoId}
    </foreach>
  </update>

</mapper>