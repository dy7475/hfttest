<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunWageLogMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunWageLog">
    <!--@mbggenerated-->
    <id column="WAGE_LOG_ID" jdbcType="INTEGER" property="wageLogId" />
    <result column="WAGE_ID" jdbcType="INTEGER" property="wageId" />
    <result column="EXPLAIN" jdbcType="VARCHAR" property="explain" />
    <result column="ADD_WAGE" jdbcType="NUMERIC" property="addWage" />
    <result column="REDUCE_WAGE" jdbcType="NUMERIC" property="reduceWage" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="ADJUST_WAGE" jdbcType="NUMERIC" property="adjustWage" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="LOG_TYPE" jdbcType="INTEGER" property="logType" />
    <result column="WAGE_USER_ID" jdbcType="INTEGER" property="wageUserId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="ORGANIZATION_PATH" jdbcType="VARCHAR" property="organizationPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    WAGE_LOG_ID, WAGE_ID, [EXPLAIN], ADD_WAGE, REDUCE_WAGE, USER_ID, USER_NAME, ADJUST_WAGE, 
    IS_DEL, UPDATE_TIME, COMP_ID, LOG_TYPE, WAGE_USER_ID, AREA_ID, REG_ID, DEPT_ID, GR_ID, 
    ORGANIZATION_PATH
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunWageLogExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_WAGE_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_WAGE_LOG
    where WAGE_LOG_ID = #{wageLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_WAGE_LOG
    where WAGE_LOG_ID = #{wageLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunWageLogExample">
    <!--@mbggenerated-->
    delete from FUN_WAGE_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="wageLogId" parameterType="com.myfun.repository.erpdb.po.ErpFunWageLog" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_WAGE_LOG (WAGE_ID, [EXPLAIN], ADD_WAGE, 
      REDUCE_WAGE, USER_ID, USER_NAME, 
      ADJUST_WAGE, IS_DEL, UPDATE_TIME, 
      COMP_ID, LOG_TYPE, WAGE_USER_ID, 
      AREA_ID, REG_ID, DEPT_ID, 
      GR_ID, ORGANIZATION_PATH)
    values (#{wageId,jdbcType=INTEGER}, #{explain,jdbcType=VARCHAR}, #{addWage,jdbcType=NUMERIC}, 
      #{reduceWage,jdbcType=NUMERIC}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{adjustWage,jdbcType=NUMERIC}, #{isDel,jdbcType=TINYINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{compId,jdbcType=INTEGER}, #{logType,jdbcType=INTEGER}, #{wageUserId,jdbcType=INTEGER}, 
      #{areaId,jdbcType=INTEGER}, #{regId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{grId,jdbcType=INTEGER}, #{organizationPath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="wageLogId" parameterType="com.myfun.repository.erpdb.po.ErpFunWageLog" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_WAGE_LOG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wageId != null">
        WAGE_ID,
      </if>
      <if test="explain != null">
        [EXPLAIN],
      </if>
      <if test="addWage != null">
        ADD_WAGE,
      </if>
      <if test="reduceWage != null">
        REDUCE_WAGE,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="adjustWage != null">
        ADJUST_WAGE,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="logType != null">
        LOG_TYPE,
      </if>
      <if test="wageUserId != null">
        WAGE_USER_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wageId != null">
        #{wageId,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        #{explain,jdbcType=VARCHAR},
      </if>
      <if test="addWage != null">
        #{addWage,jdbcType=NUMERIC},
      </if>
      <if test="reduceWage != null">
        #{reduceWage,jdbcType=NUMERIC},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="adjustWage != null">
        #{adjustWage,jdbcType=NUMERIC},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=INTEGER},
      </if>
      <if test="wageUserId != null">
        #{wageUserId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        #{organizationPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunWageLogExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_WAGE_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_WAGE_LOG
    <set>
      <if test="record.wageLogId != null">
        WAGE_LOG_ID = #{record.wageLogId,jdbcType=INTEGER},
      </if>
      <if test="record.wageId != null">
        WAGE_ID = #{record.wageId,jdbcType=INTEGER},
      </if>
      <if test="record.explain != null">
        [EXPLAIN] = #{record.explain,jdbcType=VARCHAR},
      </if>
      <if test="record.addWage != null">
        ADD_WAGE = #{record.addWage,jdbcType=NUMERIC},
      </if>
      <if test="record.reduceWage != null">
        REDUCE_WAGE = #{record.reduceWage,jdbcType=NUMERIC},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.adjustWage != null">
        ADJUST_WAGE = #{record.adjustWage,jdbcType=NUMERIC},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.logType != null">
        LOG_TYPE = #{record.logType,jdbcType=INTEGER},
      </if>
      <if test="record.wageUserId != null">
        WAGE_USER_ID = #{record.wageUserId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationPath != null">
        ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_WAGE_LOG
    set WAGE_LOG_ID = #{record.wageLogId,jdbcType=INTEGER},
      WAGE_ID = #{record.wageId,jdbcType=INTEGER},
      [EXPLAIN] = #{record.explain,jdbcType=VARCHAR},
      ADD_WAGE = #{record.addWage,jdbcType=NUMERIC},
      REDUCE_WAGE = #{record.reduceWage,jdbcType=NUMERIC},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      ADJUST_WAGE = #{record.adjustWage,jdbcType=NUMERIC},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      LOG_TYPE = #{record.logType,jdbcType=INTEGER},
      WAGE_USER_ID = #{record.wageUserId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunWageLog">
    <!--@mbggenerated-->
    update FUN_WAGE_LOG
    <set>
      <if test="wageId != null">
        WAGE_ID = #{wageId,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        [EXPLAIN] = #{explain,jdbcType=VARCHAR},
      </if>
      <if test="addWage != null">
        ADD_WAGE = #{addWage,jdbcType=NUMERIC},
      </if>
      <if test="reduceWage != null">
        REDUCE_WAGE = #{reduceWage,jdbcType=NUMERIC},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="adjustWage != null">
        ADJUST_WAGE = #{adjustWage,jdbcType=NUMERIC},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="logType != null">
        LOG_TYPE = #{logType,jdbcType=INTEGER},
      </if>
      <if test="wageUserId != null">
        WAGE_USER_ID = #{wageUserId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    where WAGE_LOG_ID = #{wageLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunWageLog">
    <!--@mbggenerated-->
    update FUN_WAGE_LOG
    set WAGE_ID = #{wageId,jdbcType=INTEGER},
      [EXPLAIN] = #{explain,jdbcType=VARCHAR},
      ADD_WAGE = #{addWage,jdbcType=NUMERIC},
      REDUCE_WAGE = #{reduceWage,jdbcType=NUMERIC},
      USER_ID = #{userId,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      ADJUST_WAGE = #{adjustWage,jdbcType=NUMERIC},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      COMP_ID = #{compId,jdbcType=INTEGER},
      LOG_TYPE = #{logType,jdbcType=INTEGER},
      WAGE_USER_ID = #{wageUserId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR}
    where WAGE_LOG_ID = #{wageLogId,jdbcType=INTEGER}
  </update>

  <select id="getFunWageLogList" resultMap="BaseResultMap">
   	select <include refid="Base_Column_List" />
    from FUN_WAGE_LOG
    where comp_id = #{param.compId}
    <if test="null != param.wageId">
        and WAGE_ID = #{param.wageId}
    </if>
    <if test="null != param.logType">
      and LOG_TYPE = #{param.logType}
    </if>
    <if test="null != param.startTime and '' != param.startTime">
      and UPDATE_TIME &gt;= #{param.startTime}
    </if>
    <if test="null != param.endTime and '' != param.endTime">
      and UPDATE_TIME &lt;= #{param.endTime}
    </if>
    <if test="null != param.wageUserId">
      and WAGE_USER_ID = #{param.wageUserId}
    </if>
    <if test="param.newOrganization == false">
        <if test="null != param.areaId">
          and AREA_ID = #{param.areaId}
        </if>
        <if test="null != param.regId">
          and REG_ID = #{param.regId}
        </if>
        <if test="null != param.deptId">
          and DEPT_ID = #{param.deptId}
        </if>
        <if test="null != param.grId">
          and GR_ID = #{param.grId}
        </if>
    </if>
    <if test="param.newOrganization == true and param.organizationId &gt; 0">
        and ORGANIZATION_PATH  like '%:${param.organizationId}:%'
    </if>
    <if test="null != param.justAdjustment and 1 == param.justAdjustment">
      and LOG_TYPE = 1
    </if>
    order by UPDATE_TIME DESC
  </select>
</mapper>