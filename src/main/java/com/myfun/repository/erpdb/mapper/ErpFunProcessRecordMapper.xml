<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunProcessRecordMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunProcessRecord">
    <!--@mbggenerated-->
    <id column="RECORD_ID" jdbcType="INTEGER" property="recordId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="UPDATE_USER_NAME" jdbcType="VARCHAR" property="updateUserName" />
    <result column="DEAL_STATUS" jdbcType="VARCHAR" property="dealStatus" />
    <result column="OWNER_STYLE" jdbcType="VARCHAR" property="ownerStyle" />
    <result column="DEAL_UNAME" jdbcType="VARCHAR" property="dealUname" />
    <result column="SIGN_DATE" jdbcType="VARCHAR" property="signDate" />
    <result column="MODEL_NAME" jdbcType="VARCHAR" property="modelName" />
    <result column="MODEL_CREATE_TIME" jdbcType="VARCHAR" property="modelCreateTime" />
    <result column="NOW_STEP" jdbcType="VARCHAR" property="nowStep" />
    <result column="OLD_STEP" jdbcType="VARCHAR" property="oldStep" />
    <result column="RECORD_REMARK" jdbcType="VARCHAR" property="recordRemark" />
    <result column="UPDATE_DATE" jdbcType="VARCHAR" property="updateDate" />
    <result column="TRACK_CONTENT" jdbcType="VARCHAR" property="trackContent" />
    <result column="UPDATE_CLASSIC" jdbcType="VARCHAR" property="updateClassic" />
    <result column="FRONT_RECORD_ID" jdbcType="INTEGER" property="frontRecordId" />
    <result column="UPDATE_UID" jdbcType="INTEGER" property="updateUid" />
    <result column="UPDATE_CONTENT" jdbcType="VARCHAR" property="updateContent" />
    <result column="RUNSTRP_ID" jdbcType="INTEGER" property="runstrpId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    RECORD_ID, COMP_ID, DEPT_ID, DEAL_ID, UPDATE_USER_NAME, DEAL_STATUS, OWNER_STYLE, 
    DEAL_UNAME, SIGN_DATE, MODEL_NAME, MODEL_CREATE_TIME, NOW_STEP, OLD_STEP, RECORD_REMARK, 
    UPDATE_DATE, TRACK_CONTENT, UPDATE_CLASSIC, FRONT_RECORD_ID, UPDATE_UID, UPDATE_CONTENT, 
    RUNSTRP_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunProcessRecordExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_PROCESS_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_PROCESS_RECORD
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_PROCESS_RECORD
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunProcessRecordExample">
    <!--@mbggenerated-->
    delete from FUN_PROCESS_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunProcessRecord">
    <!--@mbggenerated-->
    <selectKey keyProperty="recordId" order="BEFORE" resultType="java.lang.Integer">
      SELECT MAX(ISNULL(RECORD_ID,0))+1 FROM FUN_PROCESS_RECORD
    </selectKey>
    insert into FUN_PROCESS_RECORD (RECORD_ID, COMP_ID, DEPT_ID,
      DEAL_ID, UPDATE_USER_NAME, DEAL_STATUS,
      OWNER_STYLE, DEAL_UNAME, SIGN_DATE,
      MODEL_NAME, MODEL_CREATE_TIME, NOW_STEP,
      OLD_STEP, RECORD_REMARK, UPDATE_DATE,
      TRACK_CONTENT, UPDATE_CLASSIC, FRONT_RECORD_ID,
      UPDATE_UID, UPDATE_CONTENT, RUNSTRP_ID
      )
    values (#{recordId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER},
      #{dealId,jdbcType=INTEGER}, #{updateUserName,jdbcType=VARCHAR}, #{dealStatus,jdbcType=VARCHAR},
      #{ownerStyle,jdbcType=VARCHAR}, #{dealUname,jdbcType=VARCHAR}, #{signDate,jdbcType=VARCHAR},
      #{modelName,jdbcType=VARCHAR}, #{modelCreateTime,jdbcType=VARCHAR}, #{nowStep,jdbcType=VARCHAR},
      #{oldStep,jdbcType=VARCHAR}, #{recordRemark,jdbcType=VARCHAR}, #{updateDate,jdbcType=VARCHAR},
      #{trackContent,jdbcType=VARCHAR}, #{updateClassic,jdbcType=VARCHAR}, #{frontRecordId,jdbcType=INTEGER},
      #{updateUid,jdbcType=INTEGER}, #{updateContent,jdbcType=VARCHAR}, #{runstrpId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunProcessRecord">
    <!--@mbggenerated-->
    <selectKey keyProperty="recordId" order="BEFORE" resultType="java.lang.Integer">
      SELECT MAX(ISNULL(RECORD_ID,0))+1 FROM FUN_PROCESS_RECORD
    </selectKey>
    insert into FUN_PROCESS_RECORD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      RECORD_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="dealId != null">
        DEAL_ID,
      </if>
      <if test="updateUserName != null">
        UPDATE_USER_NAME,
      </if>
      <if test="dealStatus != null">
        DEAL_STATUS,
      </if>
      <if test="ownerStyle != null">
        OWNER_STYLE,
      </if>
      <if test="dealUname != null">
        DEAL_UNAME,
      </if>
      <if test="signDate != null">
        SIGN_DATE,
      </if>
      <if test="modelName != null">
        MODEL_NAME,
      </if>
      <if test="modelCreateTime != null">
        MODEL_CREATE_TIME,
      </if>
      <if test="nowStep != null">
        NOW_STEP,
      </if>
      <if test="oldStep != null">
        OLD_STEP,
      </if>
      <if test="recordRemark != null">
        RECORD_REMARK,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
      <if test="trackContent != null">
        TRACK_CONTENT,
      </if>
      <if test="updateClassic != null">
        UPDATE_CLASSIC,
      </if>
      <if test="frontRecordId != null">
        FRONT_RECORD_ID,
      </if>
      <if test="updateUid != null">
        UPDATE_UID,
      </if>
      <if test="updateContent != null">
        UPDATE_CONTENT,
      </if>
      <if test="runstrpId != null">
        RUNSTRP_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{recordId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="dealId != null">
        #{dealId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null">
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="dealStatus != null">
        #{dealStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerStyle != null">
        #{ownerStyle,jdbcType=VARCHAR},
      </if>
      <if test="dealUname != null">
        #{dealUname,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        #{signDate,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null">
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelCreateTime != null">
        #{modelCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="nowStep != null">
        #{nowStep,jdbcType=VARCHAR},
      </if>
      <if test="oldStep != null">
        #{oldStep,jdbcType=VARCHAR},
      </if>
      <if test="recordRemark != null">
        #{recordRemark,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="trackContent != null">
        #{trackContent,jdbcType=VARCHAR},
      </if>
      <if test="updateClassic != null">
        #{updateClassic,jdbcType=VARCHAR},
      </if>
      <if test="frontRecordId != null">
        #{frontRecordId,jdbcType=INTEGER},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="updateContent != null">
        #{updateContent,jdbcType=VARCHAR},
      </if>
      <if test="runstrpId != null">
        #{runstrpId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunProcessRecordExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_PROCESS_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROCESS_RECORD
    <set>
      <if test="record.recordId != null">
        RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.dealId != null">
        DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserName != null">
        UPDATE_USER_NAME = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.dealStatus != null">
        DEAL_STATUS = #{record.dealStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerStyle != null">
        OWNER_STYLE = #{record.ownerStyle,jdbcType=VARCHAR},
      </if>
      <if test="record.dealUname != null">
        DEAL_UNAME = #{record.dealUname,jdbcType=VARCHAR},
      </if>
      <if test="record.signDate != null">
        SIGN_DATE = #{record.signDate,jdbcType=VARCHAR},
      </if>
      <if test="record.modelName != null">
        MODEL_NAME = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelCreateTime != null">
        MODEL_CREATE_TIME = #{record.modelCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.nowStep != null">
        NOW_STEP = #{record.nowStep,jdbcType=VARCHAR},
      </if>
      <if test="record.oldStep != null">
        OLD_STEP = #{record.oldStep,jdbcType=VARCHAR},
      </if>
      <if test="record.recordRemark != null">
        RECORD_REMARK = #{record.recordRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        UPDATE_DATE = #{record.updateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.trackContent != null">
        TRACK_CONTENT = #{record.trackContent,jdbcType=VARCHAR},
      </if>
      <if test="record.updateClassic != null">
        UPDATE_CLASSIC = #{record.updateClassic,jdbcType=VARCHAR},
      </if>
      <if test="record.frontRecordId != null">
        FRONT_RECORD_ID = #{record.frontRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUid != null">
        UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
      </if>
      <if test="record.updateContent != null">
        UPDATE_CONTENT = #{record.updateContent,jdbcType=VARCHAR},
      </if>
      <if test="record.runstrpId != null">
        RUNSTRP_ID = #{record.runstrpId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROCESS_RECORD
    set RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      UPDATE_USER_NAME = #{record.updateUserName,jdbcType=VARCHAR},
      DEAL_STATUS = #{record.dealStatus,jdbcType=VARCHAR},
      OWNER_STYLE = #{record.ownerStyle,jdbcType=VARCHAR},
      DEAL_UNAME = #{record.dealUname,jdbcType=VARCHAR},
      SIGN_DATE = #{record.signDate,jdbcType=VARCHAR},
      MODEL_NAME = #{record.modelName,jdbcType=VARCHAR},
      MODEL_CREATE_TIME = #{record.modelCreateTime,jdbcType=VARCHAR},
      NOW_STEP = #{record.nowStep,jdbcType=VARCHAR},
      OLD_STEP = #{record.oldStep,jdbcType=VARCHAR},
      RECORD_REMARK = #{record.recordRemark,jdbcType=VARCHAR},
      UPDATE_DATE = #{record.updateDate,jdbcType=VARCHAR},
      TRACK_CONTENT = #{record.trackContent,jdbcType=VARCHAR},
      UPDATE_CLASSIC = #{record.updateClassic,jdbcType=VARCHAR},
      FRONT_RECORD_ID = #{record.frontRecordId,jdbcType=INTEGER},
      UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
      UPDATE_CONTENT = #{record.updateContent,jdbcType=VARCHAR},
      RUNSTRP_ID = #{record.runstrpId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunProcessRecord">
    <!--@mbggenerated-->
    update FUN_PROCESS_RECORD
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="dealId != null">
        DEAL_ID = #{dealId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null">
        UPDATE_USER_NAME = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="dealStatus != null">
        DEAL_STATUS = #{dealStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerStyle != null">
        OWNER_STYLE = #{ownerStyle,jdbcType=VARCHAR},
      </if>
      <if test="dealUname != null">
        DEAL_UNAME = #{dealUname,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        SIGN_DATE = #{signDate,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null">
        MODEL_NAME = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelCreateTime != null">
        MODEL_CREATE_TIME = #{modelCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="nowStep != null">
        NOW_STEP = #{nowStep,jdbcType=VARCHAR},
      </if>
      <if test="oldStep != null">
        OLD_STEP = #{oldStep,jdbcType=VARCHAR},
      </if>
      <if test="recordRemark != null">
        RECORD_REMARK = #{recordRemark,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="trackContent != null">
        TRACK_CONTENT = #{trackContent,jdbcType=VARCHAR},
      </if>
      <if test="updateClassic != null">
        UPDATE_CLASSIC = #{updateClassic,jdbcType=VARCHAR},
      </if>
      <if test="frontRecordId != null">
        FRONT_RECORD_ID = #{frontRecordId,jdbcType=INTEGER},
      </if>
      <if test="updateUid != null">
        UPDATE_UID = #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="updateContent != null">
        UPDATE_CONTENT = #{updateContent,jdbcType=VARCHAR},
      </if>
      <if test="runstrpId != null">
        RUNSTRP_ID = #{runstrpId,jdbcType=INTEGER},
      </if>
    </set>
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunProcessRecord">
    <!--@mbggenerated-->
    update FUN_PROCESS_RECORD
    set COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      DEAL_ID = #{dealId,jdbcType=INTEGER},
      UPDATE_USER_NAME = #{updateUserName,jdbcType=VARCHAR},
      DEAL_STATUS = #{dealStatus,jdbcType=VARCHAR},
      OWNER_STYLE = #{ownerStyle,jdbcType=VARCHAR},
      DEAL_UNAME = #{dealUname,jdbcType=VARCHAR},
      SIGN_DATE = #{signDate,jdbcType=VARCHAR},
      MODEL_NAME = #{modelName,jdbcType=VARCHAR},
      MODEL_CREATE_TIME = #{modelCreateTime,jdbcType=VARCHAR},
      NOW_STEP = #{nowStep,jdbcType=VARCHAR},
      OLD_STEP = #{oldStep,jdbcType=VARCHAR},
      RECORD_REMARK = #{recordRemark,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=VARCHAR},
      TRACK_CONTENT = #{trackContent,jdbcType=VARCHAR},
      UPDATE_CLASSIC = #{updateClassic,jdbcType=VARCHAR},
      FRONT_RECORD_ID = #{frontRecordId,jdbcType=INTEGER},
      UPDATE_UID = #{updateUid,jdbcType=INTEGER},
      UPDATE_CONTENT = #{updateContent,jdbcType=VARCHAR},
      RUNSTRP_ID = #{runstrpId,jdbcType=INTEGER}
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>
	
	<select id="getMgrDealProcessLogList" resultMap="BaseResultMap">
		select 
		UPDATE_CLASSIC,UPDATE_USER_NAME,TRACK_CONTENT,UPDATE_DATE,DEAL_ID,RECORD_ID,FRONT_RECORD_ID,UPDATE_UID,DEPT_ID
		from FUN_PROCESS_RECORD
		where comp_id=#{compId} and deal_id=#{dealId}
		ORDER BY UPDATE_DATE DESC
	</select>
	<select id="getMgrDealProcessLog" resultMap="BaseResultMap">
		select 
			<include refid="Base_Column_List" />
		from FUN_PROCESS_RECORD
		where  comp_id=#{compId} and deal_id=#{dealId} and RECORD_ID=#{recordId}
	</select>
	<select id="getFronRecordId" resultType="java.lang.Integer">
		select top 1 RECORD_ID
		from FUN_PROCESS_RECORD
		where DEAL_ID = #{dealId} and RUNSTRP_ID=#{runstepId} and UPDATE_CONTENT is not null
		order by UPDATE_DATE desc
	</select>
</mapper>