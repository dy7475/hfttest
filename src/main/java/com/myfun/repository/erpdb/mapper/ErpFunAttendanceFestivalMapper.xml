<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunAttendanceFestivalMapper">
    <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunAttendanceFestival">
        <!--@mbggenerated-->
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="COMP_ID" jdbcType="INTEGER" property="compId"/>
        <result column="ATT_GR_ID" jdbcType="INTEGER" property="attGrId"/>
        <result column="FESTIVAL_DATA" jdbcType="TIMESTAMP" property="festivalData"/>
        <result column="ATT_ClASS_ID" jdbcType="INTEGER" property="attClassId"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="IS_DEL" jdbcType="TINYINT" property="isDel"/>
        <result column="DEL_TIME" jdbcType="TIMESTAMP" property="delTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbggenerated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbggenerated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbggenerated-->
        ID, COMP_ID, ATT_GR_ID, FESTIVAL_DATA, ATT_ClASS_ID, CREATE_TIME, IS_DEL, DEL_TIME
    </sql>
    <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunAttendanceFestivalExample"
            resultMap="BaseResultMap">
        <!--@mbggenerated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from FUN_ATTENDANCE_FESTIVAL
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbggenerated-->
        select
        <include refid="Base_Column_List"/>
        from FUN_ATTENDANCE_FESTIVAL
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbggenerated-->
        delete from FUN_ATTENDANCE_FESTIVAL
        where ID = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunAttendanceFestivalExample">
        <!--@mbggenerated-->
        delete from FUN_ATTENDANCE_FESTIVAL
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunAttendanceFestival"
            useGeneratedKeys="true">
        <!--@mbggenerated-->
        insert into FUN_ATTENDANCE_FESTIVAL (COMP_ID, ATT_GR_ID, FESTIVAL_DATA,
        ATT_ClASS_ID, CREATE_TIME, IS_DEL,
        DEL_TIME)
        values (#{compId,jdbcType=INTEGER}, #{attGrId,jdbcType=INTEGER}, #{festivalData,jdbcType=TIMESTAMP},
        #{attClassId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=TINYINT},
        #{delTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunAttendanceFestival"
            useGeneratedKeys="true">
        <!--@mbggenerated-->
        insert into FUN_ATTENDANCE_FESTIVAL
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="compId != null">
                COMP_ID,
            </if>
            <if test="attGrId != null">
                ATT_GR_ID,
            </if>
            <if test="festivalData != null">
                FESTIVAL_DATA,
            </if>
            <if test="attClassId != null">
                ATT_ClASS_ID,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="isDel != null">
                IS_DEL,
            </if>
            <if test="delTime != null">
                DEL_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="compId != null">
                #{compId,jdbcType=INTEGER},
            </if>
            <if test="attGrId != null">
                #{attGrId,jdbcType=INTEGER},
            </if>
            <if test="festivalData != null">
                #{festivalData,jdbcType=TIMESTAMP},
            </if>
            <if test="attClassId != null">
                #{attClassId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=TINYINT},
            </if>
            <if test="delTime != null">
                #{delTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunAttendanceFestivalExample"
            resultType="java.lang.Integer">
        <!--@mbggenerated-->
        select count(*) from FUN_ATTENDANCE_FESTIVAL
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbggenerated-->
        update FUN_ATTENDANCE_FESTIVAL
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.compId != null">
                COMP_ID = #{record.compId,jdbcType=INTEGER},
            </if>
            <if test="record.attGrId != null">
                ATT_GR_ID = #{record.attGrId,jdbcType=INTEGER},
            </if>
            <if test="record.festivalData != null">
                FESTIVAL_DATA = #{record.festivalData,jdbcType=TIMESTAMP},
            </if>
            <if test="record.attClassId != null">
                ATT_ClASS_ID = #{record.attClassId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDel != null">
                IS_DEL = #{record.isDel,jdbcType=TINYINT},
            </if>
            <if test="record.delTime != null">
                DEL_TIME = #{record.delTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbggenerated-->
        update FUN_ATTENDANCE_FESTIVAL
        set ID = #{record.id,jdbcType=INTEGER},
        COMP_ID = #{record.compId,jdbcType=INTEGER},
        ATT_GR_ID = #{record.attGrId,jdbcType=INTEGER},
        FESTIVAL_DATA = #{record.festivalData,jdbcType=TIMESTAMP},
        ATT_ClASS_ID = #{record.attClassId,jdbcType=INTEGER},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
        DEL_TIME = #{record.delTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunAttendanceFestival">
        <!--@mbggenerated-->
        update FUN_ATTENDANCE_FESTIVAL
        <set>
            <if test="compId != null">
                COMP_ID = #{compId,jdbcType=INTEGER},
            </if>
            <if test="attGrId != null">
                ATT_GR_ID = #{attGrId,jdbcType=INTEGER},
            </if>
            <if test="festivalData != null">
                FESTIVAL_DATA = #{festivalData,jdbcType=TIMESTAMP},
            </if>
            <if test="attClassId != null">
                ATT_ClASS_ID = #{attClassId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                IS_DEL = #{isDel,jdbcType=TINYINT},
            </if>
            <if test="delTime != null">
                DEL_TIME = #{delTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunAttendanceFestival">
        <!--@mbggenerated-->
        update FUN_ATTENDANCE_FESTIVAL
        set COMP_ID = #{compId,jdbcType=INTEGER},
        ATT_GR_ID = #{attGrId,jdbcType=INTEGER},
        FESTIVAL_DATA = #{festivalData,jdbcType=TIMESTAMP},
        ATT_ClASS_ID = #{attClassId,jdbcType=INTEGER},
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
        IS_DEL = #{isDel,jdbcType=TINYINT},
        DEL_TIME = #{delTime,jdbcType=TIMESTAMP}
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <insert id="insertBatch">
        insert into FUN_ATTENDANCE_FESTIVAL (COMP_ID, ATT_GR_ID,
        FESTIVAL_DATA, ATT_ClASS_ID)
        values
        <foreach collection="festivalList" index="index" item="festival" separator=",">
            (#{compId}, #{groupId},
            #{festival.festivalData}, #{festival.attClassId})
        </foreach>
    </insert>


    <!-- List<ErpFunAttendanceFestival> getFestivalDate(); -->
    <select id="getFestivalDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM FUN_ATTENDANCE_FESTIVAL where IS_DEL=0
    </select>
    <!-- int getFestivalDateClassCount(@Param("shardCityId")Integer cityId,Long
        date); -->
    <select id="getFestivalDateClass" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM FUN_ATTENDANCE_FESTIVAL where IS_DEL=0 and COMP_ID =#{compId}
        and FESTIVAL_DATA=#{attDateStr} ORDER BY ID desc
    </select>
    <!-- int getFestivalDateClassId(@Param("shardCityId")Integer cityId,Long
        date); -->

    <select id="getFestivalDateClassId" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from FUN_ATTENDANCE_FESTIVAL where IS_DEL=0 and COMP_ID
		!=0 and FESTIVAL_DATA=#{attDateStr}
	</select>

    <!-- int getFestivalCount(@Param("shardCityId") Integer cityId, @Param("date")
        Long date); -->
    <select id="getFestivalCount" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from FUN_ATTENDANCE_FESTIVAL where
        IS_DEL=0 and COMP_ID=0 and FESTIVAL_DATA=#{attDateStr} ORDER BY ID desc

    </select>

    <!-- int getFestivalClassId(@Param("shardCityId") Integer cityId, @Param("date")
        Long date); -->

    <select id="getFestivalClassId" resultType="int">
		select ATT_ClASS_ID  from FUN_ATTENDANCE_FESTIVAL where
		IS_DEL=0 and COMP_ID=0 and FESTIVAL_DATA=#{attDateStr}

	</select>

</mapper>