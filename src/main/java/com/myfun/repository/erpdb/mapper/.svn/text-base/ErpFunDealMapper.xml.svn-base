<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunDealMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunDeal">
    <!--@mbggenerated-->
    <id column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="AGREEMENT_NO" jdbcType="VARCHAR" property="agreementNo" />
    <result column="CREATOR_DATE" jdbcType="VARCHAR" property="creatorDate" />
    <result column="DEAL_TYPE" jdbcType="TINYINT" property="dealType" />
    <result column="DEAL_STATUS" jdbcType="TINYINT" property="dealStatus" />
    <result column="DEAL_USER_ID" jdbcType="INTEGER" property="dealUserId" />
    <result column="DEAL_COMPLETE" jdbcType="TINYINT" property="dealComplete" />
    <result column="DEAL_VERIFY_TIME" jdbcType="VARCHAR" property="dealVerifyTime" />
    <result column="DEAL_BUY_STYLE" jdbcType="TINYINT" property="dealBuyStyle" />
    <result column="DEAL_SELL_STYLE" jdbcType="TINYINT" property="dealSellStyle" />
    <result column="HOUSE_USEAGE" jdbcType="TINYINT" property="houseUseage" />
    <result column="DEAL_CUSTOMER_ID" jdbcType="INTEGER" property="dealCustomerId" />
    <result column="DEAL_CUSTOMER_NO" jdbcType="VARCHAR" property="dealCustomerNo" />
    <result column="DEAL_HOUSE_ID" jdbcType="INTEGER" property="dealHouseId" />
    <result column="DEAL_HOUSE_NO" jdbcType="VARCHAR" property="dealHouseNo" />
    <result column="SELL_ADDRESS" jdbcType="VARCHAR" property="sellAddress" />
    <result column="BUY_CUSTINFO" jdbcType="VARCHAR" property="buyCustinfo" />
    <result column="SELL_HEZUO_COMPNAME" jdbcType="VARCHAR" property="sellHezuoCompname" />
    <result column="BUY_HEZUO_COMPNAME" jdbcType="VARCHAR" property="buyHezuoCompname" />
    <result column="BUY_CONTACTUSER" jdbcType="VARCHAR" property="buyContactuser" />
    <result column="SELL_CONTACTUSER" jdbcType="VARCHAR" property="sellContactuser" />
    <result column="BUY_OWNER_NAME" jdbcType="VARCHAR" property="buyOwnerName" />
    <result column="SELL_OWNER_NAME" jdbcType="VARCHAR" property="sellOwnerName" />
    <result column="BUY_CALL_PHONE" jdbcType="VARCHAR" property="buyCallPhone" />
    <result column="SELL_CALL_PHONE" jdbcType="VARCHAR" property="sellCallPhone" />
    <result column="BUY_ID_CARD" jdbcType="VARCHAR" property="buyIdCard" />
    <result column="SELL_ID_CARD" jdbcType="VARCHAR" property="sellIdCard" />
    <result column="BUY_PAYMONEY" jdbcType="NUMERIC" property="buyPaymoney" />
    <result column="SELL_PAYMONEY" jdbcType="NUMERIC" property="sellPaymoney" />
    <result column="OTHER_PAYMONEY" jdbcType="NUMERIC" property="otherPaymoney" />
    <result column="GAIN_MONEY" jdbcType="NUMERIC" property="gainMoney" />
    <result column="REAL_BUY_PAYMONEY" jdbcType="NUMERIC" property="realBuyPaymoney" />
    <result column="REAL_SELL_PAYMONEY" jdbcType="NUMERIC" property="realSellPaymoney" />
    <result column="REAL_OTHER_PAYMONEY" jdbcType="NUMERIC" property="realOtherPaymoney" />
    <result column="REAL_PAYMONEY" jdbcType="NUMERIC" property="realPaymoney" />
    <result column="BUY_PRICE_MONEY" jdbcType="VARCHAR" property="buyPriceMoney" />
    <result column="BUY_MORTGAGE_TYPE" jdbcType="TINYINT" property="buyMortgageType" />
    <result column="SELL_DEAL_MONEY" jdbcType="NUMERIC" property="sellDealMoney" />
    <result column="SELL_ISHAVE_LOAN" jdbcType="BIT" property="sellIshaveLoan" />
    <result column="SELL_LOAN_MONEY" jdbcType="NUMERIC" property="sellLoanMoney" />
    <result column="SELL_RETURN_LOAN" jdbcType="BIT" property="sellReturnLoan" />
    <result column="OWNER_STYLE" jdbcType="INTEGER" property="ownerStyle" />
    <result column="OWNER_TYPE" jdbcType="TINYINT" property="ownerType" />
    <result column="OWNER_NO" jdbcType="VARCHAR" property="ownerNo" />
    <result column="HAVE_LANDCARD" jdbcType="BIT" property="haveLandcard" />
    <result column="LANDCARD_NO" jdbcType="VARCHAR" property="landcardNo" />
    <result column="MANGEMENT_TAX" jdbcType="BIT" property="mangementTax" />
    <result column="OWNER_TAX" jdbcType="BIT" property="ownerTax" />
    <result column="TAX" jdbcType="VARCHAR" property="tax" />
    <result column="TRADE_REMARK_EXPLAIN" jdbcType="VARCHAR" property="tradeRemarkExplain" />
    <result column="RENT_DEAL_MONEY" jdbcType="NUMERIC" property="rentDealMoney" />
    <result column="RENT_PRICE_UNIT" jdbcType="TINYINT" property="rentPriceUnit" />
    <result column="RENT_DATE" jdbcType="VARCHAR" property="rentDate" />
    <result column="RENT_OVER_DATE" jdbcType="VARCHAR" property="rentOverDate" />
    <result column="RENT_PAY_METHOD" jdbcType="TINYINT" property="rentPayMethod" />
    <result column="RENT_PAY_SPACE" jdbcType="VARCHAR" property="rentPaySpace" />
    <result column="RENT_PAY_EARLY" jdbcType="VARCHAR" property="rentPayEarly" />
    <result column="RENT_DEPOSIT_PAY" jdbcType="NUMERIC" property="rentDepositPay" />
    <result column="RENT_OTHER_MONEY" jdbcType="NUMERIC" property="rentOtherMoney" />
    <result column="GOODSDETAILED" jdbcType="VARCHAR" property="goodsdetailed" />
    <result column="WATERLIGHTEXPENSES" jdbcType="VARCHAR" property="waterlightexpenses" />
    <result column="SYSTEM_RECORD_TIME" jdbcType="VARCHAR" property="systemRecordTime" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="CREATOR_UID" jdbcType="INTEGER" property="creatorUid" />
    <result column="UPDATE_UID" jdbcType="INTEGER" property="updateUid" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CUST_DEPTNAME" jdbcType="VARCHAR" property="custDeptname" />
    <result column="CUST_USERNAME" jdbcType="VARCHAR" property="custUsername" />
    <result column="CUST_USER_UID" jdbcType="INTEGER" property="custUserUid" />
    <result column="CUST_DEPT_ID" jdbcType="INTEGER" property="custDeptId" />
    <result column="CUST_PLATE" jdbcType="TINYINT" property="custPlate" />
    <result column="HOUSE_DEPTNAME" jdbcType="VARCHAR" property="houseDeptname" />
    <result column="HOUSE_USERNAME" jdbcType="VARCHAR" property="houseUsername" />
    <result column="HOUSE_USER_UID" jdbcType="INTEGER" property="houseUserUid" />
    <result column="HOUSE_DEPT_ID" jdbcType="INTEGER" property="houseDeptId" />
    <result column="HOUSE_PLATE" jdbcType="TINYINT" property="housePlate" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="HOUSEADDRESS" jdbcType="VARCHAR" property="houseaddress" />
    <result column="REAL_TOTALPRICE" jdbcType="NUMERIC" property="realTotalprice" />
    <result column="DEAL_DEPT_ID" jdbcType="INTEGER" property="dealDeptId" />
    <result column="HOUSE_DUETIME_TASK_ID" jdbcType="INTEGER" property="houseDuetimeTaskId" />
    <result column="CUST_DUETIME_TASK_ID" jdbcType="INTEGER" property="custDuetimeTaskId" />
    <result column="MODEL_ID" jdbcType="INTEGER" property="modelId" />
    <result column="CONTRACT_NO" jdbcType="VARCHAR" property="contractNo" />
    <result column="RUNSTEP_ID" jdbcType="INTEGER" property="runstepId" />
    <result column="RUNSTEP_NAME" jdbcType="VARCHAR" property="runstepName" />
    <result column="TIMELIMITDATE" jdbcType="VARCHAR" property="timelimitdate" />
    <result column="EXECUTOR" jdbcType="INTEGER" property="executor" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="COMPLETE_USER" jdbcType="INTEGER" property="completeUser" />
    <result column="COMPLETE_DATE" jdbcType="VARCHAR" property="completeDate" />
    <result column="MODEL_NAME" jdbcType="VARCHAR" property="modelName" />
    <result column="DEAL_USER_NAME" jdbcType="VARCHAR" property="dealUserName" />
    <result column="COMPLETE_USER_NAME" jdbcType="VARCHAR" property="completeUserName" />
    <result column="CREATOR_NAME" jdbcType="VARCHAR" property="creatorName" />
    <result column="AREA" jdbcType="NUMERIC" property="area" />
    <result column="FITMENT" jdbcType="TINYINT" property="fitment" />
    <result column="MODEL_NO" jdbcType="SMALLINT" property="modelNo" />
    <result column="STEP_NO" jdbcType="SMALLINT" property="stepNo" />
    <result column="UPDATE_USERNAME" jdbcType="VARCHAR" property="updateUsername" />
    <result column="LOCK_FLAG" jdbcType="TINYINT" property="lockFlag" />
    <result column="DEAL_INFO_TYPE" jdbcType="TINYINT" property="dealInfoType" />
    <result column="ISBYHAND" jdbcType="TINYINT" property="isbyhand" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="SIGN_USER_ID" jdbcType="INTEGER" property="signUserId" />
    <result column="SIGN_USER_NAME" jdbcType="VARCHAR" property="signUserName" />
    <result column="SIGN_MANAGER_ID" jdbcType="INTEGER" property="signManagerId" />
    <result column="SIGN_MANAGER_NAME" jdbcType="VARCHAR" property="signManagerName" />
    <result column="SIGN_USER_DEPT_ID" jdbcType="INTEGER" property="signUserDeptId" />
    <result column="SIGN_USER_DEPT_NAME" jdbcType="VARCHAR" property="signUserDeptName" />
    <result column="SIGN_MANAGER_DEPT_ID" jdbcType="INTEGER" property="signManagerDeptId" />
    <result column="SIGN_MANAGER_DEPT_NAME" jdbcType="VARCHAR" property="signManagerDeptName" />
    <result column="FINANC_STATUS_ID" jdbcType="INTEGER" property="financStatusId" />
    <result column="FINANC_NAME" jdbcType="VARCHAR" property="financName" />
    <result column="CATEGORY_ID" jdbcType="INTEGER" property="categoryId" />
    <result column="CATEGORY_NAME" jdbcType="VARCHAR" property="categoryName" />
    <result column="SIGN_DATE" jdbcType="VARCHAR" property="signDate" />
    <result column="TRANSFER_DATE" jdbcType="VARCHAR" property="transferDate" />
    <result column="EVIDENCE_DATE" jdbcType="VARCHAR" property="evidenceDate" />
    <result column="BUY_OWNER_NAME_BAK" jdbcType="VARCHAR" property="buyOwnerNameBak" />
    <result column="SELL_OWNER_NAME_BAK" jdbcType="VARCHAR" property="sellOwnerNameBak" />
    <result column="BUY_ID_CARD_BAK" jdbcType="VARCHAR" property="buyIdCardBak" />
    <result column="SELL_ID_CARD_BAK" jdbcType="VARCHAR" property="sellIdCardBak" />
    <result column="SALE_PRICE_UNIT" jdbcType="TINYINT" property="salePriceUnit" />
    <result column="RENT_CYCLE" jdbcType="VARCHAR" property="rentCycle" />
    <result column="CODE_ID" jdbcType="INTEGER" property="codeId" />
    <result column="PROCESS_STATUS" jdbcType="TINYINT" property="processStatus" />
    <result column="BUY_CUSTOMER_PHONE" jdbcType="VARCHAR" property="buyCustomerPhone" />
    <result column="BUY_CUSTOMER_PHONEENCODE" jdbcType="VARCHAR" property="buyCustomerPhoneencode" />
    <result column="SELL_OWNER_PHONE" jdbcType="VARCHAR" property="sellOwnerPhone" />
    <result column="SELL_OWNER_PHONEENCODE" jdbcType="VARCHAR" property="sellOwnerPhoneencode" />
    <result column="SELL_OWNER_PHONE_BAK" jdbcType="VARCHAR" property="sellOwnerPhoneBak" />
    <result column="BUY_CUSTOMER_PHONE_BAK" jdbcType="VARCHAR" property="buyCustomerPhoneBak" />
    <result column="CONTRACT_ID" jdbcType="INTEGER" property="contractId" />
    <result column="PAYTYPE_ID" jdbcType="INTEGER" property="paytypeId" />
    <result column="PAYTYPE_NAME" jdbcType="VARCHAR" property="paytypeName" />
    <result column="YOU_ADUIT_STATUS" jdbcType="TINYINT" property="youAduitStatus" />
    <result column="DEAL_AUDIT_STATUS" jdbcType="TINYINT" property="dealAuditStatus" />
    <result column="COMMERCIAL_LOAN_DATE" jdbcType="TIMESTAMP" property="commercialLoanDate" />
    <result column="COMMERCIAL_LENDER_DATE" jdbcType="TIMESTAMP" property="commercialLenderDate" />
    <result column="COMMERCIAL_LENDER_LIMIT" jdbcType="VARCHAR" property="commercialLenderLimit" />
    <result column="COMMERCIAL_LENDER_BANK" jdbcType="VARCHAR" property="commercialLenderBank" />
    <result column="PROVIDENT_LOAN_DATE" jdbcType="TIMESTAMP" property="providentLoanDate" />
    <result column="PROVIDENT_LENDER_DATE" jdbcType="TIMESTAMP" property="providentLenderDate" />
    <result column="PROVIDENT_LENDER_LIMIT" jdbcType="VARCHAR" property="providentLenderLimit" />
    <result column="PROVIDENT_LENDER_BANK" jdbcType="VARCHAR" property="providentLenderBank" />
    <result column="TOTAL_NEED_INCOME" jdbcType="NUMERIC" property="totalNeedIncome" />
    <result column="TOTAL_REAL_INCOME" jdbcType="NUMERIC" property="totalRealIncome" />
    <result column="TOTAL_NEED_PERFORMANCE" jdbcType="NUMERIC" property="totalNeedPerformance" />
    <result column="TOTAL_REAL_PERFORMANCE" jdbcType="NUMERIC" property="totalRealPerformance" />
    <result column="NEED_ADUIT_STATUS" jdbcType="TINYINT" property="needAduitStatus" />
    <result column="REAL_ADUIT_STATUS" jdbcType="TINYINT" property="realAduitStatus" />
    <result column="INTELLIGENT_SEARCH" jdbcType="VARCHAR" property="intelligentSearch" />
    <result column="PROVIDENT_LOAN_MONEY" jdbcType="NUMERIC" property="providentLoanMoney" />
    <result column="COMMERCIAL_LOAN_MONEY" jdbcType="NUMERIC" property="commercialLoanMoney" />
    <result column="TAXES_AUDIT_STATUS" jdbcType="TINYINT" property="taxesAuditStatus" />
    <result column="TAXES_AUDIT_NAME" jdbcType="VARCHAR" property="taxesAuditName" />
    <result column="TAXES_AUDIT_USER" jdbcType="INTEGER" property="taxesAuditUser" />
    <result column="TAXES_AUDIT_TIME" jdbcType="TIMESTAMP" property="taxesAuditTime" />
    <result column="DEAL_AUDITOR" jdbcType="VARCHAR" property="dealAuditor" />
    <result column="YOU_ADUIT_OPINION" jdbcType="VARCHAR" property="youAduitOpinion" />
    <result column="YOU_DEAL_FLAG" jdbcType="TINYINT" property="youDealFlag" />
    <result column="SUB_ADUIT_TIME" jdbcType="TIMESTAMP" property="subAduitTime" />
    <result column="YOUJIA_DEAL" jdbcType="TINYINT" property="youjiaDeal" />
    <result column="BUILD_REG_NAME" jdbcType="VARCHAR" property="buildRegName" />
    <result column="BUILD_REG_ID" jdbcType="INTEGER" property="buildRegId" />
    <result column="PROCESS_END_TIME" jdbcType="TIMESTAMP" property="processEndTime" />
    <result column="YOU_ADUIT_STATUS_PROTOCOL" jdbcType="TINYINT" property="youAduitStatusProtocol" />
    <result column="PROTOCOL_ID" jdbcType="INTEGER" property="protocolId" />
    <result column="TRANSFER_NEED_PERFORMANCE" jdbcType="NUMERIC" property="transferNeedPerformance" />
    <result column="TRANSFER_REAL_PERFORMANCE" jdbcType="NUMERIC" property="transferRealPerformance" />
    <result column="SECONDHAND_NEED_PERFORMANCE" jdbcType="NUMERIC" property="secondhandNeedPerformance" />
    <result column="SECONDHAND_REAL_PERFORMANCE" jdbcType="NUMERIC" property="secondhandRealPerformance" />
    <result column="NEWHOUSE_NEED_PERFORMANCE" jdbcType="NUMERIC" property="newhouseNeedPerformance" />
    <result column="NEWHOUSE_REAL_PERFORMANCE" jdbcType="NUMERIC" property="newhouseRealPerformance" />
    <result column="LEASE_NEED_PERFORMANCE" jdbcType="NUMERIC" property="leaseNeedPerformance" />
    <result column="LEASE_REAL_PERFORMANCE" jdbcType="NUMERIC" property="leaseRealPerformance" />
    <result column="FINANCE_NEED_PERFORMANCE" jdbcType="NUMERIC" property="financeNeedPerformance" />
    <result column="FINANCE_REAL_PERFORMANCE" jdbcType="NUMERIC" property="financeRealPerformance" />
    <result column="COMMISSION_RATE" jdbcType="NUMERIC" property="commissionRate" />
    <result column="STANDARD_COMMISSION" jdbcType="NUMERIC" property="standardCommission" />
    <result column="CODE_TYPE" jdbcType="TINYINT" property="codeType" />
    <result column="SECTION_ID" jdbcType="INTEGER" property="sectionId" />
    <result column="SELL_OWNER_COMMSION" jdbcType="NUMERIC" property="sellOwnerCommsion" />
    <result column="BUY_CUSTOMER_COMMSION" jdbcType="NUMERIC" property="buyCustomerCommsion" />
    <result column="PLANNING_USE" jdbcType="VARCHAR" property="planningUse" />
    <result column="LANDCARD_TYPE" jdbcType="TINYINT" property="landcardType" />
    <result column="MORTGAGE_TYPE" jdbcType="TINYINT" property="mortgageType" />
    <result column="LEASE_TYPE" jdbcType="TINYINT" property="leaseType" />
    <result column="SELLER_PROXY_NAME" jdbcType="VARCHAR" property="sellerProxyName" />
    <result column="SELLER_PROXY_IDCARD" jdbcType="VARCHAR" property="sellerProxyIdcard" />
    <result column="SELLER_PROXY_PHONE" jdbcType="VARCHAR" property="sellerProxyPhone" />
    <result column="SELLER_PROXY_PHONEENCODE" jdbcType="VARCHAR" property="sellerProxyPhoneencode" />
    <result column="BUYER_PROXY_NAME" jdbcType="VARCHAR" property="buyerProxyName" />
    <result column="BUYER_PROXY_IDCARD" jdbcType="VARCHAR" property="buyerProxyIdcard" />
    <result column="BUYER_PROXY_PHONE" jdbcType="VARCHAR" property="buyerProxyPhone" />
    <result column="BUYER_PROXY_PHONEENCODE" jdbcType="VARCHAR" property="buyerProxyPhoneencode" />
    <result column="HOUSE_HOLD_ELECTRICAL" jdbcType="TINYINT" property="houseHoldElectrical" />
    <result column="BUYER_TAX_FEE" jdbcType="VARCHAR" property="buyerTaxFee" />
    <result column="SELLER_TAX_FEE" jdbcType="VARCHAR" property="sellerTaxFee" />
    <result column="DEPOSIT_PAY_TIME" jdbcType="TIMESTAMP" property="depositPayTime" />
    <result column="DEPOSIT_PAY_TYPE" jdbcType="TINYINT" property="depositPayType" />
    <result column="DEPOSIT_PAY_OTHER" jdbcType="VARCHAR" property="depositPayOther" />
    <result column="DOWN_PAYMENTS_PAY_TYPE1" jdbcType="TINYINT" property="downPaymentsPayType1" />
    <result column="DOWN_PAYMENTS_PAY_TIME1" jdbcType="VARCHAR" property="downPaymentsPayTime1" />
    <result column="HOUSE_PRICE_LAST_PAY_TYPE1" jdbcType="TINYINT" property="housePriceLastPayType1" />
    <result column="HOUSE_PRICE_LAST_PAY_TIME1" jdbcType="VARCHAR" property="housePriceLastPayTime1" />
    <result column="LOAN_TIME_LENGTH" jdbcType="VARCHAR" property="loanTimeLength" />
    <result column="LOAN_AGENCY" jdbcType="VARCHAR" property="loanAgency" />
    <result column="NO_PASS_SLOUTION_TYPE" jdbcType="TINYINT" property="noPassSloutionType" />
    <result column="APPLICATION_REPAYMENT_DAYS" jdbcType="INTEGER" property="applicationRepaymentDays" />
    <result column="APPLICATION_REPAYMENT_OTHER" jdbcType="VARCHAR" property="applicationRepaymentOther" />
    <result column="OWNERSHIP_OBLIGATIION_NUMBER" jdbcType="VARCHAR" property="ownershipObligatiionNumber" />
    <result column="HOUSE_PROPERTY" jdbcType="VARCHAR" property="houseProperty" />
    <result column="SELLER_BANK_TYPE" jdbcType="VARCHAR" property="sellerBankType" />
    <result column="SELLER_BANK_USER_NAME" jdbcType="VARCHAR" property="sellerBankUserName" />
    <result column="SELLER_BANK_ACCOUNT" jdbcType="VARCHAR" property="sellerBankAccount" />
    <result column="BUYER_BANK_TYPE" jdbcType="VARCHAR" property="buyerBankType" />
    <result column="BUYER_BANK_USER_NAME" jdbcType="VARCHAR" property="buyerBankUserName" />
    <result column="BUYER_BANK_ACCOUNT" jdbcType="VARCHAR" property="buyerBankAccount" />
    <result column="DOWN_PAYMENTS_PAY_TYPE2" jdbcType="TINYINT" property="downPaymentsPayType2" />
    <result column="DOWN_PAYMENTS_PAY_TIME2" jdbcType="VARCHAR" property="downPaymentsPayTime2" />
    <result column="DOWN_PAYMENTS_PAY_TYPE3" jdbcType="TINYINT" property="downPaymentsPayType3" />
    <result column="DOWN_PAYMENTS_PAY_TIME3" jdbcType="VARCHAR" property="downPaymentsPayTime3" />
    <result column="HOUSE_PRICE_LAST_PAY_TYPE2" jdbcType="TINYINT" property="housePriceLastPayType2" />
    <result column="HOUSE_PRICE_LAST_PAY_TIME2" jdbcType="VARCHAR" property="housePriceLastPayTime2" />
    <result column="HOUSE_PRICE_LAST_PAY_TYPE3" jdbcType="TINYINT" property="housePriceLastPayType3" />
    <result column="HOUSE_PRICE_LAST_PAY_TIME3" jdbcType="VARCHAR" property="housePriceLastPayTime3" />
    <result column="TRANSFER_DATE_STR" jdbcType="VARCHAR" property="transferDateStr" />
    <result column="TRANSFER_DATE_DAYS_PICKUP" jdbcType="INTEGER" property="transferDateDaysPickup" />
    <result column="TRANSFER_DATE_DAYS_REGIST" jdbcType="INTEGER" property="transferDateDaysRegist" />
    <result column="WATER_LEAKAGE" jdbcType="TINYINT" property="waterLeakage" />
    <result column="WATER_LEAKAGE_POSITION" jdbcType="VARCHAR" property="waterLeakagePosition" />
    <result column="WATER_LEAKAGE_CONSULT" jdbcType="TINYINT" property="waterLeakageConsult" />
    <result column="WATER_LEAKAGE_CONSULT_BEAR_PARTY" jdbcType="TINYINT" property="waterLeakageConsultBearParty" />
    <result column="DEATH_EVENT" jdbcType="VARCHAR" property="deathEvent" />
    <result column="HOUSE_PEELING" jdbcType="TINYINT" property="housePeeling" />
    <result column="HOUSE_PEELING_POSITION" jdbcType="VARCHAR" property="housePeelingPosition" />
    <result column="SUBMIT_LOAN_INFO_FEE_DAYS" jdbcType="VARCHAR" property="submitLoanInfoFeeDays" />
    <result column="DOWN_PAYMENTS_PAY_PARTY1" jdbcType="TINYINT" property="downPaymentsPayParty1" />
    <result column="DOWN_PAYMENTS_PAY_PARTY2" jdbcType="TINYINT" property="downPaymentsPayParty2" />
    <result column="DOWN_PAYMENTS_PAY_PARTY3" jdbcType="TINYINT" property="downPaymentsPayParty3" />
    <result column="DOWN_PAYMENTS_PAY_BANK" jdbcType="VARCHAR" property="downPaymentsPayBank" />
    <result column="DOWN_PAYMENTS_PAY_ACCOUNT_NAME" jdbcType="VARCHAR" property="downPaymentsPayAccountName" />
    <result column="DOWN_PAYMENTS_PAY_ACCOUNT_NO" jdbcType="VARCHAR" property="downPaymentsPayAccountNo" />
    <result column="DOWN_PAYMENTS_THIRD_PARTY" jdbcType="VARCHAR" property="downPaymentsThirdParty" />
    <result column="DOWN_PAYMENTS_REMAINING_FIRST_PAYTIME" jdbcType="VARCHAR" property="downPaymentsRemainingFirstPaytime" />
    <result column="HOUSE_PEELING_BEAR_PARTY" jdbcType="TINYINT" property="housePeelingBearParty" />
    <result column="DOWN_PAYMENTS_REMAINING_FIRST_AMOUNT" jdbcType="VARCHAR" property="downPaymentsRemainingFirstAmount" />
    <result column="HOUSE_PRICE_LAST_PAY_AMOUNT3" jdbcType="VARCHAR" property="housePriceLastPayAmount3" />
    <result column="HOUSE_PRICE_LAST_PAY_AMOUNT2" jdbcType="VARCHAR" property="housePriceLastPayAmount2" />
    <result column="DOWN_PAYMENTS_PAY_AMOUNT3" jdbcType="VARCHAR" property="downPaymentsPayAmount3" />
    <result column="DOWN_PAYMENTS_PAY_AMOUNT2" jdbcType="VARCHAR" property="downPaymentsPayAmount2" />
    <result column="NO_PASS_SLOUTION_AMOUNT" jdbcType="VARCHAR" property="noPassSloutionAmount" />
    <result column="HOUSE_PRICE_LAST_PAY_AMOUNT1" jdbcType="VARCHAR" property="housePriceLastPayAmount1" />
    <result column="DOWN_PAYMENTS_PAY_AMOUNT1" jdbcType="VARCHAR" property="downPaymentsPayAmount1" />
    <result column="HOUSE_PRICE_LAST_AMOUNT" jdbcType="VARCHAR" property="housePriceLastAmount" />
    <result column="DOWN_PAYMENTS_AMOUNT" jdbcType="VARCHAR" property="downPaymentsAmount" />
    <result column="DEPOSIT_AMOUNT" jdbcType="VARCHAR" property="depositAmount" />
    <result column="MORTGAGE_AMOUNT" jdbcType="VARCHAR" property="mortgageAmount" />
    <result column="SIGN_USER_ARCHIVE" jdbcType="INTEGER" property="signUserArchive" />
    <result column="BUY_ID_CARD_TYPE" jdbcType="INTEGER" property="buyIdCardType" />
    <result column="SELL_ID_CARD_TYPE" jdbcType="INTEGER" property="sellIdCardType" />
    <result column="SELL_ID_CARD_BAK_TYPE" jdbcType="INTEGER" property="sellIdCardBakType" />
    <result column="BUY_ID_CARD_BAK_TYPE" jdbcType="INTEGER" property="buyIdCardBakType" />
    <result column="SELLER_PROXY_IDCARD_TYPE" jdbcType="INTEGER" property="sellerProxyIdcardType" />
    <result column="BUYER_PROXY_IDCARD_TYPE" jdbcType="INTEGER" property="buyerProxyIdcardType" />
    <result column="ENTRUST_BANK" jdbcType="VARCHAR" property="entrustBank" />
    <result column="ENTRUST_MONEY" jdbcType="NUMERIC" property="entrustMoney" />
    <result column="FIRST_TRIAL_COMPLETE_DATE" jdbcType="VARCHAR" property="firstTrialCompleteDate" />
    <result column="RECHECK_COMPLETE_DATE" jdbcType="VARCHAR" property="recheckCompleteDate" />
    <result column="INVALID_COMPLETE_DATE" jdbcType="VARCHAR" property="invalidCompleteDate" />
    <result column="DEAL_AUDIT_STATUS_BEFORE" jdbcType="TINYINT" property="dealAuditStatusBefore" />
    <result column="SSQ_CONTRACT_ID" jdbcType="VARCHAR" property="ssqContractId" />
    <result column="SELL_OWNER_WX_USER_ID" jdbcType="VARCHAR" property="sellOwnerWxUserId" />
    <result column="SELL_OWNER_WX_OPEN_ID" jdbcType="VARCHAR" property="sellOwnerWxOpenId" />
    <result column="BUY_OWNER_WX_USER_ID" jdbcType="VARCHAR" property="buyOwnerWxUserId" />
    <result column="BUY_OWNER_WX_OPEN_ID" jdbcType="VARCHAR" property="buyOwnerWxOpenId" />
    <result column="SIGN_TYPE" jdbcType="TINYINT" property="signType" />
    <result column="SIGN_SITE_DEPT" jdbcType="INTEGER" property="signSiteDept" />
    <result column="SIGN_SITE_GR" jdbcType="INTEGER" property="signSiteGr" />
    <result column="INTRODUCER_ID" jdbcType="INTEGER" property="introducerId" />
    <result column="ADULT_PROMOTION_ID" jdbcType="INTEGER" property="adultPromotionId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    DEAL_ID, COMP_ID, AGREEMENT_NO, CREATOR_DATE, DEAL_TYPE, DEAL_STATUS, DEAL_USER_ID, 
    DEAL_COMPLETE, DEAL_VERIFY_TIME, DEAL_BUY_STYLE, DEAL_SELL_STYLE, HOUSE_USEAGE, DEAL_CUSTOMER_ID, 
    DEAL_CUSTOMER_NO, DEAL_HOUSE_ID, DEAL_HOUSE_NO, SELL_ADDRESS, BUY_CUSTINFO, SELL_HEZUO_COMPNAME, 
    BUY_HEZUO_COMPNAME, BUY_CONTACTUSER, SELL_CONTACTUSER, BUY_OWNER_NAME, SELL_OWNER_NAME, 
    BUY_CALL_PHONE, SELL_CALL_PHONE, BUY_ID_CARD, SELL_ID_CARD, BUY_PAYMONEY, SELL_PAYMONEY, 
    OTHER_PAYMONEY, GAIN_MONEY, REAL_BUY_PAYMONEY, REAL_SELL_PAYMONEY, REAL_OTHER_PAYMONEY, 
    REAL_PAYMONEY, BUY_PRICE_MONEY, BUY_MORTGAGE_TYPE, SELL_DEAL_MONEY, SELL_ISHAVE_LOAN, 
    SELL_LOAN_MONEY, SELL_RETURN_LOAN, OWNER_STYLE, OWNER_TYPE, OWNER_NO, HAVE_LANDCARD, 
    LANDCARD_NO, MANGEMENT_TAX, OWNER_TAX, TAX, TRADE_REMARK_EXPLAIN, RENT_DEAL_MONEY, 
    RENT_PRICE_UNIT, RENT_DATE, RENT_OVER_DATE, RENT_PAY_METHOD, RENT_PAY_SPACE, RENT_PAY_EARLY, 
    RENT_DEPOSIT_PAY, RENT_OTHER_MONEY, GOODSDETAILED, WATERLIGHTEXPENSES, SYSTEM_RECORD_TIME, 
    DEPT_ID, CREATOR_UID, UPDATE_UID, UPDATE_TIME, CUST_DEPTNAME, CUST_USERNAME, CUST_USER_UID, 
    CUST_DEPT_ID, CUST_PLATE, HOUSE_DEPTNAME, HOUSE_USERNAME, HOUSE_USER_UID, HOUSE_DEPT_ID, 
    HOUSE_PLATE, BUILD_ID, BUILD_NAME, HOUSEADDRESS, REAL_TOTALPRICE, DEAL_DEPT_ID, HOUSE_DUETIME_TASK_ID, 
    CUST_DUETIME_TASK_ID, MODEL_ID, CONTRACT_NO, RUNSTEP_ID, RUNSTEP_NAME, TIMELIMITDATE, 
    EXECUTOR, REMARK, COMPLETE_USER, COMPLETE_DATE, MODEL_NAME, DEAL_USER_NAME, COMPLETE_USER_NAME, 
    CREATOR_NAME, AREA, FITMENT, MODEL_NO, STEP_NO, UPDATE_USERNAME, LOCK_FLAG, DEAL_INFO_TYPE, 
    ISBYHAND, REG_ID, AREA_ID, SIGN_USER_ID, SIGN_USER_NAME, SIGN_MANAGER_ID, SIGN_MANAGER_NAME, 
    SIGN_USER_DEPT_ID, SIGN_USER_DEPT_NAME, SIGN_MANAGER_DEPT_ID, SIGN_MANAGER_DEPT_NAME, 
    FINANC_STATUS_ID, FINANC_NAME, CATEGORY_ID, CATEGORY_NAME, SIGN_DATE, TRANSFER_DATE, 
    EVIDENCE_DATE, BUY_OWNER_NAME_BAK, SELL_OWNER_NAME_BAK, BUY_ID_CARD_BAK, SELL_ID_CARD_BAK, 
    SALE_PRICE_UNIT, RENT_CYCLE, CODE_ID, PROCESS_STATUS, BUY_CUSTOMER_PHONE, BUY_CUSTOMER_PHONEENCODE, 
    SELL_OWNER_PHONE, SELL_OWNER_PHONEENCODE, SELL_OWNER_PHONE_BAK, BUY_CUSTOMER_PHONE_BAK, 
    CONTRACT_ID, PAYTYPE_ID, PAYTYPE_NAME, YOU_ADUIT_STATUS, DEAL_AUDIT_STATUS, COMMERCIAL_LOAN_DATE, 
    COMMERCIAL_LENDER_DATE, COMMERCIAL_LENDER_LIMIT, COMMERCIAL_LENDER_BANK, PROVIDENT_LOAN_DATE, 
    PROVIDENT_LENDER_DATE, PROVIDENT_LENDER_LIMIT, PROVIDENT_LENDER_BANK, TOTAL_NEED_INCOME, 
    TOTAL_REAL_INCOME, TOTAL_NEED_PERFORMANCE, TOTAL_REAL_PERFORMANCE, NEED_ADUIT_STATUS, 
    REAL_ADUIT_STATUS, INTELLIGENT_SEARCH, PROVIDENT_LOAN_MONEY, COMMERCIAL_LOAN_MONEY, 
    TAXES_AUDIT_STATUS, TAXES_AUDIT_NAME, TAXES_AUDIT_USER, TAXES_AUDIT_TIME, DEAL_AUDITOR, 
    YOU_ADUIT_OPINION, YOU_DEAL_FLAG, SUB_ADUIT_TIME, YOUJIA_DEAL, BUILD_REG_NAME, BUILD_REG_ID, 
    PROCESS_END_TIME, YOU_ADUIT_STATUS_PROTOCOL, PROTOCOL_ID, TRANSFER_NEED_PERFORMANCE, 
    TRANSFER_REAL_PERFORMANCE, SECONDHAND_NEED_PERFORMANCE, SECONDHAND_REAL_PERFORMANCE, 
    NEWHOUSE_NEED_PERFORMANCE, NEWHOUSE_REAL_PERFORMANCE, LEASE_NEED_PERFORMANCE, LEASE_REAL_PERFORMANCE, 
    FINANCE_NEED_PERFORMANCE, FINANCE_REAL_PERFORMANCE, COMMISSION_RATE, STANDARD_COMMISSION, 
    CODE_TYPE, SECTION_ID, SELL_OWNER_COMMSION, BUY_CUSTOMER_COMMSION, PLANNING_USE, 
    LANDCARD_TYPE, MORTGAGE_TYPE, LEASE_TYPE, SELLER_PROXY_NAME, SELLER_PROXY_IDCARD, 
    SELLER_PROXY_PHONE, SELLER_PROXY_PHONEENCODE, BUYER_PROXY_NAME, BUYER_PROXY_IDCARD, 
    BUYER_PROXY_PHONE, BUYER_PROXY_PHONEENCODE, HOUSE_HOLD_ELECTRICAL, BUYER_TAX_FEE, 
    SELLER_TAX_FEE, DEPOSIT_PAY_TIME, DEPOSIT_PAY_TYPE, DEPOSIT_PAY_OTHER, DOWN_PAYMENTS_PAY_TYPE1, 
    DOWN_PAYMENTS_PAY_TIME1, HOUSE_PRICE_LAST_PAY_TYPE1, HOUSE_PRICE_LAST_PAY_TIME1, 
    LOAN_TIME_LENGTH, LOAN_AGENCY, NO_PASS_SLOUTION_TYPE, APPLICATION_REPAYMENT_DAYS, 
    APPLICATION_REPAYMENT_OTHER, OWNERSHIP_OBLIGATIION_NUMBER, HOUSE_PROPERTY, SELLER_BANK_TYPE, 
    SELLER_BANK_USER_NAME, SELLER_BANK_ACCOUNT, BUYER_BANK_TYPE, BUYER_BANK_USER_NAME, 
    BUYER_BANK_ACCOUNT, DOWN_PAYMENTS_PAY_TYPE2, DOWN_PAYMENTS_PAY_TIME2, DOWN_PAYMENTS_PAY_TYPE3, 
    DOWN_PAYMENTS_PAY_TIME3, HOUSE_PRICE_LAST_PAY_TYPE2, HOUSE_PRICE_LAST_PAY_TIME2, 
    HOUSE_PRICE_LAST_PAY_TYPE3, HOUSE_PRICE_LAST_PAY_TIME3, TRANSFER_DATE_STR, TRANSFER_DATE_DAYS_PICKUP, 
    TRANSFER_DATE_DAYS_REGIST, WATER_LEAKAGE, WATER_LEAKAGE_POSITION, WATER_LEAKAGE_CONSULT, 
    WATER_LEAKAGE_CONSULT_BEAR_PARTY, DEATH_EVENT, HOUSE_PEELING, HOUSE_PEELING_POSITION, 
    SUBMIT_LOAN_INFO_FEE_DAYS, DOWN_PAYMENTS_PAY_PARTY1, DOWN_PAYMENTS_PAY_PARTY2, DOWN_PAYMENTS_PAY_PARTY3, 
    DOWN_PAYMENTS_PAY_BANK, DOWN_PAYMENTS_PAY_ACCOUNT_NAME, DOWN_PAYMENTS_PAY_ACCOUNT_NO, 
    DOWN_PAYMENTS_THIRD_PARTY, DOWN_PAYMENTS_REMAINING_FIRST_PAYTIME, HOUSE_PEELING_BEAR_PARTY, 
    DOWN_PAYMENTS_REMAINING_FIRST_AMOUNT, HOUSE_PRICE_LAST_PAY_AMOUNT3, HOUSE_PRICE_LAST_PAY_AMOUNT2, 
    DOWN_PAYMENTS_PAY_AMOUNT3, DOWN_PAYMENTS_PAY_AMOUNT2, NO_PASS_SLOUTION_AMOUNT, HOUSE_PRICE_LAST_PAY_AMOUNT1, 
    DOWN_PAYMENTS_PAY_AMOUNT1, HOUSE_PRICE_LAST_AMOUNT, DOWN_PAYMENTS_AMOUNT, DEPOSIT_AMOUNT, 
    MORTGAGE_AMOUNT, SIGN_USER_ARCHIVE, BUY_ID_CARD_TYPE, SELL_ID_CARD_TYPE, SELL_ID_CARD_BAK_TYPE, 
    BUY_ID_CARD_BAK_TYPE, SELLER_PROXY_IDCARD_TYPE, BUYER_PROXY_IDCARD_TYPE, ENTRUST_BANK, 
    ENTRUST_MONEY, FIRST_TRIAL_COMPLETE_DATE, RECHECK_COMPLETE_DATE, INVALID_COMPLETE_DATE, 
    DEAL_AUDIT_STATUS_BEFORE, SSQ_CONTRACT_ID, SELL_OWNER_WX_USER_ID, SELL_OWNER_WX_OPEN_ID, 
    BUY_OWNER_WX_USER_ID, BUY_OWNER_WX_OPEN_ID, SIGN_TYPE, SIGN_SITE_DEPT, SIGN_SITE_GR, 
    INTRODUCER_ID, ADULT_PROMOTION_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_DEAL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_DEAL
    where DEAL_ID = #{dealId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_DEAL
    where DEAL_ID = #{dealId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealExample">
    <!--@mbggenerated-->
    delete from FUN_DEAL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunDeal">
    <!--@mbggenerated-->
    <selectKey keyProperty="dealId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_DEAL_DEAL_ID
    </selectKey>
    insert into FUN_DEAL (DEAL_ID, COMP_ID, AGREEMENT_NO, 
      CREATOR_DATE, DEAL_TYPE, DEAL_STATUS, 
      DEAL_USER_ID, DEAL_COMPLETE, DEAL_VERIFY_TIME, 
      DEAL_BUY_STYLE, DEAL_SELL_STYLE, HOUSE_USEAGE, 
      DEAL_CUSTOMER_ID, DEAL_CUSTOMER_NO, DEAL_HOUSE_ID, 
      DEAL_HOUSE_NO, SELL_ADDRESS, BUY_CUSTINFO, 
      SELL_HEZUO_COMPNAME, BUY_HEZUO_COMPNAME, BUY_CONTACTUSER, 
      SELL_CONTACTUSER, BUY_OWNER_NAME, SELL_OWNER_NAME, 
      BUY_CALL_PHONE, SELL_CALL_PHONE, BUY_ID_CARD, 
      SELL_ID_CARD, BUY_PAYMONEY, SELL_PAYMONEY, 
      OTHER_PAYMONEY, GAIN_MONEY, REAL_BUY_PAYMONEY, 
      REAL_SELL_PAYMONEY, REAL_OTHER_PAYMONEY, REAL_PAYMONEY, 
      BUY_PRICE_MONEY, BUY_MORTGAGE_TYPE, SELL_DEAL_MONEY, 
      SELL_ISHAVE_LOAN, SELL_LOAN_MONEY, SELL_RETURN_LOAN, 
      OWNER_STYLE, OWNER_TYPE, OWNER_NO, 
      HAVE_LANDCARD, LANDCARD_NO, MANGEMENT_TAX, 
      OWNER_TAX, TAX, TRADE_REMARK_EXPLAIN, 
      RENT_DEAL_MONEY, RENT_PRICE_UNIT, RENT_DATE, 
      RENT_OVER_DATE, RENT_PAY_METHOD, RENT_PAY_SPACE, 
      RENT_PAY_EARLY, RENT_DEPOSIT_PAY, RENT_OTHER_MONEY, 
      GOODSDETAILED, WATERLIGHTEXPENSES, SYSTEM_RECORD_TIME, 
      DEPT_ID, CREATOR_UID, UPDATE_UID, 
      UPDATE_TIME, CUST_DEPTNAME, CUST_USERNAME, 
      CUST_USER_UID, CUST_DEPT_ID, CUST_PLATE, 
      HOUSE_DEPTNAME, HOUSE_USERNAME, HOUSE_USER_UID, 
      HOUSE_DEPT_ID, HOUSE_PLATE, BUILD_ID, 
      BUILD_NAME, HOUSEADDRESS, REAL_TOTALPRICE, 
      DEAL_DEPT_ID, HOUSE_DUETIME_TASK_ID, CUST_DUETIME_TASK_ID, 
      MODEL_ID, CONTRACT_NO, RUNSTEP_ID, 
      RUNSTEP_NAME, TIMELIMITDATE, EXECUTOR, 
      REMARK, COMPLETE_USER, COMPLETE_DATE, 
      MODEL_NAME, DEAL_USER_NAME, COMPLETE_USER_NAME, 
      CREATOR_NAME, AREA, FITMENT, 
      MODEL_NO, STEP_NO, UPDATE_USERNAME, 
      LOCK_FLAG, DEAL_INFO_TYPE, ISBYHAND, 
      REG_ID, AREA_ID, SIGN_USER_ID, 
      SIGN_USER_NAME, SIGN_MANAGER_ID, SIGN_MANAGER_NAME, 
      SIGN_USER_DEPT_ID, SIGN_USER_DEPT_NAME, SIGN_MANAGER_DEPT_ID, 
      SIGN_MANAGER_DEPT_NAME, FINANC_STATUS_ID, FINANC_NAME, 
      CATEGORY_ID, CATEGORY_NAME, SIGN_DATE, 
      TRANSFER_DATE, EVIDENCE_DATE, BUY_OWNER_NAME_BAK, 
      SELL_OWNER_NAME_BAK, BUY_ID_CARD_BAK, SELL_ID_CARD_BAK, 
      SALE_PRICE_UNIT, RENT_CYCLE, CODE_ID, 
      PROCESS_STATUS, BUY_CUSTOMER_PHONE, BUY_CUSTOMER_PHONEENCODE, 
      SELL_OWNER_PHONE, SELL_OWNER_PHONEENCODE, SELL_OWNER_PHONE_BAK, 
      BUY_CUSTOMER_PHONE_BAK, CONTRACT_ID, PAYTYPE_ID, 
      PAYTYPE_NAME, YOU_ADUIT_STATUS, DEAL_AUDIT_STATUS, 
      COMMERCIAL_LOAN_DATE, COMMERCIAL_LENDER_DATE, 
      COMMERCIAL_LENDER_LIMIT, COMMERCIAL_LENDER_BANK, 
      PROVIDENT_LOAN_DATE, PROVIDENT_LENDER_DATE, 
      PROVIDENT_LENDER_LIMIT, PROVIDENT_LENDER_BANK, 
      TOTAL_NEED_INCOME, TOTAL_REAL_INCOME, TOTAL_NEED_PERFORMANCE, 
      TOTAL_REAL_PERFORMANCE, NEED_ADUIT_STATUS, 
      REAL_ADUIT_STATUS, INTELLIGENT_SEARCH, PROVIDENT_LOAN_MONEY, 
      COMMERCIAL_LOAN_MONEY, TAXES_AUDIT_STATUS, 
      TAXES_AUDIT_NAME, TAXES_AUDIT_USER, TAXES_AUDIT_TIME, 
      DEAL_AUDITOR, YOU_ADUIT_OPINION, YOU_DEAL_FLAG, 
      SUB_ADUIT_TIME, YOUJIA_DEAL, BUILD_REG_NAME, 
      BUILD_REG_ID, PROCESS_END_TIME, YOU_ADUIT_STATUS_PROTOCOL, 
      PROTOCOL_ID, TRANSFER_NEED_PERFORMANCE, TRANSFER_REAL_PERFORMANCE, 
      SECONDHAND_NEED_PERFORMANCE, SECONDHAND_REAL_PERFORMANCE, 
      NEWHOUSE_NEED_PERFORMANCE, NEWHOUSE_REAL_PERFORMANCE, 
      LEASE_NEED_PERFORMANCE, LEASE_REAL_PERFORMANCE, 
      FINANCE_NEED_PERFORMANCE, FINANCE_REAL_PERFORMANCE, 
      COMMISSION_RATE, STANDARD_COMMISSION, CODE_TYPE, 
      SECTION_ID, SELL_OWNER_COMMSION, BUY_CUSTOMER_COMMSION, 
      PLANNING_USE, LANDCARD_TYPE, MORTGAGE_TYPE, 
      LEASE_TYPE, SELLER_PROXY_NAME, SELLER_PROXY_IDCARD, 
      SELLER_PROXY_PHONE, SELLER_PROXY_PHONEENCODE, 
      BUYER_PROXY_NAME, BUYER_PROXY_IDCARD, BUYER_PROXY_PHONE, 
      BUYER_PROXY_PHONEENCODE, HOUSE_HOLD_ELECTRICAL, 
      BUYER_TAX_FEE, SELLER_TAX_FEE, DEPOSIT_PAY_TIME, 
      DEPOSIT_PAY_TYPE, DEPOSIT_PAY_OTHER, DOWN_PAYMENTS_PAY_TYPE1, 
      DOWN_PAYMENTS_PAY_TIME1, HOUSE_PRICE_LAST_PAY_TYPE1, 
      HOUSE_PRICE_LAST_PAY_TIME1, LOAN_TIME_LENGTH, 
      LOAN_AGENCY, NO_PASS_SLOUTION_TYPE, APPLICATION_REPAYMENT_DAYS, 
      APPLICATION_REPAYMENT_OTHER, OWNERSHIP_OBLIGATIION_NUMBER, 
      HOUSE_PROPERTY, SELLER_BANK_TYPE, SELLER_BANK_USER_NAME, 
      SELLER_BANK_ACCOUNT, BUYER_BANK_TYPE, BUYER_BANK_USER_NAME, 
      BUYER_BANK_ACCOUNT, DOWN_PAYMENTS_PAY_TYPE2, 
      DOWN_PAYMENTS_PAY_TIME2, DOWN_PAYMENTS_PAY_TYPE3, 
      DOWN_PAYMENTS_PAY_TIME3, HOUSE_PRICE_LAST_PAY_TYPE2, 
      HOUSE_PRICE_LAST_PAY_TIME2, HOUSE_PRICE_LAST_PAY_TYPE3, 
      HOUSE_PRICE_LAST_PAY_TIME3, TRANSFER_DATE_STR, 
      TRANSFER_DATE_DAYS_PICKUP, TRANSFER_DATE_DAYS_REGIST, 
      WATER_LEAKAGE, WATER_LEAKAGE_POSITION, WATER_LEAKAGE_CONSULT, 
      WATER_LEAKAGE_CONSULT_BEAR_PARTY, DEATH_EVENT, 
      HOUSE_PEELING, HOUSE_PEELING_POSITION, SUBMIT_LOAN_INFO_FEE_DAYS, 
      DOWN_PAYMENTS_PAY_PARTY1, DOWN_PAYMENTS_PAY_PARTY2, 
      DOWN_PAYMENTS_PAY_PARTY3, DOWN_PAYMENTS_PAY_BANK, 
      DOWN_PAYMENTS_PAY_ACCOUNT_NAME, DOWN_PAYMENTS_PAY_ACCOUNT_NO, 
      DOWN_PAYMENTS_THIRD_PARTY, DOWN_PAYMENTS_REMAINING_FIRST_PAYTIME, 
      HOUSE_PEELING_BEAR_PARTY, DOWN_PAYMENTS_REMAINING_FIRST_AMOUNT, 
      HOUSE_PRICE_LAST_PAY_AMOUNT3, HOUSE_PRICE_LAST_PAY_AMOUNT2, 
      DOWN_PAYMENTS_PAY_AMOUNT3, DOWN_PAYMENTS_PAY_AMOUNT2, 
      NO_PASS_SLOUTION_AMOUNT, HOUSE_PRICE_LAST_PAY_AMOUNT1, 
      DOWN_PAYMENTS_PAY_AMOUNT1, HOUSE_PRICE_LAST_AMOUNT, 
      DOWN_PAYMENTS_AMOUNT, DEPOSIT_AMOUNT, MORTGAGE_AMOUNT, 
      SIGN_USER_ARCHIVE, BUY_ID_CARD_TYPE, SELL_ID_CARD_TYPE, 
      SELL_ID_CARD_BAK_TYPE, BUY_ID_CARD_BAK_TYPE, SELLER_PROXY_IDCARD_TYPE, 
      BUYER_PROXY_IDCARD_TYPE, ENTRUST_BANK, ENTRUST_MONEY, 
      FIRST_TRIAL_COMPLETE_DATE, RECHECK_COMPLETE_DATE, 
      INVALID_COMPLETE_DATE, DEAL_AUDIT_STATUS_BEFORE, 
      SSQ_CONTRACT_ID, SELL_OWNER_WX_USER_ID, SELL_OWNER_WX_OPEN_ID, 
      BUY_OWNER_WX_USER_ID, BUY_OWNER_WX_OPEN_ID, SIGN_TYPE, 
      SIGN_SITE_DEPT, SIGN_SITE_GR, INTRODUCER_ID, 
      ADULT_PROMOTION_ID)
    values (#{dealId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{agreementNo,jdbcType=VARCHAR}, 
      #{creatorDate,jdbcType=VARCHAR}, #{dealType,jdbcType=TINYINT}, #{dealStatus,jdbcType=TINYINT}, 
      #{dealUserId,jdbcType=INTEGER}, #{dealComplete,jdbcType=TINYINT}, #{dealVerifyTime,jdbcType=VARCHAR}, 
      #{dealBuyStyle,jdbcType=TINYINT}, #{dealSellStyle,jdbcType=TINYINT}, #{houseUseage,jdbcType=TINYINT}, 
      #{dealCustomerId,jdbcType=INTEGER}, #{dealCustomerNo,jdbcType=VARCHAR}, #{dealHouseId,jdbcType=INTEGER}, 
      #{dealHouseNo,jdbcType=VARCHAR}, #{sellAddress,jdbcType=VARCHAR}, #{buyCustinfo,jdbcType=VARCHAR}, 
      #{sellHezuoCompname,jdbcType=VARCHAR}, #{buyHezuoCompname,jdbcType=VARCHAR}, #{buyContactuser,jdbcType=VARCHAR}, 
      #{sellContactuser,jdbcType=VARCHAR}, #{buyOwnerName,jdbcType=VARCHAR}, #{sellOwnerName,jdbcType=VARCHAR}, 
      #{buyCallPhone,jdbcType=VARCHAR}, #{sellCallPhone,jdbcType=VARCHAR}, #{buyIdCard,jdbcType=VARCHAR}, 
      #{sellIdCard,jdbcType=VARCHAR}, #{buyPaymoney,jdbcType=NUMERIC}, #{sellPaymoney,jdbcType=NUMERIC}, 
      #{otherPaymoney,jdbcType=NUMERIC}, #{gainMoney,jdbcType=NUMERIC}, #{realBuyPaymoney,jdbcType=NUMERIC}, 
      #{realSellPaymoney,jdbcType=NUMERIC}, #{realOtherPaymoney,jdbcType=NUMERIC}, #{realPaymoney,jdbcType=NUMERIC}, 
      #{buyPriceMoney,jdbcType=VARCHAR}, #{buyMortgageType,jdbcType=TINYINT}, #{sellDealMoney,jdbcType=NUMERIC}, 
      #{sellIshaveLoan,jdbcType=BIT}, #{sellLoanMoney,jdbcType=NUMERIC}, #{sellReturnLoan,jdbcType=BIT}, 
      #{ownerStyle,jdbcType=INTEGER}, #{ownerType,jdbcType=TINYINT}, #{ownerNo,jdbcType=VARCHAR}, 
      #{haveLandcard,jdbcType=BIT}, #{landcardNo,jdbcType=VARCHAR}, #{mangementTax,jdbcType=BIT}, 
      #{ownerTax,jdbcType=BIT}, #{tax,jdbcType=VARCHAR}, #{tradeRemarkExplain,jdbcType=VARCHAR}, 
      #{rentDealMoney,jdbcType=NUMERIC}, #{rentPriceUnit,jdbcType=TINYINT}, #{rentDate,jdbcType=VARCHAR}, 
      #{rentOverDate,jdbcType=VARCHAR}, #{rentPayMethod,jdbcType=TINYINT}, #{rentPaySpace,jdbcType=VARCHAR}, 
      #{rentPayEarly,jdbcType=VARCHAR}, #{rentDepositPay,jdbcType=NUMERIC}, #{rentOtherMoney,jdbcType=NUMERIC}, 
      #{goodsdetailed,jdbcType=VARCHAR}, #{waterlightexpenses,jdbcType=VARCHAR}, #{systemRecordTime,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=INTEGER}, #{creatorUid,jdbcType=INTEGER}, #{updateUid,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{custDeptname,jdbcType=VARCHAR}, #{custUsername,jdbcType=VARCHAR}, 
      #{custUserUid,jdbcType=INTEGER}, #{custDeptId,jdbcType=INTEGER}, #{custPlate,jdbcType=TINYINT}, 
      #{houseDeptname,jdbcType=VARCHAR}, #{houseUsername,jdbcType=VARCHAR}, #{houseUserUid,jdbcType=INTEGER}, 
      #{houseDeptId,jdbcType=INTEGER}, #{housePlate,jdbcType=TINYINT}, #{buildId,jdbcType=INTEGER}, 
      #{buildName,jdbcType=VARCHAR}, #{houseaddress,jdbcType=VARCHAR}, #{realTotalprice,jdbcType=NUMERIC}, 
      #{dealDeptId,jdbcType=INTEGER}, #{houseDuetimeTaskId,jdbcType=INTEGER}, #{custDuetimeTaskId,jdbcType=INTEGER}, 
      #{modelId,jdbcType=INTEGER}, #{contractNo,jdbcType=VARCHAR}, #{runstepId,jdbcType=INTEGER}, 
      #{runstepName,jdbcType=VARCHAR}, #{timelimitdate,jdbcType=VARCHAR}, #{executor,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{completeUser,jdbcType=INTEGER}, #{completeDate,jdbcType=VARCHAR}, 
      #{modelName,jdbcType=VARCHAR}, #{dealUserName,jdbcType=VARCHAR}, #{completeUserName,jdbcType=VARCHAR}, 
      #{creatorName,jdbcType=VARCHAR}, #{area,jdbcType=NUMERIC}, #{fitment,jdbcType=TINYINT}, 
      #{modelNo,jdbcType=SMALLINT}, #{stepNo,jdbcType=SMALLINT}, #{updateUsername,jdbcType=VARCHAR}, 
      #{lockFlag,jdbcType=TINYINT}, #{dealInfoType,jdbcType=TINYINT}, #{isbyhand,jdbcType=TINYINT}, 
      #{regId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{signUserId,jdbcType=INTEGER}, 
      #{signUserName,jdbcType=VARCHAR}, #{signManagerId,jdbcType=INTEGER}, #{signManagerName,jdbcType=VARCHAR}, 
      #{signUserDeptId,jdbcType=INTEGER}, #{signUserDeptName,jdbcType=VARCHAR}, #{signManagerDeptId,jdbcType=INTEGER}, 
      #{signManagerDeptName,jdbcType=VARCHAR}, #{financStatusId,jdbcType=INTEGER}, #{financName,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, #{signDate,jdbcType=VARCHAR}, 
      #{transferDate,jdbcType=VARCHAR}, #{evidenceDate,jdbcType=VARCHAR}, #{buyOwnerNameBak,jdbcType=VARCHAR}, 
      #{sellOwnerNameBak,jdbcType=VARCHAR}, #{buyIdCardBak,jdbcType=VARCHAR}, #{sellIdCardBak,jdbcType=VARCHAR}, 
      #{salePriceUnit,jdbcType=TINYINT}, #{rentCycle,jdbcType=VARCHAR}, #{codeId,jdbcType=INTEGER}, 
      #{processStatus,jdbcType=TINYINT}, #{buyCustomerPhone,jdbcType=VARCHAR}, #{buyCustomerPhoneencode,jdbcType=VARCHAR}, 
      #{sellOwnerPhone,jdbcType=VARCHAR}, #{sellOwnerPhoneencode,jdbcType=VARCHAR}, #{sellOwnerPhoneBak,jdbcType=VARCHAR}, 
      #{buyCustomerPhoneBak,jdbcType=VARCHAR}, #{contractId,jdbcType=INTEGER}, #{paytypeId,jdbcType=INTEGER}, 
      #{paytypeName,jdbcType=VARCHAR}, #{youAduitStatus,jdbcType=TINYINT}, #{dealAuditStatus,jdbcType=TINYINT}, 
      #{commercialLoanDate,jdbcType=TIMESTAMP}, #{commercialLenderDate,jdbcType=TIMESTAMP}, 
      #{commercialLenderLimit,jdbcType=VARCHAR}, #{commercialLenderBank,jdbcType=VARCHAR}, 
      #{providentLoanDate,jdbcType=TIMESTAMP}, #{providentLenderDate,jdbcType=TIMESTAMP}, 
      #{providentLenderLimit,jdbcType=VARCHAR}, #{providentLenderBank,jdbcType=VARCHAR}, 
      #{totalNeedIncome,jdbcType=NUMERIC}, #{totalRealIncome,jdbcType=NUMERIC}, #{totalNeedPerformance,jdbcType=NUMERIC}, 
      #{totalRealPerformance,jdbcType=NUMERIC}, #{needAduitStatus,jdbcType=TINYINT}, 
      #{realAduitStatus,jdbcType=TINYINT}, #{intelligentSearch,jdbcType=VARCHAR}, #{providentLoanMoney,jdbcType=NUMERIC}, 
      #{commercialLoanMoney,jdbcType=NUMERIC}, #{taxesAuditStatus,jdbcType=TINYINT}, 
      #{taxesAuditName,jdbcType=VARCHAR}, #{taxesAuditUser,jdbcType=INTEGER}, #{taxesAuditTime,jdbcType=TIMESTAMP}, 
      #{dealAuditor,jdbcType=VARCHAR}, #{youAduitOpinion,jdbcType=VARCHAR}, #{youDealFlag,jdbcType=TINYINT}, 
      #{subAduitTime,jdbcType=TIMESTAMP}, #{youjiaDeal,jdbcType=TINYINT}, #{buildRegName,jdbcType=VARCHAR}, 
      #{buildRegId,jdbcType=INTEGER}, #{processEndTime,jdbcType=TIMESTAMP}, #{youAduitStatusProtocol,jdbcType=TINYINT}, 
      #{protocolId,jdbcType=INTEGER}, #{transferNeedPerformance,jdbcType=NUMERIC}, #{transferRealPerformance,jdbcType=NUMERIC}, 
      #{secondhandNeedPerformance,jdbcType=NUMERIC}, #{secondhandRealPerformance,jdbcType=NUMERIC}, 
      #{newhouseNeedPerformance,jdbcType=NUMERIC}, #{newhouseRealPerformance,jdbcType=NUMERIC}, 
      #{leaseNeedPerformance,jdbcType=NUMERIC}, #{leaseRealPerformance,jdbcType=NUMERIC}, 
      #{financeNeedPerformance,jdbcType=NUMERIC}, #{financeRealPerformance,jdbcType=NUMERIC}, 
      #{commissionRate,jdbcType=NUMERIC}, #{standardCommission,jdbcType=NUMERIC}, #{codeType,jdbcType=TINYINT}, 
      #{sectionId,jdbcType=INTEGER}, #{sellOwnerCommsion,jdbcType=NUMERIC}, #{buyCustomerCommsion,jdbcType=NUMERIC}, 
      #{planningUse,jdbcType=VARCHAR}, #{landcardType,jdbcType=TINYINT}, #{mortgageType,jdbcType=TINYINT}, 
      #{leaseType,jdbcType=TINYINT}, #{sellerProxyName,jdbcType=VARCHAR}, #{sellerProxyIdcard,jdbcType=VARCHAR}, 
      #{sellerProxyPhone,jdbcType=VARCHAR}, #{sellerProxyPhoneencode,jdbcType=VARCHAR}, 
      #{buyerProxyName,jdbcType=VARCHAR}, #{buyerProxyIdcard,jdbcType=VARCHAR}, #{buyerProxyPhone,jdbcType=VARCHAR}, 
      #{buyerProxyPhoneencode,jdbcType=VARCHAR}, #{houseHoldElectrical,jdbcType=TINYINT}, 
      #{buyerTaxFee,jdbcType=VARCHAR}, #{sellerTaxFee,jdbcType=VARCHAR}, #{depositPayTime,jdbcType=TIMESTAMP}, 
      #{depositPayType,jdbcType=TINYINT}, #{depositPayOther,jdbcType=VARCHAR}, #{downPaymentsPayType1,jdbcType=TINYINT}, 
      #{downPaymentsPayTime1,jdbcType=VARCHAR}, #{housePriceLastPayType1,jdbcType=TINYINT}, 
      #{housePriceLastPayTime1,jdbcType=VARCHAR}, #{loanTimeLength,jdbcType=VARCHAR}, 
      #{loanAgency,jdbcType=VARCHAR}, #{noPassSloutionType,jdbcType=TINYINT}, #{applicationRepaymentDays,jdbcType=INTEGER}, 
      #{applicationRepaymentOther,jdbcType=VARCHAR}, #{ownershipObligatiionNumber,jdbcType=VARCHAR}, 
      #{houseProperty,jdbcType=VARCHAR}, #{sellerBankType,jdbcType=VARCHAR}, #{sellerBankUserName,jdbcType=VARCHAR}, 
      #{sellerBankAccount,jdbcType=VARCHAR}, #{buyerBankType,jdbcType=VARCHAR}, #{buyerBankUserName,jdbcType=VARCHAR}, 
      #{buyerBankAccount,jdbcType=VARCHAR}, #{downPaymentsPayType2,jdbcType=TINYINT}, 
      #{downPaymentsPayTime2,jdbcType=VARCHAR}, #{downPaymentsPayType3,jdbcType=TINYINT}, 
      #{downPaymentsPayTime3,jdbcType=VARCHAR}, #{housePriceLastPayType2,jdbcType=TINYINT}, 
      #{housePriceLastPayTime2,jdbcType=VARCHAR}, #{housePriceLastPayType3,jdbcType=TINYINT}, 
      #{housePriceLastPayTime3,jdbcType=VARCHAR}, #{transferDateStr,jdbcType=VARCHAR}, 
      #{transferDateDaysPickup,jdbcType=INTEGER}, #{transferDateDaysRegist,jdbcType=INTEGER}, 
      #{waterLeakage,jdbcType=TINYINT}, #{waterLeakagePosition,jdbcType=VARCHAR}, #{waterLeakageConsult,jdbcType=TINYINT}, 
      #{waterLeakageConsultBearParty,jdbcType=TINYINT}, #{deathEvent,jdbcType=VARCHAR}, 
      #{housePeeling,jdbcType=TINYINT}, #{housePeelingPosition,jdbcType=VARCHAR}, #{submitLoanInfoFeeDays,jdbcType=VARCHAR}, 
      #{downPaymentsPayParty1,jdbcType=TINYINT}, #{downPaymentsPayParty2,jdbcType=TINYINT}, 
      #{downPaymentsPayParty3,jdbcType=TINYINT}, #{downPaymentsPayBank,jdbcType=VARCHAR}, 
      #{downPaymentsPayAccountName,jdbcType=VARCHAR}, #{downPaymentsPayAccountNo,jdbcType=VARCHAR}, 
      #{downPaymentsThirdParty,jdbcType=VARCHAR}, #{downPaymentsRemainingFirstPaytime,jdbcType=VARCHAR}, 
      #{housePeelingBearParty,jdbcType=TINYINT}, #{downPaymentsRemainingFirstAmount,jdbcType=VARCHAR}, 
      #{housePriceLastPayAmount3,jdbcType=VARCHAR}, #{housePriceLastPayAmount2,jdbcType=VARCHAR}, 
      #{downPaymentsPayAmount3,jdbcType=VARCHAR}, #{downPaymentsPayAmount2,jdbcType=VARCHAR}, 
      #{noPassSloutionAmount,jdbcType=VARCHAR}, #{housePriceLastPayAmount1,jdbcType=VARCHAR}, 
      #{downPaymentsPayAmount1,jdbcType=VARCHAR}, #{housePriceLastAmount,jdbcType=VARCHAR}, 
      #{downPaymentsAmount,jdbcType=VARCHAR}, #{depositAmount,jdbcType=VARCHAR}, #{mortgageAmount,jdbcType=VARCHAR}, 
      #{signUserArchive,jdbcType=INTEGER}, #{buyIdCardType,jdbcType=INTEGER}, #{sellIdCardType,jdbcType=INTEGER}, 
      #{sellIdCardBakType,jdbcType=INTEGER}, #{buyIdCardBakType,jdbcType=INTEGER}, #{sellerProxyIdcardType,jdbcType=INTEGER}, 
      #{buyerProxyIdcardType,jdbcType=INTEGER}, #{entrustBank,jdbcType=VARCHAR}, #{entrustMoney,jdbcType=NUMERIC}, 
      #{firstTrialCompleteDate,jdbcType=VARCHAR}, #{recheckCompleteDate,jdbcType=VARCHAR}, 
      #{invalidCompleteDate,jdbcType=VARCHAR}, #{dealAuditStatusBefore,jdbcType=TINYINT}, 
      #{ssqContractId,jdbcType=VARCHAR}, #{sellOwnerWxUserId,jdbcType=VARCHAR}, #{sellOwnerWxOpenId,jdbcType=VARCHAR}, 
      #{buyOwnerWxUserId,jdbcType=VARCHAR}, #{buyOwnerWxOpenId,jdbcType=VARCHAR}, #{signType,jdbcType=TINYINT}, 
      #{signSiteDept,jdbcType=INTEGER}, #{signSiteGr,jdbcType=INTEGER}, #{introducerId,jdbcType=INTEGER}, 
      #{adultPromotionId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunDeal">
    <!--@mbggenerated-->
    <selectKey keyProperty="dealId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_DEAL_DEAL_ID
    </selectKey>
    insert into FUN_DEAL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      DEAL_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="agreementNo != null">
        AGREEMENT_NO,
      </if>
      <if test="creatorDate != null">
        CREATOR_DATE,
      </if>
      <if test="dealType != null">
        DEAL_TYPE,
      </if>
      <if test="dealStatus != null">
        DEAL_STATUS,
      </if>
      <if test="dealUserId != null">
        DEAL_USER_ID,
      </if>
      <if test="dealComplete != null">
        DEAL_COMPLETE,
      </if>
      <if test="dealVerifyTime != null">
        DEAL_VERIFY_TIME,
      </if>
      <if test="dealBuyStyle != null">
        DEAL_BUY_STYLE,
      </if>
      <if test="dealSellStyle != null">
        DEAL_SELL_STYLE,
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE,
      </if>
      <if test="dealCustomerId != null">
        DEAL_CUSTOMER_ID,
      </if>
      <if test="dealCustomerNo != null">
        DEAL_CUSTOMER_NO,
      </if>
      <if test="dealHouseId != null">
        DEAL_HOUSE_ID,
      </if>
      <if test="dealHouseNo != null">
        DEAL_HOUSE_NO,
      </if>
      <if test="sellAddress != null">
        SELL_ADDRESS,
      </if>
      <if test="buyCustinfo != null">
        BUY_CUSTINFO,
      </if>
      <if test="sellHezuoCompname != null">
        SELL_HEZUO_COMPNAME,
      </if>
      <if test="buyHezuoCompname != null">
        BUY_HEZUO_COMPNAME,
      </if>
      <if test="buyContactuser != null">
        BUY_CONTACTUSER,
      </if>
      <if test="sellContactuser != null">
        SELL_CONTACTUSER,
      </if>
      <if test="buyOwnerName != null">
        BUY_OWNER_NAME,
      </if>
      <if test="sellOwnerName != null">
        SELL_OWNER_NAME,
      </if>
      <if test="buyCallPhone != null">
        BUY_CALL_PHONE,
      </if>
      <if test="sellCallPhone != null">
        SELL_CALL_PHONE,
      </if>
      <if test="buyIdCard != null">
        BUY_ID_CARD,
      </if>
      <if test="sellIdCard != null">
        SELL_ID_CARD,
      </if>
      <if test="buyPaymoney != null">
        BUY_PAYMONEY,
      </if>
      <if test="sellPaymoney != null">
        SELL_PAYMONEY,
      </if>
      <if test="otherPaymoney != null">
        OTHER_PAYMONEY,
      </if>
      <if test="gainMoney != null">
        GAIN_MONEY,
      </if>
      <if test="realBuyPaymoney != null">
        REAL_BUY_PAYMONEY,
      </if>
      <if test="realSellPaymoney != null">
        REAL_SELL_PAYMONEY,
      </if>
      <if test="realOtherPaymoney != null">
        REAL_OTHER_PAYMONEY,
      </if>
      <if test="realPaymoney != null">
        REAL_PAYMONEY,
      </if>
      <if test="buyPriceMoney != null">
        BUY_PRICE_MONEY,
      </if>
      <if test="buyMortgageType != null">
        BUY_MORTGAGE_TYPE,
      </if>
      <if test="sellDealMoney != null">
        SELL_DEAL_MONEY,
      </if>
      <if test="sellIshaveLoan != null">
        SELL_ISHAVE_LOAN,
      </if>
      <if test="sellLoanMoney != null">
        SELL_LOAN_MONEY,
      </if>
      <if test="sellReturnLoan != null">
        SELL_RETURN_LOAN,
      </if>
      <if test="ownerStyle != null">
        OWNER_STYLE,
      </if>
      <if test="ownerType != null">
        OWNER_TYPE,
      </if>
      <if test="ownerNo != null">
        OWNER_NO,
      </if>
      <if test="haveLandcard != null">
        HAVE_LANDCARD,
      </if>
      <if test="landcardNo != null">
        LANDCARD_NO,
      </if>
      <if test="mangementTax != null">
        MANGEMENT_TAX,
      </if>
      <if test="ownerTax != null">
        OWNER_TAX,
      </if>
      <if test="tax != null">
        TAX,
      </if>
      <if test="tradeRemarkExplain != null">
        TRADE_REMARK_EXPLAIN,
      </if>
      <if test="rentDealMoney != null">
        RENT_DEAL_MONEY,
      </if>
      <if test="rentPriceUnit != null">
        RENT_PRICE_UNIT,
      </if>
      <if test="rentDate != null">
        RENT_DATE,
      </if>
      <if test="rentOverDate != null">
        RENT_OVER_DATE,
      </if>
      <if test="rentPayMethod != null">
        RENT_PAY_METHOD,
      </if>
      <if test="rentPaySpace != null">
        RENT_PAY_SPACE,
      </if>
      <if test="rentPayEarly != null">
        RENT_PAY_EARLY,
      </if>
      <if test="rentDepositPay != null">
        RENT_DEPOSIT_PAY,
      </if>
      <if test="rentOtherMoney != null">
        RENT_OTHER_MONEY,
      </if>
      <if test="goodsdetailed != null">
        GOODSDETAILED,
      </if>
      <if test="waterlightexpenses != null">
        WATERLIGHTEXPENSES,
      </if>
      <if test="systemRecordTime != null">
        SYSTEM_RECORD_TIME,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="creatorUid != null">
        CREATOR_UID,
      </if>
      <if test="updateUid != null">
        UPDATE_UID,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="custDeptname != null">
        CUST_DEPTNAME,
      </if>
      <if test="custUsername != null">
        CUST_USERNAME,
      </if>
      <if test="custUserUid != null">
        CUST_USER_UID,
      </if>
      <if test="custDeptId != null">
        CUST_DEPT_ID,
      </if>
      <if test="custPlate != null">
        CUST_PLATE,
      </if>
      <if test="houseDeptname != null">
        HOUSE_DEPTNAME,
      </if>
      <if test="houseUsername != null">
        HOUSE_USERNAME,
      </if>
      <if test="houseUserUid != null">
        HOUSE_USER_UID,
      </if>
      <if test="houseDeptId != null">
        HOUSE_DEPT_ID,
      </if>
      <if test="housePlate != null">
        HOUSE_PLATE,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="buildName != null">
        BUILD_NAME,
      </if>
      <if test="houseaddress != null">
        HOUSEADDRESS,
      </if>
      <if test="realTotalprice != null">
        REAL_TOTALPRICE,
      </if>
      <if test="dealDeptId != null">
        DEAL_DEPT_ID,
      </if>
      <if test="houseDuetimeTaskId != null">
        HOUSE_DUETIME_TASK_ID,
      </if>
      <if test="custDuetimeTaskId != null">
        CUST_DUETIME_TASK_ID,
      </if>
      <if test="modelId != null">
        MODEL_ID,
      </if>
      <if test="contractNo != null">
        CONTRACT_NO,
      </if>
      <if test="runstepId != null">
        RUNSTEP_ID,
      </if>
      <if test="runstepName != null">
        RUNSTEP_NAME,
      </if>
      <if test="timelimitdate != null">
        TIMELIMITDATE,
      </if>
      <if test="executor != null">
        EXECUTOR,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="completeUser != null">
        COMPLETE_USER,
      </if>
      <if test="completeDate != null">
        COMPLETE_DATE,
      </if>
      <if test="modelName != null">
        MODEL_NAME,
      </if>
      <if test="dealUserName != null">
        DEAL_USER_NAME,
      </if>
      <if test="completeUserName != null">
        COMPLETE_USER_NAME,
      </if>
      <if test="creatorName != null">
        CREATOR_NAME,
      </if>
      <if test="area != null">
        AREA,
      </if>
      <if test="fitment != null">
        FITMENT,
      </if>
      <if test="modelNo != null">
        MODEL_NO,
      </if>
      <if test="stepNo != null">
        STEP_NO,
      </if>
      <if test="updateUsername != null">
        UPDATE_USERNAME,
      </if>
      <if test="lockFlag != null">
        LOCK_FLAG,
      </if>
      <if test="dealInfoType != null">
        DEAL_INFO_TYPE,
      </if>
      <if test="isbyhand != null">
        ISBYHAND,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="signUserId != null">
        SIGN_USER_ID,
      </if>
      <if test="signUserName != null">
        SIGN_USER_NAME,
      </if>
      <if test="signManagerId != null">
        SIGN_MANAGER_ID,
      </if>
      <if test="signManagerName != null">
        SIGN_MANAGER_NAME,
      </if>
      <if test="signUserDeptId != null">
        SIGN_USER_DEPT_ID,
      </if>
      <if test="signUserDeptName != null">
        SIGN_USER_DEPT_NAME,
      </if>
      <if test="signManagerDeptId != null">
        SIGN_MANAGER_DEPT_ID,
      </if>
      <if test="signManagerDeptName != null">
        SIGN_MANAGER_DEPT_NAME,
      </if>
      <if test="financStatusId != null">
        FINANC_STATUS_ID,
      </if>
      <if test="financName != null">
        FINANC_NAME,
      </if>
      <if test="categoryId != null">
        CATEGORY_ID,
      </if>
      <if test="categoryName != null">
        CATEGORY_NAME,
      </if>
      <if test="signDate != null">
        SIGN_DATE,
      </if>
      <if test="transferDate != null">
        TRANSFER_DATE,
      </if>
      <if test="evidenceDate != null">
        EVIDENCE_DATE,
      </if>
      <if test="buyOwnerNameBak != null">
        BUY_OWNER_NAME_BAK,
      </if>
      <if test="sellOwnerNameBak != null">
        SELL_OWNER_NAME_BAK,
      </if>
      <if test="buyIdCardBak != null">
        BUY_ID_CARD_BAK,
      </if>
      <if test="sellIdCardBak != null">
        SELL_ID_CARD_BAK,
      </if>
      <if test="salePriceUnit != null">
        SALE_PRICE_UNIT,
      </if>
      <if test="rentCycle != null">
        RENT_CYCLE,
      </if>
      <if test="codeId != null">
        CODE_ID,
      </if>
      <if test="processStatus != null">
        PROCESS_STATUS,
      </if>
      <if test="buyCustomerPhone != null">
        BUY_CUSTOMER_PHONE,
      </if>
      <if test="buyCustomerPhoneencode != null">
        BUY_CUSTOMER_PHONEENCODE,
      </if>
      <if test="sellOwnerPhone != null">
        SELL_OWNER_PHONE,
      </if>
      <if test="sellOwnerPhoneencode != null">
        SELL_OWNER_PHONEENCODE,
      </if>
      <if test="sellOwnerPhoneBak != null">
        SELL_OWNER_PHONE_BAK,
      </if>
      <if test="buyCustomerPhoneBak != null">
        BUY_CUSTOMER_PHONE_BAK,
      </if>
      <if test="contractId != null">
        CONTRACT_ID,
      </if>
      <if test="paytypeId != null">
        PAYTYPE_ID,
      </if>
      <if test="paytypeName != null">
        PAYTYPE_NAME,
      </if>
      <if test="youAduitStatus != null">
        YOU_ADUIT_STATUS,
      </if>
      <if test="dealAuditStatus != null">
        DEAL_AUDIT_STATUS,
      </if>
      <if test="commercialLoanDate != null">
        COMMERCIAL_LOAN_DATE,
      </if>
      <if test="commercialLenderDate != null">
        COMMERCIAL_LENDER_DATE,
      </if>
      <if test="commercialLenderLimit != null">
        COMMERCIAL_LENDER_LIMIT,
      </if>
      <if test="commercialLenderBank != null">
        COMMERCIAL_LENDER_BANK,
      </if>
      <if test="providentLoanDate != null">
        PROVIDENT_LOAN_DATE,
      </if>
      <if test="providentLenderDate != null">
        PROVIDENT_LENDER_DATE,
      </if>
      <if test="providentLenderLimit != null">
        PROVIDENT_LENDER_LIMIT,
      </if>
      <if test="providentLenderBank != null">
        PROVIDENT_LENDER_BANK,
      </if>
      <if test="totalNeedIncome != null">
        TOTAL_NEED_INCOME,
      </if>
      <if test="totalRealIncome != null">
        TOTAL_REAL_INCOME,
      </if>
      <if test="totalNeedPerformance != null">
        TOTAL_NEED_PERFORMANCE,
      </if>
      <if test="totalRealPerformance != null">
        TOTAL_REAL_PERFORMANCE,
      </if>
      <if test="needAduitStatus != null">
        NEED_ADUIT_STATUS,
      </if>
      <if test="realAduitStatus != null">
        REAL_ADUIT_STATUS,
      </if>
      <if test="intelligentSearch != null">
        INTELLIGENT_SEARCH,
      </if>
      <if test="providentLoanMoney != null">
        PROVIDENT_LOAN_MONEY,
      </if>
      <if test="commercialLoanMoney != null">
        COMMERCIAL_LOAN_MONEY,
      </if>
      <if test="taxesAuditStatus != null">
        TAXES_AUDIT_STATUS,
      </if>
      <if test="taxesAuditName != null">
        TAXES_AUDIT_NAME,
      </if>
      <if test="taxesAuditUser != null">
        TAXES_AUDIT_USER,
      </if>
      <if test="taxesAuditTime != null">
        TAXES_AUDIT_TIME,
      </if>
      <if test="dealAuditor != null">
        DEAL_AUDITOR,
      </if>
      <if test="youAduitOpinion != null">
        YOU_ADUIT_OPINION,
      </if>
      <if test="youDealFlag != null">
        YOU_DEAL_FLAG,
      </if>
      <if test="subAduitTime != null">
        SUB_ADUIT_TIME,
      </if>
      <if test="youjiaDeal != null">
        YOUJIA_DEAL,
      </if>
      <if test="buildRegName != null">
        BUILD_REG_NAME,
      </if>
      <if test="buildRegId != null">
        BUILD_REG_ID,
      </if>
      <if test="processEndTime != null">
        PROCESS_END_TIME,
      </if>
      <if test="youAduitStatusProtocol != null">
        YOU_ADUIT_STATUS_PROTOCOL,
      </if>
      <if test="protocolId != null">
        PROTOCOL_ID,
      </if>
      <if test="transferNeedPerformance != null">
        TRANSFER_NEED_PERFORMANCE,
      </if>
      <if test="transferRealPerformance != null">
        TRANSFER_REAL_PERFORMANCE,
      </if>
      <if test="secondhandNeedPerformance != null">
        SECONDHAND_NEED_PERFORMANCE,
      </if>
      <if test="secondhandRealPerformance != null">
        SECONDHAND_REAL_PERFORMANCE,
      </if>
      <if test="newhouseNeedPerformance != null">
        NEWHOUSE_NEED_PERFORMANCE,
      </if>
      <if test="newhouseRealPerformance != null">
        NEWHOUSE_REAL_PERFORMANCE,
      </if>
      <if test="leaseNeedPerformance != null">
        LEASE_NEED_PERFORMANCE,
      </if>
      <if test="leaseRealPerformance != null">
        LEASE_REAL_PERFORMANCE,
      </if>
      <if test="financeNeedPerformance != null">
        FINANCE_NEED_PERFORMANCE,
      </if>
      <if test="financeRealPerformance != null">
        FINANCE_REAL_PERFORMANCE,
      </if>
      <if test="commissionRate != null">
        COMMISSION_RATE,
      </if>
      <if test="standardCommission != null">
        STANDARD_COMMISSION,
      </if>
      <if test="codeType != null">
        CODE_TYPE,
      </if>
      <if test="sectionId != null">
        SECTION_ID,
      </if>
      <if test="sellOwnerCommsion != null">
        SELL_OWNER_COMMSION,
      </if>
      <if test="buyCustomerCommsion != null">
        BUY_CUSTOMER_COMMSION,
      </if>
      <if test="planningUse != null">
        PLANNING_USE,
      </if>
      <if test="landcardType != null">
        LANDCARD_TYPE,
      </if>
      <if test="mortgageType != null">
        MORTGAGE_TYPE,
      </if>
      <if test="leaseType != null">
        LEASE_TYPE,
      </if>
      <if test="sellerProxyName != null">
        SELLER_PROXY_NAME,
      </if>
      <if test="sellerProxyIdcard != null">
        SELLER_PROXY_IDCARD,
      </if>
      <if test="sellerProxyPhone != null">
        SELLER_PROXY_PHONE,
      </if>
      <if test="sellerProxyPhoneencode != null">
        SELLER_PROXY_PHONEENCODE,
      </if>
      <if test="buyerProxyName != null">
        BUYER_PROXY_NAME,
      </if>
      <if test="buyerProxyIdcard != null">
        BUYER_PROXY_IDCARD,
      </if>
      <if test="buyerProxyPhone != null">
        BUYER_PROXY_PHONE,
      </if>
      <if test="buyerProxyPhoneencode != null">
        BUYER_PROXY_PHONEENCODE,
      </if>
      <if test="houseHoldElectrical != null">
        HOUSE_HOLD_ELECTRICAL,
      </if>
      <if test="buyerTaxFee != null">
        BUYER_TAX_FEE,
      </if>
      <if test="sellerTaxFee != null">
        SELLER_TAX_FEE,
      </if>
      <if test="depositPayTime != null">
        DEPOSIT_PAY_TIME,
      </if>
      <if test="depositPayType != null">
        DEPOSIT_PAY_TYPE,
      </if>
      <if test="depositPayOther != null">
        DEPOSIT_PAY_OTHER,
      </if>
      <if test="downPaymentsPayType1 != null">
        DOWN_PAYMENTS_PAY_TYPE1,
      </if>
      <if test="downPaymentsPayTime1 != null">
        DOWN_PAYMENTS_PAY_TIME1,
      </if>
      <if test="housePriceLastPayType1 != null">
        HOUSE_PRICE_LAST_PAY_TYPE1,
      </if>
      <if test="housePriceLastPayTime1 != null">
        HOUSE_PRICE_LAST_PAY_TIME1,
      </if>
      <if test="loanTimeLength != null">
        LOAN_TIME_LENGTH,
      </if>
      <if test="loanAgency != null">
        LOAN_AGENCY,
      </if>
      <if test="noPassSloutionType != null">
        NO_PASS_SLOUTION_TYPE,
      </if>
      <if test="applicationRepaymentDays != null">
        APPLICATION_REPAYMENT_DAYS,
      </if>
      <if test="applicationRepaymentOther != null">
        APPLICATION_REPAYMENT_OTHER,
      </if>
      <if test="ownershipObligatiionNumber != null">
        OWNERSHIP_OBLIGATIION_NUMBER,
      </if>
      <if test="houseProperty != null">
        HOUSE_PROPERTY,
      </if>
      <if test="sellerBankType != null">
        SELLER_BANK_TYPE,
      </if>
      <if test="sellerBankUserName != null">
        SELLER_BANK_USER_NAME,
      </if>
      <if test="sellerBankAccount != null">
        SELLER_BANK_ACCOUNT,
      </if>
      <if test="buyerBankType != null">
        BUYER_BANK_TYPE,
      </if>
      <if test="buyerBankUserName != null">
        BUYER_BANK_USER_NAME,
      </if>
      <if test="buyerBankAccount != null">
        BUYER_BANK_ACCOUNT,
      </if>
      <if test="downPaymentsPayType2 != null">
        DOWN_PAYMENTS_PAY_TYPE2,
      </if>
      <if test="downPaymentsPayTime2 != null">
        DOWN_PAYMENTS_PAY_TIME2,
      </if>
      <if test="downPaymentsPayType3 != null">
        DOWN_PAYMENTS_PAY_TYPE3,
      </if>
      <if test="downPaymentsPayTime3 != null">
        DOWN_PAYMENTS_PAY_TIME3,
      </if>
      <if test="housePriceLastPayType2 != null">
        HOUSE_PRICE_LAST_PAY_TYPE2,
      </if>
      <if test="housePriceLastPayTime2 != null">
        HOUSE_PRICE_LAST_PAY_TIME2,
      </if>
      <if test="housePriceLastPayType3 != null">
        HOUSE_PRICE_LAST_PAY_TYPE3,
      </if>
      <if test="housePriceLastPayTime3 != null">
        HOUSE_PRICE_LAST_PAY_TIME3,
      </if>
      <if test="transferDateStr != null">
        TRANSFER_DATE_STR,
      </if>
      <if test="transferDateDaysPickup != null">
        TRANSFER_DATE_DAYS_PICKUP,
      </if>
      <if test="transferDateDaysRegist != null">
        TRANSFER_DATE_DAYS_REGIST,
      </if>
      <if test="waterLeakage != null">
        WATER_LEAKAGE,
      </if>
      <if test="waterLeakagePosition != null">
        WATER_LEAKAGE_POSITION,
      </if>
      <if test="waterLeakageConsult != null">
        WATER_LEAKAGE_CONSULT,
      </if>
      <if test="waterLeakageConsultBearParty != null">
        WATER_LEAKAGE_CONSULT_BEAR_PARTY,
      </if>
      <if test="deathEvent != null">
        DEATH_EVENT,
      </if>
      <if test="housePeeling != null">
        HOUSE_PEELING,
      </if>
      <if test="housePeelingPosition != null">
        HOUSE_PEELING_POSITION,
      </if>
      <if test="submitLoanInfoFeeDays != null">
        SUBMIT_LOAN_INFO_FEE_DAYS,
      </if>
      <if test="downPaymentsPayParty1 != null">
        DOWN_PAYMENTS_PAY_PARTY1,
      </if>
      <if test="downPaymentsPayParty2 != null">
        DOWN_PAYMENTS_PAY_PARTY2,
      </if>
      <if test="downPaymentsPayParty3 != null">
        DOWN_PAYMENTS_PAY_PARTY3,
      </if>
      <if test="downPaymentsPayBank != null">
        DOWN_PAYMENTS_PAY_BANK,
      </if>
      <if test="downPaymentsPayAccountName != null">
        DOWN_PAYMENTS_PAY_ACCOUNT_NAME,
      </if>
      <if test="downPaymentsPayAccountNo != null">
        DOWN_PAYMENTS_PAY_ACCOUNT_NO,
      </if>
      <if test="downPaymentsThirdParty != null">
        DOWN_PAYMENTS_THIRD_PARTY,
      </if>
      <if test="downPaymentsRemainingFirstPaytime != null">
        DOWN_PAYMENTS_REMAINING_FIRST_PAYTIME,
      </if>
      <if test="housePeelingBearParty != null">
        HOUSE_PEELING_BEAR_PARTY,
      </if>
      <if test="downPaymentsRemainingFirstAmount != null">
        DOWN_PAYMENTS_REMAINING_FIRST_AMOUNT,
      </if>
      <if test="housePriceLastPayAmount3 != null">
        HOUSE_PRICE_LAST_PAY_AMOUNT3,
      </if>
      <if test="housePriceLastPayAmount2 != null">
        HOUSE_PRICE_LAST_PAY_AMOUNT2,
      </if>
      <if test="downPaymentsPayAmount3 != null">
        DOWN_PAYMENTS_PAY_AMOUNT3,
      </if>
      <if test="downPaymentsPayAmount2 != null">
        DOWN_PAYMENTS_PAY_AMOUNT2,
      </if>
      <if test="noPassSloutionAmount != null">
        NO_PASS_SLOUTION_AMOUNT,
      </if>
      <if test="housePriceLastPayAmount1 != null">
        HOUSE_PRICE_LAST_PAY_AMOUNT1,
      </if>
      <if test="downPaymentsPayAmount1 != null">
        DOWN_PAYMENTS_PAY_AMOUNT1,
      </if>
      <if test="housePriceLastAmount != null">
        HOUSE_PRICE_LAST_AMOUNT,
      </if>
      <if test="downPaymentsAmount != null">
        DOWN_PAYMENTS_AMOUNT,
      </if>
      <if test="depositAmount != null">
        DEPOSIT_AMOUNT,
      </if>
      <if test="mortgageAmount != null">
        MORTGAGE_AMOUNT,
      </if>
      <if test="signUserArchive != null">
        SIGN_USER_ARCHIVE,
      </if>
      <if test="buyIdCardType != null">
        BUY_ID_CARD_TYPE,
      </if>
      <if test="sellIdCardType != null">
        SELL_ID_CARD_TYPE,
      </if>
      <if test="sellIdCardBakType != null">
        SELL_ID_CARD_BAK_TYPE,
      </if>
      <if test="buyIdCardBakType != null">
        BUY_ID_CARD_BAK_TYPE,
      </if>
      <if test="sellerProxyIdcardType != null">
        SELLER_PROXY_IDCARD_TYPE,
      </if>
      <if test="buyerProxyIdcardType != null">
        BUYER_PROXY_IDCARD_TYPE,
      </if>
      <if test="entrustBank != null">
        ENTRUST_BANK,
      </if>
      <if test="entrustMoney != null">
        ENTRUST_MONEY,
      </if>
      <if test="firstTrialCompleteDate != null">
        FIRST_TRIAL_COMPLETE_DATE,
      </if>
      <if test="recheckCompleteDate != null">
        RECHECK_COMPLETE_DATE,
      </if>
      <if test="invalidCompleteDate != null">
        INVALID_COMPLETE_DATE,
      </if>
      <if test="dealAuditStatusBefore != null">
        DEAL_AUDIT_STATUS_BEFORE,
      </if>
      <if test="ssqContractId != null">
        SSQ_CONTRACT_ID,
      </if>
      <if test="sellOwnerWxUserId != null">
        SELL_OWNER_WX_USER_ID,
      </if>
      <if test="sellOwnerWxOpenId != null">
        SELL_OWNER_WX_OPEN_ID,
      </if>
      <if test="buyOwnerWxUserId != null">
        BUY_OWNER_WX_USER_ID,
      </if>
      <if test="buyOwnerWxOpenId != null">
        BUY_OWNER_WX_OPEN_ID,
      </if>
      <if test="signType != null">
        SIGN_TYPE,
      </if>
      <if test="signSiteDept != null">
        SIGN_SITE_DEPT,
      </if>
      <if test="signSiteGr != null">
        SIGN_SITE_GR,
      </if>
      <if test="introducerId != null">
        INTRODUCER_ID,
      </if>
      <if test="adultPromotionId != null">
        ADULT_PROMOTION_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{dealId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="agreementNo != null">
        #{agreementNo,jdbcType=VARCHAR},
      </if>
      <if test="creatorDate != null">
        #{creatorDate,jdbcType=VARCHAR},
      </if>
      <if test="dealType != null">
        #{dealType,jdbcType=TINYINT},
      </if>
      <if test="dealStatus != null">
        #{dealStatus,jdbcType=TINYINT},
      </if>
      <if test="dealUserId != null">
        #{dealUserId,jdbcType=INTEGER},
      </if>
      <if test="dealComplete != null">
        #{dealComplete,jdbcType=TINYINT},
      </if>
      <if test="dealVerifyTime != null">
        #{dealVerifyTime,jdbcType=VARCHAR},
      </if>
      <if test="dealBuyStyle != null">
        #{dealBuyStyle,jdbcType=TINYINT},
      </if>
      <if test="dealSellStyle != null">
        #{dealSellStyle,jdbcType=TINYINT},
      </if>
      <if test="houseUseage != null">
        #{houseUseage,jdbcType=TINYINT},
      </if>
      <if test="dealCustomerId != null">
        #{dealCustomerId,jdbcType=INTEGER},
      </if>
      <if test="dealCustomerNo != null">
        #{dealCustomerNo,jdbcType=VARCHAR},
      </if>
      <if test="dealHouseId != null">
        #{dealHouseId,jdbcType=INTEGER},
      </if>
      <if test="dealHouseNo != null">
        #{dealHouseNo,jdbcType=VARCHAR},
      </if>
      <if test="sellAddress != null">
        #{sellAddress,jdbcType=VARCHAR},
      </if>
      <if test="buyCustinfo != null">
        #{buyCustinfo,jdbcType=VARCHAR},
      </if>
      <if test="sellHezuoCompname != null">
        #{sellHezuoCompname,jdbcType=VARCHAR},
      </if>
      <if test="buyHezuoCompname != null">
        #{buyHezuoCompname,jdbcType=VARCHAR},
      </if>
      <if test="buyContactuser != null">
        #{buyContactuser,jdbcType=VARCHAR},
      </if>
      <if test="sellContactuser != null">
        #{sellContactuser,jdbcType=VARCHAR},
      </if>
      <if test="buyOwnerName != null">
        #{buyOwnerName,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerName != null">
        #{sellOwnerName,jdbcType=VARCHAR},
      </if>
      <if test="buyCallPhone != null">
        #{buyCallPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellCallPhone != null">
        #{sellCallPhone,jdbcType=VARCHAR},
      </if>
      <if test="buyIdCard != null">
        #{buyIdCard,jdbcType=VARCHAR},
      </if>
      <if test="sellIdCard != null">
        #{sellIdCard,jdbcType=VARCHAR},
      </if>
      <if test="buyPaymoney != null">
        #{buyPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="sellPaymoney != null">
        #{sellPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="otherPaymoney != null">
        #{otherPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="gainMoney != null">
        #{gainMoney,jdbcType=NUMERIC},
      </if>
      <if test="realBuyPaymoney != null">
        #{realBuyPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="realSellPaymoney != null">
        #{realSellPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="realOtherPaymoney != null">
        #{realOtherPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="realPaymoney != null">
        #{realPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="buyPriceMoney != null">
        #{buyPriceMoney,jdbcType=VARCHAR},
      </if>
      <if test="buyMortgageType != null">
        #{buyMortgageType,jdbcType=TINYINT},
      </if>
      <if test="sellDealMoney != null">
        #{sellDealMoney,jdbcType=NUMERIC},
      </if>
      <if test="sellIshaveLoan != null">
        #{sellIshaveLoan,jdbcType=BIT},
      </if>
      <if test="sellLoanMoney != null">
        #{sellLoanMoney,jdbcType=NUMERIC},
      </if>
      <if test="sellReturnLoan != null">
        #{sellReturnLoan,jdbcType=BIT},
      </if>
      <if test="ownerStyle != null">
        #{ownerStyle,jdbcType=INTEGER},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=TINYINT},
      </if>
      <if test="ownerNo != null">
        #{ownerNo,jdbcType=VARCHAR},
      </if>
      <if test="haveLandcard != null">
        #{haveLandcard,jdbcType=BIT},
      </if>
      <if test="landcardNo != null">
        #{landcardNo,jdbcType=VARCHAR},
      </if>
      <if test="mangementTax != null">
        #{mangementTax,jdbcType=BIT},
      </if>
      <if test="ownerTax != null">
        #{ownerTax,jdbcType=BIT},
      </if>
      <if test="tax != null">
        #{tax,jdbcType=VARCHAR},
      </if>
      <if test="tradeRemarkExplain != null">
        #{tradeRemarkExplain,jdbcType=VARCHAR},
      </if>
      <if test="rentDealMoney != null">
        #{rentDealMoney,jdbcType=NUMERIC},
      </if>
      <if test="rentPriceUnit != null">
        #{rentPriceUnit,jdbcType=TINYINT},
      </if>
      <if test="rentDate != null">
        #{rentDate,jdbcType=VARCHAR},
      </if>
      <if test="rentOverDate != null">
        #{rentOverDate,jdbcType=VARCHAR},
      </if>
      <if test="rentPayMethod != null">
        #{rentPayMethod,jdbcType=TINYINT},
      </if>
      <if test="rentPaySpace != null">
        #{rentPaySpace,jdbcType=VARCHAR},
      </if>
      <if test="rentPayEarly != null">
        #{rentPayEarly,jdbcType=VARCHAR},
      </if>
      <if test="rentDepositPay != null">
        #{rentDepositPay,jdbcType=NUMERIC},
      </if>
      <if test="rentOtherMoney != null">
        #{rentOtherMoney,jdbcType=NUMERIC},
      </if>
      <if test="goodsdetailed != null">
        #{goodsdetailed,jdbcType=VARCHAR},
      </if>
      <if test="waterlightexpenses != null">
        #{waterlightexpenses,jdbcType=VARCHAR},
      </if>
      <if test="systemRecordTime != null">
        #{systemRecordTime,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="creatorUid != null">
        #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="custDeptname != null">
        #{custDeptname,jdbcType=VARCHAR},
      </if>
      <if test="custUsername != null">
        #{custUsername,jdbcType=VARCHAR},
      </if>
      <if test="custUserUid != null">
        #{custUserUid,jdbcType=INTEGER},
      </if>
      <if test="custDeptId != null">
        #{custDeptId,jdbcType=INTEGER},
      </if>
      <if test="custPlate != null">
        #{custPlate,jdbcType=TINYINT},
      </if>
      <if test="houseDeptname != null">
        #{houseDeptname,jdbcType=VARCHAR},
      </if>
      <if test="houseUsername != null">
        #{houseUsername,jdbcType=VARCHAR},
      </if>
      <if test="houseUserUid != null">
        #{houseUserUid,jdbcType=INTEGER},
      </if>
      <if test="houseDeptId != null">
        #{houseDeptId,jdbcType=INTEGER},
      </if>
      <if test="housePlate != null">
        #{housePlate,jdbcType=TINYINT},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="houseaddress != null">
        #{houseaddress,jdbcType=VARCHAR},
      </if>
      <if test="realTotalprice != null">
        #{realTotalprice,jdbcType=NUMERIC},
      </if>
      <if test="dealDeptId != null">
        #{dealDeptId,jdbcType=INTEGER},
      </if>
      <if test="houseDuetimeTaskId != null">
        #{houseDuetimeTaskId,jdbcType=INTEGER},
      </if>
      <if test="custDuetimeTaskId != null">
        #{custDuetimeTaskId,jdbcType=INTEGER},
      </if>
      <if test="modelId != null">
        #{modelId,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="runstepId != null">
        #{runstepId,jdbcType=INTEGER},
      </if>
      <if test="runstepName != null">
        #{runstepName,jdbcType=VARCHAR},
      </if>
      <if test="timelimitdate != null">
        #{timelimitdate,jdbcType=VARCHAR},
      </if>
      <if test="executor != null">
        #{executor,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="completeUser != null">
        #{completeUser,jdbcType=INTEGER},
      </if>
      <if test="completeDate != null">
        #{completeDate,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null">
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="dealUserName != null">
        #{dealUserName,jdbcType=VARCHAR},
      </if>
      <if test="completeUserName != null">
        #{completeUserName,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null">
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=NUMERIC},
      </if>
      <if test="fitment != null">
        #{fitment,jdbcType=TINYINT},
      </if>
      <if test="modelNo != null">
        #{modelNo,jdbcType=SMALLINT},
      </if>
      <if test="stepNo != null">
        #{stepNo,jdbcType=SMALLINT},
      </if>
      <if test="updateUsername != null">
        #{updateUsername,jdbcType=VARCHAR},
      </if>
      <if test="lockFlag != null">
        #{lockFlag,jdbcType=TINYINT},
      </if>
      <if test="dealInfoType != null">
        #{dealInfoType,jdbcType=TINYINT},
      </if>
      <if test="isbyhand != null">
        #{isbyhand,jdbcType=TINYINT},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="signUserId != null">
        #{signUserId,jdbcType=INTEGER},
      </if>
      <if test="signUserName != null">
        #{signUserName,jdbcType=VARCHAR},
      </if>
      <if test="signManagerId != null">
        #{signManagerId,jdbcType=INTEGER},
      </if>
      <if test="signManagerName != null">
        #{signManagerName,jdbcType=VARCHAR},
      </if>
      <if test="signUserDeptId != null">
        #{signUserDeptId,jdbcType=INTEGER},
      </if>
      <if test="signUserDeptName != null">
        #{signUserDeptName,jdbcType=VARCHAR},
      </if>
      <if test="signManagerDeptId != null">
        #{signManagerDeptId,jdbcType=INTEGER},
      </if>
      <if test="signManagerDeptName != null">
        #{signManagerDeptName,jdbcType=VARCHAR},
      </if>
      <if test="financStatusId != null">
        #{financStatusId,jdbcType=INTEGER},
      </if>
      <if test="financName != null">
        #{financName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        #{signDate,jdbcType=VARCHAR},
      </if>
      <if test="transferDate != null">
        #{transferDate,jdbcType=VARCHAR},
      </if>
      <if test="evidenceDate != null">
        #{evidenceDate,jdbcType=VARCHAR},
      </if>
      <if test="buyOwnerNameBak != null">
        #{buyOwnerNameBak,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerNameBak != null">
        #{sellOwnerNameBak,jdbcType=VARCHAR},
      </if>
      <if test="buyIdCardBak != null">
        #{buyIdCardBak,jdbcType=VARCHAR},
      </if>
      <if test="sellIdCardBak != null">
        #{sellIdCardBak,jdbcType=VARCHAR},
      </if>
      <if test="salePriceUnit != null">
        #{salePriceUnit,jdbcType=TINYINT},
      </if>
      <if test="rentCycle != null">
        #{rentCycle,jdbcType=VARCHAR},
      </if>
      <if test="codeId != null">
        #{codeId,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null">
        #{processStatus,jdbcType=TINYINT},
      </if>
      <if test="buyCustomerPhone != null">
        #{buyCustomerPhone,jdbcType=VARCHAR},
      </if>
      <if test="buyCustomerPhoneencode != null">
        #{buyCustomerPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerPhone != null">
        #{sellOwnerPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerPhoneencode != null">
        #{sellOwnerPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerPhoneBak != null">
        #{sellOwnerPhoneBak,jdbcType=VARCHAR},
      </if>
      <if test="buyCustomerPhoneBak != null">
        #{buyCustomerPhoneBak,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="paytypeId != null">
        #{paytypeId,jdbcType=INTEGER},
      </if>
      <if test="paytypeName != null">
        #{paytypeName,jdbcType=VARCHAR},
      </if>
      <if test="youAduitStatus != null">
        #{youAduitStatus,jdbcType=TINYINT},
      </if>
      <if test="dealAuditStatus != null">
        #{dealAuditStatus,jdbcType=TINYINT},
      </if>
      <if test="commercialLoanDate != null">
        #{commercialLoanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commercialLenderDate != null">
        #{commercialLenderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commercialLenderLimit != null">
        #{commercialLenderLimit,jdbcType=VARCHAR},
      </if>
      <if test="commercialLenderBank != null">
        #{commercialLenderBank,jdbcType=VARCHAR},
      </if>
      <if test="providentLoanDate != null">
        #{providentLoanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="providentLenderDate != null">
        #{providentLenderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="providentLenderLimit != null">
        #{providentLenderLimit,jdbcType=VARCHAR},
      </if>
      <if test="providentLenderBank != null">
        #{providentLenderBank,jdbcType=VARCHAR},
      </if>
      <if test="totalNeedIncome != null">
        #{totalNeedIncome,jdbcType=NUMERIC},
      </if>
      <if test="totalRealIncome != null">
        #{totalRealIncome,jdbcType=NUMERIC},
      </if>
      <if test="totalNeedPerformance != null">
        #{totalNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="totalRealPerformance != null">
        #{totalRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="needAduitStatus != null">
        #{needAduitStatus,jdbcType=TINYINT},
      </if>
      <if test="realAduitStatus != null">
        #{realAduitStatus,jdbcType=TINYINT},
      </if>
      <if test="intelligentSearch != null">
        #{intelligentSearch,jdbcType=VARCHAR},
      </if>
      <if test="providentLoanMoney != null">
        #{providentLoanMoney,jdbcType=NUMERIC},
      </if>
      <if test="commercialLoanMoney != null">
        #{commercialLoanMoney,jdbcType=NUMERIC},
      </if>
      <if test="taxesAuditStatus != null">
        #{taxesAuditStatus,jdbcType=TINYINT},
      </if>
      <if test="taxesAuditName != null">
        #{taxesAuditName,jdbcType=VARCHAR},
      </if>
      <if test="taxesAuditUser != null">
        #{taxesAuditUser,jdbcType=INTEGER},
      </if>
      <if test="taxesAuditTime != null">
        #{taxesAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealAuditor != null">
        #{dealAuditor,jdbcType=VARCHAR},
      </if>
      <if test="youAduitOpinion != null">
        #{youAduitOpinion,jdbcType=VARCHAR},
      </if>
      <if test="youDealFlag != null">
        #{youDealFlag,jdbcType=TINYINT},
      </if>
      <if test="subAduitTime != null">
        #{subAduitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="youjiaDeal != null">
        #{youjiaDeal,jdbcType=TINYINT},
      </if>
      <if test="buildRegName != null">
        #{buildRegName,jdbcType=VARCHAR},
      </if>
      <if test="buildRegId != null">
        #{buildRegId,jdbcType=INTEGER},
      </if>
      <if test="processEndTime != null">
        #{processEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="youAduitStatusProtocol != null">
        #{youAduitStatusProtocol,jdbcType=TINYINT},
      </if>
      <if test="protocolId != null">
        #{protocolId,jdbcType=INTEGER},
      </if>
      <if test="transferNeedPerformance != null">
        #{transferNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="transferRealPerformance != null">
        #{transferRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="secondhandNeedPerformance != null">
        #{secondhandNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="secondhandRealPerformance != null">
        #{secondhandRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="newhouseNeedPerformance != null">
        #{newhouseNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="newhouseRealPerformance != null">
        #{newhouseRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="leaseNeedPerformance != null">
        #{leaseNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="leaseRealPerformance != null">
        #{leaseRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="financeNeedPerformance != null">
        #{financeNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="financeRealPerformance != null">
        #{financeRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="commissionRate != null">
        #{commissionRate,jdbcType=NUMERIC},
      </if>
      <if test="standardCommission != null">
        #{standardCommission,jdbcType=NUMERIC},
      </if>
      <if test="codeType != null">
        #{codeType,jdbcType=TINYINT},
      </if>
      <if test="sectionId != null">
        #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sellOwnerCommsion != null">
        #{sellOwnerCommsion,jdbcType=NUMERIC},
      </if>
      <if test="buyCustomerCommsion != null">
        #{buyCustomerCommsion,jdbcType=NUMERIC},
      </if>
      <if test="planningUse != null">
        #{planningUse,jdbcType=VARCHAR},
      </if>
      <if test="landcardType != null">
        #{landcardType,jdbcType=TINYINT},
      </if>
      <if test="mortgageType != null">
        #{mortgageType,jdbcType=TINYINT},
      </if>
      <if test="leaseType != null">
        #{leaseType,jdbcType=TINYINT},
      </if>
      <if test="sellerProxyName != null">
        #{sellerProxyName,jdbcType=VARCHAR},
      </if>
      <if test="sellerProxyIdcard != null">
        #{sellerProxyIdcard,jdbcType=VARCHAR},
      </if>
      <if test="sellerProxyPhone != null">
        #{sellerProxyPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellerProxyPhoneencode != null">
        #{sellerProxyPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="buyerProxyName != null">
        #{buyerProxyName,jdbcType=VARCHAR},
      </if>
      <if test="buyerProxyIdcard != null">
        #{buyerProxyIdcard,jdbcType=VARCHAR},
      </if>
      <if test="buyerProxyPhone != null">
        #{buyerProxyPhone,jdbcType=VARCHAR},
      </if>
      <if test="buyerProxyPhoneencode != null">
        #{buyerProxyPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="houseHoldElectrical != null">
        #{houseHoldElectrical,jdbcType=TINYINT},
      </if>
      <if test="buyerTaxFee != null">
        #{buyerTaxFee,jdbcType=VARCHAR},
      </if>
      <if test="sellerTaxFee != null">
        #{sellerTaxFee,jdbcType=VARCHAR},
      </if>
      <if test="depositPayTime != null">
        #{depositPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="depositPayType != null">
        #{depositPayType,jdbcType=TINYINT},
      </if>
      <if test="depositPayOther != null">
        #{depositPayOther,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayType1 != null">
        #{downPaymentsPayType1,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayTime1 != null">
        #{downPaymentsPayTime1,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayType1 != null">
        #{housePriceLastPayType1,jdbcType=TINYINT},
      </if>
      <if test="housePriceLastPayTime1 != null">
        #{housePriceLastPayTime1,jdbcType=VARCHAR},
      </if>
      <if test="loanTimeLength != null">
        #{loanTimeLength,jdbcType=VARCHAR},
      </if>
      <if test="loanAgency != null">
        #{loanAgency,jdbcType=VARCHAR},
      </if>
      <if test="noPassSloutionType != null">
        #{noPassSloutionType,jdbcType=TINYINT},
      </if>
      <if test="applicationRepaymentDays != null">
        #{applicationRepaymentDays,jdbcType=INTEGER},
      </if>
      <if test="applicationRepaymentOther != null">
        #{applicationRepaymentOther,jdbcType=VARCHAR},
      </if>
      <if test="ownershipObligatiionNumber != null">
        #{ownershipObligatiionNumber,jdbcType=VARCHAR},
      </if>
      <if test="houseProperty != null">
        #{houseProperty,jdbcType=VARCHAR},
      </if>
      <if test="sellerBankType != null">
        #{sellerBankType,jdbcType=VARCHAR},
      </if>
      <if test="sellerBankUserName != null">
        #{sellerBankUserName,jdbcType=VARCHAR},
      </if>
      <if test="sellerBankAccount != null">
        #{sellerBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="buyerBankType != null">
        #{buyerBankType,jdbcType=VARCHAR},
      </if>
      <if test="buyerBankUserName != null">
        #{buyerBankUserName,jdbcType=VARCHAR},
      </if>
      <if test="buyerBankAccount != null">
        #{buyerBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayType2 != null">
        #{downPaymentsPayType2,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayTime2 != null">
        #{downPaymentsPayTime2,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayType3 != null">
        #{downPaymentsPayType3,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayTime3 != null">
        #{downPaymentsPayTime3,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayType2 != null">
        #{housePriceLastPayType2,jdbcType=TINYINT},
      </if>
      <if test="housePriceLastPayTime2 != null">
        #{housePriceLastPayTime2,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayType3 != null">
        #{housePriceLastPayType3,jdbcType=TINYINT},
      </if>
      <if test="housePriceLastPayTime3 != null">
        #{housePriceLastPayTime3,jdbcType=VARCHAR},
      </if>
      <if test="transferDateStr != null">
        #{transferDateStr,jdbcType=VARCHAR},
      </if>
      <if test="transferDateDaysPickup != null">
        #{transferDateDaysPickup,jdbcType=INTEGER},
      </if>
      <if test="transferDateDaysRegist != null">
        #{transferDateDaysRegist,jdbcType=INTEGER},
      </if>
      <if test="waterLeakage != null">
        #{waterLeakage,jdbcType=TINYINT},
      </if>
      <if test="waterLeakagePosition != null">
        #{waterLeakagePosition,jdbcType=VARCHAR},
      </if>
      <if test="waterLeakageConsult != null">
        #{waterLeakageConsult,jdbcType=TINYINT},
      </if>
      <if test="waterLeakageConsultBearParty != null">
        #{waterLeakageConsultBearParty,jdbcType=TINYINT},
      </if>
      <if test="deathEvent != null">
        #{deathEvent,jdbcType=VARCHAR},
      </if>
      <if test="housePeeling != null">
        #{housePeeling,jdbcType=TINYINT},
      </if>
      <if test="housePeelingPosition != null">
        #{housePeelingPosition,jdbcType=VARCHAR},
      </if>
      <if test="submitLoanInfoFeeDays != null">
        #{submitLoanInfoFeeDays,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayParty1 != null">
        #{downPaymentsPayParty1,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayParty2 != null">
        #{downPaymentsPayParty2,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayParty3 != null">
        #{downPaymentsPayParty3,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayBank != null">
        #{downPaymentsPayBank,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAccountName != null">
        #{downPaymentsPayAccountName,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAccountNo != null">
        #{downPaymentsPayAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsThirdParty != null">
        #{downPaymentsThirdParty,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsRemainingFirstPaytime != null">
        #{downPaymentsRemainingFirstPaytime,jdbcType=VARCHAR},
      </if>
      <if test="housePeelingBearParty != null">
        #{housePeelingBearParty,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsRemainingFirstAmount != null">
        #{downPaymentsRemainingFirstAmount,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayAmount3 != null">
        #{housePriceLastPayAmount3,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayAmount2 != null">
        #{housePriceLastPayAmount2,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAmount3 != null">
        #{downPaymentsPayAmount3,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAmount2 != null">
        #{downPaymentsPayAmount2,jdbcType=VARCHAR},
      </if>
      <if test="noPassSloutionAmount != null">
        #{noPassSloutionAmount,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayAmount1 != null">
        #{housePriceLastPayAmount1,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAmount1 != null">
        #{downPaymentsPayAmount1,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastAmount != null">
        #{housePriceLastAmount,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsAmount != null">
        #{downPaymentsAmount,jdbcType=VARCHAR},
      </if>
      <if test="depositAmount != null">
        #{depositAmount,jdbcType=VARCHAR},
      </if>
      <if test="mortgageAmount != null">
        #{mortgageAmount,jdbcType=VARCHAR},
      </if>
      <if test="signUserArchive != null">
        #{signUserArchive,jdbcType=INTEGER},
      </if>
      <if test="buyIdCardType != null">
        #{buyIdCardType,jdbcType=INTEGER},
      </if>
      <if test="sellIdCardType != null">
        #{sellIdCardType,jdbcType=INTEGER},
      </if>
      <if test="sellIdCardBakType != null">
        #{sellIdCardBakType,jdbcType=INTEGER},
      </if>
      <if test="buyIdCardBakType != null">
        #{buyIdCardBakType,jdbcType=INTEGER},
      </if>
      <if test="sellerProxyIdcardType != null">
        #{sellerProxyIdcardType,jdbcType=INTEGER},
      </if>
      <if test="buyerProxyIdcardType != null">
        #{buyerProxyIdcardType,jdbcType=INTEGER},
      </if>
      <if test="entrustBank != null">
        #{entrustBank,jdbcType=VARCHAR},
      </if>
      <if test="entrustMoney != null">
        #{entrustMoney,jdbcType=NUMERIC},
      </if>
      <if test="firstTrialCompleteDate != null">
        #{firstTrialCompleteDate,jdbcType=VARCHAR},
      </if>
      <if test="recheckCompleteDate != null">
        #{recheckCompleteDate,jdbcType=VARCHAR},
      </if>
      <if test="invalidCompleteDate != null">
        #{invalidCompleteDate,jdbcType=VARCHAR},
      </if>
      <if test="dealAuditStatusBefore != null">
        #{dealAuditStatusBefore,jdbcType=TINYINT},
      </if>
      <if test="ssqContractId != null">
        #{ssqContractId,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerWxUserId != null">
        #{sellOwnerWxUserId,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerWxOpenId != null">
        #{sellOwnerWxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="buyOwnerWxUserId != null">
        #{buyOwnerWxUserId,jdbcType=VARCHAR},
      </if>
      <if test="buyOwnerWxOpenId != null">
        #{buyOwnerWxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="signType != null">
        #{signType,jdbcType=TINYINT},
      </if>
      <if test="signSiteDept != null">
        #{signSiteDept,jdbcType=INTEGER},
      </if>
      <if test="signSiteGr != null">
        #{signSiteGr,jdbcType=INTEGER},
      </if>
      <if test="introducerId != null">
        #{introducerId,jdbcType=INTEGER},
      </if>
      <if test="adultPromotionId != null">
        #{adultPromotionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunDealExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_DEAL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEAL
    <set>
      <if test="record.dealId != null">
        DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.agreementNo != null">
        AGREEMENT_NO = #{record.agreementNo,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorDate != null">
        CREATOR_DATE = #{record.creatorDate,jdbcType=VARCHAR},
      </if>
      <if test="record.dealType != null">
        DEAL_TYPE = #{record.dealType,jdbcType=TINYINT},
      </if>
      <if test="record.dealStatus != null">
        DEAL_STATUS = #{record.dealStatus,jdbcType=TINYINT},
      </if>
      <if test="record.dealUserId != null">
        DEAL_USER_ID = #{record.dealUserId,jdbcType=INTEGER},
      </if>
      <if test="record.dealComplete != null">
        DEAL_COMPLETE = #{record.dealComplete,jdbcType=TINYINT},
      </if>
      <if test="record.dealVerifyTime != null">
        DEAL_VERIFY_TIME = #{record.dealVerifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.dealBuyStyle != null">
        DEAL_BUY_STYLE = #{record.dealBuyStyle,jdbcType=TINYINT},
      </if>
      <if test="record.dealSellStyle != null">
        DEAL_SELL_STYLE = #{record.dealSellStyle,jdbcType=TINYINT},
      </if>
      <if test="record.houseUseage != null">
        HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      </if>
      <if test="record.dealCustomerId != null">
        DEAL_CUSTOMER_ID = #{record.dealCustomerId,jdbcType=INTEGER},
      </if>
      <if test="record.dealCustomerNo != null">
        DEAL_CUSTOMER_NO = #{record.dealCustomerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.dealHouseId != null">
        DEAL_HOUSE_ID = #{record.dealHouseId,jdbcType=INTEGER},
      </if>
      <if test="record.dealHouseNo != null">
        DEAL_HOUSE_NO = #{record.dealHouseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sellAddress != null">
        SELL_ADDRESS = #{record.sellAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.buyCustinfo != null">
        BUY_CUSTINFO = #{record.buyCustinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.sellHezuoCompname != null">
        SELL_HEZUO_COMPNAME = #{record.sellHezuoCompname,jdbcType=VARCHAR},
      </if>
      <if test="record.buyHezuoCompname != null">
        BUY_HEZUO_COMPNAME = #{record.buyHezuoCompname,jdbcType=VARCHAR},
      </if>
      <if test="record.buyContactuser != null">
        BUY_CONTACTUSER = #{record.buyContactuser,jdbcType=VARCHAR},
      </if>
      <if test="record.sellContactuser != null">
        SELL_CONTACTUSER = #{record.sellContactuser,jdbcType=VARCHAR},
      </if>
      <if test="record.buyOwnerName != null">
        BUY_OWNER_NAME = #{record.buyOwnerName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellOwnerName != null">
        SELL_OWNER_NAME = #{record.sellOwnerName,jdbcType=VARCHAR},
      </if>
      <if test="record.buyCallPhone != null">
        BUY_CALL_PHONE = #{record.buyCallPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.sellCallPhone != null">
        SELL_CALL_PHONE = #{record.sellCallPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.buyIdCard != null">
        BUY_ID_CARD = #{record.buyIdCard,jdbcType=VARCHAR},
      </if>
      <if test="record.sellIdCard != null">
        SELL_ID_CARD = #{record.sellIdCard,jdbcType=VARCHAR},
      </if>
      <if test="record.buyPaymoney != null">
        BUY_PAYMONEY = #{record.buyPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="record.sellPaymoney != null">
        SELL_PAYMONEY = #{record.sellPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="record.otherPaymoney != null">
        OTHER_PAYMONEY = #{record.otherPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="record.gainMoney != null">
        GAIN_MONEY = #{record.gainMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.realBuyPaymoney != null">
        REAL_BUY_PAYMONEY = #{record.realBuyPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="record.realSellPaymoney != null">
        REAL_SELL_PAYMONEY = #{record.realSellPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="record.realOtherPaymoney != null">
        REAL_OTHER_PAYMONEY = #{record.realOtherPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="record.realPaymoney != null">
        REAL_PAYMONEY = #{record.realPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="record.buyPriceMoney != null">
        BUY_PRICE_MONEY = #{record.buyPriceMoney,jdbcType=VARCHAR},
      </if>
      <if test="record.buyMortgageType != null">
        BUY_MORTGAGE_TYPE = #{record.buyMortgageType,jdbcType=TINYINT},
      </if>
      <if test="record.sellDealMoney != null">
        SELL_DEAL_MONEY = #{record.sellDealMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.sellIshaveLoan != null">
        SELL_ISHAVE_LOAN = #{record.sellIshaveLoan,jdbcType=BIT},
      </if>
      <if test="record.sellLoanMoney != null">
        SELL_LOAN_MONEY = #{record.sellLoanMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.sellReturnLoan != null">
        SELL_RETURN_LOAN = #{record.sellReturnLoan,jdbcType=BIT},
      </if>
      <if test="record.ownerStyle != null">
        OWNER_STYLE = #{record.ownerStyle,jdbcType=INTEGER},
      </if>
      <if test="record.ownerType != null">
        OWNER_TYPE = #{record.ownerType,jdbcType=TINYINT},
      </if>
      <if test="record.ownerNo != null">
        OWNER_NO = #{record.ownerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.haveLandcard != null">
        HAVE_LANDCARD = #{record.haveLandcard,jdbcType=BIT},
      </if>
      <if test="record.landcardNo != null">
        LANDCARD_NO = #{record.landcardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.mangementTax != null">
        MANGEMENT_TAX = #{record.mangementTax,jdbcType=BIT},
      </if>
      <if test="record.ownerTax != null">
        OWNER_TAX = #{record.ownerTax,jdbcType=BIT},
      </if>
      <if test="record.tax != null">
        TAX = #{record.tax,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeRemarkExplain != null">
        TRADE_REMARK_EXPLAIN = #{record.tradeRemarkExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.rentDealMoney != null">
        RENT_DEAL_MONEY = #{record.rentDealMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.rentPriceUnit != null">
        RENT_PRICE_UNIT = #{record.rentPriceUnit,jdbcType=TINYINT},
      </if>
      <if test="record.rentDate != null">
        RENT_DATE = #{record.rentDate,jdbcType=VARCHAR},
      </if>
      <if test="record.rentOverDate != null">
        RENT_OVER_DATE = #{record.rentOverDate,jdbcType=VARCHAR},
      </if>
      <if test="record.rentPayMethod != null">
        RENT_PAY_METHOD = #{record.rentPayMethod,jdbcType=TINYINT},
      </if>
      <if test="record.rentPaySpace != null">
        RENT_PAY_SPACE = #{record.rentPaySpace,jdbcType=VARCHAR},
      </if>
      <if test="record.rentPayEarly != null">
        RENT_PAY_EARLY = #{record.rentPayEarly,jdbcType=VARCHAR},
      </if>
      <if test="record.rentDepositPay != null">
        RENT_DEPOSIT_PAY = #{record.rentDepositPay,jdbcType=NUMERIC},
      </if>
      <if test="record.rentOtherMoney != null">
        RENT_OTHER_MONEY = #{record.rentOtherMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.goodsdetailed != null">
        GOODSDETAILED = #{record.goodsdetailed,jdbcType=VARCHAR},
      </if>
      <if test="record.waterlightexpenses != null">
        WATERLIGHTEXPENSES = #{record.waterlightexpenses,jdbcType=VARCHAR},
      </if>
      <if test="record.systemRecordTime != null">
        SYSTEM_RECORD_TIME = #{record.systemRecordTime,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.creatorUid != null">
        CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      </if>
      <if test="record.updateUid != null">
        UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.custDeptname != null">
        CUST_DEPTNAME = #{record.custDeptname,jdbcType=VARCHAR},
      </if>
      <if test="record.custUsername != null">
        CUST_USERNAME = #{record.custUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.custUserUid != null">
        CUST_USER_UID = #{record.custUserUid,jdbcType=INTEGER},
      </if>
      <if test="record.custDeptId != null">
        CUST_DEPT_ID = #{record.custDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.custPlate != null">
        CUST_PLATE = #{record.custPlate,jdbcType=TINYINT},
      </if>
      <if test="record.houseDeptname != null">
        HOUSE_DEPTNAME = #{record.houseDeptname,jdbcType=VARCHAR},
      </if>
      <if test="record.houseUsername != null">
        HOUSE_USERNAME = #{record.houseUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.houseUserUid != null">
        HOUSE_USER_UID = #{record.houseUserUid,jdbcType=INTEGER},
      </if>
      <if test="record.houseDeptId != null">
        HOUSE_DEPT_ID = #{record.houseDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.housePlate != null">
        HOUSE_PLATE = #{record.housePlate,jdbcType=TINYINT},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.buildName != null">
        BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.houseaddress != null">
        HOUSEADDRESS = #{record.houseaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.realTotalprice != null">
        REAL_TOTALPRICE = #{record.realTotalprice,jdbcType=NUMERIC},
      </if>
      <if test="record.dealDeptId != null">
        DEAL_DEPT_ID = #{record.dealDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.houseDuetimeTaskId != null">
        HOUSE_DUETIME_TASK_ID = #{record.houseDuetimeTaskId,jdbcType=INTEGER},
      </if>
      <if test="record.custDuetimeTaskId != null">
        CUST_DUETIME_TASK_ID = #{record.custDuetimeTaskId,jdbcType=INTEGER},
      </if>
      <if test="record.modelId != null">
        MODEL_ID = #{record.modelId,jdbcType=INTEGER},
      </if>
      <if test="record.contractNo != null">
        CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.runstepId != null">
        RUNSTEP_ID = #{record.runstepId,jdbcType=INTEGER},
      </if>
      <if test="record.runstepName != null">
        RUNSTEP_NAME = #{record.runstepName,jdbcType=VARCHAR},
      </if>
      <if test="record.timelimitdate != null">
        TIMELIMITDATE = #{record.timelimitdate,jdbcType=VARCHAR},
      </if>
      <if test="record.executor != null">
        EXECUTOR = #{record.executor,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.completeUser != null">
        COMPLETE_USER = #{record.completeUser,jdbcType=INTEGER},
      </if>
      <if test="record.completeDate != null">
        COMPLETE_DATE = #{record.completeDate,jdbcType=VARCHAR},
      </if>
      <if test="record.modelName != null">
        MODEL_NAME = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.dealUserName != null">
        DEAL_USER_NAME = #{record.dealUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.completeUserName != null">
        COMPLETE_USER_NAME = #{record.completeUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorName != null">
        CREATOR_NAME = #{record.creatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        AREA = #{record.area,jdbcType=NUMERIC},
      </if>
      <if test="record.fitment != null">
        FITMENT = #{record.fitment,jdbcType=TINYINT},
      </if>
      <if test="record.modelNo != null">
        MODEL_NO = #{record.modelNo,jdbcType=SMALLINT},
      </if>
      <if test="record.stepNo != null">
        STEP_NO = #{record.stepNo,jdbcType=SMALLINT},
      </if>
      <if test="record.updateUsername != null">
        UPDATE_USERNAME = #{record.updateUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.lockFlag != null">
        LOCK_FLAG = #{record.lockFlag,jdbcType=TINYINT},
      </if>
      <if test="record.dealInfoType != null">
        DEAL_INFO_TYPE = #{record.dealInfoType,jdbcType=TINYINT},
      </if>
      <if test="record.isbyhand != null">
        ISBYHAND = #{record.isbyhand,jdbcType=TINYINT},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.signUserId != null">
        SIGN_USER_ID = #{record.signUserId,jdbcType=INTEGER},
      </if>
      <if test="record.signUserName != null">
        SIGN_USER_NAME = #{record.signUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.signManagerId != null">
        SIGN_MANAGER_ID = #{record.signManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.signManagerName != null">
        SIGN_MANAGER_NAME = #{record.signManagerName,jdbcType=VARCHAR},
      </if>
      <if test="record.signUserDeptId != null">
        SIGN_USER_DEPT_ID = #{record.signUserDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.signUserDeptName != null">
        SIGN_USER_DEPT_NAME = #{record.signUserDeptName,jdbcType=VARCHAR},
      </if>
      <if test="record.signManagerDeptId != null">
        SIGN_MANAGER_DEPT_ID = #{record.signManagerDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.signManagerDeptName != null">
        SIGN_MANAGER_DEPT_NAME = #{record.signManagerDeptName,jdbcType=VARCHAR},
      </if>
      <if test="record.financStatusId != null">
        FINANC_STATUS_ID = #{record.financStatusId,jdbcType=INTEGER},
      </if>
      <if test="record.financName != null">
        FINANC_NAME = #{record.financName,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        CATEGORY_ID = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryName != null">
        CATEGORY_NAME = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.signDate != null">
        SIGN_DATE = #{record.signDate,jdbcType=VARCHAR},
      </if>
      <if test="record.transferDate != null">
        TRANSFER_DATE = #{record.transferDate,jdbcType=VARCHAR},
      </if>
      <if test="record.evidenceDate != null">
        EVIDENCE_DATE = #{record.evidenceDate,jdbcType=VARCHAR},
      </if>
      <if test="record.buyOwnerNameBak != null">
        BUY_OWNER_NAME_BAK = #{record.buyOwnerNameBak,jdbcType=VARCHAR},
      </if>
      <if test="record.sellOwnerNameBak != null">
        SELL_OWNER_NAME_BAK = #{record.sellOwnerNameBak,jdbcType=VARCHAR},
      </if>
      <if test="record.buyIdCardBak != null">
        BUY_ID_CARD_BAK = #{record.buyIdCardBak,jdbcType=VARCHAR},
      </if>
      <if test="record.sellIdCardBak != null">
        SELL_ID_CARD_BAK = #{record.sellIdCardBak,jdbcType=VARCHAR},
      </if>
      <if test="record.salePriceUnit != null">
        SALE_PRICE_UNIT = #{record.salePriceUnit,jdbcType=TINYINT},
      </if>
      <if test="record.rentCycle != null">
        RENT_CYCLE = #{record.rentCycle,jdbcType=VARCHAR},
      </if>
      <if test="record.codeId != null">
        CODE_ID = #{record.codeId,jdbcType=INTEGER},
      </if>
      <if test="record.processStatus != null">
        PROCESS_STATUS = #{record.processStatus,jdbcType=TINYINT},
      </if>
      <if test="record.buyCustomerPhone != null">
        BUY_CUSTOMER_PHONE = #{record.buyCustomerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.buyCustomerPhoneencode != null">
        BUY_CUSTOMER_PHONEENCODE = #{record.buyCustomerPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="record.sellOwnerPhone != null">
        SELL_OWNER_PHONE = #{record.sellOwnerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.sellOwnerPhoneencode != null">
        SELL_OWNER_PHONEENCODE = #{record.sellOwnerPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="record.sellOwnerPhoneBak != null">
        SELL_OWNER_PHONE_BAK = #{record.sellOwnerPhoneBak,jdbcType=VARCHAR},
      </if>
      <if test="record.buyCustomerPhoneBak != null">
        BUY_CUSTOMER_PHONE_BAK = #{record.buyCustomerPhoneBak,jdbcType=VARCHAR},
      </if>
      <if test="record.contractId != null">
        CONTRACT_ID = #{record.contractId,jdbcType=INTEGER},
      </if>
      <if test="record.paytypeId != null">
        PAYTYPE_ID = #{record.paytypeId,jdbcType=INTEGER},
      </if>
      <if test="record.paytypeName != null">
        PAYTYPE_NAME = #{record.paytypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.youAduitStatus != null">
        YOU_ADUIT_STATUS = #{record.youAduitStatus,jdbcType=TINYINT},
      </if>
      <if test="record.dealAuditStatus != null">
        DEAL_AUDIT_STATUS = #{record.dealAuditStatus,jdbcType=TINYINT},
      </if>
      <if test="record.commercialLoanDate != null">
        COMMERCIAL_LOAN_DATE = #{record.commercialLoanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commercialLenderDate != null">
        COMMERCIAL_LENDER_DATE = #{record.commercialLenderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commercialLenderLimit != null">
        COMMERCIAL_LENDER_LIMIT = #{record.commercialLenderLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.commercialLenderBank != null">
        COMMERCIAL_LENDER_BANK = #{record.commercialLenderBank,jdbcType=VARCHAR},
      </if>
      <if test="record.providentLoanDate != null">
        PROVIDENT_LOAN_DATE = #{record.providentLoanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.providentLenderDate != null">
        PROVIDENT_LENDER_DATE = #{record.providentLenderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.providentLenderLimit != null">
        PROVIDENT_LENDER_LIMIT = #{record.providentLenderLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.providentLenderBank != null">
        PROVIDENT_LENDER_BANK = #{record.providentLenderBank,jdbcType=VARCHAR},
      </if>
      <if test="record.totalNeedIncome != null">
        TOTAL_NEED_INCOME = #{record.totalNeedIncome,jdbcType=NUMERIC},
      </if>
      <if test="record.totalRealIncome != null">
        TOTAL_REAL_INCOME = #{record.totalRealIncome,jdbcType=NUMERIC},
      </if>
      <if test="record.totalNeedPerformance != null">
        TOTAL_NEED_PERFORMANCE = #{record.totalNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.totalRealPerformance != null">
        TOTAL_REAL_PERFORMANCE = #{record.totalRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.needAduitStatus != null">
        NEED_ADUIT_STATUS = #{record.needAduitStatus,jdbcType=TINYINT},
      </if>
      <if test="record.realAduitStatus != null">
        REAL_ADUIT_STATUS = #{record.realAduitStatus,jdbcType=TINYINT},
      </if>
      <if test="record.intelligentSearch != null">
        INTELLIGENT_SEARCH = #{record.intelligentSearch,jdbcType=VARCHAR},
      </if>
      <if test="record.providentLoanMoney != null">
        PROVIDENT_LOAN_MONEY = #{record.providentLoanMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.commercialLoanMoney != null">
        COMMERCIAL_LOAN_MONEY = #{record.commercialLoanMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.taxesAuditStatus != null">
        TAXES_AUDIT_STATUS = #{record.taxesAuditStatus,jdbcType=TINYINT},
      </if>
      <if test="record.taxesAuditName != null">
        TAXES_AUDIT_NAME = #{record.taxesAuditName,jdbcType=VARCHAR},
      </if>
      <if test="record.taxesAuditUser != null">
        TAXES_AUDIT_USER = #{record.taxesAuditUser,jdbcType=INTEGER},
      </if>
      <if test="record.taxesAuditTime != null">
        TAXES_AUDIT_TIME = #{record.taxesAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealAuditor != null">
        DEAL_AUDITOR = #{record.dealAuditor,jdbcType=VARCHAR},
      </if>
      <if test="record.youAduitOpinion != null">
        YOU_ADUIT_OPINION = #{record.youAduitOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.youDealFlag != null">
        YOU_DEAL_FLAG = #{record.youDealFlag,jdbcType=TINYINT},
      </if>
      <if test="record.subAduitTime != null">
        SUB_ADUIT_TIME = #{record.subAduitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.youjiaDeal != null">
        YOUJIA_DEAL = #{record.youjiaDeal,jdbcType=TINYINT},
      </if>
      <if test="record.buildRegName != null">
        BUILD_REG_NAME = #{record.buildRegName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildRegId != null">
        BUILD_REG_ID = #{record.buildRegId,jdbcType=INTEGER},
      </if>
      <if test="record.processEndTime != null">
        PROCESS_END_TIME = #{record.processEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.youAduitStatusProtocol != null">
        YOU_ADUIT_STATUS_PROTOCOL = #{record.youAduitStatusProtocol,jdbcType=TINYINT},
      </if>
      <if test="record.protocolId != null">
        PROTOCOL_ID = #{record.protocolId,jdbcType=INTEGER},
      </if>
      <if test="record.transferNeedPerformance != null">
        TRANSFER_NEED_PERFORMANCE = #{record.transferNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.transferRealPerformance != null">
        TRANSFER_REAL_PERFORMANCE = #{record.transferRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.secondhandNeedPerformance != null">
        SECONDHAND_NEED_PERFORMANCE = #{record.secondhandNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.secondhandRealPerformance != null">
        SECONDHAND_REAL_PERFORMANCE = #{record.secondhandRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.newhouseNeedPerformance != null">
        NEWHOUSE_NEED_PERFORMANCE = #{record.newhouseNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.newhouseRealPerformance != null">
        NEWHOUSE_REAL_PERFORMANCE = #{record.newhouseRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.leaseNeedPerformance != null">
        LEASE_NEED_PERFORMANCE = #{record.leaseNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.leaseRealPerformance != null">
        LEASE_REAL_PERFORMANCE = #{record.leaseRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.financeNeedPerformance != null">
        FINANCE_NEED_PERFORMANCE = #{record.financeNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.financeRealPerformance != null">
        FINANCE_REAL_PERFORMANCE = #{record.financeRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="record.commissionRate != null">
        COMMISSION_RATE = #{record.commissionRate,jdbcType=NUMERIC},
      </if>
      <if test="record.standardCommission != null">
        STANDARD_COMMISSION = #{record.standardCommission,jdbcType=NUMERIC},
      </if>
      <if test="record.codeType != null">
        CODE_TYPE = #{record.codeType,jdbcType=TINYINT},
      </if>
      <if test="record.sectionId != null">
        SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      </if>
      <if test="record.sellOwnerCommsion != null">
        SELL_OWNER_COMMSION = #{record.sellOwnerCommsion,jdbcType=NUMERIC},
      </if>
      <if test="record.buyCustomerCommsion != null">
        BUY_CUSTOMER_COMMSION = #{record.buyCustomerCommsion,jdbcType=NUMERIC},
      </if>
      <if test="record.planningUse != null">
        PLANNING_USE = #{record.planningUse,jdbcType=VARCHAR},
      </if>
      <if test="record.landcardType != null">
        LANDCARD_TYPE = #{record.landcardType,jdbcType=TINYINT},
      </if>
      <if test="record.mortgageType != null">
        MORTGAGE_TYPE = #{record.mortgageType,jdbcType=TINYINT},
      </if>
      <if test="record.leaseType != null">
        LEASE_TYPE = #{record.leaseType,jdbcType=TINYINT},
      </if>
      <if test="record.sellerProxyName != null">
        SELLER_PROXY_NAME = #{record.sellerProxyName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerProxyIdcard != null">
        SELLER_PROXY_IDCARD = #{record.sellerProxyIdcard,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerProxyPhone != null">
        SELLER_PROXY_PHONE = #{record.sellerProxyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerProxyPhoneencode != null">
        SELLER_PROXY_PHONEENCODE = #{record.sellerProxyPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerProxyName != null">
        BUYER_PROXY_NAME = #{record.buyerProxyName,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerProxyIdcard != null">
        BUYER_PROXY_IDCARD = #{record.buyerProxyIdcard,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerProxyPhone != null">
        BUYER_PROXY_PHONE = #{record.buyerProxyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerProxyPhoneencode != null">
        BUYER_PROXY_PHONEENCODE = #{record.buyerProxyPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="record.houseHoldElectrical != null">
        HOUSE_HOLD_ELECTRICAL = #{record.houseHoldElectrical,jdbcType=TINYINT},
      </if>
      <if test="record.buyerTaxFee != null">
        BUYER_TAX_FEE = #{record.buyerTaxFee,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerTaxFee != null">
        SELLER_TAX_FEE = #{record.sellerTaxFee,jdbcType=VARCHAR},
      </if>
      <if test="record.depositPayTime != null">
        DEPOSIT_PAY_TIME = #{record.depositPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.depositPayType != null">
        DEPOSIT_PAY_TYPE = #{record.depositPayType,jdbcType=TINYINT},
      </if>
      <if test="record.depositPayOther != null">
        DEPOSIT_PAY_OTHER = #{record.depositPayOther,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsPayType1 != null">
        DOWN_PAYMENTS_PAY_TYPE1 = #{record.downPaymentsPayType1,jdbcType=TINYINT},
      </if>
      <if test="record.downPaymentsPayTime1 != null">
        DOWN_PAYMENTS_PAY_TIME1 = #{record.downPaymentsPayTime1,jdbcType=VARCHAR},
      </if>
      <if test="record.housePriceLastPayType1 != null">
        HOUSE_PRICE_LAST_PAY_TYPE1 = #{record.housePriceLastPayType1,jdbcType=TINYINT},
      </if>
      <if test="record.housePriceLastPayTime1 != null">
        HOUSE_PRICE_LAST_PAY_TIME1 = #{record.housePriceLastPayTime1,jdbcType=VARCHAR},
      </if>
      <if test="record.loanTimeLength != null">
        LOAN_TIME_LENGTH = #{record.loanTimeLength,jdbcType=VARCHAR},
      </if>
      <if test="record.loanAgency != null">
        LOAN_AGENCY = #{record.loanAgency,jdbcType=VARCHAR},
      </if>
      <if test="record.noPassSloutionType != null">
        NO_PASS_SLOUTION_TYPE = #{record.noPassSloutionType,jdbcType=TINYINT},
      </if>
      <if test="record.applicationRepaymentDays != null">
        APPLICATION_REPAYMENT_DAYS = #{record.applicationRepaymentDays,jdbcType=INTEGER},
      </if>
      <if test="record.applicationRepaymentOther != null">
        APPLICATION_REPAYMENT_OTHER = #{record.applicationRepaymentOther,jdbcType=VARCHAR},
      </if>
      <if test="record.ownershipObligatiionNumber != null">
        OWNERSHIP_OBLIGATIION_NUMBER = #{record.ownershipObligatiionNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.houseProperty != null">
        HOUSE_PROPERTY = #{record.houseProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerBankType != null">
        SELLER_BANK_TYPE = #{record.sellerBankType,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerBankUserName != null">
        SELLER_BANK_USER_NAME = #{record.sellerBankUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerBankAccount != null">
        SELLER_BANK_ACCOUNT = #{record.sellerBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerBankType != null">
        BUYER_BANK_TYPE = #{record.buyerBankType,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerBankUserName != null">
        BUYER_BANK_USER_NAME = #{record.buyerBankUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerBankAccount != null">
        BUYER_BANK_ACCOUNT = #{record.buyerBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsPayType2 != null">
        DOWN_PAYMENTS_PAY_TYPE2 = #{record.downPaymentsPayType2,jdbcType=TINYINT},
      </if>
      <if test="record.downPaymentsPayTime2 != null">
        DOWN_PAYMENTS_PAY_TIME2 = #{record.downPaymentsPayTime2,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsPayType3 != null">
        DOWN_PAYMENTS_PAY_TYPE3 = #{record.downPaymentsPayType3,jdbcType=TINYINT},
      </if>
      <if test="record.downPaymentsPayTime3 != null">
        DOWN_PAYMENTS_PAY_TIME3 = #{record.downPaymentsPayTime3,jdbcType=VARCHAR},
      </if>
      <if test="record.housePriceLastPayType2 != null">
        HOUSE_PRICE_LAST_PAY_TYPE2 = #{record.housePriceLastPayType2,jdbcType=TINYINT},
      </if>
      <if test="record.housePriceLastPayTime2 != null">
        HOUSE_PRICE_LAST_PAY_TIME2 = #{record.housePriceLastPayTime2,jdbcType=VARCHAR},
      </if>
      <if test="record.housePriceLastPayType3 != null">
        HOUSE_PRICE_LAST_PAY_TYPE3 = #{record.housePriceLastPayType3,jdbcType=TINYINT},
      </if>
      <if test="record.housePriceLastPayTime3 != null">
        HOUSE_PRICE_LAST_PAY_TIME3 = #{record.housePriceLastPayTime3,jdbcType=VARCHAR},
      </if>
      <if test="record.transferDateStr != null">
        TRANSFER_DATE_STR = #{record.transferDateStr,jdbcType=VARCHAR},
      </if>
      <if test="record.transferDateDaysPickup != null">
        TRANSFER_DATE_DAYS_PICKUP = #{record.transferDateDaysPickup,jdbcType=INTEGER},
      </if>
      <if test="record.transferDateDaysRegist != null">
        TRANSFER_DATE_DAYS_REGIST = #{record.transferDateDaysRegist,jdbcType=INTEGER},
      </if>
      <if test="record.waterLeakage != null">
        WATER_LEAKAGE = #{record.waterLeakage,jdbcType=TINYINT},
      </if>
      <if test="record.waterLeakagePosition != null">
        WATER_LEAKAGE_POSITION = #{record.waterLeakagePosition,jdbcType=VARCHAR},
      </if>
      <if test="record.waterLeakageConsult != null">
        WATER_LEAKAGE_CONSULT = #{record.waterLeakageConsult,jdbcType=TINYINT},
      </if>
      <if test="record.waterLeakageConsultBearParty != null">
        WATER_LEAKAGE_CONSULT_BEAR_PARTY = #{record.waterLeakageConsultBearParty,jdbcType=TINYINT},
      </if>
      <if test="record.deathEvent != null">
        DEATH_EVENT = #{record.deathEvent,jdbcType=VARCHAR},
      </if>
      <if test="record.housePeeling != null">
        HOUSE_PEELING = #{record.housePeeling,jdbcType=TINYINT},
      </if>
      <if test="record.housePeelingPosition != null">
        HOUSE_PEELING_POSITION = #{record.housePeelingPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.submitLoanInfoFeeDays != null">
        SUBMIT_LOAN_INFO_FEE_DAYS = #{record.submitLoanInfoFeeDays,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsPayParty1 != null">
        DOWN_PAYMENTS_PAY_PARTY1 = #{record.downPaymentsPayParty1,jdbcType=TINYINT},
      </if>
      <if test="record.downPaymentsPayParty2 != null">
        DOWN_PAYMENTS_PAY_PARTY2 = #{record.downPaymentsPayParty2,jdbcType=TINYINT},
      </if>
      <if test="record.downPaymentsPayParty3 != null">
        DOWN_PAYMENTS_PAY_PARTY3 = #{record.downPaymentsPayParty3,jdbcType=TINYINT},
      </if>
      <if test="record.downPaymentsPayBank != null">
        DOWN_PAYMENTS_PAY_BANK = #{record.downPaymentsPayBank,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsPayAccountName != null">
        DOWN_PAYMENTS_PAY_ACCOUNT_NAME = #{record.downPaymentsPayAccountName,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsPayAccountNo != null">
        DOWN_PAYMENTS_PAY_ACCOUNT_NO = #{record.downPaymentsPayAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsThirdParty != null">
        DOWN_PAYMENTS_THIRD_PARTY = #{record.downPaymentsThirdParty,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsRemainingFirstPaytime != null">
        DOWN_PAYMENTS_REMAINING_FIRST_PAYTIME = #{record.downPaymentsRemainingFirstPaytime,jdbcType=VARCHAR},
      </if>
      <if test="record.housePeelingBearParty != null">
        HOUSE_PEELING_BEAR_PARTY = #{record.housePeelingBearParty,jdbcType=TINYINT},
      </if>
      <if test="record.downPaymentsRemainingFirstAmount != null">
        DOWN_PAYMENTS_REMAINING_FIRST_AMOUNT = #{record.downPaymentsRemainingFirstAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.housePriceLastPayAmount3 != null">
        HOUSE_PRICE_LAST_PAY_AMOUNT3 = #{record.housePriceLastPayAmount3,jdbcType=VARCHAR},
      </if>
      <if test="record.housePriceLastPayAmount2 != null">
        HOUSE_PRICE_LAST_PAY_AMOUNT2 = #{record.housePriceLastPayAmount2,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsPayAmount3 != null">
        DOWN_PAYMENTS_PAY_AMOUNT3 = #{record.downPaymentsPayAmount3,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsPayAmount2 != null">
        DOWN_PAYMENTS_PAY_AMOUNT2 = #{record.downPaymentsPayAmount2,jdbcType=VARCHAR},
      </if>
      <if test="record.noPassSloutionAmount != null">
        NO_PASS_SLOUTION_AMOUNT = #{record.noPassSloutionAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.housePriceLastPayAmount1 != null">
        HOUSE_PRICE_LAST_PAY_AMOUNT1 = #{record.housePriceLastPayAmount1,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsPayAmount1 != null">
        DOWN_PAYMENTS_PAY_AMOUNT1 = #{record.downPaymentsPayAmount1,jdbcType=VARCHAR},
      </if>
      <if test="record.housePriceLastAmount != null">
        HOUSE_PRICE_LAST_AMOUNT = #{record.housePriceLastAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.downPaymentsAmount != null">
        DOWN_PAYMENTS_AMOUNT = #{record.downPaymentsAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.depositAmount != null">
        DEPOSIT_AMOUNT = #{record.depositAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.mortgageAmount != null">
        MORTGAGE_AMOUNT = #{record.mortgageAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.signUserArchive != null">
        SIGN_USER_ARCHIVE = #{record.signUserArchive,jdbcType=INTEGER},
      </if>
      <if test="record.buyIdCardType != null">
        BUY_ID_CARD_TYPE = #{record.buyIdCardType,jdbcType=INTEGER},
      </if>
      <if test="record.sellIdCardType != null">
        SELL_ID_CARD_TYPE = #{record.sellIdCardType,jdbcType=INTEGER},
      </if>
      <if test="record.sellIdCardBakType != null">
        SELL_ID_CARD_BAK_TYPE = #{record.sellIdCardBakType,jdbcType=INTEGER},
      </if>
      <if test="record.buyIdCardBakType != null">
        BUY_ID_CARD_BAK_TYPE = #{record.buyIdCardBakType,jdbcType=INTEGER},
      </if>
      <if test="record.sellerProxyIdcardType != null">
        SELLER_PROXY_IDCARD_TYPE = #{record.sellerProxyIdcardType,jdbcType=INTEGER},
      </if>
      <if test="record.buyerProxyIdcardType != null">
        BUYER_PROXY_IDCARD_TYPE = #{record.buyerProxyIdcardType,jdbcType=INTEGER},
      </if>
      <if test="record.entrustBank != null">
        ENTRUST_BANK = #{record.entrustBank,jdbcType=VARCHAR},
      </if>
      <if test="record.entrustMoney != null">
        ENTRUST_MONEY = #{record.entrustMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.firstTrialCompleteDate != null">
        FIRST_TRIAL_COMPLETE_DATE = #{record.firstTrialCompleteDate,jdbcType=VARCHAR},
      </if>
      <if test="record.recheckCompleteDate != null">
        RECHECK_COMPLETE_DATE = #{record.recheckCompleteDate,jdbcType=VARCHAR},
      </if>
      <if test="record.invalidCompleteDate != null">
        INVALID_COMPLETE_DATE = #{record.invalidCompleteDate,jdbcType=VARCHAR},
      </if>
      <if test="record.dealAuditStatusBefore != null">
        DEAL_AUDIT_STATUS_BEFORE = #{record.dealAuditStatusBefore,jdbcType=TINYINT},
      </if>
      <if test="record.ssqContractId != null">
        SSQ_CONTRACT_ID = #{record.ssqContractId,jdbcType=VARCHAR},
      </if>
      <if test="record.sellOwnerWxUserId != null">
        SELL_OWNER_WX_USER_ID = #{record.sellOwnerWxUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.sellOwnerWxOpenId != null">
        SELL_OWNER_WX_OPEN_ID = #{record.sellOwnerWxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="record.buyOwnerWxUserId != null">
        BUY_OWNER_WX_USER_ID = #{record.buyOwnerWxUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.buyOwnerWxOpenId != null">
        BUY_OWNER_WX_OPEN_ID = #{record.buyOwnerWxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="record.signType != null">
        SIGN_TYPE = #{record.signType,jdbcType=TINYINT},
      </if>
      <if test="record.signSiteDept != null">
        SIGN_SITE_DEPT = #{record.signSiteDept,jdbcType=INTEGER},
      </if>
      <if test="record.signSiteGr != null">
        SIGN_SITE_GR = #{record.signSiteGr,jdbcType=INTEGER},
      </if>
      <if test="record.introducerId != null">
        INTRODUCER_ID = #{record.introducerId,jdbcType=INTEGER},
      </if>
      <if test="record.adultPromotionId != null">
        ADULT_PROMOTION_ID = #{record.adultPromotionId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_DEAL
    set DEAL_ID = #{record.dealId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      AGREEMENT_NO = #{record.agreementNo,jdbcType=VARCHAR},
      CREATOR_DATE = #{record.creatorDate,jdbcType=VARCHAR},
      DEAL_TYPE = #{record.dealType,jdbcType=TINYINT},
      DEAL_STATUS = #{record.dealStatus,jdbcType=TINYINT},
      DEAL_USER_ID = #{record.dealUserId,jdbcType=INTEGER},
      DEAL_COMPLETE = #{record.dealComplete,jdbcType=TINYINT},
      DEAL_VERIFY_TIME = #{record.dealVerifyTime,jdbcType=VARCHAR},
      DEAL_BUY_STYLE = #{record.dealBuyStyle,jdbcType=TINYINT},
      DEAL_SELL_STYLE = #{record.dealSellStyle,jdbcType=TINYINT},
      HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      DEAL_CUSTOMER_ID = #{record.dealCustomerId,jdbcType=INTEGER},
      DEAL_CUSTOMER_NO = #{record.dealCustomerNo,jdbcType=VARCHAR},
      DEAL_HOUSE_ID = #{record.dealHouseId,jdbcType=INTEGER},
      DEAL_HOUSE_NO = #{record.dealHouseNo,jdbcType=VARCHAR},
      SELL_ADDRESS = #{record.sellAddress,jdbcType=VARCHAR},
      BUY_CUSTINFO = #{record.buyCustinfo,jdbcType=VARCHAR},
      SELL_HEZUO_COMPNAME = #{record.sellHezuoCompname,jdbcType=VARCHAR},
      BUY_HEZUO_COMPNAME = #{record.buyHezuoCompname,jdbcType=VARCHAR},
      BUY_CONTACTUSER = #{record.buyContactuser,jdbcType=VARCHAR},
      SELL_CONTACTUSER = #{record.sellContactuser,jdbcType=VARCHAR},
      BUY_OWNER_NAME = #{record.buyOwnerName,jdbcType=VARCHAR},
      SELL_OWNER_NAME = #{record.sellOwnerName,jdbcType=VARCHAR},
      BUY_CALL_PHONE = #{record.buyCallPhone,jdbcType=VARCHAR},
      SELL_CALL_PHONE = #{record.sellCallPhone,jdbcType=VARCHAR},
      BUY_ID_CARD = #{record.buyIdCard,jdbcType=VARCHAR},
      SELL_ID_CARD = #{record.sellIdCard,jdbcType=VARCHAR},
      BUY_PAYMONEY = #{record.buyPaymoney,jdbcType=NUMERIC},
      SELL_PAYMONEY = #{record.sellPaymoney,jdbcType=NUMERIC},
      OTHER_PAYMONEY = #{record.otherPaymoney,jdbcType=NUMERIC},
      GAIN_MONEY = #{record.gainMoney,jdbcType=NUMERIC},
      REAL_BUY_PAYMONEY = #{record.realBuyPaymoney,jdbcType=NUMERIC},
      REAL_SELL_PAYMONEY = #{record.realSellPaymoney,jdbcType=NUMERIC},
      REAL_OTHER_PAYMONEY = #{record.realOtherPaymoney,jdbcType=NUMERIC},
      REAL_PAYMONEY = #{record.realPaymoney,jdbcType=NUMERIC},
      BUY_PRICE_MONEY = #{record.buyPriceMoney,jdbcType=VARCHAR},
      BUY_MORTGAGE_TYPE = #{record.buyMortgageType,jdbcType=TINYINT},
      SELL_DEAL_MONEY = #{record.sellDealMoney,jdbcType=NUMERIC},
      SELL_ISHAVE_LOAN = #{record.sellIshaveLoan,jdbcType=BIT},
      SELL_LOAN_MONEY = #{record.sellLoanMoney,jdbcType=NUMERIC},
      SELL_RETURN_LOAN = #{record.sellReturnLoan,jdbcType=BIT},
      OWNER_STYLE = #{record.ownerStyle,jdbcType=INTEGER},
      OWNER_TYPE = #{record.ownerType,jdbcType=TINYINT},
      OWNER_NO = #{record.ownerNo,jdbcType=VARCHAR},
      HAVE_LANDCARD = #{record.haveLandcard,jdbcType=BIT},
      LANDCARD_NO = #{record.landcardNo,jdbcType=VARCHAR},
      MANGEMENT_TAX = #{record.mangementTax,jdbcType=BIT},
      OWNER_TAX = #{record.ownerTax,jdbcType=BIT},
      TAX = #{record.tax,jdbcType=VARCHAR},
      TRADE_REMARK_EXPLAIN = #{record.tradeRemarkExplain,jdbcType=VARCHAR},
      RENT_DEAL_MONEY = #{record.rentDealMoney,jdbcType=NUMERIC},
      RENT_PRICE_UNIT = #{record.rentPriceUnit,jdbcType=TINYINT},
      RENT_DATE = #{record.rentDate,jdbcType=VARCHAR},
      RENT_OVER_DATE = #{record.rentOverDate,jdbcType=VARCHAR},
      RENT_PAY_METHOD = #{record.rentPayMethod,jdbcType=TINYINT},
      RENT_PAY_SPACE = #{record.rentPaySpace,jdbcType=VARCHAR},
      RENT_PAY_EARLY = #{record.rentPayEarly,jdbcType=VARCHAR},
      RENT_DEPOSIT_PAY = #{record.rentDepositPay,jdbcType=NUMERIC},
      RENT_OTHER_MONEY = #{record.rentOtherMoney,jdbcType=NUMERIC},
      GOODSDETAILED = #{record.goodsdetailed,jdbcType=VARCHAR},
      WATERLIGHTEXPENSES = #{record.waterlightexpenses,jdbcType=VARCHAR},
      SYSTEM_RECORD_TIME = #{record.systemRecordTime,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      CREATOR_UID = #{record.creatorUid,jdbcType=INTEGER},
      UPDATE_UID = #{record.updateUid,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CUST_DEPTNAME = #{record.custDeptname,jdbcType=VARCHAR},
      CUST_USERNAME = #{record.custUsername,jdbcType=VARCHAR},
      CUST_USER_UID = #{record.custUserUid,jdbcType=INTEGER},
      CUST_DEPT_ID = #{record.custDeptId,jdbcType=INTEGER},
      CUST_PLATE = #{record.custPlate,jdbcType=TINYINT},
      HOUSE_DEPTNAME = #{record.houseDeptname,jdbcType=VARCHAR},
      HOUSE_USERNAME = #{record.houseUsername,jdbcType=VARCHAR},
      HOUSE_USER_UID = #{record.houseUserUid,jdbcType=INTEGER},
      HOUSE_DEPT_ID = #{record.houseDeptId,jdbcType=INTEGER},
      HOUSE_PLATE = #{record.housePlate,jdbcType=TINYINT},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      HOUSEADDRESS = #{record.houseaddress,jdbcType=VARCHAR},
      REAL_TOTALPRICE = #{record.realTotalprice,jdbcType=NUMERIC},
      DEAL_DEPT_ID = #{record.dealDeptId,jdbcType=INTEGER},
      HOUSE_DUETIME_TASK_ID = #{record.houseDuetimeTaskId,jdbcType=INTEGER},
      CUST_DUETIME_TASK_ID = #{record.custDuetimeTaskId,jdbcType=INTEGER},
      MODEL_ID = #{record.modelId,jdbcType=INTEGER},
      CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      RUNSTEP_ID = #{record.runstepId,jdbcType=INTEGER},
      RUNSTEP_NAME = #{record.runstepName,jdbcType=VARCHAR},
      TIMELIMITDATE = #{record.timelimitdate,jdbcType=VARCHAR},
      EXECUTOR = #{record.executor,jdbcType=INTEGER},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      COMPLETE_USER = #{record.completeUser,jdbcType=INTEGER},
      COMPLETE_DATE = #{record.completeDate,jdbcType=VARCHAR},
      MODEL_NAME = #{record.modelName,jdbcType=VARCHAR},
      DEAL_USER_NAME = #{record.dealUserName,jdbcType=VARCHAR},
      COMPLETE_USER_NAME = #{record.completeUserName,jdbcType=VARCHAR},
      CREATOR_NAME = #{record.creatorName,jdbcType=VARCHAR},
      AREA = #{record.area,jdbcType=NUMERIC},
      FITMENT = #{record.fitment,jdbcType=TINYINT},
      MODEL_NO = #{record.modelNo,jdbcType=SMALLINT},
      STEP_NO = #{record.stepNo,jdbcType=SMALLINT},
      UPDATE_USERNAME = #{record.updateUsername,jdbcType=VARCHAR},
      LOCK_FLAG = #{record.lockFlag,jdbcType=TINYINT},
      DEAL_INFO_TYPE = #{record.dealInfoType,jdbcType=TINYINT},
      ISBYHAND = #{record.isbyhand,jdbcType=TINYINT},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      SIGN_USER_ID = #{record.signUserId,jdbcType=INTEGER},
      SIGN_USER_NAME = #{record.signUserName,jdbcType=VARCHAR},
      SIGN_MANAGER_ID = #{record.signManagerId,jdbcType=INTEGER},
      SIGN_MANAGER_NAME = #{record.signManagerName,jdbcType=VARCHAR},
      SIGN_USER_DEPT_ID = #{record.signUserDeptId,jdbcType=INTEGER},
      SIGN_USER_DEPT_NAME = #{record.signUserDeptName,jdbcType=VARCHAR},
      SIGN_MANAGER_DEPT_ID = #{record.signManagerDeptId,jdbcType=INTEGER},
      SIGN_MANAGER_DEPT_NAME = #{record.signManagerDeptName,jdbcType=VARCHAR},
      FINANC_STATUS_ID = #{record.financStatusId,jdbcType=INTEGER},
      FINANC_NAME = #{record.financName,jdbcType=VARCHAR},
      CATEGORY_ID = #{record.categoryId,jdbcType=INTEGER},
      CATEGORY_NAME = #{record.categoryName,jdbcType=VARCHAR},
      SIGN_DATE = #{record.signDate,jdbcType=VARCHAR},
      TRANSFER_DATE = #{record.transferDate,jdbcType=VARCHAR},
      EVIDENCE_DATE = #{record.evidenceDate,jdbcType=VARCHAR},
      BUY_OWNER_NAME_BAK = #{record.buyOwnerNameBak,jdbcType=VARCHAR},
      SELL_OWNER_NAME_BAK = #{record.sellOwnerNameBak,jdbcType=VARCHAR},
      BUY_ID_CARD_BAK = #{record.buyIdCardBak,jdbcType=VARCHAR},
      SELL_ID_CARD_BAK = #{record.sellIdCardBak,jdbcType=VARCHAR},
      SALE_PRICE_UNIT = #{record.salePriceUnit,jdbcType=TINYINT},
      RENT_CYCLE = #{record.rentCycle,jdbcType=VARCHAR},
      CODE_ID = #{record.codeId,jdbcType=INTEGER},
      PROCESS_STATUS = #{record.processStatus,jdbcType=TINYINT},
      BUY_CUSTOMER_PHONE = #{record.buyCustomerPhone,jdbcType=VARCHAR},
      BUY_CUSTOMER_PHONEENCODE = #{record.buyCustomerPhoneencode,jdbcType=VARCHAR},
      SELL_OWNER_PHONE = #{record.sellOwnerPhone,jdbcType=VARCHAR},
      SELL_OWNER_PHONEENCODE = #{record.sellOwnerPhoneencode,jdbcType=VARCHAR},
      SELL_OWNER_PHONE_BAK = #{record.sellOwnerPhoneBak,jdbcType=VARCHAR},
      BUY_CUSTOMER_PHONE_BAK = #{record.buyCustomerPhoneBak,jdbcType=VARCHAR},
      CONTRACT_ID = #{record.contractId,jdbcType=INTEGER},
      PAYTYPE_ID = #{record.paytypeId,jdbcType=INTEGER},
      PAYTYPE_NAME = #{record.paytypeName,jdbcType=VARCHAR},
      YOU_ADUIT_STATUS = #{record.youAduitStatus,jdbcType=TINYINT},
      DEAL_AUDIT_STATUS = #{record.dealAuditStatus,jdbcType=TINYINT},
      COMMERCIAL_LOAN_DATE = #{record.commercialLoanDate,jdbcType=TIMESTAMP},
      COMMERCIAL_LENDER_DATE = #{record.commercialLenderDate,jdbcType=TIMESTAMP},
      COMMERCIAL_LENDER_LIMIT = #{record.commercialLenderLimit,jdbcType=VARCHAR},
      COMMERCIAL_LENDER_BANK = #{record.commercialLenderBank,jdbcType=VARCHAR},
      PROVIDENT_LOAN_DATE = #{record.providentLoanDate,jdbcType=TIMESTAMP},
      PROVIDENT_LENDER_DATE = #{record.providentLenderDate,jdbcType=TIMESTAMP},
      PROVIDENT_LENDER_LIMIT = #{record.providentLenderLimit,jdbcType=VARCHAR},
      PROVIDENT_LENDER_BANK = #{record.providentLenderBank,jdbcType=VARCHAR},
      TOTAL_NEED_INCOME = #{record.totalNeedIncome,jdbcType=NUMERIC},
      TOTAL_REAL_INCOME = #{record.totalRealIncome,jdbcType=NUMERIC},
      TOTAL_NEED_PERFORMANCE = #{record.totalNeedPerformance,jdbcType=NUMERIC},
      TOTAL_REAL_PERFORMANCE = #{record.totalRealPerformance,jdbcType=NUMERIC},
      NEED_ADUIT_STATUS = #{record.needAduitStatus,jdbcType=TINYINT},
      REAL_ADUIT_STATUS = #{record.realAduitStatus,jdbcType=TINYINT},
      INTELLIGENT_SEARCH = #{record.intelligentSearch,jdbcType=VARCHAR},
      PROVIDENT_LOAN_MONEY = #{record.providentLoanMoney,jdbcType=NUMERIC},
      COMMERCIAL_LOAN_MONEY = #{record.commercialLoanMoney,jdbcType=NUMERIC},
      TAXES_AUDIT_STATUS = #{record.taxesAuditStatus,jdbcType=TINYINT},
      TAXES_AUDIT_NAME = #{record.taxesAuditName,jdbcType=VARCHAR},
      TAXES_AUDIT_USER = #{record.taxesAuditUser,jdbcType=INTEGER},
      TAXES_AUDIT_TIME = #{record.taxesAuditTime,jdbcType=TIMESTAMP},
      DEAL_AUDITOR = #{record.dealAuditor,jdbcType=VARCHAR},
      YOU_ADUIT_OPINION = #{record.youAduitOpinion,jdbcType=VARCHAR},
      YOU_DEAL_FLAG = #{record.youDealFlag,jdbcType=TINYINT},
      SUB_ADUIT_TIME = #{record.subAduitTime,jdbcType=TIMESTAMP},
      YOUJIA_DEAL = #{record.youjiaDeal,jdbcType=TINYINT},
      BUILD_REG_NAME = #{record.buildRegName,jdbcType=VARCHAR},
      BUILD_REG_ID = #{record.buildRegId,jdbcType=INTEGER},
      PROCESS_END_TIME = #{record.processEndTime,jdbcType=TIMESTAMP},
      YOU_ADUIT_STATUS_PROTOCOL = #{record.youAduitStatusProtocol,jdbcType=TINYINT},
      PROTOCOL_ID = #{record.protocolId,jdbcType=INTEGER},
      TRANSFER_NEED_PERFORMANCE = #{record.transferNeedPerformance,jdbcType=NUMERIC},
      TRANSFER_REAL_PERFORMANCE = #{record.transferRealPerformance,jdbcType=NUMERIC},
      SECONDHAND_NEED_PERFORMANCE = #{record.secondhandNeedPerformance,jdbcType=NUMERIC},
      SECONDHAND_REAL_PERFORMANCE = #{record.secondhandRealPerformance,jdbcType=NUMERIC},
      NEWHOUSE_NEED_PERFORMANCE = #{record.newhouseNeedPerformance,jdbcType=NUMERIC},
      NEWHOUSE_REAL_PERFORMANCE = #{record.newhouseRealPerformance,jdbcType=NUMERIC},
      LEASE_NEED_PERFORMANCE = #{record.leaseNeedPerformance,jdbcType=NUMERIC},
      LEASE_REAL_PERFORMANCE = #{record.leaseRealPerformance,jdbcType=NUMERIC},
      FINANCE_NEED_PERFORMANCE = #{record.financeNeedPerformance,jdbcType=NUMERIC},
      FINANCE_REAL_PERFORMANCE = #{record.financeRealPerformance,jdbcType=NUMERIC},
      COMMISSION_RATE = #{record.commissionRate,jdbcType=NUMERIC},
      STANDARD_COMMISSION = #{record.standardCommission,jdbcType=NUMERIC},
      CODE_TYPE = #{record.codeType,jdbcType=TINYINT},
      SECTION_ID = #{record.sectionId,jdbcType=INTEGER},
      SELL_OWNER_COMMSION = #{record.sellOwnerCommsion,jdbcType=NUMERIC},
      BUY_CUSTOMER_COMMSION = #{record.buyCustomerCommsion,jdbcType=NUMERIC},
      PLANNING_USE = #{record.planningUse,jdbcType=VARCHAR},
      LANDCARD_TYPE = #{record.landcardType,jdbcType=TINYINT},
      MORTGAGE_TYPE = #{record.mortgageType,jdbcType=TINYINT},
      LEASE_TYPE = #{record.leaseType,jdbcType=TINYINT},
      SELLER_PROXY_NAME = #{record.sellerProxyName,jdbcType=VARCHAR},
      SELLER_PROXY_IDCARD = #{record.sellerProxyIdcard,jdbcType=VARCHAR},
      SELLER_PROXY_PHONE = #{record.sellerProxyPhone,jdbcType=VARCHAR},
      SELLER_PROXY_PHONEENCODE = #{record.sellerProxyPhoneencode,jdbcType=VARCHAR},
      BUYER_PROXY_NAME = #{record.buyerProxyName,jdbcType=VARCHAR},
      BUYER_PROXY_IDCARD = #{record.buyerProxyIdcard,jdbcType=VARCHAR},
      BUYER_PROXY_PHONE = #{record.buyerProxyPhone,jdbcType=VARCHAR},
      BUYER_PROXY_PHONEENCODE = #{record.buyerProxyPhoneencode,jdbcType=VARCHAR},
      HOUSE_HOLD_ELECTRICAL = #{record.houseHoldElectrical,jdbcType=TINYINT},
      BUYER_TAX_FEE = #{record.buyerTaxFee,jdbcType=VARCHAR},
      SELLER_TAX_FEE = #{record.sellerTaxFee,jdbcType=VARCHAR},
      DEPOSIT_PAY_TIME = #{record.depositPayTime,jdbcType=TIMESTAMP},
      DEPOSIT_PAY_TYPE = #{record.depositPayType,jdbcType=TINYINT},
      DEPOSIT_PAY_OTHER = #{record.depositPayOther,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_TYPE1 = #{record.downPaymentsPayType1,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_TIME1 = #{record.downPaymentsPayTime1,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_TYPE1 = #{record.housePriceLastPayType1,jdbcType=TINYINT},
      HOUSE_PRICE_LAST_PAY_TIME1 = #{record.housePriceLastPayTime1,jdbcType=VARCHAR},
      LOAN_TIME_LENGTH = #{record.loanTimeLength,jdbcType=VARCHAR},
      LOAN_AGENCY = #{record.loanAgency,jdbcType=VARCHAR},
      NO_PASS_SLOUTION_TYPE = #{record.noPassSloutionType,jdbcType=TINYINT},
      APPLICATION_REPAYMENT_DAYS = #{record.applicationRepaymentDays,jdbcType=INTEGER},
      APPLICATION_REPAYMENT_OTHER = #{record.applicationRepaymentOther,jdbcType=VARCHAR},
      OWNERSHIP_OBLIGATIION_NUMBER = #{record.ownershipObligatiionNumber,jdbcType=VARCHAR},
      HOUSE_PROPERTY = #{record.houseProperty,jdbcType=VARCHAR},
      SELLER_BANK_TYPE = #{record.sellerBankType,jdbcType=VARCHAR},
      SELLER_BANK_USER_NAME = #{record.sellerBankUserName,jdbcType=VARCHAR},
      SELLER_BANK_ACCOUNT = #{record.sellerBankAccount,jdbcType=VARCHAR},
      BUYER_BANK_TYPE = #{record.buyerBankType,jdbcType=VARCHAR},
      BUYER_BANK_USER_NAME = #{record.buyerBankUserName,jdbcType=VARCHAR},
      BUYER_BANK_ACCOUNT = #{record.buyerBankAccount,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_TYPE2 = #{record.downPaymentsPayType2,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_TIME2 = #{record.downPaymentsPayTime2,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_TYPE3 = #{record.downPaymentsPayType3,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_TIME3 = #{record.downPaymentsPayTime3,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_TYPE2 = #{record.housePriceLastPayType2,jdbcType=TINYINT},
      HOUSE_PRICE_LAST_PAY_TIME2 = #{record.housePriceLastPayTime2,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_TYPE3 = #{record.housePriceLastPayType3,jdbcType=TINYINT},
      HOUSE_PRICE_LAST_PAY_TIME3 = #{record.housePriceLastPayTime3,jdbcType=VARCHAR},
      TRANSFER_DATE_STR = #{record.transferDateStr,jdbcType=VARCHAR},
      TRANSFER_DATE_DAYS_PICKUP = #{record.transferDateDaysPickup,jdbcType=INTEGER},
      TRANSFER_DATE_DAYS_REGIST = #{record.transferDateDaysRegist,jdbcType=INTEGER},
      WATER_LEAKAGE = #{record.waterLeakage,jdbcType=TINYINT},
      WATER_LEAKAGE_POSITION = #{record.waterLeakagePosition,jdbcType=VARCHAR},
      WATER_LEAKAGE_CONSULT = #{record.waterLeakageConsult,jdbcType=TINYINT},
      WATER_LEAKAGE_CONSULT_BEAR_PARTY = #{record.waterLeakageConsultBearParty,jdbcType=TINYINT},
      DEATH_EVENT = #{record.deathEvent,jdbcType=VARCHAR},
      HOUSE_PEELING = #{record.housePeeling,jdbcType=TINYINT},
      HOUSE_PEELING_POSITION = #{record.housePeelingPosition,jdbcType=VARCHAR},
      SUBMIT_LOAN_INFO_FEE_DAYS = #{record.submitLoanInfoFeeDays,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_PARTY1 = #{record.downPaymentsPayParty1,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_PARTY2 = #{record.downPaymentsPayParty2,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_PARTY3 = #{record.downPaymentsPayParty3,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_BANK = #{record.downPaymentsPayBank,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_ACCOUNT_NAME = #{record.downPaymentsPayAccountName,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_ACCOUNT_NO = #{record.downPaymentsPayAccountNo,jdbcType=VARCHAR},
      DOWN_PAYMENTS_THIRD_PARTY = #{record.downPaymentsThirdParty,jdbcType=VARCHAR},
      DOWN_PAYMENTS_REMAINING_FIRST_PAYTIME = #{record.downPaymentsRemainingFirstPaytime,jdbcType=VARCHAR},
      HOUSE_PEELING_BEAR_PARTY = #{record.housePeelingBearParty,jdbcType=TINYINT},
      DOWN_PAYMENTS_REMAINING_FIRST_AMOUNT = #{record.downPaymentsRemainingFirstAmount,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_AMOUNT3 = #{record.housePriceLastPayAmount3,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_AMOUNT2 = #{record.housePriceLastPayAmount2,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_AMOUNT3 = #{record.downPaymentsPayAmount3,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_AMOUNT2 = #{record.downPaymentsPayAmount2,jdbcType=VARCHAR},
      NO_PASS_SLOUTION_AMOUNT = #{record.noPassSloutionAmount,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_AMOUNT1 = #{record.housePriceLastPayAmount1,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_AMOUNT1 = #{record.downPaymentsPayAmount1,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_AMOUNT = #{record.housePriceLastAmount,jdbcType=VARCHAR},
      DOWN_PAYMENTS_AMOUNT = #{record.downPaymentsAmount,jdbcType=VARCHAR},
      DEPOSIT_AMOUNT = #{record.depositAmount,jdbcType=VARCHAR},
      MORTGAGE_AMOUNT = #{record.mortgageAmount,jdbcType=VARCHAR},
      SIGN_USER_ARCHIVE = #{record.signUserArchive,jdbcType=INTEGER},
      BUY_ID_CARD_TYPE = #{record.buyIdCardType,jdbcType=INTEGER},
      SELL_ID_CARD_TYPE = #{record.sellIdCardType,jdbcType=INTEGER},
      SELL_ID_CARD_BAK_TYPE = #{record.sellIdCardBakType,jdbcType=INTEGER},
      BUY_ID_CARD_BAK_TYPE = #{record.buyIdCardBakType,jdbcType=INTEGER},
      SELLER_PROXY_IDCARD_TYPE = #{record.sellerProxyIdcardType,jdbcType=INTEGER},
      BUYER_PROXY_IDCARD_TYPE = #{record.buyerProxyIdcardType,jdbcType=INTEGER},
      ENTRUST_BANK = #{record.entrustBank,jdbcType=VARCHAR},
      ENTRUST_MONEY = #{record.entrustMoney,jdbcType=NUMERIC},
      FIRST_TRIAL_COMPLETE_DATE = #{record.firstTrialCompleteDate,jdbcType=VARCHAR},
      RECHECK_COMPLETE_DATE = #{record.recheckCompleteDate,jdbcType=VARCHAR},
      INVALID_COMPLETE_DATE = #{record.invalidCompleteDate,jdbcType=VARCHAR},
      DEAL_AUDIT_STATUS_BEFORE = #{record.dealAuditStatusBefore,jdbcType=TINYINT},
      SSQ_CONTRACT_ID = #{record.ssqContractId,jdbcType=VARCHAR},
      SELL_OWNER_WX_USER_ID = #{record.sellOwnerWxUserId,jdbcType=VARCHAR},
      SELL_OWNER_WX_OPEN_ID = #{record.sellOwnerWxOpenId,jdbcType=VARCHAR},
      BUY_OWNER_WX_USER_ID = #{record.buyOwnerWxUserId,jdbcType=VARCHAR},
      BUY_OWNER_WX_OPEN_ID = #{record.buyOwnerWxOpenId,jdbcType=VARCHAR},
      SIGN_TYPE = #{record.signType,jdbcType=TINYINT},
      SIGN_SITE_DEPT = #{record.signSiteDept,jdbcType=INTEGER},
      SIGN_SITE_GR = #{record.signSiteGr,jdbcType=INTEGER},
      INTRODUCER_ID = #{record.introducerId,jdbcType=INTEGER},
      ADULT_PROMOTION_ID = #{record.adultPromotionId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunDeal">
    <!--@mbggenerated-->
    update FUN_DEAL
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="agreementNo != null">
        AGREEMENT_NO = #{agreementNo,jdbcType=VARCHAR},
      </if>
      <if test="creatorDate != null">
        CREATOR_DATE = #{creatorDate,jdbcType=VARCHAR},
      </if>
      <if test="dealType != null">
        DEAL_TYPE = #{dealType,jdbcType=TINYINT},
      </if>
      <if test="dealStatus != null">
        DEAL_STATUS = #{dealStatus,jdbcType=TINYINT},
      </if>
      <if test="dealUserId != null">
        DEAL_USER_ID = #{dealUserId,jdbcType=INTEGER},
      </if>
      <if test="dealComplete != null">
        DEAL_COMPLETE = #{dealComplete,jdbcType=TINYINT},
      </if>
      <if test="dealVerifyTime != null">
        DEAL_VERIFY_TIME = #{dealVerifyTime,jdbcType=VARCHAR},
      </if>
      <if test="dealBuyStyle != null">
        DEAL_BUY_STYLE = #{dealBuyStyle,jdbcType=TINYINT},
      </if>
      <if test="dealSellStyle != null">
        DEAL_SELL_STYLE = #{dealSellStyle,jdbcType=TINYINT},
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      </if>
      <if test="dealCustomerId != null">
        DEAL_CUSTOMER_ID = #{dealCustomerId,jdbcType=INTEGER},
      </if>
      <if test="dealCustomerNo != null">
        DEAL_CUSTOMER_NO = #{dealCustomerNo,jdbcType=VARCHAR},
      </if>
      <if test="dealHouseId != null">
        DEAL_HOUSE_ID = #{dealHouseId,jdbcType=INTEGER},
      </if>
      <if test="dealHouseNo != null">
        DEAL_HOUSE_NO = #{dealHouseNo,jdbcType=VARCHAR},
      </if>
      <if test="sellAddress != null">
        SELL_ADDRESS = #{sellAddress,jdbcType=VARCHAR},
      </if>
      <if test="buyCustinfo != null">
        BUY_CUSTINFO = #{buyCustinfo,jdbcType=VARCHAR},
      </if>
      <if test="sellHezuoCompname != null">
        SELL_HEZUO_COMPNAME = #{sellHezuoCompname,jdbcType=VARCHAR},
      </if>
      <if test="buyHezuoCompname != null">
        BUY_HEZUO_COMPNAME = #{buyHezuoCompname,jdbcType=VARCHAR},
      </if>
      <if test="buyContactuser != null">
        BUY_CONTACTUSER = #{buyContactuser,jdbcType=VARCHAR},
      </if>
      <if test="sellContactuser != null">
        SELL_CONTACTUSER = #{sellContactuser,jdbcType=VARCHAR},
      </if>
      <if test="buyOwnerName != null">
        BUY_OWNER_NAME = #{buyOwnerName,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerName != null">
        SELL_OWNER_NAME = #{sellOwnerName,jdbcType=VARCHAR},
      </if>
      <if test="buyCallPhone != null">
        BUY_CALL_PHONE = #{buyCallPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellCallPhone != null">
        SELL_CALL_PHONE = #{sellCallPhone,jdbcType=VARCHAR},
      </if>
      <if test="buyIdCard != null">
        BUY_ID_CARD = #{buyIdCard,jdbcType=VARCHAR},
      </if>
      <if test="sellIdCard != null">
        SELL_ID_CARD = #{sellIdCard,jdbcType=VARCHAR},
      </if>
      <if test="buyPaymoney != null">
        BUY_PAYMONEY = #{buyPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="sellPaymoney != null">
        SELL_PAYMONEY = #{sellPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="otherPaymoney != null">
        OTHER_PAYMONEY = #{otherPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="gainMoney != null">
        GAIN_MONEY = #{gainMoney,jdbcType=NUMERIC},
      </if>
      <if test="realBuyPaymoney != null">
        REAL_BUY_PAYMONEY = #{realBuyPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="realSellPaymoney != null">
        REAL_SELL_PAYMONEY = #{realSellPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="realOtherPaymoney != null">
        REAL_OTHER_PAYMONEY = #{realOtherPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="realPaymoney != null">
        REAL_PAYMONEY = #{realPaymoney,jdbcType=NUMERIC},
      </if>
      <if test="buyPriceMoney != null">
        BUY_PRICE_MONEY = #{buyPriceMoney,jdbcType=VARCHAR},
      </if>
      <if test="buyMortgageType != null">
        BUY_MORTGAGE_TYPE = #{buyMortgageType,jdbcType=TINYINT},
      </if>
      <if test="sellDealMoney != null">
        SELL_DEAL_MONEY = #{sellDealMoney,jdbcType=NUMERIC},
      </if>
      <if test="sellIshaveLoan != null">
        SELL_ISHAVE_LOAN = #{sellIshaveLoan,jdbcType=BIT},
      </if>
      <if test="sellLoanMoney != null">
        SELL_LOAN_MONEY = #{sellLoanMoney,jdbcType=NUMERIC},
      </if>
      <if test="sellReturnLoan != null">
        SELL_RETURN_LOAN = #{sellReturnLoan,jdbcType=BIT},
      </if>
      <if test="ownerStyle != null">
        OWNER_STYLE = #{ownerStyle,jdbcType=INTEGER},
      </if>
      <if test="ownerType != null">
        OWNER_TYPE = #{ownerType,jdbcType=TINYINT},
      </if>
      <if test="ownerNo != null">
        OWNER_NO = #{ownerNo,jdbcType=VARCHAR},
      </if>
      <if test="haveLandcard != null">
        HAVE_LANDCARD = #{haveLandcard,jdbcType=BIT},
      </if>
      <if test="landcardNo != null">
        LANDCARD_NO = #{landcardNo,jdbcType=VARCHAR},
      </if>
      <if test="mangementTax != null">
        MANGEMENT_TAX = #{mangementTax,jdbcType=BIT},
      </if>
      <if test="ownerTax != null">
        OWNER_TAX = #{ownerTax,jdbcType=BIT},
      </if>
      <if test="tax != null">
        TAX = #{tax,jdbcType=VARCHAR},
      </if>
      <if test="tradeRemarkExplain != null">
        TRADE_REMARK_EXPLAIN = #{tradeRemarkExplain,jdbcType=VARCHAR},
      </if>
      <if test="rentDealMoney != null">
        RENT_DEAL_MONEY = #{rentDealMoney,jdbcType=NUMERIC},
      </if>
      <if test="rentPriceUnit != null">
        RENT_PRICE_UNIT = #{rentPriceUnit,jdbcType=TINYINT},
      </if>
      <if test="rentDate != null">
        RENT_DATE = #{rentDate,jdbcType=VARCHAR},
      </if>
      <if test="rentOverDate != null">
        RENT_OVER_DATE = #{rentOverDate,jdbcType=VARCHAR},
      </if>
      <if test="rentPayMethod != null">
        RENT_PAY_METHOD = #{rentPayMethod,jdbcType=TINYINT},
      </if>
      <if test="rentPaySpace != null">
        RENT_PAY_SPACE = #{rentPaySpace,jdbcType=VARCHAR},
      </if>
      <if test="rentPayEarly != null">
        RENT_PAY_EARLY = #{rentPayEarly,jdbcType=VARCHAR},
      </if>
      <if test="rentDepositPay != null">
        RENT_DEPOSIT_PAY = #{rentDepositPay,jdbcType=NUMERIC},
      </if>
      <if test="rentOtherMoney != null">
        RENT_OTHER_MONEY = #{rentOtherMoney,jdbcType=NUMERIC},
      </if>
      <if test="goodsdetailed != null">
        GOODSDETAILED = #{goodsdetailed,jdbcType=VARCHAR},
      </if>
      <if test="waterlightexpenses != null">
        WATERLIGHTEXPENSES = #{waterlightexpenses,jdbcType=VARCHAR},
      </if>
      <if test="systemRecordTime != null">
        SYSTEM_RECORD_TIME = #{systemRecordTime,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="creatorUid != null">
        CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      </if>
      <if test="updateUid != null">
        UPDATE_UID = #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="custDeptname != null">
        CUST_DEPTNAME = #{custDeptname,jdbcType=VARCHAR},
      </if>
      <if test="custUsername != null">
        CUST_USERNAME = #{custUsername,jdbcType=VARCHAR},
      </if>
      <if test="custUserUid != null">
        CUST_USER_UID = #{custUserUid,jdbcType=INTEGER},
      </if>
      <if test="custDeptId != null">
        CUST_DEPT_ID = #{custDeptId,jdbcType=INTEGER},
      </if>
      <if test="custPlate != null">
        CUST_PLATE = #{custPlate,jdbcType=TINYINT},
      </if>
      <if test="houseDeptname != null">
        HOUSE_DEPTNAME = #{houseDeptname,jdbcType=VARCHAR},
      </if>
      <if test="houseUsername != null">
        HOUSE_USERNAME = #{houseUsername,jdbcType=VARCHAR},
      </if>
      <if test="houseUserUid != null">
        HOUSE_USER_UID = #{houseUserUid,jdbcType=INTEGER},
      </if>
      <if test="houseDeptId != null">
        HOUSE_DEPT_ID = #{houseDeptId,jdbcType=INTEGER},
      </if>
      <if test="housePlate != null">
        HOUSE_PLATE = #{housePlate,jdbcType=TINYINT},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="buildName != null">
        BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="houseaddress != null">
        HOUSEADDRESS = #{houseaddress,jdbcType=VARCHAR},
      </if>
      <if test="realTotalprice != null">
        REAL_TOTALPRICE = #{realTotalprice,jdbcType=NUMERIC},
      </if>
      <if test="dealDeptId != null">
        DEAL_DEPT_ID = #{dealDeptId,jdbcType=INTEGER},
      </if>
      <if test="houseDuetimeTaskId != null">
        HOUSE_DUETIME_TASK_ID = #{houseDuetimeTaskId,jdbcType=INTEGER},
      </if>
      <if test="custDuetimeTaskId != null">
        CUST_DUETIME_TASK_ID = #{custDuetimeTaskId,jdbcType=INTEGER},
      </if>
      <if test="modelId != null">
        MODEL_ID = #{modelId,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null">
        CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="runstepId != null">
        RUNSTEP_ID = #{runstepId,jdbcType=INTEGER},
      </if>
      <if test="runstepName != null">
        RUNSTEP_NAME = #{runstepName,jdbcType=VARCHAR},
      </if>
      <if test="timelimitdate != null">
        TIMELIMITDATE = #{timelimitdate,jdbcType=VARCHAR},
      </if>
      <if test="executor != null">
        EXECUTOR = #{executor,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="completeUser != null">
        COMPLETE_USER = #{completeUser,jdbcType=INTEGER},
      </if>
      <if test="completeDate != null">
        COMPLETE_DATE = #{completeDate,jdbcType=VARCHAR},
      </if>
      <if test="modelName != null">
        MODEL_NAME = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="dealUserName != null">
        DEAL_USER_NAME = #{dealUserName,jdbcType=VARCHAR},
      </if>
      <if test="completeUserName != null">
        COMPLETE_USER_NAME = #{completeUserName,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null">
        CREATOR_NAME = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        AREA = #{area,jdbcType=NUMERIC},
      </if>
      <if test="fitment != null">
        FITMENT = #{fitment,jdbcType=TINYINT},
      </if>
      <if test="modelNo != null">
        MODEL_NO = #{modelNo,jdbcType=SMALLINT},
      </if>
      <if test="stepNo != null">
        STEP_NO = #{stepNo,jdbcType=SMALLINT},
      </if>
      <if test="updateUsername != null">
        UPDATE_USERNAME = #{updateUsername,jdbcType=VARCHAR},
      </if>
      <if test="lockFlag != null">
        LOCK_FLAG = #{lockFlag,jdbcType=TINYINT},
      </if>
      <if test="dealInfoType != null">
        DEAL_INFO_TYPE = #{dealInfoType,jdbcType=TINYINT},
      </if>
      <if test="isbyhand != null">
        ISBYHAND = #{isbyhand,jdbcType=TINYINT},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="signUserId != null">
        SIGN_USER_ID = #{signUserId,jdbcType=INTEGER},
      </if>
      <if test="signUserName != null">
        SIGN_USER_NAME = #{signUserName,jdbcType=VARCHAR},
      </if>
      <if test="signManagerId != null">
        SIGN_MANAGER_ID = #{signManagerId,jdbcType=INTEGER},
      </if>
      <if test="signManagerName != null">
        SIGN_MANAGER_NAME = #{signManagerName,jdbcType=VARCHAR},
      </if>
      <if test="signUserDeptId != null">
        SIGN_USER_DEPT_ID = #{signUserDeptId,jdbcType=INTEGER},
      </if>
      <if test="signUserDeptName != null">
        SIGN_USER_DEPT_NAME = #{signUserDeptName,jdbcType=VARCHAR},
      </if>
      <if test="signManagerDeptId != null">
        SIGN_MANAGER_DEPT_ID = #{signManagerDeptId,jdbcType=INTEGER},
      </if>
      <if test="signManagerDeptName != null">
        SIGN_MANAGER_DEPT_NAME = #{signManagerDeptName,jdbcType=VARCHAR},
      </if>
      <if test="financStatusId != null">
        FINANC_STATUS_ID = #{financStatusId,jdbcType=INTEGER},
      </if>
      <if test="financName != null">
        FINANC_NAME = #{financName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        CATEGORY_ID = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        CATEGORY_NAME = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        SIGN_DATE = #{signDate,jdbcType=VARCHAR},
      </if>
      <if test="transferDate != null">
        TRANSFER_DATE = #{transferDate,jdbcType=VARCHAR},
      </if>
      <if test="evidenceDate != null">
        EVIDENCE_DATE = #{evidenceDate,jdbcType=VARCHAR},
      </if>
      <if test="buyOwnerNameBak != null">
        BUY_OWNER_NAME_BAK = #{buyOwnerNameBak,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerNameBak != null">
        SELL_OWNER_NAME_BAK = #{sellOwnerNameBak,jdbcType=VARCHAR},
      </if>
      <if test="buyIdCardBak != null">
        BUY_ID_CARD_BAK = #{buyIdCardBak,jdbcType=VARCHAR},
      </if>
      <if test="sellIdCardBak != null">
        SELL_ID_CARD_BAK = #{sellIdCardBak,jdbcType=VARCHAR},
      </if>
      <if test="salePriceUnit != null">
        SALE_PRICE_UNIT = #{salePriceUnit,jdbcType=TINYINT},
      </if>
      <if test="rentCycle != null">
        RENT_CYCLE = #{rentCycle,jdbcType=VARCHAR},
      </if>
      <if test="codeId != null">
        CODE_ID = #{codeId,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null">
        PROCESS_STATUS = #{processStatus,jdbcType=TINYINT},
      </if>
      <if test="buyCustomerPhone != null">
        BUY_CUSTOMER_PHONE = #{buyCustomerPhone,jdbcType=VARCHAR},
      </if>
      <if test="buyCustomerPhoneencode != null">
        BUY_CUSTOMER_PHONEENCODE = #{buyCustomerPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerPhone != null">
        SELL_OWNER_PHONE = #{sellOwnerPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerPhoneencode != null">
        SELL_OWNER_PHONEENCODE = #{sellOwnerPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerPhoneBak != null">
        SELL_OWNER_PHONE_BAK = #{sellOwnerPhoneBak,jdbcType=VARCHAR},
      </if>
      <if test="buyCustomerPhoneBak != null">
        BUY_CUSTOMER_PHONE_BAK = #{buyCustomerPhoneBak,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null">
        CONTRACT_ID = #{contractId,jdbcType=INTEGER},
      </if>
      <if test="paytypeId != null">
        PAYTYPE_ID = #{paytypeId,jdbcType=INTEGER},
      </if>
      <if test="paytypeName != null">
        PAYTYPE_NAME = #{paytypeName,jdbcType=VARCHAR},
      </if>
      <if test="youAduitStatus != null">
        YOU_ADUIT_STATUS = #{youAduitStatus,jdbcType=TINYINT},
      </if>
      <if test="dealAuditStatus != null">
        DEAL_AUDIT_STATUS = #{dealAuditStatus,jdbcType=TINYINT},
      </if>
      <if test="commercialLoanDate != null">
        COMMERCIAL_LOAN_DATE = #{commercialLoanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commercialLenderDate != null">
        COMMERCIAL_LENDER_DATE = #{commercialLenderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commercialLenderLimit != null">
        COMMERCIAL_LENDER_LIMIT = #{commercialLenderLimit,jdbcType=VARCHAR},
      </if>
      <if test="commercialLenderBank != null">
        COMMERCIAL_LENDER_BANK = #{commercialLenderBank,jdbcType=VARCHAR},
      </if>
      <if test="providentLoanDate != null">
        PROVIDENT_LOAN_DATE = #{providentLoanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="providentLenderDate != null">
        PROVIDENT_LENDER_DATE = #{providentLenderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="providentLenderLimit != null">
        PROVIDENT_LENDER_LIMIT = #{providentLenderLimit,jdbcType=VARCHAR},
      </if>
      <if test="providentLenderBank != null">
        PROVIDENT_LENDER_BANK = #{providentLenderBank,jdbcType=VARCHAR},
      </if>
      <if test="totalNeedIncome != null">
        TOTAL_NEED_INCOME = #{totalNeedIncome,jdbcType=NUMERIC},
      </if>
      <if test="totalRealIncome != null">
        TOTAL_REAL_INCOME = #{totalRealIncome,jdbcType=NUMERIC},
      </if>
      <if test="totalNeedPerformance != null">
        TOTAL_NEED_PERFORMANCE = #{totalNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="totalRealPerformance != null">
        TOTAL_REAL_PERFORMANCE = #{totalRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="needAduitStatus != null">
        NEED_ADUIT_STATUS = #{needAduitStatus,jdbcType=TINYINT},
      </if>
      <if test="realAduitStatus != null">
        REAL_ADUIT_STATUS = #{realAduitStatus,jdbcType=TINYINT},
      </if>
      <if test="intelligentSearch != null">
        INTELLIGENT_SEARCH = #{intelligentSearch,jdbcType=VARCHAR},
      </if>
      <if test="providentLoanMoney != null">
        PROVIDENT_LOAN_MONEY = #{providentLoanMoney,jdbcType=NUMERIC},
      </if>
      <if test="commercialLoanMoney != null">
        COMMERCIAL_LOAN_MONEY = #{commercialLoanMoney,jdbcType=NUMERIC},
      </if>
      <if test="taxesAuditStatus != null">
        TAXES_AUDIT_STATUS = #{taxesAuditStatus,jdbcType=TINYINT},
      </if>
      <if test="taxesAuditName != null">
        TAXES_AUDIT_NAME = #{taxesAuditName,jdbcType=VARCHAR},
      </if>
      <if test="taxesAuditUser != null">
        TAXES_AUDIT_USER = #{taxesAuditUser,jdbcType=INTEGER},
      </if>
      <if test="taxesAuditTime != null">
        TAXES_AUDIT_TIME = #{taxesAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealAuditor != null">
        DEAL_AUDITOR = #{dealAuditor,jdbcType=VARCHAR},
      </if>
      <if test="youAduitOpinion != null">
        YOU_ADUIT_OPINION = #{youAduitOpinion,jdbcType=VARCHAR},
      </if>
      <if test="youDealFlag != null">
        YOU_DEAL_FLAG = #{youDealFlag,jdbcType=TINYINT},
      </if>
      <if test="subAduitTime != null">
        SUB_ADUIT_TIME = #{subAduitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="youjiaDeal != null">
        YOUJIA_DEAL = #{youjiaDeal,jdbcType=TINYINT},
      </if>
      <if test="buildRegName != null">
        BUILD_REG_NAME = #{buildRegName,jdbcType=VARCHAR},
      </if>
      <if test="buildRegId != null">
        BUILD_REG_ID = #{buildRegId,jdbcType=INTEGER},
      </if>
      <if test="processEndTime != null">
        PROCESS_END_TIME = #{processEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="youAduitStatusProtocol != null">
        YOU_ADUIT_STATUS_PROTOCOL = #{youAduitStatusProtocol,jdbcType=TINYINT},
      </if>
      <if test="protocolId != null">
        PROTOCOL_ID = #{protocolId,jdbcType=INTEGER},
      </if>
      <if test="transferNeedPerformance != null">
        TRANSFER_NEED_PERFORMANCE = #{transferNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="transferRealPerformance != null">
        TRANSFER_REAL_PERFORMANCE = #{transferRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="secondhandNeedPerformance != null">
        SECONDHAND_NEED_PERFORMANCE = #{secondhandNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="secondhandRealPerformance != null">
        SECONDHAND_REAL_PERFORMANCE = #{secondhandRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="newhouseNeedPerformance != null">
        NEWHOUSE_NEED_PERFORMANCE = #{newhouseNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="newhouseRealPerformance != null">
        NEWHOUSE_REAL_PERFORMANCE = #{newhouseRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="leaseNeedPerformance != null">
        LEASE_NEED_PERFORMANCE = #{leaseNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="leaseRealPerformance != null">
        LEASE_REAL_PERFORMANCE = #{leaseRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="financeNeedPerformance != null">
        FINANCE_NEED_PERFORMANCE = #{financeNeedPerformance,jdbcType=NUMERIC},
      </if>
      <if test="financeRealPerformance != null">
        FINANCE_REAL_PERFORMANCE = #{financeRealPerformance,jdbcType=NUMERIC},
      </if>
      <if test="commissionRate != null">
        COMMISSION_RATE = #{commissionRate,jdbcType=NUMERIC},
      </if>
      <if test="standardCommission != null">
        STANDARD_COMMISSION = #{standardCommission,jdbcType=NUMERIC},
      </if>
      <if test="codeType != null">
        CODE_TYPE = #{codeType,jdbcType=TINYINT},
      </if>
      <if test="sectionId != null">
        SECTION_ID = #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sellOwnerCommsion != null">
        SELL_OWNER_COMMSION = #{sellOwnerCommsion,jdbcType=NUMERIC},
      </if>
      <if test="buyCustomerCommsion != null">
        BUY_CUSTOMER_COMMSION = #{buyCustomerCommsion,jdbcType=NUMERIC},
      </if>
      <if test="planningUse != null">
        PLANNING_USE = #{planningUse,jdbcType=VARCHAR},
      </if>
      <if test="landcardType != null">
        LANDCARD_TYPE = #{landcardType,jdbcType=TINYINT},
      </if>
      <if test="mortgageType != null">
        MORTGAGE_TYPE = #{mortgageType,jdbcType=TINYINT},
      </if>
      <if test="leaseType != null">
        LEASE_TYPE = #{leaseType,jdbcType=TINYINT},
      </if>
      <if test="sellerProxyName != null">
        SELLER_PROXY_NAME = #{sellerProxyName,jdbcType=VARCHAR},
      </if>
      <if test="sellerProxyIdcard != null">
        SELLER_PROXY_IDCARD = #{sellerProxyIdcard,jdbcType=VARCHAR},
      </if>
      <if test="sellerProxyPhone != null">
        SELLER_PROXY_PHONE = #{sellerProxyPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellerProxyPhoneencode != null">
        SELLER_PROXY_PHONEENCODE = #{sellerProxyPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="buyerProxyName != null">
        BUYER_PROXY_NAME = #{buyerProxyName,jdbcType=VARCHAR},
      </if>
      <if test="buyerProxyIdcard != null">
        BUYER_PROXY_IDCARD = #{buyerProxyIdcard,jdbcType=VARCHAR},
      </if>
      <if test="buyerProxyPhone != null">
        BUYER_PROXY_PHONE = #{buyerProxyPhone,jdbcType=VARCHAR},
      </if>
      <if test="buyerProxyPhoneencode != null">
        BUYER_PROXY_PHONEENCODE = #{buyerProxyPhoneencode,jdbcType=VARCHAR},
      </if>
      <if test="houseHoldElectrical != null">
        HOUSE_HOLD_ELECTRICAL = #{houseHoldElectrical,jdbcType=TINYINT},
      </if>
      <if test="buyerTaxFee != null">
        BUYER_TAX_FEE = #{buyerTaxFee,jdbcType=VARCHAR},
      </if>
      <if test="sellerTaxFee != null">
        SELLER_TAX_FEE = #{sellerTaxFee,jdbcType=VARCHAR},
      </if>
      <if test="depositPayTime != null">
        DEPOSIT_PAY_TIME = #{depositPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="depositPayType != null">
        DEPOSIT_PAY_TYPE = #{depositPayType,jdbcType=TINYINT},
      </if>
      <if test="depositPayOther != null">
        DEPOSIT_PAY_OTHER = #{depositPayOther,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayType1 != null">
        DOWN_PAYMENTS_PAY_TYPE1 = #{downPaymentsPayType1,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayTime1 != null">
        DOWN_PAYMENTS_PAY_TIME1 = #{downPaymentsPayTime1,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayType1 != null">
        HOUSE_PRICE_LAST_PAY_TYPE1 = #{housePriceLastPayType1,jdbcType=TINYINT},
      </if>
      <if test="housePriceLastPayTime1 != null">
        HOUSE_PRICE_LAST_PAY_TIME1 = #{housePriceLastPayTime1,jdbcType=VARCHAR},
      </if>
      <if test="loanTimeLength != null">
        LOAN_TIME_LENGTH = #{loanTimeLength,jdbcType=VARCHAR},
      </if>
      <if test="loanAgency != null">
        LOAN_AGENCY = #{loanAgency,jdbcType=VARCHAR},
      </if>
      <if test="noPassSloutionType != null">
        NO_PASS_SLOUTION_TYPE = #{noPassSloutionType,jdbcType=TINYINT},
      </if>
      <if test="applicationRepaymentDays != null">
        APPLICATION_REPAYMENT_DAYS = #{applicationRepaymentDays,jdbcType=INTEGER},
      </if>
      <if test="applicationRepaymentOther != null">
        APPLICATION_REPAYMENT_OTHER = #{applicationRepaymentOther,jdbcType=VARCHAR},
      </if>
      <if test="ownershipObligatiionNumber != null">
        OWNERSHIP_OBLIGATIION_NUMBER = #{ownershipObligatiionNumber,jdbcType=VARCHAR},
      </if>
      <if test="houseProperty != null">
        HOUSE_PROPERTY = #{houseProperty,jdbcType=VARCHAR},
      </if>
      <if test="sellerBankType != null">
        SELLER_BANK_TYPE = #{sellerBankType,jdbcType=VARCHAR},
      </if>
      <if test="sellerBankUserName != null">
        SELLER_BANK_USER_NAME = #{sellerBankUserName,jdbcType=VARCHAR},
      </if>
      <if test="sellerBankAccount != null">
        SELLER_BANK_ACCOUNT = #{sellerBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="buyerBankType != null">
        BUYER_BANK_TYPE = #{buyerBankType,jdbcType=VARCHAR},
      </if>
      <if test="buyerBankUserName != null">
        BUYER_BANK_USER_NAME = #{buyerBankUserName,jdbcType=VARCHAR},
      </if>
      <if test="buyerBankAccount != null">
        BUYER_BANK_ACCOUNT = #{buyerBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayType2 != null">
        DOWN_PAYMENTS_PAY_TYPE2 = #{downPaymentsPayType2,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayTime2 != null">
        DOWN_PAYMENTS_PAY_TIME2 = #{downPaymentsPayTime2,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayType3 != null">
        DOWN_PAYMENTS_PAY_TYPE3 = #{downPaymentsPayType3,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayTime3 != null">
        DOWN_PAYMENTS_PAY_TIME3 = #{downPaymentsPayTime3,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayType2 != null">
        HOUSE_PRICE_LAST_PAY_TYPE2 = #{housePriceLastPayType2,jdbcType=TINYINT},
      </if>
      <if test="housePriceLastPayTime2 != null">
        HOUSE_PRICE_LAST_PAY_TIME2 = #{housePriceLastPayTime2,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayType3 != null">
        HOUSE_PRICE_LAST_PAY_TYPE3 = #{housePriceLastPayType3,jdbcType=TINYINT},
      </if>
      <if test="housePriceLastPayTime3 != null">
        HOUSE_PRICE_LAST_PAY_TIME3 = #{housePriceLastPayTime3,jdbcType=VARCHAR},
      </if>
      <if test="transferDateStr != null">
        TRANSFER_DATE_STR = #{transferDateStr,jdbcType=VARCHAR},
      </if>
      <if test="transferDateDaysPickup != null">
        TRANSFER_DATE_DAYS_PICKUP = #{transferDateDaysPickup,jdbcType=INTEGER},
      </if>
      <if test="transferDateDaysRegist != null">
        TRANSFER_DATE_DAYS_REGIST = #{transferDateDaysRegist,jdbcType=INTEGER},
      </if>
      <if test="waterLeakage != null">
        WATER_LEAKAGE = #{waterLeakage,jdbcType=TINYINT},
      </if>
      <if test="waterLeakagePosition != null">
        WATER_LEAKAGE_POSITION = #{waterLeakagePosition,jdbcType=VARCHAR},
      </if>
      <if test="waterLeakageConsult != null">
        WATER_LEAKAGE_CONSULT = #{waterLeakageConsult,jdbcType=TINYINT},
      </if>
      <if test="waterLeakageConsultBearParty != null">
        WATER_LEAKAGE_CONSULT_BEAR_PARTY = #{waterLeakageConsultBearParty,jdbcType=TINYINT},
      </if>
      <if test="deathEvent != null">
        DEATH_EVENT = #{deathEvent,jdbcType=VARCHAR},
      </if>
      <if test="housePeeling != null">
        HOUSE_PEELING = #{housePeeling,jdbcType=TINYINT},
      </if>
      <if test="housePeelingPosition != null">
        HOUSE_PEELING_POSITION = #{housePeelingPosition,jdbcType=VARCHAR},
      </if>
      <if test="submitLoanInfoFeeDays != null">
        SUBMIT_LOAN_INFO_FEE_DAYS = #{submitLoanInfoFeeDays,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayParty1 != null">
        DOWN_PAYMENTS_PAY_PARTY1 = #{downPaymentsPayParty1,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayParty2 != null">
        DOWN_PAYMENTS_PAY_PARTY2 = #{downPaymentsPayParty2,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayParty3 != null">
        DOWN_PAYMENTS_PAY_PARTY3 = #{downPaymentsPayParty3,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsPayBank != null">
        DOWN_PAYMENTS_PAY_BANK = #{downPaymentsPayBank,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAccountName != null">
        DOWN_PAYMENTS_PAY_ACCOUNT_NAME = #{downPaymentsPayAccountName,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAccountNo != null">
        DOWN_PAYMENTS_PAY_ACCOUNT_NO = #{downPaymentsPayAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsThirdParty != null">
        DOWN_PAYMENTS_THIRD_PARTY = #{downPaymentsThirdParty,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsRemainingFirstPaytime != null">
        DOWN_PAYMENTS_REMAINING_FIRST_PAYTIME = #{downPaymentsRemainingFirstPaytime,jdbcType=VARCHAR},
      </if>
      <if test="housePeelingBearParty != null">
        HOUSE_PEELING_BEAR_PARTY = #{housePeelingBearParty,jdbcType=TINYINT},
      </if>
      <if test="downPaymentsRemainingFirstAmount != null">
        DOWN_PAYMENTS_REMAINING_FIRST_AMOUNT = #{downPaymentsRemainingFirstAmount,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayAmount3 != null">
        HOUSE_PRICE_LAST_PAY_AMOUNT3 = #{housePriceLastPayAmount3,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayAmount2 != null">
        HOUSE_PRICE_LAST_PAY_AMOUNT2 = #{housePriceLastPayAmount2,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAmount3 != null">
        DOWN_PAYMENTS_PAY_AMOUNT3 = #{downPaymentsPayAmount3,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAmount2 != null">
        DOWN_PAYMENTS_PAY_AMOUNT2 = #{downPaymentsPayAmount2,jdbcType=VARCHAR},
      </if>
      <if test="noPassSloutionAmount != null">
        NO_PASS_SLOUTION_AMOUNT = #{noPassSloutionAmount,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastPayAmount1 != null">
        HOUSE_PRICE_LAST_PAY_AMOUNT1 = #{housePriceLastPayAmount1,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsPayAmount1 != null">
        DOWN_PAYMENTS_PAY_AMOUNT1 = #{downPaymentsPayAmount1,jdbcType=VARCHAR},
      </if>
      <if test="housePriceLastAmount != null">
        HOUSE_PRICE_LAST_AMOUNT = #{housePriceLastAmount,jdbcType=VARCHAR},
      </if>
      <if test="downPaymentsAmount != null">
        DOWN_PAYMENTS_AMOUNT = #{downPaymentsAmount,jdbcType=VARCHAR},
      </if>
      <if test="depositAmount != null">
        DEPOSIT_AMOUNT = #{depositAmount,jdbcType=VARCHAR},
      </if>
      <if test="mortgageAmount != null">
        MORTGAGE_AMOUNT = #{mortgageAmount,jdbcType=VARCHAR},
      </if>
      <if test="signUserArchive != null">
        SIGN_USER_ARCHIVE = #{signUserArchive,jdbcType=INTEGER},
      </if>
      <if test="buyIdCardType != null">
        BUY_ID_CARD_TYPE = #{buyIdCardType,jdbcType=INTEGER},
      </if>
      <if test="sellIdCardType != null">
        SELL_ID_CARD_TYPE = #{sellIdCardType,jdbcType=INTEGER},
      </if>
      <if test="sellIdCardBakType != null">
        SELL_ID_CARD_BAK_TYPE = #{sellIdCardBakType,jdbcType=INTEGER},
      </if>
      <if test="buyIdCardBakType != null">
        BUY_ID_CARD_BAK_TYPE = #{buyIdCardBakType,jdbcType=INTEGER},
      </if>
      <if test="sellerProxyIdcardType != null">
        SELLER_PROXY_IDCARD_TYPE = #{sellerProxyIdcardType,jdbcType=INTEGER},
      </if>
      <if test="buyerProxyIdcardType != null">
        BUYER_PROXY_IDCARD_TYPE = #{buyerProxyIdcardType,jdbcType=INTEGER},
      </if>
      <if test="entrustBank != null">
        ENTRUST_BANK = #{entrustBank,jdbcType=VARCHAR},
      </if>
      <if test="entrustMoney != null">
        ENTRUST_MONEY = #{entrustMoney,jdbcType=NUMERIC},
      </if>
      <if test="firstTrialCompleteDate != null">
        FIRST_TRIAL_COMPLETE_DATE = #{firstTrialCompleteDate,jdbcType=VARCHAR},
      </if>
      <if test="recheckCompleteDate != null">
        RECHECK_COMPLETE_DATE = #{recheckCompleteDate,jdbcType=VARCHAR},
      </if>
      <if test="invalidCompleteDate != null">
        INVALID_COMPLETE_DATE = #{invalidCompleteDate,jdbcType=VARCHAR},
      </if>
      <if test="dealAuditStatusBefore != null">
        DEAL_AUDIT_STATUS_BEFORE = #{dealAuditStatusBefore,jdbcType=TINYINT},
      </if>
      <if test="ssqContractId != null">
        SSQ_CONTRACT_ID = #{ssqContractId,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerWxUserId != null">
        SELL_OWNER_WX_USER_ID = #{sellOwnerWxUserId,jdbcType=VARCHAR},
      </if>
      <if test="sellOwnerWxOpenId != null">
        SELL_OWNER_WX_OPEN_ID = #{sellOwnerWxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="buyOwnerWxUserId != null">
        BUY_OWNER_WX_USER_ID = #{buyOwnerWxUserId,jdbcType=VARCHAR},
      </if>
      <if test="buyOwnerWxOpenId != null">
        BUY_OWNER_WX_OPEN_ID = #{buyOwnerWxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="signType != null">
        SIGN_TYPE = #{signType,jdbcType=TINYINT},
      </if>
      <if test="signSiteDept != null">
        SIGN_SITE_DEPT = #{signSiteDept,jdbcType=INTEGER},
      </if>
      <if test="signSiteGr != null">
        SIGN_SITE_GR = #{signSiteGr,jdbcType=INTEGER},
      </if>
      <if test="introducerId != null">
        INTRODUCER_ID = #{introducerId,jdbcType=INTEGER},
      </if>
      <if test="adultPromotionId != null">
        ADULT_PROMOTION_ID = #{adultPromotionId,jdbcType=INTEGER},
      </if>
    </set>
    where DEAL_ID = #{dealId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunDeal">
    <!--@mbggenerated-->
    update FUN_DEAL
    set COMP_ID = #{compId,jdbcType=INTEGER},
      AGREEMENT_NO = #{agreementNo,jdbcType=VARCHAR},
      CREATOR_DATE = #{creatorDate,jdbcType=VARCHAR},
      DEAL_TYPE = #{dealType,jdbcType=TINYINT},
      DEAL_STATUS = #{dealStatus,jdbcType=TINYINT},
      DEAL_USER_ID = #{dealUserId,jdbcType=INTEGER},
      DEAL_COMPLETE = #{dealComplete,jdbcType=TINYINT},
      DEAL_VERIFY_TIME = #{dealVerifyTime,jdbcType=VARCHAR},
      DEAL_BUY_STYLE = #{dealBuyStyle,jdbcType=TINYINT},
      DEAL_SELL_STYLE = #{dealSellStyle,jdbcType=TINYINT},
      HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      DEAL_CUSTOMER_ID = #{dealCustomerId,jdbcType=INTEGER},
      DEAL_CUSTOMER_NO = #{dealCustomerNo,jdbcType=VARCHAR},
      DEAL_HOUSE_ID = #{dealHouseId,jdbcType=INTEGER},
      DEAL_HOUSE_NO = #{dealHouseNo,jdbcType=VARCHAR},
      SELL_ADDRESS = #{sellAddress,jdbcType=VARCHAR},
      BUY_CUSTINFO = #{buyCustinfo,jdbcType=VARCHAR},
      SELL_HEZUO_COMPNAME = #{sellHezuoCompname,jdbcType=VARCHAR},
      BUY_HEZUO_COMPNAME = #{buyHezuoCompname,jdbcType=VARCHAR},
      BUY_CONTACTUSER = #{buyContactuser,jdbcType=VARCHAR},
      SELL_CONTACTUSER = #{sellContactuser,jdbcType=VARCHAR},
      BUY_OWNER_NAME = #{buyOwnerName,jdbcType=VARCHAR},
      SELL_OWNER_NAME = #{sellOwnerName,jdbcType=VARCHAR},
      BUY_CALL_PHONE = #{buyCallPhone,jdbcType=VARCHAR},
      SELL_CALL_PHONE = #{sellCallPhone,jdbcType=VARCHAR},
      BUY_ID_CARD = #{buyIdCard,jdbcType=VARCHAR},
      SELL_ID_CARD = #{sellIdCard,jdbcType=VARCHAR},
      BUY_PAYMONEY = #{buyPaymoney,jdbcType=NUMERIC},
      SELL_PAYMONEY = #{sellPaymoney,jdbcType=NUMERIC},
      OTHER_PAYMONEY = #{otherPaymoney,jdbcType=NUMERIC},
      GAIN_MONEY = #{gainMoney,jdbcType=NUMERIC},
      REAL_BUY_PAYMONEY = #{realBuyPaymoney,jdbcType=NUMERIC},
      REAL_SELL_PAYMONEY = #{realSellPaymoney,jdbcType=NUMERIC},
      REAL_OTHER_PAYMONEY = #{realOtherPaymoney,jdbcType=NUMERIC},
      REAL_PAYMONEY = #{realPaymoney,jdbcType=NUMERIC},
      BUY_PRICE_MONEY = #{buyPriceMoney,jdbcType=VARCHAR},
      BUY_MORTGAGE_TYPE = #{buyMortgageType,jdbcType=TINYINT},
      SELL_DEAL_MONEY = #{sellDealMoney,jdbcType=NUMERIC},
      SELL_ISHAVE_LOAN = #{sellIshaveLoan,jdbcType=BIT},
      SELL_LOAN_MONEY = #{sellLoanMoney,jdbcType=NUMERIC},
      SELL_RETURN_LOAN = #{sellReturnLoan,jdbcType=BIT},
      OWNER_STYLE = #{ownerStyle,jdbcType=INTEGER},
      OWNER_TYPE = #{ownerType,jdbcType=TINYINT},
      OWNER_NO = #{ownerNo,jdbcType=VARCHAR},
      HAVE_LANDCARD = #{haveLandcard,jdbcType=BIT},
      LANDCARD_NO = #{landcardNo,jdbcType=VARCHAR},
      MANGEMENT_TAX = #{mangementTax,jdbcType=BIT},
      OWNER_TAX = #{ownerTax,jdbcType=BIT},
      TAX = #{tax,jdbcType=VARCHAR},
      TRADE_REMARK_EXPLAIN = #{tradeRemarkExplain,jdbcType=VARCHAR},
      RENT_DEAL_MONEY = #{rentDealMoney,jdbcType=NUMERIC},
      RENT_PRICE_UNIT = #{rentPriceUnit,jdbcType=TINYINT},
      RENT_DATE = #{rentDate,jdbcType=VARCHAR},
      RENT_OVER_DATE = #{rentOverDate,jdbcType=VARCHAR},
      RENT_PAY_METHOD = #{rentPayMethod,jdbcType=TINYINT},
      RENT_PAY_SPACE = #{rentPaySpace,jdbcType=VARCHAR},
      RENT_PAY_EARLY = #{rentPayEarly,jdbcType=VARCHAR},
      RENT_DEPOSIT_PAY = #{rentDepositPay,jdbcType=NUMERIC},
      RENT_OTHER_MONEY = #{rentOtherMoney,jdbcType=NUMERIC},
      GOODSDETAILED = #{goodsdetailed,jdbcType=VARCHAR},
      WATERLIGHTEXPENSES = #{waterlightexpenses,jdbcType=VARCHAR},
      SYSTEM_RECORD_TIME = #{systemRecordTime,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      CREATOR_UID = #{creatorUid,jdbcType=INTEGER},
      UPDATE_UID = #{updateUid,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CUST_DEPTNAME = #{custDeptname,jdbcType=VARCHAR},
      CUST_USERNAME = #{custUsername,jdbcType=VARCHAR},
      CUST_USER_UID = #{custUserUid,jdbcType=INTEGER},
      CUST_DEPT_ID = #{custDeptId,jdbcType=INTEGER},
      CUST_PLATE = #{custPlate,jdbcType=TINYINT},
      HOUSE_DEPTNAME = #{houseDeptname,jdbcType=VARCHAR},
      HOUSE_USERNAME = #{houseUsername,jdbcType=VARCHAR},
      HOUSE_USER_UID = #{houseUserUid,jdbcType=INTEGER},
      HOUSE_DEPT_ID = #{houseDeptId,jdbcType=INTEGER},
      HOUSE_PLATE = #{housePlate,jdbcType=TINYINT},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      HOUSEADDRESS = #{houseaddress,jdbcType=VARCHAR},
      REAL_TOTALPRICE = #{realTotalprice,jdbcType=NUMERIC},
      DEAL_DEPT_ID = #{dealDeptId,jdbcType=INTEGER},
      HOUSE_DUETIME_TASK_ID = #{houseDuetimeTaskId,jdbcType=INTEGER},
      CUST_DUETIME_TASK_ID = #{custDuetimeTaskId,jdbcType=INTEGER},
      MODEL_ID = #{modelId,jdbcType=INTEGER},
      CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      RUNSTEP_ID = #{runstepId,jdbcType=INTEGER},
      RUNSTEP_NAME = #{runstepName,jdbcType=VARCHAR},
      TIMELIMITDATE = #{timelimitdate,jdbcType=VARCHAR},
      EXECUTOR = #{executor,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR},
      COMPLETE_USER = #{completeUser,jdbcType=INTEGER},
      COMPLETE_DATE = #{completeDate,jdbcType=VARCHAR},
      MODEL_NAME = #{modelName,jdbcType=VARCHAR},
      DEAL_USER_NAME = #{dealUserName,jdbcType=VARCHAR},
      COMPLETE_USER_NAME = #{completeUserName,jdbcType=VARCHAR},
      CREATOR_NAME = #{creatorName,jdbcType=VARCHAR},
      AREA = #{area,jdbcType=NUMERIC},
      FITMENT = #{fitment,jdbcType=TINYINT},
      MODEL_NO = #{modelNo,jdbcType=SMALLINT},
      STEP_NO = #{stepNo,jdbcType=SMALLINT},
      UPDATE_USERNAME = #{updateUsername,jdbcType=VARCHAR},
      LOCK_FLAG = #{lockFlag,jdbcType=TINYINT},
      DEAL_INFO_TYPE = #{dealInfoType,jdbcType=TINYINT},
      ISBYHAND = #{isbyhand,jdbcType=TINYINT},
      REG_ID = #{regId,jdbcType=INTEGER},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      SIGN_USER_ID = #{signUserId,jdbcType=INTEGER},
      SIGN_USER_NAME = #{signUserName,jdbcType=VARCHAR},
      SIGN_MANAGER_ID = #{signManagerId,jdbcType=INTEGER},
      SIGN_MANAGER_NAME = #{signManagerName,jdbcType=VARCHAR},
      SIGN_USER_DEPT_ID = #{signUserDeptId,jdbcType=INTEGER},
      SIGN_USER_DEPT_NAME = #{signUserDeptName,jdbcType=VARCHAR},
      SIGN_MANAGER_DEPT_ID = #{signManagerDeptId,jdbcType=INTEGER},
      SIGN_MANAGER_DEPT_NAME = #{signManagerDeptName,jdbcType=VARCHAR},
      FINANC_STATUS_ID = #{financStatusId,jdbcType=INTEGER},
      FINANC_NAME = #{financName,jdbcType=VARCHAR},
      CATEGORY_ID = #{categoryId,jdbcType=INTEGER},
      CATEGORY_NAME = #{categoryName,jdbcType=VARCHAR},
      SIGN_DATE = #{signDate,jdbcType=VARCHAR},
      TRANSFER_DATE = #{transferDate,jdbcType=VARCHAR},
      EVIDENCE_DATE = #{evidenceDate,jdbcType=VARCHAR},
      BUY_OWNER_NAME_BAK = #{buyOwnerNameBak,jdbcType=VARCHAR},
      SELL_OWNER_NAME_BAK = #{sellOwnerNameBak,jdbcType=VARCHAR},
      BUY_ID_CARD_BAK = #{buyIdCardBak,jdbcType=VARCHAR},
      SELL_ID_CARD_BAK = #{sellIdCardBak,jdbcType=VARCHAR},
      SALE_PRICE_UNIT = #{salePriceUnit,jdbcType=TINYINT},
      RENT_CYCLE = #{rentCycle,jdbcType=VARCHAR},
      CODE_ID = #{codeId,jdbcType=INTEGER},
      PROCESS_STATUS = #{processStatus,jdbcType=TINYINT},
      BUY_CUSTOMER_PHONE = #{buyCustomerPhone,jdbcType=VARCHAR},
      BUY_CUSTOMER_PHONEENCODE = #{buyCustomerPhoneencode,jdbcType=VARCHAR},
      SELL_OWNER_PHONE = #{sellOwnerPhone,jdbcType=VARCHAR},
      SELL_OWNER_PHONEENCODE = #{sellOwnerPhoneencode,jdbcType=VARCHAR},
      SELL_OWNER_PHONE_BAK = #{sellOwnerPhoneBak,jdbcType=VARCHAR},
      BUY_CUSTOMER_PHONE_BAK = #{buyCustomerPhoneBak,jdbcType=VARCHAR},
      CONTRACT_ID = #{contractId,jdbcType=INTEGER},
      PAYTYPE_ID = #{paytypeId,jdbcType=INTEGER},
      PAYTYPE_NAME = #{paytypeName,jdbcType=VARCHAR},
      YOU_ADUIT_STATUS = #{youAduitStatus,jdbcType=TINYINT},
      DEAL_AUDIT_STATUS = #{dealAuditStatus,jdbcType=TINYINT},
      COMMERCIAL_LOAN_DATE = #{commercialLoanDate,jdbcType=TIMESTAMP},
      COMMERCIAL_LENDER_DATE = #{commercialLenderDate,jdbcType=TIMESTAMP},
      COMMERCIAL_LENDER_LIMIT = #{commercialLenderLimit,jdbcType=VARCHAR},
      COMMERCIAL_LENDER_BANK = #{commercialLenderBank,jdbcType=VARCHAR},
      PROVIDENT_LOAN_DATE = #{providentLoanDate,jdbcType=TIMESTAMP},
      PROVIDENT_LENDER_DATE = #{providentLenderDate,jdbcType=TIMESTAMP},
      PROVIDENT_LENDER_LIMIT = #{providentLenderLimit,jdbcType=VARCHAR},
      PROVIDENT_LENDER_BANK = #{providentLenderBank,jdbcType=VARCHAR},
      TOTAL_NEED_INCOME = #{totalNeedIncome,jdbcType=NUMERIC},
      TOTAL_REAL_INCOME = #{totalRealIncome,jdbcType=NUMERIC},
      TOTAL_NEED_PERFORMANCE = #{totalNeedPerformance,jdbcType=NUMERIC},
      TOTAL_REAL_PERFORMANCE = #{totalRealPerformance,jdbcType=NUMERIC},
      NEED_ADUIT_STATUS = #{needAduitStatus,jdbcType=TINYINT},
      REAL_ADUIT_STATUS = #{realAduitStatus,jdbcType=TINYINT},
      INTELLIGENT_SEARCH = #{intelligentSearch,jdbcType=VARCHAR},
      PROVIDENT_LOAN_MONEY = #{providentLoanMoney,jdbcType=NUMERIC},
      COMMERCIAL_LOAN_MONEY = #{commercialLoanMoney,jdbcType=NUMERIC},
      TAXES_AUDIT_STATUS = #{taxesAuditStatus,jdbcType=TINYINT},
      TAXES_AUDIT_NAME = #{taxesAuditName,jdbcType=VARCHAR},
      TAXES_AUDIT_USER = #{taxesAuditUser,jdbcType=INTEGER},
      TAXES_AUDIT_TIME = #{taxesAuditTime,jdbcType=TIMESTAMP},
      DEAL_AUDITOR = #{dealAuditor,jdbcType=VARCHAR},
      YOU_ADUIT_OPINION = #{youAduitOpinion,jdbcType=VARCHAR},
      YOU_DEAL_FLAG = #{youDealFlag,jdbcType=TINYINT},
      SUB_ADUIT_TIME = #{subAduitTime,jdbcType=TIMESTAMP},
      YOUJIA_DEAL = #{youjiaDeal,jdbcType=TINYINT},
      BUILD_REG_NAME = #{buildRegName,jdbcType=VARCHAR},
      BUILD_REG_ID = #{buildRegId,jdbcType=INTEGER},
      PROCESS_END_TIME = #{processEndTime,jdbcType=TIMESTAMP},
      YOU_ADUIT_STATUS_PROTOCOL = #{youAduitStatusProtocol,jdbcType=TINYINT},
      PROTOCOL_ID = #{protocolId,jdbcType=INTEGER},
      TRANSFER_NEED_PERFORMANCE = #{transferNeedPerformance,jdbcType=NUMERIC},
      TRANSFER_REAL_PERFORMANCE = #{transferRealPerformance,jdbcType=NUMERIC},
      SECONDHAND_NEED_PERFORMANCE = #{secondhandNeedPerformance,jdbcType=NUMERIC},
      SECONDHAND_REAL_PERFORMANCE = #{secondhandRealPerformance,jdbcType=NUMERIC},
      NEWHOUSE_NEED_PERFORMANCE = #{newhouseNeedPerformance,jdbcType=NUMERIC},
      NEWHOUSE_REAL_PERFORMANCE = #{newhouseRealPerformance,jdbcType=NUMERIC},
      LEASE_NEED_PERFORMANCE = #{leaseNeedPerformance,jdbcType=NUMERIC},
      LEASE_REAL_PERFORMANCE = #{leaseRealPerformance,jdbcType=NUMERIC},
      FINANCE_NEED_PERFORMANCE = #{financeNeedPerformance,jdbcType=NUMERIC},
      FINANCE_REAL_PERFORMANCE = #{financeRealPerformance,jdbcType=NUMERIC},
      COMMISSION_RATE = #{commissionRate,jdbcType=NUMERIC},
      STANDARD_COMMISSION = #{standardCommission,jdbcType=NUMERIC},
      CODE_TYPE = #{codeType,jdbcType=TINYINT},
      SECTION_ID = #{sectionId,jdbcType=INTEGER},
      SELL_OWNER_COMMSION = #{sellOwnerCommsion,jdbcType=NUMERIC},
      BUY_CUSTOMER_COMMSION = #{buyCustomerCommsion,jdbcType=NUMERIC},
      PLANNING_USE = #{planningUse,jdbcType=VARCHAR},
      LANDCARD_TYPE = #{landcardType,jdbcType=TINYINT},
      MORTGAGE_TYPE = #{mortgageType,jdbcType=TINYINT},
      LEASE_TYPE = #{leaseType,jdbcType=TINYINT},
      SELLER_PROXY_NAME = #{sellerProxyName,jdbcType=VARCHAR},
      SELLER_PROXY_IDCARD = #{sellerProxyIdcard,jdbcType=VARCHAR},
      SELLER_PROXY_PHONE = #{sellerProxyPhone,jdbcType=VARCHAR},
      SELLER_PROXY_PHONEENCODE = #{sellerProxyPhoneencode,jdbcType=VARCHAR},
      BUYER_PROXY_NAME = #{buyerProxyName,jdbcType=VARCHAR},
      BUYER_PROXY_IDCARD = #{buyerProxyIdcard,jdbcType=VARCHAR},
      BUYER_PROXY_PHONE = #{buyerProxyPhone,jdbcType=VARCHAR},
      BUYER_PROXY_PHONEENCODE = #{buyerProxyPhoneencode,jdbcType=VARCHAR},
      HOUSE_HOLD_ELECTRICAL = #{houseHoldElectrical,jdbcType=TINYINT},
      BUYER_TAX_FEE = #{buyerTaxFee,jdbcType=VARCHAR},
      SELLER_TAX_FEE = #{sellerTaxFee,jdbcType=VARCHAR},
      DEPOSIT_PAY_TIME = #{depositPayTime,jdbcType=TIMESTAMP},
      DEPOSIT_PAY_TYPE = #{depositPayType,jdbcType=TINYINT},
      DEPOSIT_PAY_OTHER = #{depositPayOther,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_TYPE1 = #{downPaymentsPayType1,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_TIME1 = #{downPaymentsPayTime1,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_TYPE1 = #{housePriceLastPayType1,jdbcType=TINYINT},
      HOUSE_PRICE_LAST_PAY_TIME1 = #{housePriceLastPayTime1,jdbcType=VARCHAR},
      LOAN_TIME_LENGTH = #{loanTimeLength,jdbcType=VARCHAR},
      LOAN_AGENCY = #{loanAgency,jdbcType=VARCHAR},
      NO_PASS_SLOUTION_TYPE = #{noPassSloutionType,jdbcType=TINYINT},
      APPLICATION_REPAYMENT_DAYS = #{applicationRepaymentDays,jdbcType=INTEGER},
      APPLICATION_REPAYMENT_OTHER = #{applicationRepaymentOther,jdbcType=VARCHAR},
      OWNERSHIP_OBLIGATIION_NUMBER = #{ownershipObligatiionNumber,jdbcType=VARCHAR},
      HOUSE_PROPERTY = #{houseProperty,jdbcType=VARCHAR},
      SELLER_BANK_TYPE = #{sellerBankType,jdbcType=VARCHAR},
      SELLER_BANK_USER_NAME = #{sellerBankUserName,jdbcType=VARCHAR},
      SELLER_BANK_ACCOUNT = #{sellerBankAccount,jdbcType=VARCHAR},
      BUYER_BANK_TYPE = #{buyerBankType,jdbcType=VARCHAR},
      BUYER_BANK_USER_NAME = #{buyerBankUserName,jdbcType=VARCHAR},
      BUYER_BANK_ACCOUNT = #{buyerBankAccount,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_TYPE2 = #{downPaymentsPayType2,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_TIME2 = #{downPaymentsPayTime2,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_TYPE3 = #{downPaymentsPayType3,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_TIME3 = #{downPaymentsPayTime3,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_TYPE2 = #{housePriceLastPayType2,jdbcType=TINYINT},
      HOUSE_PRICE_LAST_PAY_TIME2 = #{housePriceLastPayTime2,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_TYPE3 = #{housePriceLastPayType3,jdbcType=TINYINT},
      HOUSE_PRICE_LAST_PAY_TIME3 = #{housePriceLastPayTime3,jdbcType=VARCHAR},
      TRANSFER_DATE_STR = #{transferDateStr,jdbcType=VARCHAR},
      TRANSFER_DATE_DAYS_PICKUP = #{transferDateDaysPickup,jdbcType=INTEGER},
      TRANSFER_DATE_DAYS_REGIST = #{transferDateDaysRegist,jdbcType=INTEGER},
      WATER_LEAKAGE = #{waterLeakage,jdbcType=TINYINT},
      WATER_LEAKAGE_POSITION = #{waterLeakagePosition,jdbcType=VARCHAR},
      WATER_LEAKAGE_CONSULT = #{waterLeakageConsult,jdbcType=TINYINT},
      WATER_LEAKAGE_CONSULT_BEAR_PARTY = #{waterLeakageConsultBearParty,jdbcType=TINYINT},
      DEATH_EVENT = #{deathEvent,jdbcType=VARCHAR},
      HOUSE_PEELING = #{housePeeling,jdbcType=TINYINT},
      HOUSE_PEELING_POSITION = #{housePeelingPosition,jdbcType=VARCHAR},
      SUBMIT_LOAN_INFO_FEE_DAYS = #{submitLoanInfoFeeDays,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_PARTY1 = #{downPaymentsPayParty1,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_PARTY2 = #{downPaymentsPayParty2,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_PARTY3 = #{downPaymentsPayParty3,jdbcType=TINYINT},
      DOWN_PAYMENTS_PAY_BANK = #{downPaymentsPayBank,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_ACCOUNT_NAME = #{downPaymentsPayAccountName,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_ACCOUNT_NO = #{downPaymentsPayAccountNo,jdbcType=VARCHAR},
      DOWN_PAYMENTS_THIRD_PARTY = #{downPaymentsThirdParty,jdbcType=VARCHAR},
      DOWN_PAYMENTS_REMAINING_FIRST_PAYTIME = #{downPaymentsRemainingFirstPaytime,jdbcType=VARCHAR},
      HOUSE_PEELING_BEAR_PARTY = #{housePeelingBearParty,jdbcType=TINYINT},
      DOWN_PAYMENTS_REMAINING_FIRST_AMOUNT = #{downPaymentsRemainingFirstAmount,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_AMOUNT3 = #{housePriceLastPayAmount3,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_AMOUNT2 = #{housePriceLastPayAmount2,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_AMOUNT3 = #{downPaymentsPayAmount3,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_AMOUNT2 = #{downPaymentsPayAmount2,jdbcType=VARCHAR},
      NO_PASS_SLOUTION_AMOUNT = #{noPassSloutionAmount,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_PAY_AMOUNT1 = #{housePriceLastPayAmount1,jdbcType=VARCHAR},
      DOWN_PAYMENTS_PAY_AMOUNT1 = #{downPaymentsPayAmount1,jdbcType=VARCHAR},
      HOUSE_PRICE_LAST_AMOUNT = #{housePriceLastAmount,jdbcType=VARCHAR},
      DOWN_PAYMENTS_AMOUNT = #{downPaymentsAmount,jdbcType=VARCHAR},
      DEPOSIT_AMOUNT = #{depositAmount,jdbcType=VARCHAR},
      MORTGAGE_AMOUNT = #{mortgageAmount,jdbcType=VARCHAR},
      SIGN_USER_ARCHIVE = #{signUserArchive,jdbcType=INTEGER},
      BUY_ID_CARD_TYPE = #{buyIdCardType,jdbcType=INTEGER},
      SELL_ID_CARD_TYPE = #{sellIdCardType,jdbcType=INTEGER},
      SELL_ID_CARD_BAK_TYPE = #{sellIdCardBakType,jdbcType=INTEGER},
      BUY_ID_CARD_BAK_TYPE = #{buyIdCardBakType,jdbcType=INTEGER},
      SELLER_PROXY_IDCARD_TYPE = #{sellerProxyIdcardType,jdbcType=INTEGER},
      BUYER_PROXY_IDCARD_TYPE = #{buyerProxyIdcardType,jdbcType=INTEGER},
      ENTRUST_BANK = #{entrustBank,jdbcType=VARCHAR},
      ENTRUST_MONEY = #{entrustMoney,jdbcType=NUMERIC},
      FIRST_TRIAL_COMPLETE_DATE = #{firstTrialCompleteDate,jdbcType=VARCHAR},
      RECHECK_COMPLETE_DATE = #{recheckCompleteDate,jdbcType=VARCHAR},
      INVALID_COMPLETE_DATE = #{invalidCompleteDate,jdbcType=VARCHAR},
      DEAL_AUDIT_STATUS_BEFORE = #{dealAuditStatusBefore,jdbcType=TINYINT},
      SSQ_CONTRACT_ID = #{ssqContractId,jdbcType=VARCHAR},
      SELL_OWNER_WX_USER_ID = #{sellOwnerWxUserId,jdbcType=VARCHAR},
      SELL_OWNER_WX_OPEN_ID = #{sellOwnerWxOpenId,jdbcType=VARCHAR},
      BUY_OWNER_WX_USER_ID = #{buyOwnerWxUserId,jdbcType=VARCHAR},
      BUY_OWNER_WX_OPEN_ID = #{buyOwnerWxOpenId,jdbcType=VARCHAR},
      SIGN_TYPE = #{signType,jdbcType=TINYINT},
      SIGN_SITE_DEPT = #{signSiteDept,jdbcType=INTEGER},
      SIGN_SITE_GR = #{signSiteGr,jdbcType=INTEGER},
      INTRODUCER_ID = #{introducerId,jdbcType=INTEGER},
      ADULT_PROMOTION_ID = #{adultPromotionId,jdbcType=INTEGER}
    where DEAL_ID = #{dealId,jdbcType=INTEGER}
  </update>
  <resultMap extends="BaseResultMap" id="ErpFunDealDtoResultMap" type="com.myfun.repository.erpdb.dto.ErpFunDealDto" />
	<resultMap extends="BaseResultMap" id="BaseResultMapDto" type="com.myfun.repository.erpdb.dto.ErpFunDealDto">
		<result column="TRANSFER_DEAL_PROFIT" jdbcType="NUMERIC" property="transferDealProfit" />
		<result column="TRANSFER_TOTAL_PROFIT" jdbcType="NUMERIC" property="transferTotalProfit" />
		<result column="SECONDHAND_DEAL_PROFIT" jdbcType="NUMERIC" property="secondhandDealProfit" />
		<result column="SECONDHAND_TOTAL_PROFIT" jdbcType="NUMERIC" property="secondhandTotalProfit" />
		<result column="NEWHOUSE_DEAL_PROFIT" jdbcType="NUMERIC" property="newhouseDealProfit" />
		<result column="NEWHOUSE_TOTAL_PROFIT" jdbcType="NUMERIC" property="newhouseTotalProfit" />
		<result column="LEASE_DEAL_PROFITL" jdbcType="NUMERIC" property="leaseDealProfitl" />
		<result column="LEASE_TOTAL_PROFIT" jdbcType="NUMERIC" property="leaseTotalProfit" />
		<result column="FINACE_DEAL_PROFIT" jdbcType="NUMERIC" property="financeDealProfit" />
		<result column="FINANCE_TOTAL_PROFIT" jdbcType="NUMERIC" property="financeTotalProfit" />
		<result column="TOTAL_PROFIT" jdbcType="NUMERIC" property="totalProfit" />
		<result column="DEAL_TOTAL_PROFIT" jdbcType="NUMERIC" property="dealTotalProfit" />
		<result column="SECONDHAND_DEAL_COUNT" jdbcType="NUMERIC" property="secondhandDealCount" />
		<result column="NEWHOUSE_DEAL_COUNT" jdbcType="NUMERIC" property="newhouseDealCount" />
		<result column="LEASE_DEAL_COUNT" jdbcType="NUMERIC" property="leaseDealCount" />
		<result column="TOTAL_DEAL_COUNT" jdbcType="NUMERIC" property="totalDealCount" />
		<result column="TRANSFER_COUNT" jdbcType="NUMERIC" property="transferCount" />
		<result column="TARGET_PROFIT" jdbcType="NUMERIC" property="targetProfit" />
		<result column="RANGE" jdbcType="VARCHAR" property="range" />
		<result column="GR_ID" jdbcType="INTEGER" property="grId" />
		<result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    </resultMap>
  <resultMap extends="BaseResultMap" id="DtoBaseResultMap" type="com.myfun.repository.erpdb.dto.ErpFunDealDtoTemp">
	<result column="ADMIN_COMP_ID" property="adminCompId" />
    <result column="ADMIN_DEPT_ID" property="adminDeptId" />
    <result column="COMP_NAME" property="compName" />
    <result column="AREA_FLAG" property="areaFlag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BaseResultRateDto" type="com.myfun.repository.erpdb.dto.ErpFunStatisticRateDto">
    <result column="DATE_COUNT" property="dateCount" />
    <result column="SIGN_COUNT" property="signCount" />
    <result column="DK_RATE" property="dkRate" />
    <result column="FK_RATE" property="fkRate" />
    <result column="CJ_RATE" property="cjRate" />
    <result column="SIGN_RATE" property="signRate" />
    <result column="RANGE" property="range" />
  </resultMap>
  <resultMap id="DealBuiletDtoResultMap" type="com.myfun.repository.erpdb.dto.DealBulletDto">
    <id column="DEAL_ID" jdbcType="INTEGER" property="dealId" />
    <result column="BUILD_ID" property="buildId" />
    <result column="BUILD_NAME" property="buildName" />
    <result column="CONTRACT_NO" property="contractNo" />
    <result column="SIGN_USER_ID" property="signUserId" />
    <result column="SIGN_USER_NAME" property="signUserName" />
    <result column="SIGN_MANAGER_ID" property="signManagerId" />
    <result column="SIGN_MANAGER_NAME" property="signManagerName" />
    <result column="AREA_ID" property="areaId" />
    <result column="REG_ID" property="regId" />
    <result column="DEPT_ID" property="deptId" />
    <result column="GR_ID" property="grId" />
    <result column="BULLET_ID" property="bulletId" />
    <result column="BULLET_SUBJECT" property="bulletSubject" />
    <result column="RELEASE_STATUS" property="releaseStatus" />
    <result column="BULLET_TIME" property="bulletTime" />
  </resultMap>

	<update id="updateHouseForReg">
		update FUN_DEAL set AREA_ID = #{pMap.areaId}, REG_ID = #{pMap.regId} where
		COMP_ID = #{pMap.compId} and DEPT_ID= #{pMap.deptId}
	</update>
	
	<sql id="DEAL_BULLET_LIST_CONDITION">
		WITH T_FUN_DEAL as (
			select A.DEAL_ID,A.BUILD_ID,A.BUILD_NAME,A.CONTRACT_NO,A.SIGN_USER_ID,A.SIGN_USER_NAME,A.SIGN_MANAGER_ID,A.SIGN_MANAGER_NAME,B.AREA_ID,B.REG_ID,B.DEPT_ID,B.GR_ID 
			from FUN_DEAL A left join FUN_USERS B on A.${param.userType} = B.USER_ID
			where A.COMP_ID = #{param.compId}
		)select 
		<choose>
			<when test="param.isCount == &quot;1&quot;">count(1)</when>
			<otherwise>
				A.*,B.BULLET_ID,B.BULLET_SUBJECT,B.RELEASE_STATUS,B.BULLET_TIME
			</otherwise>
		</choose>
		from T_FUN_DEAL as A 
		left join hft_admindb.dbo.BULLET B on A.DEAL_ID = B.DEAL_ID and B.BULLET_BOUND = 8
		where B.COMP_ID = #{param.adminCompId}
		AND B.BULLET_TIME &gt;= #{param.startTime}
		AND B.BULLET_TIME &lt;= #{param.endTime}
		<if test="param.areaId != null">AND A.AREA_ID = #{param.areaId}</if>
		<if test="param.regId != null">AND A.REG_ID = #{param.regId}</if>
		<if test="param.deptId != null">AND A.DEPT_ID = #{param.deptId}</if>
		<if test="param.grId != null">AND A.GR_ID = #{param.grId}</if>
		<if test="param.userId != null">AND A.${param.userType} = #{param.userId}</if>
		<if test="param.buildId != null">AND A.BUILD_ID = #{param.buildId}</if>
		<if test="param.buildName != null">AND A.BUILD_NAME like #{param.buildName}</if>
		<if test="param.contractNo != null">AND A.CONTRACT_NO like #{param.contractNo}</if>
		<if test="param.releaseStatus != null">AND B.RELEASE_STATUS = #{param.releaseStatus}</if>
	</sql>
	
	<select id="selectDealBulletList" resultMap="DealBuiletDtoResultMap">
		<include refid="DEAL_BULLET_LIST_CONDITION" />
		order by ${param.orderBy}
		OFFSET ${param.offsetNow} ROW FETCH NEXT ${param.pageRows} ROWS ONLY
	</select>
	
	<select id="selectDealBulletListCount" resultType="java.lang.Integer">
		<include refid="DEAL_BULLET_LIST_CONDITION" />
	</select>
	
	<select id="selectByDealId" resultMap="BaseResultMap">
		SELECT
		<if test="columns!= null">
			<foreach collection="columns" item="item" separator=",">
				${item}
			</foreach>
		</if>
		<if test="columns == null">
			<include refid="Base_Column_List" />		
		</if>
		FROM FUN_DEAL WHERE DEAL_ID=#{dealId}
	</select>
	
	<select id="getDealListOrderByDealIdDesc" resultMap="BaseResultMap">
		SELECT
		 top 50 a.*
		from FUN_DEAL a left join DEAL_TRACK b on b.DEAL_ID=a.DEAL_ID 
		where b.DEAL_ID is null
		<if test="dealId != null and dealId &gt; 0">AND a.DEAL_ID &lt; #{dealId}</if>
		AND a.SIGN_DATE &gt;='2017-01-01'
		order by a.DEAL_ID desc
	</select>
	<select id="getDealFunDealCodeInfo" resultMap="BaseResultMap">
		SELECT
		DEAL_ID,
		HOUSEADDRESS,
		SIGN_DATE,
		AREA,
		DEAL_TYPE,
		SELL_DEAL_MONEY,
		RENT_DEAL_MONEY,
		CONTRACT_NO as AGREEMENT_NO 
		FROM 
		FUN_DEAL 
		<where>
		<if test="param.compId != null and '' != param.compId">
		AND COMP_ID = #{param.compId} 
		</if>
		<if test="param.codeId != null and '' != param.codeId" />
		AND CODE_ID = #{param.codeId}
		</where>
	</select>
	<select id="getFunProfitCount" resultType="java.util.Map">
		select ${param.queryStr},
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 1,b.${countFiledName},0)) as transferDealProfit,
		sum(iif(b.PERFORMANCE_TYPE = 1,b.PROFIT_MONEY,0)) as transferTotalProfit, 
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 2,b.${countFiledName},0)) as secondhandDealProfit,  
		sum(iif(b.PERFORMANCE_TYPE = 2,b.PROFIT_MONEY,0)) as secondhandDealProfit, 
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 3,b.${countFiledName},0)) as newhouseDealProfit,
		sum(iif(b.PERFORMANCE_TYPE = 3,b.PROFIT_MONEY,0)) as newhouseDealProfit,
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 4,b.${countFiledName},0)) as leaseDealProfit,
		sum(iif(b.PERFORMANCE_TYPE = 4,b.PROFIT_MONEY,0)) as leaseDealProfit,
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 5,b.${countFiledName},0)) as financeDealProfit,
		sum(iif(b.PERFORMANCE_TYPE = 5,b.${countFiledName},0)) as financeDealProfit,
		sum(iif(b.PERFORMANCE_TYPE &gt; 0,b.${countFiledName},0)) as totalProfit,
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE &gt; 0,b.${countFiledName},0)) as dealTotalProfit
		from fun_deal a join FUN_PROFIT b on b.deal_id=a.deal_id where  a.COMP_ID = #{param.compId}
		AND a.DEAL_AUDIT_STATUS != '3'
		<if test="param.searchRange != null and 'AREA'== param.searchRange">
			AND b.AREA_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'REG'== param.searchRange">
			AND b.REG_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'DEPT'== param.searchRange">
			AND b.DEPT_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'GROUP'== param.searchRange">
			AND b.GR_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'USER'== param.searchRange">
			AND b.ARCHIVE_ID = #{param.archiveId}
		</if>
		<if test="param.startTime != null and '' != param.startTime">
			AND a.${param.dateType} &gt;= #{param.startTime} 
		</if>
		<if test="param.endTime != null and '' != param.endTime">
			AND a.${param.dateType} &lt;= #{param.endTime} 
		</if>
		GROUP BY ${param.groupStr}
	</select>
	<select id="getFunProfitReportDealCount" resultType="java.util.Map">
		WITH t_profit AS (
			SELECT b.COMP_ID,b.AREA_ID,b.REG_ID,b.DEPT_ID,b.GR_ID,b.USER_ID,b.ARCHIVE_ID,b.PERFORMANCE_TYPE,b.DEAL_ID FROM
			fun_profit b
			WHERE b.COMP_ID = '12001' AND b.USER_ID &gt; '0' AND b.COMP_ID = '12001' 
			GROUP BY b.COMP_ID,b.AREA_ID,b.REG_ID,b.DEPT_ID,b.GR_ID,b.USER_ID,b.ARCHIVE_ID,b.PERFORMANCE_TYPE,b.DEAL_ID
		) SELECT
		${param.queryStr},
		SUM (iif (b.PERFORMANCE_TYPE = 2 AND a.SIGN_USER_ID = b.USER_ID,1,0)) AS secondhandDealCount,
		SUM (iif (b.PERFORMANCE_TYPE = 3 AND a.SIGN_USER_ID = b.USER_ID,1,0)) AS newhouseDealCount,
		SUM (iif (b.PERFORMANCE_TYPE = 4 AND a.SIGN_USER_ID = b.USER_ID,1,0)) AS leaseDealCount
		FROM FUN_DEAL a JOIN t_profit b ON a.DEAL_ID = b.DEAL_ID
		WHERE
		a.COMP_ID = #{param.compId}
		AND a.DEAL_AUDIT_STATUS != '3'
		<if test="param.searchRange != null and 'AREA'== param.searchRange">
			AND b.AREA_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'REG'== param.searchRange">
			AND b.REG_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'DEPT'== param.searchRange">
			AND b.DEPT_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'GROUP'== param.searchRange">
			AND b.GR_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'USER'== param.searchRange">
			AND b.ARCHIVE_ID = #{param.archiveId}
		</if>
		<if test="param.startTime != null and '' != param.startTime">
			AND a.${param.dateType} &gt;= #{param.startTime} 
		</if>
		<if test="param.endTime != null and '' != param.endTime">
			AND a.${param.dateType} &lt;= #{param.endTime} 
		</if>
		GROUP BY ${param.groupStr}
	</select>
	<select id="getFunProfitReportOfficialOrdersCountCount" resultType="java.util.Map">
		WITH t_profit AS (
		SELECT
			B.DEAL_ID,
			B.PERFORMANCE_TYPE
		FROM
			FUN_DEAL A
		JOIN FUN_PROFIT B ON A.DEAL_ID = B.DEAL_ID
		WHERE
			a.COMP_ID = #{param.compId}
			<if test="param.startTime != null and '' != param.startTime">
			AND a.${param.dateType} &gt;= #{param.startTime} 
			</if>
			<if test="param.endTime != null and '' != param.endTime">
			AND a.${param.dateType} &lt;= #{param.endTime} 
			</if>
		AND a.DEAL_AUDIT_STATUS != '3'
		GROUP BY
			B.DEAL_ID,
			B.PERFORMANCE_TYPE
		) SELECT
		${param.queryStr},
		SUM (
			iif (a.PERFORMANCE_TYPE = 1, 1, 0)
		) AS transferCount,
		SUM (
			iif (a.PERFORMANCE_TYPE = 5, 1, 0)
		) AS financeCount
		FROM
			t_profit a
		JOIN DEAL_USER_RELATIVE b ON a.DEAL_ID = b.DEAL_ID
		AND b.RELATE_TYPE = 3
		WHERE
			b.COMP_ID = #{param.compId}
		<if test="param.searchRange != null and 'AREA'== param.searchRange">
			AND b.AREA_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'REG'== param.searchRange">
			AND b.REG_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'DEPT'== param.searchRange">
			AND b.DEPT_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'GROUP'== param.searchRange">
			AND b.GR_ID = #{param.searchRangeId}
		</if>
		<if test="param.searchRange != null and 'USER'== param.searchRange">
			AND b.ARCHIVE_ID = #{param.archiveId}
		</if>
		GROUP BY
		${param.groupStr}
	</select>
	
	<select id="getDealHouseDistributionSituationOffTopFour" resultType="java.util.Map">
		SELECT top 4
		COUNT (1) AS houseCount,
		b.BUILD_REG_NAME AS regName
		FROM
			DEAL_USER_RELATIVE A
		JOIN FUN_DEAL B ON A.DEAL_ID = B.DEAL_ID AND A.RELATE_TYPE = 3
		WHERE
			A.USER_ID = B.SIGN_USER_ID
		AND B.DEAL_AUDIT_STATUS != 3
		AND B.SIGN_DATE &lt;= #{param.endTime}
		AND B.SIGN_DATE &gt;= #{param.startTime}
		AND A.COMP_ID = #{param.compId}
	<if test="param.serchRange != null and 'AREA'== param.serchRange">
		AND A.AREA_ID = #{param.serchRangeId}
	</if>
	<if test="param.serchRange != null and 'REG'== param.serchRange">
		AND A.REG_ID = #{param.serchRangeId}
	</if>
	<if test="param.serchRange != null and 'DEPT'== param.serchRange">
		AND A.DEPT_ID = #{param.serchRangeId}
	</if>
	<if test="param.deptId != null">
		AND A.DEPT_ID = #{param.deptId}
	</if>
	<if test="param.serchRange != null and 'GROUP'== param.serchRange">
		AND A.GR_ID = #{param.serchRangeId}
	</if>
	<if test="param.serchRange != null and 'USER'== param.serchRange">
		AND A.ARCHIVE_ID = #{param.archiveId}
	</if>
	group by b.BUILD_REG_NAME ORDER BY houseCount desc
	</select>
	
	<select id="getDealHouseDistributionSituationOffTotal" resultType="java.util.Map">
		SELECT 
		COUNT (1) AS totalCount
		FROM
			DEAL_USER_RELATIVE A
		JOIN FUN_DEAL B ON A.DEAL_ID = B.DEAL_ID AND A.RELATE_TYPE = 3
		WHERE
			A.USER_ID = B.SIGN_USER_ID
		AND B.DEAL_AUDIT_STATUS != 3
		AND B.SIGN_DATE &lt;= #{param.endTime}
		AND B.SIGN_DATE &gt;= #{param.startTime}
		AND A.COMP_ID = #{param.compId}
	<if test="param.serchRange != null and 'AREA'== param.serchRange">
		AND A.AREA_ID = #{param.serchRangeId}
	</if>
	<if test="param.serchRange != null and 'REG'== param.serchRange">
		AND A.REG_ID = #{param.serchRangeId}
	</if>
	<if test="param.serchRange != null and 'DEPT'== param.serchRange">
		AND A.DEPT_ID = #{param.serchRangeId}
	</if>
	<if test="param.deptId != null">
		AND A.DEPT_ID = #{param.deptId}
	</if>
	<if test="param.serchRange != null and 'GROUP'== param.serchRange">
		AND A.GR_ID = #{param.serchRangeId}
	</if>
	<if test="param.serchRange != null and 'USER'== param.serchRange">
		AND A.ARCHIVE_ID = #{param.archiveId}
	</if>
	</select>
	
	<select id="getTransactionCycleDeptRank" resultType="java.util.Map">
		SELECT
		top 15
			(iif(SUM(cjDays)=0,1,sum(cjDays))+0.0)/iif(SUM (C.cjCount)&gt;0,SUM (C.cjCount),1.0) as transactionCycle,c.deptId
		
		FROM
			(
				SELECT
					B.SIGN_USER_DEPT_ID AS deptId,
					SUM ( DATEDIFF( DAY, A.CASE_CREATE_TIME, A.CREATE_TIME ) ) as cjDays,
					COUNT (DISTINCT B.DEAL_ID) AS cjCount
				FROM
					HOUSE_INNERDEAL_ANALYSIS A
				LEFT JOIN FUN_DEAL　B ON A.DEAL_ID = B.DEAL_ID
				LEFT JOIN DEAL_USER_RELATIVE C ON B.DEAL_ID = C.DEAL_ID
				AND B.SIGN_USER_ID = C.USER_ID
				AND B.DEAL_AUDIT_STATUS != 3
				AND C.RELATE_TYPE = 3
				WHERE
					A.COMP_ID = #{param.compId}
				<if test="param.serchRange != null and 'AREA'== param.serchRange">
					AND C.AREA_ID = #{param.serchRangeId}
				</if>
				<if test="param.serchRange != null and 'REG'== param.serchRange">
					AND C.REG_ID = #{param.serchRangeId}
				</if>
				<if test="param.serchRange != null and 'DEPT'== param.serchRange">
					AND C.DEPT_ID = #{param.serchRangeId}
				</if>
				<if test="param.deptId != null">
					AND C.DEPT_ID = #{param.deptId}
				</if>
				<if test="param.serchRange != null and 'GROUP'== param.serchRange">
					AND C.GR_ID = #{param.serchRangeId}
				</if>
				<if test="param.serchRange != null and 'USER'== param.serchRange">
					AND C.ARCHIVE_ID = #{param.archiveId}
				</if>
				<if test="param.caseType != null and '101'== param.caseType">
					AND A.CASE_TYPE = 1
				</if>
				<if test="param.caseType != null and '102'== param.caseType">
					AND A.CASE_TYPE = 2
				</if>
				AND B.DEAL_ID&gt;0
				AND B.SIGN_DATE &gt;= #{param.startTime}
				AND B.SIGN_DATE &lt;= #{param.endTime}
				GROUP BY
					B.SIGN_USER_DEPT_ID
				UNION ALL
					SELECT
						A.DEPT_ID,
					SUM ( DATEDIFF( DAY, A.CASE_CREATE_TIME, A.CREATE_TIME ) ) as cjDays,
						COUNT (1) AS cjCount
					FROM
						HOUSE_INNERDEAL_ANALYSIS A
					WHERE
						A.COMP_ID = #{param.compId}
					<if test="param.serchRange != null and 'AREA'== param.serchRange">
						AND A.AREA_ID = #{param.serchRangeId}
					</if>
					<if test="param.serchRange != null and 'REG'== param.serchRange">
						AND A.REG_ID = #{param.serchRangeId}
					</if>
					<if test="param.serchRange != null and 'DEPT'== param.serchRange">
						AND A.DEPT_ID = #{param.serchRangeId}
					</if>
					<if test="param.deptId != null">
						AND A.DEPT_ID = #{param.deptId}
					</if>
					<if test="param.serchRange != null and 'GROUP'== param.serchRange">
						AND A.GR_ID = #{param.serchRangeId}
					</if>
					<if test="param.serchRange != null and 'USER'== param.serchRange">
						AND A.ARCHIVE_ID = #{param.archiveId}
					</if>
					<if test="param.caseType != null and '101'== param.caseType">
						AND A.CASE_TYPE = 1
					</if>
					<if test="param.caseType != null and '102'== param.caseType">
						AND A.CASE_TYPE = 2
					</if>
					AND A.DEAL_ID IS NULL
					AND A.CREATE_TIME &gt;= #{param.startTime}
					AND A.CREATE_TIME &lt;= #{param.endTime}
					GROUP BY
						A.DEPT_ID
					) C
					GROUP BY c.deptId
					ORDER BY
						transactionCycle 	
	</select>
	<select id="getSignRateCountHasDeal" resultMap="BaseResultRateDto">
		SET DATEFIRST 1; 
		SELECT 
		<if test="param.signDateColumnHasDeal != null and '' != param.signDateColumnHasDeal">${param.signDateColumnHasDeal}</if>
		AS DATE_COUNT, 
		sum(iif(B.SIGN_USER_ID&gt;0,1,0)) AS SIGN_COUNT 
		FROM
		FUN_DEAL B 
		LEFT JOIN DEAL_USER_RELATIVE C ON B.DEAL_ID = C.DEAL_ID AND B.SIGN_USER_ID = C.USER_ID  AND B.DEAL_AUDIT_STATUS != 3 AND C.RELATE_TYPE =3 
		WHERE B.COMP_ID = #{param.compId} 
		<if test="param.archiveId != null and '' != param.archiveId">AND C.ARCHIVE_ID = #{param.archiveId}</if>
		<if test="param.caseType != null and ''!=param.caseType">
			AND B.DEAL_TYPE = #{param.caseType}
		</if>
		AND B.SIGN_DATE &gt;= #{param.startTime}
		AND B.SIGN_DATE &lt;= #{param.endTime}
		AND B.DEAL_ID&gt;0
		<if test="param.serchRange != null and '' != param.serchRange and 'USER'!=param.serchRange and '' != param.serchRangeId and param.serchRangeId != null">
		AND C.${param.serchRange}_ID = #{param.serchRangeId}
		</if>  
		<if test="param.serchRange != null and 'USER' == param.serchRange ">
		AND C.ARCHIVE_ID = #{param.archiveId}
		</if>  
		GROUP BY 
		<if test="param.signDateColumnHasDeal != null and '' != param.signDateColumnHasDeal">${param.signDateColumnHasDeal}</if>
	</select>
	
	<select id="getCjContrastOffRatioAnalysis" resultType="java.util.Map">
		<if test="param.deptType != null and 1==param.deptType ">
		select B.SIGN_USER_DEPT_ID as deptId,COUNT(distinct B.DEAL_ID) AS cjCount
		FROM
			FUN_DEAL B LEFT JOIN DEAL_USER_RELATIVE C ON B.DEAL_ID = C.DEAL_ID AND B.SIGN_USER_ID = C.USER_ID  AND B.DEAL_AUDIT_STATUS != 3 AND C.RELATE_TYPE =3
		WHERE
				B.COMP_ID = #{param.compId}
			<if test="param.serchRange != null and 'AREA'== param.serchRange">
				AND C.AREA_ID = #{param.serchRangeId} 
			</if>
			<if test="param.serchRange != null and 'REG'== param.serchRange">
				AND C.REG_ID = #{param.serchRangeId}
			</if>
			<if test="param.serchRange != null and 'DEPT'== param.serchRange">
				AND C.DEPT_ID = #{param.serchRangeId}
			</if>
			<if test="param.deptId != null">
				AND C.DEPT_ID = #{param.deptId}
			</if>
			<if test="param.serchRange != null and 'GROUP'== param.serchRange">
				AND C.GR_ID = #{param.serchRangeId}
			</if>
			<if test="param.serchRange != null and 'USER'== param.serchRange">
				AND C.ARCHIVE_ID = #{param.archiveId}
			</if>
			<if test="param.caseType != null and 101==param.caseType">
				AND B.DEAL_TYPE = 101
			</if>
			<if test="param.caseType != null and 102==param.caseType">
				AND B.DEAL_TYPE = 102
			</if>
			AND B.SIGN_DATE &gt;= #{param.startTime}
			AND B.SIGN_DATE &lt;= #{param.endTime}
		group by B.SIGN_USER_DEPT_ID order by cjCount desc
		</if>
		<if test="param.deptType == null">
		select A.DEPT_ID deptId,count(1) as cjCount from HOUSE_INNERDEAL_ANALYSIS A
			where A.COMP_ID = #{param.compId}
			AND A.DEAL_ID IS NULL
			<if test="param.serchRange != null and 'AREA'== param.serchRange">
				AND A.AREA_ID = #{param.serchRangeId} 
			</if>
			<if test="param.serchRange != null and 'REG'== param.serchRange">
				AND A.REG_ID = #{param.serchRangeId}
			</if>
			<if test="param.serchRange != null and 'DEPT'== param.serchRange">
				AND A.DEPT_ID = #{param.serchRangeId}
			</if>
			<if test="param.deptId != null">
				AND A.DEPT_ID = #{param.deptId}
			</if>
			<if test="param.serchRange != null and 'GROUP'== param.serchRange">
				AND A.GR_ID = #{param.serchRangeId}
			</if>
			<if test="param.serchRange != null and 'USER'== param.serchRange">
				AND A.ARCHIVE_ID = #{param.archiveId}
			</if>
			<if test="param.caseType != null and 101==param.caseType">
				AND A.CASE_TYPE =1
			</if>
			<if test="param.caseType != null and 102==param.caseType">
				AND A.CASE_TYPE =2
			</if>
			AND A.CREATE_TIME &gt;= #{param.startTime}
			AND A.CREATE_TIME &lt;= #{param.endTime}
		group by A.DEPT_ID order by cjCount desc
		</if>
	</select>
	
	<select id="getTotalCjContrastOffRatioAnalysis" resultType="java.util.Map">
		<if test="param.deptType != null and 1==param.deptType ">
			select COUNT(distinct B.DEAL_ID) AS cjCount
			FROM
				FUN_DEAL　B LEFT JOIN DEAL_USER_RELATIVE C ON B.DEAL_ID = C.DEAL_ID AND B.SIGN_USER_ID = C.USER_ID  AND B.DEAL_AUDIT_STATUS != 3 AND C.RELATE_TYPE =3
			WHERE
				B.COMP_ID = #{param.compId}
			<if test="param.serchRange != null and 'AREA'== param.serchRange">
				AND C.AREA_ID = #{param.serchRangeId} 
			</if>
			<if test="param.serchRange != null and 'REG'== param.serchRange">
				AND C.REG_ID = #{param.serchRangeId}
			</if>
			<if test="param.serchRange != null and 'DEPT'== param.serchRange">
				AND C.DEPT_ID = #{param.serchRangeId}
			</if>
			<if test="param.deptId != null">
				AND C.DEPT_ID = #{param.deptId}
			</if>
			<if test="param.serchRange != null and 'GROUP'== param.serchRange">
				AND C.GR_ID = #{param.serchRangeId}
			</if>
			<if test="param.serchRange != null and 'USER'== param.serchRange">
				AND C.ARCHIVE_ID = #{param.archiveId}
			</if>
			<if test="param.caseType != null and 101==param.caseType">
				AND B.DEAL_TYPE = 101
			</if>
			<if test="param.caseType != null and 102==param.caseType">
				AND B.DEAL_TYPE = 102
			</if>
			AND B.SIGN_DATE &gt;= #{param.startTime}
			AND B.SIGN_DATE &lt;= #{param.endTime}
		</if>
		<if test="param.deptType == null">
		select count(1) as cjCount from HOUSE_INNERDEAL_ANALYSIS A
			where A.COMP_ID = #{param.compId}
			AND A.DEAL_ID IS NULL
			<if test="param.serchRange != null and 'AREA'== param.serchRange">
				AND A.AREA_ID = #{param.serchRangeId} 
			</if>
			<if test="param.serchRange != null and 'REG'== param.serchRange">
				AND A.REG_ID = #{param.serchRangeId}
			</if>
			<if test="param.serchRange != null and 'DEPT'== param.serchRange">
				AND A.DEPT_ID = #{param.serchRangeId}
			</if>
			<if test="param.deptId != null">
				AND A.DEPT_ID = #{param.deptId}
			</if>
			<if test="param.serchRange != null and 'GROUP'== param.serchRange">
				AND A.GR_ID = #{param.serchRangeId}
			</if>
			<if test="param.serchRange != null and 'USER'== param.serchRange">
				AND A.ARCHIVE_ID = #{param.archiveId}
			</if>
			<if test="param.caseType != null and 101==param.caseType">
				AND A.CASE_TYPE =1
			</if>
			<if test="param.caseType != null and 102==param.caseType">
				AND A.CASE_TYPE =2
			</if>
			AND A.CREATE_TIME &gt;= #{param.startTime}
			AND A.CREATE_TIME &lt;= #{param.endTime}
		</if>
	</select>

	<select id="getHouseCustFlowAnalysisCountList" resultType="java.util.Map">
		select CASE_STATUS AS caseStatus,COUNT(1) AS
		statusCount,DATEPART(MONTH,CASE_CREATE_TIME) AS monthofyear
		from HOUSEORCUST_FLOW_ANALYSIS
		<where>
			AND COMP_ID = #{param.compId}
			<if test="null != param.newSqlCaseTypeIn">
				AND CASE_TYPE IN
				<foreach close=")" collection="param.newSqlCaseTypeIn" item="caseType" open="(" separator=",">
					#{caseType}
				</foreach>
			</if>
			<if test="null != param.areaId">
				AND AREA_ID = #{param.areaId}
			</if>
			<if test="null != param.regId">
				AND REG_ID = #{param.regId}
			</if>
			<if test="null != param.deptId">
				AND DEPT_ID = #{param.deptId}
			</if>
			<if test="null != param.userId">
				AND USER_ID = #{param.userId}
			</if>
			<if test="null != param.startTime and '' != param.startTime">
				AND CASE_CREATE_TIME &gt;= #{param.startTime}
			</if>
			<if test="null != param.endTime and '' != param.endTime">
				AND CASE_CREATE_TIME &lt;= #{param.endTime}
			</if>
		</where>
		GROUP BY CASE_STATUS,DATEPART(MONTH, CASE_CREATE_TIME)
		ORDER BY CASE_STATUS ASC,DATEPART(MONTH, CASE_CREATE_TIME) ASC
	</select>
	
	<select id="getSignRateCountHasDealReport" resultType="java.util.Map">
		SET DATEFIRST 1;
		SELECT
			<if test="param.signDateColumnB != null and '' != param.signDateColumnB">
				(${param.signDateColumnB}) AS dateCount,
			</if>
			<choose>
				<when test="param.areaFlag == null or 1 != param.areaFlag">
					<if test="param.dimension == &quot;REG&quot;">CONCAT(C.REG_ID)</if>
					<if test="param.dimension == &quot;DEPT&quot;">CONCAT(C.REG_ID,'_',C.DEPT_ID)</if>
					<if test="param.dimension == &quot;GROUP&quot;">CONCAT(C.REG_ID,'_',C.DEPT_ID,'_',C.GR_ID)</if>
					<if test="param.dimension == &quot;USER&quot;">CONCAT(C.REG_ID,'_',C.DEPT_ID,'_',C.GR_ID,'_',C.USER_ID)</if>
				</when>
				<otherwise>
					<if test="param.dimension == &quot;AREA&quot;">C.AREA_ID</if>
					<if test="param.dimension == &quot;REG&quot;">CONCAT(C.AREA_ID,'_',C.REG_ID)</if>
					<if test="param.dimension == &quot;DEPT&quot;">CONCAT(C.AREA_ID,'_',C.REG_ID,'_',C.DEPT_ID)</if>
					<if test="param.dimension == &quot;GROUP&quot;">CONCAT(C.AREA_ID,'_',C.REG_ID,'_',C.DEPT_ID,'_',C.GR_ID)</if>
					<if test="param.dimension == &quot;USER&quot;">CONCAT(C.AREA_ID,'_',C.REG_ID,'_',C.DEPT_ID,'_',C.GR_ID,'_',C.USER_ID)</if>
				</otherwise>
			</choose>
			as range,
			SUM (iif(B.SIGN_USER_ID &gt; 0,1,0)) AS signCount
			FROM  FUN_DEAL B
			LEFT JOIN DEAL_USER_RELATIVE C ON B.DEAL_ID = C.DEAL_ID
			AND B.SIGN_USER_ID = C.USER_ID
			AND B.DEAL_AUDIT_STATUS != 3
			AND C.RELATE_TYPE = 3
			WHERE
			B.COMP_ID = #{param.compId}
			<if test="param.userId != null and '' != param.userId ">AND USER_ID = #{param.userId}</if>
			AND B.SIGN_DATE &gt;= #{param.startTime}
			AND B.SIGN_DATE &lt;= #{param.endTime}
			AND B.DEAL_ID &gt; 0
			<if test="param.caseType != null and ''!=param.caseType">
				AND B.DEAL_TYPE = #{param.caseType}
			</if>
			<if test="param.serchRange != null and '' != param.serchRange and 'USER'!=param.serchRange and '' != param.serchRangeId and param.serchRangeId != null">
				AND C.${param.serchRange}_ID = #{param.serchRangeId}
			</if>  
			<if test="param.serchRange != null and 'USER' == param.serchRange ">
				AND C.ARCHIVE_ID = #{param.archiveId}
			</if>  
			GROUP BY
			<if test="param.signDateColumnB != null and '' != param.signDateColumnB">
				(${param.signDateColumnB}),
			</if>
			<choose>
				<when test="param.areaFlag == null or 1 != param.areaFlag">
					<if test="param.dimension == &quot;REG&quot;">CONCAT(C.REG_ID)</if>
					<if test="param.dimension == &quot;DEPT&quot;">CONCAT(C.REG_ID,'_',C.DEPT_ID)</if>
					<if test="param.dimension == &quot;GROUP&quot;">CONCAT(C.REG_ID,'_',C.DEPT_ID,'_',C.GR_ID)</if>
					<if test="param.dimension == &quot;USER&quot;">CONCAT(C.REG_ID,'_',C.DEPT_ID,'_',C.GR_ID,'_',C.USER_ID)</if>
				</when>
				<otherwise>
					<if test="param.dimension == &quot;AREA&quot;">C.AREA_ID</if>
					<if test="param.dimension == &quot;REG&quot;">CONCAT(C.AREA_ID,'_',C.REG_ID)</if>
					<if test="param.dimension == &quot;DEPT&quot;">CONCAT(C.AREA_ID,'_',C.REG_ID,'_',C.DEPT_ID)</if>
					<if test="param.dimension == &quot;GROUP&quot;">CONCAT(C.AREA_ID,'_',C.REG_ID,'_',C.DEPT_ID,'_',C.GR_ID)</if>
					<if test="param.dimension == &quot;USER&quot;">CONCAT(C.AREA_ID,'_',C.REG_ID,'_',C.DEPT_ID,'_',C.GR_ID,'_',C.USER_ID)</if>
				</otherwise>
			</choose>
	</select>
	
	<select id="getSignRateCountNoDealReport" resultType="java.util.Map">
		SET DATEFIRST 1;
		SELECT
		<if test="param.dateColumnA != null and '' != param.dateColumnA">
			(${param.dateColumnA}) AS dateCount,
		</if>
		<choose>
			<when test="param.areaFlag == null or 1 != param.areaFlag">
				<if test="param.dimension == &quot;REG&quot;">CONCAT(A.REG_ID)</if>
				<if test="param.dimension == &quot;DEPT&quot;">CONCAT(A.REG_ID,'_',A.DEPT_ID)</if>
				<if test="param.dimension == &quot;GROUP&quot;">CONCAT(A.REG_ID,'_',A.DEPT_ID,'_',A.GR_ID)</if>
				<if test="param.dimension == &quot;USER&quot;">CONCAT(A.REG_ID,'_',A.DEPT_ID,'_',A.GR_ID,'_',A.USER_ID)</if>
			</when>
			<otherwise>
				<if test="param.dimension == &quot;AREA&quot;">A.AREA_ID</if>
				<if test="param.dimension == &quot;REG&quot;">CONCAT(A.AREA_ID,'_',A.REG_ID)</if>
				<if test="param.dimension == &quot;DEPT&quot;">CONCAT(A.AREA_ID,'_',A.REG_ID,'_',A.DEPT_ID)</if>
				<if test="param.dimension == &quot;GROUP&quot;">CONCAT(A.AREA_ID,'_',A.REG_ID,'_',A.DEPT_ID,'_',A.GR_ID)</if>
				<if test="param.dimension == &quot;USER&quot;">CONCAT(A.AREA_ID,'_',A.REG_ID,'_',A.DEPT_ID,'_',A.GR_ID,'_',A.USER_ID)</if>
			</otherwise>
		</choose>
		as range,
		COUNT (1) AS signCount
		FROM HOUSE_INNERDEAL_ANALYSIS A
		WHERE
		A.COMP_ID = #{param.compId}
		AND A.DEAL_ID IS NULL
		<if test="param.archiveId != null and '' != param.archiveId">AND A.ARCHIVE_ID = #{param.archiveId}</if>
		<if test="param.serchRange != null and '' != param.serchRange and '' != param.serchRangeId and param.serchRangeId != null">
			AND A.${param.serchRange}_ID = #{param.serchRangeId}
		</if>
		<if test="param.caseType != null and 101 == param.caseType">
			AND A.CASE_TYPE = 1
		</if>
		<if test="param.caseType != null and 102 == param.caseType">
			AND A.CASE_TYPE = 2
		</if>
		AND A.CREATE_TIME &gt;= #{param.startTime}
		AND A.CREATE_TIME &lt;= #{param.endTime}
		GROUP BY
		<if test="param.dateColumnA != null and '' != param.dateColumnA">
			(${param.dateColumnA}),
		</if>
		<choose>
			<when test="param.areaFlag == null or 1 != param.areaFlag">
				<if test="param.dimension == &quot;REG&quot;">CONCAT(A.REG_ID)</if>
				<if test="param.dimension == &quot;DEPT&quot;">CONCAT(A.REG_ID,'_',A.DEPT_ID)</if>
				<if test="param.dimension == &quot;GROUP&quot;">CONCAT(A.REG_ID,'_',A.DEPT_ID,'_',A.GR_ID)</if>
				<if test="param.dimension == &quot;USER&quot;">CONCAT(A.REG_ID,'_',A.DEPT_ID,'_',A.GR_ID,'_',A.USER_ID)</if>
			</when>
			<otherwise>
				<if test="param.dimension == &quot;AREA&quot;">A.AREA_ID</if>
				<if test="param.dimension == &quot;REG&quot;">CONCAT(A.AREA_ID,'_',A.REG_ID)</if>
				<if test="param.dimension == &quot;DEPT&quot;">CONCAT(A.AREA_ID,'_',A.REG_ID,'_',A.DEPT_ID)</if>
				<if test="param.dimension == &quot;GROUP&quot;">CONCAT(A.AREA_ID,'_',A.REG_ID,'_',A.DEPT_ID,'_',A.GR_ID)</if>
				<if test="param.dimension == &quot;USER&quot;">CONCAT(A.AREA_ID,'_',A.REG_ID,'_',A.DEPT_ID,'_',A.GR_ID,'_',A.USER_ID)</if>
			</otherwise>
		</choose>
	</select>
	
	<select id="getSignRateCountNoDeal" resultMap="BaseResultRateDto">
		SET DATEFIRST 1; 
		SELECT 
		<if test="param.signDateColumnNoDeal != null and '' != param.signDateColumnNoDeal">${param.signDateColumnNoDeal}</if>
		AS DATE_COUNT, COUNT (1) AS SIGN_COUNT 
		FROM HOUSE_INNERDEAL_ANALYSIS A
		WHERE A.COMP_ID = #{param.compId}
		AND A.DEAL_ID IS NULL
		<if test="param.caseType != null and '101' == param.caseType">
			AND A.CASE_TYPE = 1
		</if>
		<if test="param.caseType != null and '102' == param.caseType">
			AND A.CASE_TYPE = 2
		</if>
		<if test="param.archiveId != null and '' != param.archiveId">AND A.ARCHIVE_ID = #{param.archiveId}</if>
		<if test="param.serchRange != null and '' != param.serchRange and '' != param.serchRangeId and param.serchRangeId != null">AND A.${param.serchRange}_ID = #{param.serchRangeId}</if>  
		AND A.CREATE_TIME &gt;= #{param.startTime} AND A.CREATE_TIME &lt;= #{param.endTime}
		GROUP BY 
		<if test="param.signDateColumnNoDeal != null and '' != param.signDateColumnNoDeal">${param.signDateColumnNoDeal}</if>
	</select>
	<select id="getDealListNotHaveBullet" resultMap="DtoBaseResultMap">
		select distinct A.*,D.DEPT_ID as ADMIN_DEPT_ID,C.COMP_ID as ADMIN_COMP_ID,C.COMP_NAME,C.AREA_FLAG from FUN_DEAL A join FUN_DEPTS B on A.DEPT_ID = B.DEPT_ID left join hft_admindb.dbo.FUN_DEPTS D ON B.COMP_NO = D.COMP_NO and  B.DEPT_NO = D.DEPT_NO join hft_admindb.dbo.FUN_COMP C on D.COMP_NO = C.COMP_NO left join hft_admindb.dbo.BULLET E ON A.DEAL_ID =E.DEAL_ID and E.CITY_ID=${shardCityId} AND E.BULLET_BOUND=8
		where A.ISBYHAND = 0 and C.CITY_ID = #{shardCityId} and E.DEAL_ID is null AND A.COMP_ID = 20249 and A.CREATOR_DATE &gt;='2017-12-04'
	</select>
	 <select id="selectFunDealByContractId" resultMap="BaseResultMap">
       select a.DEAL_ID, a.COMP_ID, a.AGREEMENT_NO, a.CREATOR_DATE, a.DEAL_TYPE, a.DEAL_STATUS, a.DEAL_USER_ID,
              a.DEAL_COMPLETE, a.DEAL_VERIFY_TIME, a.DEAL_BUY_STYLE, a.DEAL_SELL_STYLE, a.HOUSE_USEAGE, a.DEAL_CUSTOMER_ID,
              a.DEAL_CUSTOMER_NO, a.DEAL_HOUSE_ID, a.DEAL_HOUSE_NO, a.SELL_ADDRESS, a.BUY_CUSTINFO, a.SELL_HEZUO_COMPNAME,
              a.BUY_HEZUO_COMPNAME, a.BUY_CONTACTUSER, a.SELL_CONTACTUSER, a.BUY_OWNER_NAME, a.SELL_OWNER_NAME,
              a.BUY_CALL_PHONE, a.SELL_CALL_PHONE, a.BUY_ID_CARD, a.SELL_ID_CARD, a.BUY_PAYMONEY, a.SELL_PAYMONEY,
              a.OTHER_PAYMONEY, a.GAIN_MONEY, a.REAL_BUY_PAYMONEY, a.REAL_SELL_PAYMONEY, a.REAL_OTHER_PAYMONEY,
              a.REAL_PAYMONEY, a.BUY_PRICE_MONEY, a.BUY_MORTGAGE_TYPE, a.SELL_DEAL_MONEY, a.SELL_ISHAVE_LOAN,
              a.SELL_LOAN_MONEY, a.SELL_RETURN_LOAN, a.OWNER_STYLE, a.OWNER_TYPE, a.OWNER_NO, a.HAVE_LANDCARD,
              a.LANDCARD_NO, a.MANGEMENT_TAX, a.OWNER_TAX, a.TAX, a.TRADE_REMARK_EXPLAIN, a.RENT_DEAL_MONEY,
              a.RENT_PRICE_UNIT, a.RENT_DATE, a.RENT_OVER_DATE, a.RENT_PAY_METHOD, a.RENT_PAY_SPACE, a.RENT_PAY_EARLY,
              a.RENT_DEPOSIT_PAY, a.RENT_OTHER_MONEY, a.GOODSDETAILED, a.WATERLIGHTEXPENSES, a.SYSTEM_RECORD_TIME,
              a.DEPT_ID, a.CREATOR_UID, a.UPDATE_UID, a.UPDATE_TIME, a.CUST_DEPTNAME, a.CUST_USERNAME, a.CUST_USER_UID,
              a.CUST_DEPT_ID, a.CUST_PLATE, a.HOUSE_DEPTNAME, a.HOUSE_USERNAME, a.HOUSE_USER_UID, a.HOUSE_DEPT_ID,
              a.HOUSE_PLATE, a.BUILD_ID, a.BUILD_NAME, a.HOUSEADDRESS, a.REAL_TOTALPRICE, a.DEAL_DEPT_ID, a.HOUSE_DUETIME_TASK_ID,
              a.CUST_DUETIME_TASK_ID, a.MODEL_ID, a.CONTRACT_NO, a.RUNSTEP_ID, a.RUNSTEP_NAME, a.TIMELIMITDATE,
              a.EXECUTOR, a.REMARK, a.COMPLETE_USER, a.COMPLETE_DATE, a.MODEL_NAME, a.DEAL_USER_NAME, a.COMPLETE_USER_NAME,
              a.CREATOR_NAME, a.AREA, a.FITMENT, a.MODEL_NO, a.STEP_NO, a.UPDATE_USERNAME, a.LOCK_FLAG, a.DEAL_INFO_TYPE,
              a.ISBYHAND, a.REG_ID, a.AREA_ID, a.SIGN_USER_ID, a.SIGN_USER_NAME, a.SIGN_MANAGER_ID, a.SIGN_MANAGER_NAME,
              a.SIGN_USER_DEPT_ID, a.SIGN_USER_DEPT_NAME, a.SIGN_MANAGER_DEPT_ID, a.SIGN_MANAGER_DEPT_NAME,
              a.FINANC_STATUS_ID, a.FINANC_NAME, a.CATEGORY_ID, a.CATEGORY_NAME, a.SIGN_DATE, a.TRANSFER_DATE,
              a.EVIDENCE_DATE, a.BUY_OWNER_NAME_BAK, a.SELL_OWNER_NAME_BAK, a.BUY_ID_CARD_BAK, a.SELL_ID_CARD_BAK,
              a.SALE_PRICE_UNIT, a.RENT_CYCLE, a.CODE_ID, a.PROCESS_STATUS, a.BUY_CUSTOMER_PHONE, a.BUY_CUSTOMER_PHONEENCODE,
              a.SELL_OWNER_PHONE, a.SELL_OWNER_PHONEENCODE, a.SELL_OWNER_PHONE_BAK, a.BUY_CUSTOMER_PHONE_BAK,
              a.CONTRACT_ID, a.PAYTYPE_ID, a.PAYTYPE_NAME, a.YOU_ADUIT_STATUS, a.DEAL_AUDIT_STATUS, a.COMMERCIAL_LOAN_DATE,
              a.COMMERCIAL_LENDER_DATE, a.COMMERCIAL_LENDER_LIMIT, a.COMMERCIAL_LENDER_BANK, a.PROVIDENT_LOAN_DATE,
              a.PROVIDENT_LENDER_DATE, a.PROVIDENT_LENDER_LIMIT, a.PROVIDENT_LENDER_BANK, a.TOTAL_NEED_INCOME,
              a.TOTAL_REAL_INCOME, a.TOTAL_NEED_PERFORMANCE, a.TOTAL_REAL_PERFORMANCE, a.NEED_ADUIT_STATUS,
              a.REAL_ADUIT_STATUS, a.INTELLIGENT_SEARCH, a.PROVIDENT_LOAN_MONEY, a.COMMERCIAL_LOAN_MONEY,
              a.TAXES_AUDIT_STATUS, a.TAXES_AUDIT_NAME, a.TAXES_AUDIT_USER, a.TAXES_AUDIT_TIME, a.DEAL_AUDITOR,
              a.YOU_ADUIT_OPINION, a.YOU_DEAL_FLAG, a.SUB_ADUIT_TIME, a.YOUJIA_DEAL, a.BUILD_REG_NAME, a.BUILD_REG_ID,
              a.PROCESS_END_TIME, a.YOU_ADUIT_STATUS_PROTOCOL, a.PROTOCOL_ID, a.TRANSFER_NEED_PERFORMANCE,
              a.TRANSFER_REAL_PERFORMANCE, a.SECONDHAND_NEED_PERFORMANCE, a.SECONDHAND_REAL_PERFORMANCE,
              a.NEWHOUSE_NEED_PERFORMANCE, a.NEWHOUSE_REAL_PERFORMANCE, a.LEASE_NEED_PERFORMANCE, a.LEASE_REAL_PERFORMANCE,
              a.FINANCE_NEED_PERFORMANCE, a.FINANCE_REAL_PERFORMANCE, a.COMMISSION_RATE, a.STANDARD_COMMISSION,
              a.CODE_TYPE, a.SECTION_ID, a.SELL_OWNER_COMMSION, a.BUY_CUSTOMER_COMMSION, a.PLANNING_USE,
              a.LANDCARD_TYPE, a.MORTGAGE_TYPE, a.LEASE_TYPE, a.SELLER_PROXY_NAME, a.SELLER_PROXY_IDCARD,
              a.SELLER_PROXY_PHONE, a.SELLER_PROXY_PHONEENCODE, a.BUYER_PROXY_NAME, a.BUYER_PROXY_IDCARD,
              a.BUYER_PROXY_PHONE, a.BUYER_PROXY_PHONEENCODE, a.HOUSE_HOLD_ELECTRICAL, a.BUYER_TAX_FEE,
              a.SELLER_TAX_FEE, a.DEPOSIT_PAY_TIME, a.DEPOSIT_PAY_TYPE, a.DEPOSIT_PAY_OTHER, a.DOWN_PAYMENTS_PAY_TYPE1,
              a.DOWN_PAYMENTS_PAY_TIME1, a.HOUSE_PRICE_LAST_PAY_TYPE1, a.HOUSE_PRICE_LAST_PAY_TIME1,
              a.LOAN_TIME_LENGTH, a.LOAN_AGENCY, a.NO_PASS_SLOUTION_TYPE, a.APPLICATION_REPAYMENT_DAYS,
              a.APPLICATION_REPAYMENT_OTHER, a.OWNERSHIP_OBLIGATIION_NUMBER, a.HOUSE_PROPERTY, a.SELLER_BANK_TYPE,
              a.SELLER_BANK_USER_NAME, a.SELLER_BANK_ACCOUNT, a.BUYER_BANK_TYPE, a.BUYER_BANK_USER_NAME,
              a.BUYER_BANK_ACCOUNT, a.DOWN_PAYMENTS_PAY_TYPE2, a.DOWN_PAYMENTS_PAY_TIME2, a.DOWN_PAYMENTS_PAY_TYPE3,
              a.DOWN_PAYMENTS_PAY_TIME3, a.HOUSE_PRICE_LAST_PAY_TYPE2, a.HOUSE_PRICE_LAST_PAY_TIME2,
              a.HOUSE_PRICE_LAST_PAY_TYPE3, a.HOUSE_PRICE_LAST_PAY_TIME3, a.TRANSFER_DATE_STR, a.TRANSFER_DATE_DAYS_PICKUP,
              a.TRANSFER_DATE_DAYS_REGIST, a.WATER_LEAKAGE, a.WATER_LEAKAGE_POSITION, a.WATER_LEAKAGE_CONSULT,
              a.WATER_LEAKAGE_CONSULT_BEAR_PARTY, a.DEATH_EVENT, a.HOUSE_PEELING, a.HOUSE_PEELING_POSITION,
              a.SUBMIT_LOAN_INFO_FEE_DAYS, a.DOWN_PAYMENTS_PAY_PARTY1, a.DOWN_PAYMENTS_PAY_PARTY2, a.DOWN_PAYMENTS_PAY_PARTY3,
              a.DOWN_PAYMENTS_PAY_BANK, a.DOWN_PAYMENTS_PAY_ACCOUNT_NAME, a.DOWN_PAYMENTS_PAY_ACCOUNT_NO,
              a.DOWN_PAYMENTS_THIRD_PARTY, a.DOWN_PAYMENTS_REMAINING_FIRST_PAYTIME, a.HOUSE_PEELING_BEAR_PARTY,
              a.DOWN_PAYMENTS_REMAINING_FIRST_AMOUNT, a.HOUSE_PRICE_LAST_PAY_AMOUNT3, a.HOUSE_PRICE_LAST_PAY_AMOUNT2,
              a.DOWN_PAYMENTS_PAY_AMOUNT3, a.DOWN_PAYMENTS_PAY_AMOUNT2, a.NO_PASS_SLOUTION_AMOUNT, a.HOUSE_PRICE_LAST_PAY_AMOUNT1,
              a.DOWN_PAYMENTS_PAY_AMOUNT1, a.HOUSE_PRICE_LAST_AMOUNT, a.DOWN_PAYMENTS_AMOUNT, a.DEPOSIT_AMOUNT,
              a.MORTGAGE_AMOUNT, a.SIGN_USER_ARCHIVE, a.BUY_ID_CARD_TYPE, a.SELL_ID_CARD_TYPE, a.SELL_ID_CARD_BAK_TYPE,
              a.BUY_ID_CARD_BAK_TYPE, a.SELLER_PROXY_IDCARD_TYPE, a.BUYER_PROXY_IDCARD_TYPE from fun_deal a
       join fun_contract_deal b on a.deal_id=b.deal_id
       where a.comp_id=#{compId} and b.contract_id=#{contractId}
  </select>


  <resultMap extends="BaseResultMap" id="extBaseResult" type="com.myfun.repository.erpdb.dto.ErpFunDealDto">
    <result column="ATTR" jdbcType="INTEGER" property="attr" />
    <result column="REPEAT_DEAL_ID" jdbcType="INTEGER" property="repeatDealId" />
	  <result column="STEP_NUM" jdbcType="INTEGER" property="stepNum" />
  </resultMap>
  <select id="getFunDealDto" resultMap="extBaseResult">
      select <include refid="Base_Column_List" /> from fun_deal where deal_id=#{dealId}
  </select>
	
	<select id="sumYsSsAmount" resultType="java.util.Map">
		SELECT sum(TOTAL_NEED_INCOME) ysAmount, SUM (TOTAL_REAL_INCOME) ssAmount
		FROM FUN_DEAL
        WHERE DEAL_ID IN
        <foreach close=")" collection="dealIdSet" item="dealId" open="(" separator=",">
        #{dealId}
        </foreach>
      <!-- 		WHERE DEAL_ID IN ( -->

<!--			SELECT A.DEAL_ID-->
<!--			FROM FUN_DEAL A-->
<!--			JOIN PROCESS_FINANC C ON A.DEAL_ID=C.DEAL_ID and c.PF_ACTUAL=#{pfActual}-->
<!--			<where>-->
<!--				<if test="null != param.compId">-->
<!--					and a.COMP_ID=#{param.compId}-->
<!--				</if>-->
<!--				<if test="null != param.areaId">-->
<!--					and a.AREA_ID=#{param.areaId}-->
<!--				</if>-->
<!--				<if test="null != param.regId">-->
<!--					and a.REG_ID=#{param.regId}-->
<!--				</if>-->
<!--				<if test="null != param.deptId">-->
<!--					and a.SIGN_USER_DEPT_ID=#{param.deptId}-->
<!--				</if>-->
<!--				<if test="null != param.dealStatus">-->
<!--					and a.DEAL_STATUS=#{param.dealStatus}-->
<!--				</if>-->
<!--				<if test="null != param.dealStatus">-->
<!--					and a.DEAL_STATUS=#{param.dealStatus}-->
<!--				</if>-->
<!--				<if test="null != param.dealId">-->
<!--					and a.DEAL_ID=#{param.dealId}-->
<!--				</if>-->
<!--				<if test="null != param.timeType ">-->
<!--					<choose>-->
<!--						<when test="1 == param.timeType">-->
<!--							and CONVERT(VARCHAR(7), a.DEAL_VERIFY_TIME, 120 ) in-->
<!--							<foreach close=")" collection="assessMentMonthSet" item="assessMentMonth" open="(" separator=",">-->
<!--								#{assessMentMonth}-->
<!--							</foreach>-->
<!--						</when>-->
<!--						<when test="2 == param.timeType">-->
<!--							and CONVERT(VARCHAR(7), SIGN_DATE, 120 ) in-->
<!--							<foreach close=")" collection="assessMentMonthSet" item="assessMentMonth" open="(" separator=",">-->
<!--								#{assessMentMonth}-->
<!--							</foreach>-->
<!--						</when>-->
<!--						<when test="3 == param.timeType">-->
<!--							and CONVERT(VARCHAR(7), c.PF_TIME, 120 ) in-->
<!--							<foreach close=")" collection="assessMentMonthSet" item="assessMentMonth" open="(" separator=",">-->
<!--								#{assessMentMonth}-->
<!--							</foreach>-->
<!--						</when>-->
<!--					</choose>-->
<!--				</if>-->
<!--			</where>-->
<!--			group by a.deal_id-->
-- 		)
	</select>
	
  <select id="sumJsAmount" resultType="java.util.Map">
    SELECT ISNULL(SUM(TOTAL_REAL_INCOME), 0) jsAmount
    FROM fun_deal
    WHERE DEAL_STATUS = 2 AND DEAL_ID in <foreach close=")" collection="dealIdList" item="dealId" open="(" separator=",">
      #{dealId}
    </foreach>
  </select>

  <select id="getDealListByMap" resultMap="BaseResultMap">
    select distinct A.DEAL_ID,B.CREATOR_DATE,B.DEAL_STATUS,B.CONTRACT_NO,CASE B.DEAL_TYPE WHEN 101 THEN '[售]' ELSE '[租]' END + B.HOUSEADDRESS HOUSEADDRESS,
    A.DEAL_VERIFY_TIME,B.DEAL_AUDIT_STATUS,CASE B.DEAL_TYPE WHEN 101 THEN '[售]' ELSE '[租]' END +iif(B.ISBYHAND=1,ISNULL(B.SELL_ADDRESS,'')+'(非权证合同)',B.SELL_ADDRESS) SELL_ADDRESS,
    B.COMP_ID,B.DEAL_TYPE,B.SIGN_DATE,B.TOTAL_NEED_INCOME,B.TOTAL_REAL_INCOME,B.TOTAL_NEED_PERFORMANCE,B.TOTAL_REAL_PERFORMANCE, B.ISBYHAND,B.DEPT_ID
    FROM FUN_PROFIT A join FUN_DEAL B ON A.DEAL_ID = B.DEAL_ID
    where B.COMP_ID=#{param.compId}
    <if test="param.dealType != null ">
      AND B.DEAL_TYPE= #{param.dealType}
    </if>
    <choose>
      <when test="param.dealStatus != null ">
        <if test="param.dealStatus == 6">
          AND B.DEAL_STATUS != 2
        </if>
        <if test="param.dealStatus != 6">
          AND B.DEAL_STATUS = #{param.dealStatus}
        </if>
      </when>
    </choose>
    <if test="param.performanceType != null ">
      AND A.PERFORMANCE_TYPE = #{param.performanceType}
    </if>
    <if test="param.performanceId != null ">
      AND A.PERFORMANCE_ID = #{param.performanceId}
    </if>
    <if test="param.intelligentSearch != null ">
      AND B.INTELLIGENT_SEARCH LIKE %#{param.intelligentSearch}%
    </if>
    <if test="param.isNewOrganization != true ">
	    <if test="param.regId != null ">
	      AND A.REG_ID = #{param.regId}
	    </if>
	    <if test="param.areaId != null ">
	      AND A.AREA_ID = #{param.areaId}
	    </if>
	    <if test="param.grId != null ">
	      AND A.GR_ID = #{param.grId}
	    </if>
	    <if test="param.deptId != null ">
	      AND A.DEPT_ID = #{param.deptId}
	    </if>
	</if>
    <if test="param.isNewOrganization == true ">
	    <if test="param.organizationId != null and param.organizationId != 0">
			and A.ORGANIZATION_PATH LIKE '%:${param.organizationId}:%'
		</if>
    </if>    
    <if test="param.startDate != null and param.endDate != null">
      AND B.${param.dateType} &gt;= #{param.startDate} AND B.${param.dateType}  &lt; #{param.endDate}
    </if>
    <if test="param.archiveId != null ">
      AND A.ARCHIVE_ID = #{param.archiveId}
    </if>
    <if test="param.orderBy != null ">
      ORDER BY ${param.orderBy}
    </if>
  </select>

  <select id="getPageCountByMap" resultType="java.lang.Integer">
    select count(distinct A.DEAL_ID)
    FROM FUN_PROFIT A join FUN_DEAL B ON A.DEAL_ID = B.DEAL_ID
    where B.COMP_ID=#{param.compId}
    <if test="param.dealType != null ">
      AND B.DEAL_TYPE= #{param.dealType}
    </if>
    <choose>
      <when test="param.dealStatus != null ">
        <if test="param.dealStatus == 6">
          AND B.DEAL_STATUS != 2
        </if>
        <if test="param.dealStatus != 6">
          AND B.DEAL_STATUS = #{param.dealStatus}
        </if>
      </when>
    </choose>
    <if test="param.performanceType != null ">
      AND A.PERFORMANCE_TYPE = #{param.performanceType}
    </if>
    <if test="param.performanceId != null ">
      AND A.PERFORMANCE_ID = #{param.performanceId}
    </if>
    <if test="param.intelligentSearch != null ">
      AND B.INTELLIGENT_SEARCH LIKE %#{param.intelligentSearch}%
    </if>
	<if test="param.isNewOrganization != true ">
	    <if test="param.regId != null ">
	      AND A.REG_ID = #{param.regId}
	    </if>
	    <if test="param.areaId != null ">
	      AND A.AREA_ID = #{param.areaId}
	    </if>
	    <if test="param.grId != null ">
	      AND A.GR_ID = #{param.grId}
	    </if>
	    <if test="param.deptId != null ">
	      AND A.DEPT_ID = #{param.deptId}
	    </if>
    </if>
    <if test="param.isNewOrganization == true ">
	    <if test="param.organizationId != null and param.organizationId != 0">
			and A.ORGANIZATION_PATH LIKE '%:${param.organizationId}:%'
		</if>
    </if>
    <if test="param.startDate != null and param.endDate != null">
      AND B.${param.dateType} &gt;= #{param.startDate} AND B.${param.dateType}  &lt; #{param.endDate}
    </if>
    <if test="param.archiveId != null ">
      AND A.ARCHIVE_ID = #{param.archiveId}
    </if>
  </select>

  <select id="getFunDealList" resultMap="BaseResultMap">
    SELECT LOCK_FLAG
    FROM fun_deal
    WHERE COMP_ID=#{param.compId}
    <if test="param.dealHouseId != null">
        AND DEAL_HOUSE_ID = #{param.dealHouseId}
    </if>
    <if test="param.dealCustomerId != null">
        AND DEAL_CUSTOMER_ID = #{param.dealCustomerId}
    </if>
    <if test="param.dealType">
        AND DEAL_TYPE = #{param.dealType}
    </if>
  </select>

  <select id="getFinancialStatementsMonthlyShopReport" resultType="java.util.Map">
    with T_SIGN_USER as ( select distinct B.AREA_ID,B.REG_ID,B.DEPT_ID,B.DEAL_ID,A.SIGN_USER_ID,A.SIGN_DATE,A.TRANSFER_DATE,A.DEAL_VERIFY_TIME
    from FUN_DEAL A join DEAL_USER_RELATIVE B ON A.DEAL_ID=B.DEAL_ID AND A.SIGN_USER_ID=B.USER_ID AND A.COMP_ID = #{param.compId}
    where B.COMP_ID = #{param.compId} AND A.ISBYHAND = 0 AND A.DEAL_AUDIT_STATUS != 3 AND  B.RELATE_TYPE = 3
    <if test="param.dateType != null">
      AND ((A.SIGN_DATE <![CDATA[>=]]> #{param.countDateStart} AND A.SIGN_DATE <![CDATA[<=]]> #{param.countDateEnd})
      OR (${param.dateType} <![CDATA[>=]]> #{param.countDateStart} AND ${param.dateType} <![CDATA[<=]]> #{param.countDateEnd}))
    </if>
    <if test="param.isNewOrganization != true ">
	    <if test="param.areaId != null">
	      AND B.AREA_ID = #{param.areaId}
	    </if>
	    <if test="param.regId != null">
	      AND B.REG_ID = #{param.regId}
	    </if>
	    <if test="param.deptId != null">
	      AND B.DEPT_ID = #{param.deptId}
	    </if>
    </if>
    <if test="param.isNewOrganization == true ">
	    <if test="param.organizationId != null and param.organizationId != 0">
			and B.ORGANIZATION_PATH LIKE '%:${param.organizationId}:%'
		</if>
    </if>
    ), T_FUN_PROCESS as ( select * from (SELECT A.DEAL_ID,('A_'+convert(varchar(10),B.PAYMENT_ID) + '_COUNT') PAYMENT_ID,SUM(B.PAY_AMOUNT) PAY_AMOUNT
    FROM T_SIGN_USER A LEFT JOIN PROCESS_FINANC B ON A.DEAL_ID = B.DEAL_ID
    WHERE A.DEAL_ID &gt; 0 and B.PF_ACTUAL=1
    GROUP BY A.DEAL_ID,B.PAYMENT_ID
    ) p PIVOT ( SUM([PAY_AMOUNT]) FOR [PAYMENT_ID] IN (${param.buildPaymentIdString}
    ) ) AS pvt )
    select A.AREA_ID as areaId,A.REG_ID as regId,A.DEPT_ID as deptId,sum(iif(DATEPART(month,A.SIGN_DATE)=DATEPART(month,
    ${param.dateType}) and DATEPART(yyyy,A.SIGN_DATE)=DATEPART(yyyy,${param.dateType})
    and (convert(VARCHAR(8),${param.dateType},20)+'01') = #{param.nowDateStr},${param.transfer},0)) as paymentTransfer2,
    sum(iif(A.SIGN_DATE <![CDATA[<]]> (convert(VARCHAR(8),${param.dateType},20)+'01') and (convert(VARCHAR(8),${param.dateType},20)+'01') = #{param.nowDateStr},#{param.transfer},0)) as paymentTransfer1,
    sum(iif(DATEPART(month,A.SIGN_DATE)=DATEPART(month,${param.dateType}) and DATEPART(yyyy,A.SIGN_DATE)=DATEPART(yyyy,${param.dateType}) and (convert(VARCHAR(8),
    ${param.dateType},20)+'01') = #{param.nowDateStr},${param.commission},0)) as paymentCommission2,
    sum(iif(A.SIGN_DATE <![CDATA[<]]> (convert(VARCHAR(8),${param.dateType},20)+'01') and (convert(VARCHAR(8),${param.dateType},20)+'01') = #{param.nowDateStr},${param.commission},0)) as paymentCommission1,
    sum(iif(A.SIGN_USER_ID &gt; 0,iif(DATEPART(month,A.SIGN_DATE)=DATEPART(month,${param.dateType}) and DATEPART(yyyy,A.SIGN_DATE)=DATEPART(yyyy,${param.dateType}) and (convert(VARCHAR(8),
    ${param.dateType},20)+'01') = #{param.nowDateStr},1,0 ),0)) as dealCount2,
    sum(iif(A.SIGN_USER_ID &gt; 0,iif(A.SIGN_DATE <![CDATA[<]]> (convert(VARCHAR(8),${param.dateType},20)+'01') and (convert(VARCHAR(8),${param.dateType},20)+'01') = #{param.nowDateStr},1,0 ),0)) as dealCount1,
    sum(iif(A.SIGN_USER_ID &gt; 0 and (convert(VARCHAR(8),A.SIGN_DATE,20)+'01') = #{param.nowDateStr},1,0 )) as dealCount3
    from T_SIGN_USER A left join T_FUN_PROCESS B ON A.DEAL_ID = B.DEAL_ID
    where A.SIGN_USER_ID &gt; 0
    group by A.AREA_ID,A.REG_ID,A.DEPT_ID
  </select>

  <select id="getPercentProfitList" resultType="java.util.Map">
    with T_FUN_PROFIT
    AS (select * from ( SELECT A.COMP_ID,A.AREA_ID,A.REG_ID,A.DEPT_ID,A.GR_ID,A.USER_ID,A.ARCHIVE_ID,A.DEAL_ID,
    (convert(varchar(10),A.PERFORMANCE_ID) + 'Count') PERFORMANCE_ID,SUM(A.PROFIT_MONEY) PROFIT_MONEY
    FROM FUN_PROFIT A WHERE A.COMP_ID = #{param.compId}
    GROUP BY A.COMP_ID,A.AREA_ID,A.REG_ID,A.DEPT_ID,A.GR_ID,A.USER_ID,A.ARCHIVE_ID,A.DEAL_ID,A.PERFORMANCE_ID ) p PIVOT
    ( SUM([PROFIT_MONEY]) FOR [PERFORMANCE_ID]
    IN (${param.performanceColumn[0]}) ) AS pvt),T_FUN_PROFIT_COUNT AS
    (SELECT A.COMP_ID,A.DEPT_ID,A.USER_ID,A.ARCHIVE_ID,A.DEAL_ID,SUM (A.PROFIT_MONEY) PROFIT_MONEY,
    SUM(A.PROFIT_PROPORTION) PROFIT_PROPORTION FROM FUN_PROFIT A
    GROUP BY A.COMP_ID,A.DEPT_ID,A.USER_ID,A.ARCHIVE_ID,A.DEAL_ID),T_FUN_PROFIT_PROPORTION
    AS (select * from ( SELECT A.COMP_ID,A.AREA_ID,A.REG_ID,A.DEPT_ID,A.GR_ID,A.USER_ID,A.ARCHIVE_ID,A.DEAL_ID,
    (convert(varchar(10),PERFORMANCE_ID) + 'RatioCount') RATIO_COUNT,sum(PROFIT_PROPORTION) PROFIT_PROPORTION
    FROM FUN_PROFIT A WHERE A.COMP_ID = #{param.compId}
    GROUP BY A.COMP_ID,A.AREA_ID,A.REG_ID,A.DEPT_ID,A.GR_ID,A.USER_ID,A.ARCHIVE_ID,A.DEAL_ID,A.PERFORMANCE_ID ) p PIVOT
    ( SUM([PROFIT_PROPORTION]) FOR [RATIO_COUNT] IN (${param.performanceColumn[1]}) ) AS pvt)
    SELECT ${param.performanceColumn[0]},${param.performanceColumn[1]},D.COMP_ID compId,D.AREA_ID areaId,D.REG_ID regId,D.DEPT_ID deptId,ISNULL(D.GR_ID, 0)
    AS grId,D.USER_ID userId,D.ARCHIVE_ID archiveId,A.DEAL_TYPE dealType,A.SELL_ADDRESS sellAddress,A.CATEGORY_NAME categoryName,
    A.BUY_MORTGAGE_TYPE buyMortgageType,A.CATEGORY_ID categoryId, A.DEAL_ID dealId,A.ISBYHAND isbyhand, A.CONTRACT_NO contractNo,
    A.DEAL_HOUSE_NO dealHouseNo,A.HOUSEADDRESS houseaddress,A.SIGN_DATE signDate,A.PAYTYPE_NAME paytypeName,A.TRANSFER_DATE transferDate,
    A.RENT_PAY_METHOD rentPayMethod,A.SELL_DEAL_MONEY sellDealMoney,
    A.TOTAL_NEED_PERFORMANCE  ysPaymoney,A.TOTAL_REAL_PERFORMANCE  realPaymoney, F.PROFIT_PROPORTION  fcRate,F.PROFIT_MONEY fcProfit
    FROM T_FUN_PROFIT D LEFT JOIN FUN_DEAL A ON D.DEAL_ID=A.DEAL_ID
    LEFT JOIN T_FUN_PROFIT_COUNT F ON A.DEAL_ID = F.DEAL_ID AND (F.USER_ID = D.USER_ID OR (F.USER_ID IS NULL AND D.USER_ID
    IS NULL AND F.DEPT_ID = D.DEPT_ID) OR (F.DEPT_ID IS NULL AND D.DEPT_ID IS NULL)) LEFT JOIN T_FUN_PROFIT_PROPORTION G
    ON A.DEAL_ID = G.DEAL_ID AND (G.USER_ID = D.USER_ID OR (G.USER_ID IS NULL AND D.USER_ID IS NULL AND G.DEPT_ID = D.DEPT_ID)
    OR (G.DEPT_ID IS NULL AND D.DEPT_ID IS NULL)) WHERE D.COMP_ID=#{param.compId}
    <if test="param.startTime != null">
      AND A.${param.dateType} &gt;= #{param.startTime}
    </if>
    <if test="param.endTime != null">
      AND A.${param.dateType} &lt; #{param.endTime}
    </if>
    <if test="param.contractNo != null">
      AND  (A.CONTRACT_NO LIKE #{param.contractNo} OR A.AGREEMENT_NO LIKE #{param.contractNo})
    </if>
    <if test="param.dealType != null">
      AND A.DEAL_TYPE = #{param.dealType}
    </if>
    <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
      AND ${param.serchRange} = #{param.serchRangeId}
    </if>
    <if test="param.categoryId != null">
      <choose>
        <when test="param.categoryId =='OTHER'">
          AND A.CATEGORY_ID is null
        </when>
        <otherwise>
          AND A.CATEGORY_ID =#{param.categoryId}
        </otherwise>
      </choose>
    </if>

    ORDER BY D.COMP_ID,D.AREA_ID,D.REG_ID,D.DEPT_ID,ISNULL(D.GR_ID, IIF(D.USER_ID is null, 2100000000, 0)),ISNULL(D.USER_ID,2100000000)
  </select>

  <select id="getPercentProfitListNewOrg" resultType="java.util.Map">
      with T_FUN_PROFIT AS (
          select * from (
            SELECT ${param.queryColStr} AS range,
            D.ARCHIVE_ID,D.DEAL_ID,(convert(varchar(10),D.PERFORMANCE_ID) + 'Count') PERFORMANCE_ID,
            SUM(A.PROFIT_MONEY) PROFIT_MONEY
            FROM FUN_PROFIT D
            WHERE D.COMP_ID = #{param.compId}
            <if test="param.whereStr != null and param.whereStr != ''">
              AND ${param.whereStr} IS NOT NULL
            </if>
            GROUP BY ${param.groupBy},D.ARCHIVE_ID,D.DEAL_ID,D.PERFORMANCE_ID
          ) p PIVOT ( SUM([PROFIT_MONEY]) FOR [PERFORMANCE_ID] IN (${param.performanceColumn[0]}) ) AS pvt
      ),T_FUN_PROFIT_COUNT AS (
          SELECT ${param.queryColStr} AS range,D.ARCHIVE_ID,D.DEAL_ID,
          SUM (D.PROFIT_MONEY) PROFIT_MONEY,
          SUM(D.PROFIT_PROPORTION) PROFIT_PROPORTION
          FROM FUN_PROFIT D
          WHERE D.COMP_ID = #{param.compId}
          <if test="param.whereStr != null and param.whereStr != ''">
            AND ${param.whereStr} IS NOT NULL
          </if>
          GROUP BY ${param.groupBy},D.ARCHIVE_ID,D.DEAL_ID
      ),T_FUN_PROFIT_PROPORTION AS (
        select * from (
          SELECT ${param.queryColStr} AS range,
          D.ARCHIVE_ID,D.DEAL_ID,(convert(varchar(10),PERFORMANCE_ID) + 'RatioCount') RATIO_COUNT,
          sum(PROFIT_PROPORTION) PROFIT_PROPORTION
          FROM FUN_PROFIT D
          WHERE D.COMP_ID = #{param.compId}
          <if test="param.whereStr != null and param.whereStr != ''">
            AND ${param.whereStr} IS NOT NULL
          </if>
          GROUP BY ${param.groupBy},D.ARCHIVE_ID,D.DEAL_ID,D.PERFORMANCE_ID
        ) p PIVOT ( SUM([PROFIT_PROPORTION]) FOR [RATIO_COUNT] IN (${param.performanceColumn[1]}) ) AS pvt
      )
      SELECT ${param.performanceColumn[0]},${param.performanceColumn[1]},
        ${param.queryColStr} AS range,D.ARCHIVE_ID archiveId,A.DEAL_TYPE dealType,A.SELL_ADDRESS sellAddress,A.CATEGORY_NAME categoryName,
      A.BUY_MORTGAGE_TYPE buyMortgageType,A.CATEGORY_ID categoryId, A.DEAL_ID dealId,A.ISBYHAND isbyhand, A.CONTRACT_NO contractNo,
      A.DEAL_HOUSE_NO dealHouseNo,A.HOUSEADDRESS houseaddress,A.SIGN_DATE signDate,A.PAYTYPE_NAME paytypeName,A.TRANSFER_DATE transferDate,
      A.RENT_PAY_METHOD rentPayMethod,A.SELL_DEAL_MONEY sellDealMoney,
      A.TOTAL_NEED_PERFORMANCE  ysPaymoney,A.TOTAL_REAL_PERFORMANCE  realPaymoney, F.PROFIT_PROPORTION  fcRate,F.PROFIT_MONEY fcProfit
      FROM T_FUN_PROFIT D
      LEFT JOIN FUN_DEAL A ON D.DEAL_ID=A.DEAL_ID
      LEFT JOIN T_FUN_PROFIT_COUNT F ON A.DEAL_ID = F.DEAL_ID AND F.range = D.range
      LEFT JOIN T_FUN_PROFIT_PROPORTION G ON A.DEAL_ID = G.DEAL_ID AND G.range = D.range
      WHERE D.COMP_ID=#{param.compId}
      <if test="param.startTime != null">
        AND A.${param.dateType} &gt;= #{param.startTime}
      </if>
      <if test="param.endTime != null">
        AND A.${param.dateType} &lt; #{param.endTime}
      </if>
      <if test="param.contractNo != null">
        AND  (A.CONTRACT_NO LIKE #{param.contractNo} OR A.AGREEMENT_NO LIKE #{param.contractNo})
      </if>
      <if test="param.dealType != null">
        AND A.DEAL_TYPE = #{param.dealType}
      </if>
      <if test="null != param.serchRange and '' != param.serchRange and null != param.serchRangeId">
        AND ${param.serchRange} = #{param.serchRangeId}
      </if>
      <if test="param.categoryId != null">
        <choose>
          <when test="param.categoryId =='OTHER'">
            AND A.CATEGORY_ID is null
          </when>
          <otherwise>
            AND A.CATEGORY_ID =#{param.categoryId}
          </otherwise>
        </choose>
      </if>
      ORDER BY ${param.groupBy}
  </select>

  <resultMap id="ErpFunDealFinanceMap" extends="BaseResultMap" type="com.myfun.erpWeb.managecenter.financialStatements.vo.ErpFunDealFinanceVo">
      <result column="TISSUE_LINE" jdbcType="VARCHAR" property="organizationPath" />
  </resultMap>

  <select id="getDealListByTableName" resultMap="ErpFunDealFinanceMap">
    SELECT A.DEAL_ID,A.CONTRACT_NO,A.DEAL_TYPE,A.SIGN_DATE,A.SIGN_USER_ID,A.SIGN_USER_NAME,A.SIGN_USER_DEPT_ID,A.SIGN_USER_DEPT_NAME,
    A.DEAL_VERIFY_TIME,A.HOUSEADDRESS,A.SELL_ADDRESS,A.BUY_OWNER_NAME,A.SELL_OWNER_NAME,A.ISBYHAND,C.TISSUE_LINE
    FROM FUN_DEAL A JOIN PROCESS_FINANC B ON A.DEAL_ID=B.DEAL_ID
    <choose>
      <when test="param.userType == 2">
        JOIN FUN_USERS C ON C.USER_ID=A.CREATOR_UID
      </when>
      <otherwise>
        JOIN FUN_USERS C ON C.USER_ID = A.SIGN_USER_ID
      </otherwise>
    </choose>
    WHERE A.COMP_ID = #{param.compId}
    <if test="param.userId != null">
     	<choose>
       		<when test="param.operLevel != null and param.operLevel == 1 "><!-- 本人团队 -->
       			AND C.ARCHIVE_ID IN(
					SELECT ARCHIVE_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId}
					 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel} 
       			)	
       		</when>
       		<when test="param.operLevel != null and param.operLevel == 2 "><!-- 下级团队 -->
       			AND C.ARCHIVE_ID IN(
					SELECT ARCHIVE_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId}
					AND TISSUE_LINE LIKE '%:${param.userId}:%'  
       			)
       		</when>
       		<otherwise>
       			 AND C.ARCHIVE_ID = #{param.archiveId}
       		</otherwise>
       	</choose>
    </if>
    <if test="param.isNewOrganization != true ">
	    <if test="param.areaId != null">
	      AND C.AREA_ID = #{param.areaId}
	    </if>
	    <if test="param.regId != null">
	      AND C.REG_ID = #{param.regId}
	    </if>
	    <if test="param.deptId != null">
	      AND C.DEPT_ID = #{param.deptId}
	    </if>
	</if>
    <if test="param.isNewOrganization == true and param.organizationId != null and param.organizationId != 0">
		and C.TISSUE_LINE LIKE '%:${param.organizationId}:%'
    </if>
    <if test="param.dateType != null">
      <if test="param.dateType == 'YINSHOU_TIME' or param.dateType == 'SHISHOU_TIME' ">
        AND B.PF_TIME <![CDATA[>=]]> #{param.startTime}
        AND B.PF_TIME <![CDATA[<=]]> #{param.endTime}
        <choose>
          <when test="param.dateType == 'YINSHOU_TIME'">
            AND B.PF_ACTUAL = 0
          </when>
          <otherwise>
            AND B.PF_ACTUAL = 1
          </otherwise>
        </choose>
      </if>
      <if test="param.dateType == 'SIGN_DATE' or param.dateType == 'DEAL_VERIFY_TIME' ">
        AND B.PF_ID IN(SELECT MAX(PF_ID) AS PF_ID FROM PROCESS_FINANC
        <if test="param.paymentId != null and param.paymentId !=''">
          where PAYMENT_ID = #{param.paymentId}
        </if>
        GROUP BY DEAL_ID)
        AND A.${param.dateType} <![CDATA[>=]]>  #{param.startTime}
        AND A.${param.dateType} <![CDATA[<=]]> #{param.endTime}
      </if>
    </if>
    <if test="param.contractNo != null and param.contractNo != ''">
        AND A.CONTRACT_NO LIKE #{param.contractNo}
    </if>
    ORDER BY
    <choose>
      <when test="param.orderBy != null">
        #{param.orderBy}
      </when>
      <otherwise>
        A.DEAL_ID DESC
      </otherwise>
    </choose>
  </select>

	<select id="getRepeatDealIds" resultType="java.lang.Integer">
		SELECT A.DEAL_ID as REPEAT_DEAL_ID
		FROM FUN_DEAL A join PROCESS_RUNTIME_STEP B ON A.DEAL_ID=B.DEAL_ID
		and A.COMP_ID=#{param.compId} 
		
		<choose>
			<when test="param.userType== 1">
				JOIN FUN_USERS C ON A.DEAL_USER_ID = c.USER_ID
			</when>
			<when test="param.userType== 2">
				JOIN FUN_USERS C ON B.UPDATE_USER = c.USER_ID
			</when>
			<when test="param.userType== 3">
				JOIN FUN_USERS C ON A.SIGN_USER_ID = c.USER_ID
			</when>
			<when test="param.userType== 4">
				JOIN FUN_USERS C ON A.CREATOR_UID = c.USER_ID
			</when>
		</choose>
		 
		where B.DEL_FLAG=0
		<if test="param.stepName != null and param.stepName != '' ">
			and B.STEP_NAME=#{param.stepName}
		</if>
		<if test="param.stepStatus != null ">
			<choose>
				<when test="param.stepStatus=='1'">
					and B.RUNSTEP_STATUS in (1,2,4)
				</when>
				<otherwise>
					and B.RUNSTEP_STATUS=#{param.stepStatus}
				</otherwise>
			</choose>
		</if>
		<if test="param.newOrganization == false">
			<if test="param.deptId != null ">
				and C.DEPT_ID=#{param.deptId}
			</if>
			<if test="param.grId != null ">
				and c.GR_ID=#{param.grId}
			</if>
		</if>
		<if test="param.newOrganization == true">
			<if test="param.organizationId != null and param.organizationId != 0">
				and C.TISSUE_LINE LIKE '%:${param.organizationId}:%'
			</if>
		</if>
		<if test="param.modelId != null ">
			and A.MODEL_ID=#{param.modelId}
		</if>
		<if test="param.userId != null ">
			<choose>
				<when test="param.operLevel != null and param.operLevel == 1">
					AND C.TISSUE_LINE LIKE '%:${param.userId}:%' AND C.USER_LEVEL &lt;= #{param.userLevel}
				</when>
				<when test="param.operLevel != null and param.operLevel == 2">
					AND C.TISSUE_LINE LIKE '%:${param.userId}:%'
				</when>
				<otherwise>
					AND C.USER_ID =#{param.userId}
				</otherwise>
			</choose>
		</if>
		<if test="param.dateColumn !=null">
			<choose>
				<when test="param.date != null">
					<choose>
						<when test="param.date== 4 ">
							and ${param.dateColumn} &lt;#{param.dateParam}
						</when>
						<otherwise>
							AND ${param.dateColumn} &gt;= #{param.startTime} and ${param.dateColumn} &lt;=
							#{param.endTime}
						</otherwise>
					</choose>
				</when>
				<otherwise>
					AND ${param.dateColumn} &gt;= #{param.startTime} and ${param.dateColumn} &lt;= #{param.endTime}
				</otherwise>
			</choose>
		</if>
		<if test="param.intelligentSearch != null and param.intelligentSearch != '' ">
			and A.INTELLIGENT_SEARCH like '%${param.intelligentSearch}%'
		</if>
		<if test="param.processStatus != null">
			<choose>
				<when test="param.processStatus== 3 ">
					and A.PROCESS_STATUS !=2
				</when>
				<otherwise>
					and A.PROCESS_STATUS = #{param.processStatus}
				</otherwise>
			</choose>
		</if>
		<if test="null != param.dealStatus">
			AND A.DEAL_STATUS = #{param.dealStatus}
		</if>
		GROUP BY A.DEAL_ID order by A.DEAL_ID
	</select>

	<select id="getDealContractList" resultType="com.myfun.erpWeb.managecenter.transaction.vo.DealContractDto">
		SELECT A.CONTRACT_NO contractNo,A.DEAL_ID dealId,A.CREATOR_NAME creatorName,A.SIGN_USER_NAME signUserName,
		A.SELL_ADDRESS sellAddress,A.SIGN_DATE signDate,A.BUY_OWNER_NAME buyOwnerName,A.SELL_OWNER_NAME sellOwnerName,
		A.RENT_DEAL_MONEY rentDealMoney,A.DEAL_TYPE dealType,A.SELL_DEAL_MONEY sellDealMoney,
		A.RENT_PRICE_UNIT rentPriceUnit,A.SALE_PRICE_UNIT salePriceUnit,A.DEAL_USER_NAME dealUserName,A.DEAL_USER_ID
		dealUserId,
		A.CREATOR_UID creatorUid,A.CUST_USER_UID custUserUid,A.HOUSE_USER_UID houseUserUid,A.MODEL_NAME
		modelName,B.STEP_SEQ stepSeq,
		B.STEP_NAME stepName,B.RUNSTEP_STATUS runstepStatus,B.UPDATE_USER updateUser,B.UPDATE_USERNAME updateUserName,
		B.FLOWCONTENT flowcontent,B.TIMELIMITDATE timelimitdate,B.UPDATE_TIME updateTime,A.PROCESS_STATUS processStatus,
		B.RUNSTEP_STATUS,A.SIGN_USER_DEPT_NAME signUserDeptName,A.COMMERCIAL_LOAN_MONEY commercialLoanMoney
		FROM FUN_DEAL A join PROCESS_RUNTIME_STEP B ON A.DEAL_ID=B.DEAL_ID and A.COMP_ID=#{param.compId} 
		
		<choose>
			<when test="param.userType== 1">
				JOIN FUN_USERS C ON A.DEAL_USER_ID = c.USER_ID
			</when>
			<when test="param.userType== 2">
				JOIN FUN_USERS C ON B.UPDATE_USER = c.USER_ID
			</when>
			<when test="param.userType== 3">
				JOIN FUN_USERS C ON A.SIGN_USER_ID = c.USER_ID
			</when>
			<when test="param.userType== 4">
				JOIN FUN_USERS C ON A.CREATOR_UID = c.USER_ID
			</when>
		</choose>
		where B.DEL_FLAG=0
		<if test="param.stepName != null and param.stepName != '' ">
			and B.STEP_NAME=#{param.stepName}
		</if>
		<if test="param.stepStatus != null ">
			<choose>
				<when test="param.stepStatus=='1'">
					and B.RUNSTEP_STATUS in (1,2,4)
				</when>
				<otherwise>
					and B.RUNSTEP_STATUS=#{param.stepStatus}
				</otherwise>
			</choose>
		</if>
		<if test="param.deptId != null ">
			and A.DEPT_ID=#{param.deptId}
		</if>
		<if test="param.grId != null ">
			and c.GR_ID=#{param.grId}
		</if>
		<if test="param.modelId != null ">
			and A.MODEL_ID=#{param.modelId}
		</if>
		<if test="param.userId != null ">
			<choose>
				<when test="param.operLevel != null and param.operLevel == 1">
					AND C.TISSUE_LINE LIKE '%:${param.userId}:%' AND C.USER_LEVEL &lt;= #{param.userLevel}
				</when>
				<when test="param.operLevel != null and param.operLevel == 2">
					AND C.TISSUE_LINE LIKE '%:${param.userId}:%'
				</when>
				<otherwise>
					AND C.USER_ID =#{param.userId}
				</otherwise>
			</choose>
		</if>
		<if test="param.dateColumn !=null">
			<choose>
				<when test="param.date != null">
					<choose>
						<when test="param.date== 4 ">
							and ${param.dateColumn} &lt;#{param.dateParam}
						</when>
						<otherwise>
							AND ${param.dateColumn} &gt;= #{param.startTime} and ${param.dateColumn} &lt;=
							#{param.endTime}
						</otherwise>
					</choose>
				</when>
				<otherwise>
					AND ${param.dateColumn} &gt;= #{param.startTime} and ${param.dateColumn} &lt;= #{param.endTime}
				</otherwise>
			</choose>
		</if>
		<if test="param.intelligentSearch != null and param.intelligentSearch != '' ">
			and A.INTELLIGENT_SEARCH like '%${param.intelligentSearch}%'
		</if>
		<if test="param.processStatus != null">
			<choose>
				<when test="param.processStatus== 3 ">
					and A.PROCESS_STATUS !=2
				</when>
				<otherwise>
					and A.PROCESS_STATUS = #{param.processStatus}
				</otherwise>
			</choose>
		</if>
		<if test="param.repeatDealIds != null and param.repeatDealIds.size()&gt;0 ">
			AND A.DEAL_ID IN
			<foreach close=")" collection="param.repeatDealIds" item="repeatDealId" open="(" separator=",">
				#{repeatDealId}
			</foreach>
		</if>
		order by ${param.orderBy}
	</select>
	
	<select id="getListOFExcuteByMap" resultMap="extBaseResult">
		SELECT A.CONTRACT_NO,A.DEAL_ID,A.DEAL_ID AS REPEAT_DEAL_ID,
		A.CREATOR_NAME,A.SIGN_USER_NAME,A.SELL_ADDRESS,A.SIGN_DATE,
		A.BUY_OWNER_NAME,A.SELL_OWNER_NAME,A.RENT_DEAL_MONEY,A.RENT_PRICE_UNIT,A.SALE_PRICE_UNIT,A.DEAL_TYPE,A.RENT_DEAL_MONEY,
		A.DEAL_USER_NAME,A.DEAL_USER_ID,A.CREATOR_UID,A.CUST_USER_UID,A.HOUSE_USER_UID,A.SELL_DEAL_MONEY,A.MODEL_NAME,A.DEAL_TYPE,
		A.PROCESS_STATUS,B.TIMELIMITDATE,B.UPDATE_TIME,A.SIGN_USER_DEPT_NAME,A.COMMERCIAL_LOAN_MONEY
		from FUN_DEAL A JOIN PROCESS_RUNTIME_STEP B ON A.DEAL_ID = B.DEAL_ID
		where B.DEL_FLAG = 0 and A.PROCESS_STATUS = 2 and A.COMP_ID=#{param.compId}
		<if test="param.stepStatus !=null">
			<choose>
				<when test="param.stepStatus == 1 ">
					and B.RUNSTEP_STATUS in (1,2,4)
				</when>
				<otherwise>
					and B.RUNSTEP_STATUS = #{param.stepStatus}
				</otherwise>
			</choose>
		</if>
		<if test="param.deptId !=null">
			and A.DEPT_ID = #{param.deptId}
		</if>

		<if test="param.modelId !=null">
			and A.MODEL_ID = #{param.modelId}
		</if>
		<if test="param.userId !=null">
			<if test="param.userType == 1">
				<choose>
					<when test="param.operLevel != null and param.operLevel == 1">
						AND A.DEAL_USER_ID IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel}
						)  
					</when>
					<when test="param.operLevel != null and param.operLevel == 2">
						AND A.DEAL_USER_ID IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' 
						)
					</when>
					<otherwise>
						and A.DEAL_USER_ID = #{param.userId}
					</otherwise>
				</choose>
				
			</if>
			<if test="param.userType == 2">
			<choose>
					<when test="param.operLevel != null and param.operLevel == 1">
						and B.UPDATE_USER IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel}
						)  
					</when>
					<when test="param.operLevel != null and param.operLevel == 2">
						and B.UPDATE_USER IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' 
						)
					</when>
					<otherwise>
						and B.UPDATE_USER = #{param.userId}
					</otherwise>
				</choose>
				
			</if>
			<if test="param.userType == 3">
			<choose>
					<when test="param.operLevel != null and param.operLevel == 1">
						and A.SIGN_USER_ID IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel}
						)  
					</when>
					<when test="param.operLevel != null and param.operLevel == 2">
						and A.SIGN_USER_ID IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' 
						)
					</when>
					<otherwise>
						and A.SIGN_USER_ID = #{param.userId}
					</otherwise>
				</choose>
				
			</if>
			<if test="param.userType == 4">
			<choose>
					<when test="param.operLevel != null and param.operLevel == 1">
						and A.CREATOR_UID IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel}
						)  
					</when>
					<when test="param.operLevel != null and param.operLevel == 2">
						and A.CREATOR_UID IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' 
						)
					</when>
					<otherwise>
						and A.CREATOR_UID = #{param.userId}
					</otherwise>
				</choose>
			</if>
		</if>
		<choose>
			<when test="param.date !=null and param.date == 4">
				<if test="param.dateType == 'TIMELIMITDATE' ">
					and B.TIMELIMITDATE <![CDATA[<]]> getTimeNow()
				</if>
				<if test="param.dateType == 'UPDATE_TIME' ">
					and B.UPDATE_TIME <![CDATA[<]]> getTimeNow()
				</if>
			</when>
			<otherwise>
				<if test="param.dateType == 'TIMELIMITDATE' ">
					and B.TIMELIMITDATE <![CDATA[>=]]> #{param.startTime}
					and B.TIMELIMITDATE <![CDATA[<=]]> #{param.endTime}
				</if>
				<if test="param.dateType == 'UPDATE_TIME' ">
					and B.UPDATE_TIME <![CDATA[>=]]> #{param.startTime}
					and B.UPDATE_TIME <![CDATA[<=]]> #{param.endTime}
				</if>
				<if test="param.dateType == 'SIGN_DATE' ">
					and A.SIGN_DATE <![CDATA[>=]]> #{param.startTime}
					and A.SIGN_DATE <![CDATA[<=]]> #{param.endTime}
				</if>
				<if test="param.dateType == 'PROCESS_END_TIME' ">
					and A.PROCESS_END_TIME <![CDATA[>=]]> #{param.startTime}
					and A.PROCESS_END_TIME <![CDATA[<=]]> #{param.endTime}
				</if>
			</otherwise>
		</choose>
		<if test="param.intelligentSearch !=null and param.intelligentSearch != ''">
			and A.INTELLIGENT_SEARCH LIKE '%${param.intelligentSearch}%'
		</if>
		<choose>
			<when test="param.orderBy != null and param.orderBy != ''">
				order by ${param.orderBy},A.DEAL_ID
			</when>
			<otherwise>
				order by A.DEAL_ID
			</otherwise>
		</choose>
	</select>
	
	<select id="getDealByMap" resultType="java.lang.Integer">
		WITH t_process_step AS ( SELECT A.DEAL_ID,B.TIMELIMITDATE,B.UPDATE_TIME
		FROM FUN_DEAL A JOIN PROCESS_RUNTIME_STEP B ON A.DEAL_ID = B.DEAL_ID AND A.COMP_ID=#{param.compId}
		WHERE B.DEL_FLAG = 0 and A.PROCESS_STATUS = 2
		<if test="param.stepStatus !=null">
			<choose>
				<when test="param.stepStatus == 1 ">
					and B.RUNSTEP_STATUS in (1,2,4)
				</when>
				<otherwise>
					and B.RUNSTEP_STATUS = #{param.stepStatus}
				</otherwise>
			</choose>
		</if>
		<if test="param.dealStatus !=null">
			and A.DEAL_STATUS = #{param.dealStatus}
		</if>
		<if test="param.deptId !=null">
			and A.DEPT_ID = #{param.deptId}
		</if>
		<if test="param.modelId !=null">
			and A.MODEL_ID = #{param.modelId}
		</if>
		<if test="param.userId !=null">
			<if test="param.userType == 1">
				<choose>
					<when test="param.operLevel != null and param.operLevel == 1">
						AND A.DEAL_USER_ID IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel}
						)  
					</when>
					<when test="param.operLevel != null and param.operLevel == 2">
						AND A.DEAL_USER_ID IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' 
						)
					</when>
					<otherwise>
						and A.DEAL_USER_ID = #{param.userId}
					</otherwise>
				</choose>
				
			</if>
			<if test="param.userType == 2">
				<choose>
					<when test="param.operLevel != null and param.operLevel == 1">
						and B.UPDATE_USER IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel}
						)  
					</when>
					<when test="param.operLevel != null and param.operLevel == 2">
						and B.UPDATE_USER IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' 
						)
					</when>
					<otherwise>
						and B.UPDATE_USER = #{param.userId}
					</otherwise>
				</choose>
				
			</if>
			<if test="param.userType == 3">
				<choose>
					<when test="param.operLevel != null and param.operLevel == 1">
						and A.SIGN_USER_ID  IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel}
						)  
					</when>
					<when test="param.operLevel != null and param.operLevel == 2">
						and A.SIGN_USER_ID  IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' 
						)
					</when>
					<otherwise>
						and A.SIGN_USER_ID = #{param.userId}
					</otherwise>
				</choose>
				
			</if>
			<if test="param.userType == 4">
				
				<choose>
					<when test="param.operLevel != null and param.operLevel == 1">
						and A.CREATOR_UID  IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' AND USER_LEVEL &lt;= #{param.userLevel}
						)  
					</when>
					<when test="param.operLevel != null and param.operLevel == 2">
						and A.CREATOR_UID  IN (
							SELECT USER_ID FROM FUN_USERS WHERE COMP_ID = #{param.compId} AND USER_WRITEOFF = 0 AND TISSUE_LINE LIKE '%:${param.userId}:%' 
						)
					</when>
					<otherwise>
						and A.CREATOR_UID = #{param.userId}
					</otherwise>
				</choose>
			</if>
		</if>
		<choose>
			<when test="param.date !=null and param.date == 4">
				<if test="param.dateType == 'TIMELIMITDATE' ">
					and B.TIMELIMITDATE <![CDATA[<]]> getTimeNow()
				</if>
				<if test="param.dateType == 'UPDATE_TIME' ">
					and B.UPDATE_TIME <![CDATA[<]]> getTimeNow()
				</if>
			</when>
			<otherwise>
				<if test="param.dateType == 'TIMELIMITDATE' ">
					and B.TIMELIMITDATE <![CDATA[>=]]> #{param.startTime}
					and B.TIMELIMITDATE <![CDATA[<=]]> #{param.endTime}
				</if>
				<if test="param.dateType == 'UPDATE_TIME' ">
					and B.UPDATE_TIME <![CDATA[>=]]> #{param.startTime}
					and B.UPDATE_TIME <![CDATA[<=]]> #{param.endTime}
				</if>
				<if test="param.dateType == 'SIGN_DATE' ">
					and A.SIGN_DATE <![CDATA[>=]]> #{param.startTime}
					and A.SIGN_DATE <![CDATA[<=]]> #{param.endTime}
				</if>
				<if test="param.dateType == 'PROCESS_END_TIME' ">
					and A.PROCESS_END_TIME <![CDATA[>=]]> #{param.startTime}
					and A.PROCESS_END_TIME <![CDATA[<=]]> #{param.endTime}
				</if>
			</otherwise>
		</choose>
		<if test="param.intelligentSearch !=null">
			and A.INTELLIGENT_SEARCH LIKE '%${param.intelligentSearch}%'
		</if>
		AND B.RUNSTEP_ID = ( SELECT TOP 1 RUNSTEP_ID FROM PROCESS_RUNTIME_STEP WHERE deal_id = A.deal_id and DEL_FLAG =0
		ORDER BY STEP_SEQ DESC))
		select count(1) as ATTR from t_process_step
	</select>
	
	<select id="getCompTransactionDistribution" resultType="com.myfun.repository.erpdb.dto.ErpFunDealDto">
		<choose>
			<when test="param.mainColumn == null">
				select COUNT(1) as counts,sum(SELL_DEAL_MONEY) as priceUnit,sum(AREA) as areaTotle
				from FUN_DEAL A JOIN DEAL_USER_RELATIVE B ON A.DEAL_ID = B.DEAL_ID AND A.SIGN_USER_ID = B.USER_ID AND
				B.RELATE_TYPE = 3
				where A.COMP_ID = #{param.compId} and A.DEAL_AUDIT_STATUS != 3
				<if test="param.serchRange != null and param.serchRangeId != null">
					<choose>
						<when test="param.serchRange == 'USER_ID'">
							and B.ARCHIVE_ID = #{param.archiveId}
						</when>
						<otherwise>
							and B.${param.serchRange} = #{param.serchRangeId}
						</otherwise>
					</choose>
				</if>
				<if test="param.dateType != null">
					and A.${param.dateType} &gt;= #{param.startTime} and A.${param.dateType} &lt;= #{param.endTime}
				</if>
				<if test="param.caseType">
					and A.DEAL_TYPE = #{param.caseType}
				</if>
			</when>
			<otherwise>
				select COUNT(1) as counts,${param.mainColumn} as showText
				from FUN_DEAL A JOIN DEAL_USER_RELATIVE B ON A.DEAL_ID = B.DEAL_ID AND A.SIGN_USER_ID = B.USER_ID AND
				B.RELATE_TYPE = 3
				where A.COMP_ID = #{param.compId} and A.DEAL_AUDIT_STATUS != 3
				<if test="param.serchRange != null and param.serchRangeId != null">
					<choose>
						<when test="param.serchRange == 'USER_ID'">
							and B.ARCHIVE_ID = #{param.archiveId}
						</when>
						<otherwise>
							and B.${param.serchRange} = #{param.serchRangeId}
						</otherwise>
					</choose>
				</if>
				<if test="param.dateType != null">
					and A.${param.dateType} &gt;= #{param.startTime} and A.${param.dateType} &lt;= #{param.endTime}
				</if>
				<if test="param.caseType">
					and A.DEAL_TYPE = #{param.caseType}
				</if>
				group by ${param.mainColumn}
				order by counts DESC
			</otherwise>
		</choose>
		
	</select>
 
	<select id="getListOFExcuteByParam" resultMap="BaseResultMapDto">
		select ${param.queryStr}, sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 1,b.${param.moneyFieldName},0)) as TRANSFER_DEAL_PROFIT,
		sum(iif(b.PERFORMANCE_TYPE = 1,b.${param.moneyFieldName},0)) as TRANSFER_TOTAL_PROFIT,
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 2,b.${param.moneyFieldName} ,0)) as SECONDHAND_DEAL_PROFIT,
		sum(iif(b.PERFORMANCE_TYPE = 2,b.${param.moneyFieldName} ,0)) as SECONDHAND_TOTAL_PROFIT,
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 3,b.${param.moneyFieldName} ,0)) as NEWHOUSE_DEAL_PROFIT,
		sum(iif(b.PERFORMANCE_TYPE = 3,b.${param.moneyFieldName},0)) as NEWHOUSE_TOTAL_PROFIT,
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 4,b.${param.moneyFieldName} ,0)) as LEASE_DEAL_PROFIT,
		sum(iif(b.PERFORMANCE_TYPE = 4,b.${param.moneyFieldName},0)) as LEASE_TOTAL_PROFIT,
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 5,b.${param.moneyFieldName},0)) as FINANCE_DEAL_PROFIT,
		sum(iif(b.PERFORMANCE_TYPE = 5,b.${param.moneyFieldName} ,0)) as FINANCE_TOTAL_PROFIT,
		sum(iif(b.PERFORMANCE_TYPE &gt; 0,b.${param.moneyFieldName} ,0)) as TOTAL_PROFIT,
		sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE &gt; 0,b.${param.moneyFieldName} ,0)) as DEAL_TOTAL_PROFIT
		from fun_deal a join FUN_PROFIT b on b.deal_id=a.deal_id
		where a.COMP_ID = #{param.compId} and a.${param.dateType} &gt;= #{param.startTime} and a.${param.dateType} &lt;= #{param.endTime} and a.DEAL_AUDIT_STATUS != 3
		<choose>
			<when test="param.serchRange == 'USER'">
				and b.ARCHIVE_ID = #{param.archiveId}
			</when>
			<otherwise>
				and b.${param.serchRange} in (#{param.serchRangeId})
			</otherwise>
		</choose>
		GROUP BY ${param.groupBy}
		having sum(iif(b.PERFORMANCE_TYPE &gt; 0,b.${param.moneyFieldName},0)) &gt; 0

	</select>

    <select id="getDealCountListByParam" resultMap="BaseResultMapDto">
      with t_profit as(select b.COMP_ID,b.AREA_ID,b.REG_ID,b.DEPT_ID,b.GR_ID,b.USER_ID,b.ARCHIVE_ID,b.PERFORMANCE_TYPE,b.DEAL_ID
      from fun_profit b
      where b.COMP_ID = #{param.compId} and b.USER_ID &gt; 0
      <choose>
        <when test="param.serchRange == 'USER'">
          and b.ARCHIVE_ID = #{param.archiveId}
        </when>
        <otherwise>
          and b.${param.serchRange} in (#{param.serchRangeId})
        </otherwise>
      </choose>
      group by b.COMP_ID,b.AREA_ID,b.REG_ID,b.DEPT_ID,b.GR_ID,b.USER_ID,b.ARCHIVE_ID,b.PERFORMANCE_TYPE,b.DEAL_ID )
      select ${param.queryStr},
      <choose>
        <when test="param.dimension == 'USER'">
          sum(iif(b.PERFORMANCE_TYPE = 2 and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as SECONDHAND_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE = 3 and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as NEWHOUSE_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE = 4 and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as LEASE_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as TOTAL_DEAL_COUNT
          from FUN_DEAL a join t_profit b ON a.DEAL_ID = b.DEAL_ID
          where a.COMP_ID = #{param.compId} and a.${param.dateType} &gt;= #{param.startTime} and a.${param.dateType} &lt;= #{param.endTime} and a.DEAL_AUDIT_STATUS != 3
          <choose>
            <when test="param.serchRange == 'USER'">
              and b.ARCHIVE_ID = #{param.archiveId}
            </when>
            <otherwise>
              and b.${param.serchRange} in (#{param.serchRangeId})
            </otherwise>
          </choose>
          GROUP BY ${param.groupBy}
          HAVING sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0))&gt;0
        </when>
        <otherwise>
          sum(iif(b.PERFORMANCE_TYPE = 2 and a.SIGN_USER_ID = b.USER_ID,1,0)) as SECONDHAND_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE = 3 and a.SIGN_USER_ID = b.USER_ID,1,0)) as NEWHOUSE_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE = 4 and a.SIGN_USER_ID = b.USER_ID,1,0)) as LEASE_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ID = b.user_id,1,0)) as TOTAL_DEAL_COUNT
          from FUN_DEAL a join t_profit b ON a.DEAL_ID = b.DEAL_ID
          where a.COMP_ID = #{param.compId} and a.${param.dateType} &gt;= #{param.startTime} and a.${param.dateType} &lt;= #{param.endTime} and a.DEAL_AUDIT_STATUS != 3
          <choose>
            <when test="param.serchRange == 'USER'">
              and b.ARCHIVE_ID = #{param.archiveId}
            </when>
            <otherwise>
              and b.${param.serchRange} in (#{param.serchRangeId})
            </otherwise>
          </choose>
          GROUP BY ${param.groupBy}
          HAVING sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ID = b.user_id,1,0))&gt;0
        </otherwise>
      </choose>
    </select>

	<select id="getListOFExcuteByParamNewPrg" resultMap="BaseResultMapDto">
		with t_profit as(select ${param.queryStr},b.ARCHIVE_ID,b.PERFORMANCE_TYPE,b.DEAL_ID
		from fun_profit b
		where b.COMP_ID = #{param.compId} and b.USER_ID &gt; 0
		<choose>
            <when test="param.defId == -2">
              and b.ARCHIVE_ID = #{param.archiveId}
            </when>
            <otherwise>
            	<if test="null != param.organizationId and param.organizationId &gt; 0">
	              and b.ORGANIZATION_PATH like '%:${param.organizationId}:%'
            	</if>
            </otherwise>
		</choose>
		<if test="param.rangeColumn != null and param.rangeColumn != ''">
            AND ${param.rangeColumn} IS NOT NULL
        </if>
		group by ${param.groupBy},b.ARCHIVE_ID,b.PERFORMANCE_TYPE,b.DEAL_ID )
		select ${param.queryStr},
        <choose>
          <when test="param.dimension == 'USER'">
            sum(iif(b.PERFORMANCE_TYPE = 2 and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as SECONDHAND_DEAL_COUNT,
            sum(iif(b.PERFORMANCE_TYPE = 3 and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as NEWHOUSE_DEAL_COUNT,
            sum(iif(b.PERFORMANCE_TYPE = 4 and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as LEASE_DEAL_COUNT,
            sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as TOTAL_DEAL_COUNT
            from FUN_DEAL a join t_profit b ON a.DEAL_ID = b.DEAL_ID
            where a.COMP_ID = #{param.compId} and a.${param.dateType} &gt;= #{param.startTime} and a.${param.dateType} &lt;= #{param.endTime} and a.DEAL_AUDIT_STATUS != 3
            <choose>
              <when test="param.defId == -2">
                and b.ARCHIVE_ID = #{param.archiveId}
              </when>
              <otherwise>
              	<if test="null != param.organizationId and param.organizationId &gt; 0">
                	and b.ORGANIZATION_PATH like '%:${param.organizationId}:%'
                </if>
              </otherwise>
            </choose>
            <if test="param.rangeColumn != null and param.rangeColumn != ''">
              AND ${param.rangeColumn} IS NOT NULL
            </if>
            GROUP BY ${param.groupBy}
            HAVING sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0))&gt;0
          </when>
          <otherwise>
            sum(iif(b.PERFORMANCE_TYPE = 2 and a.SIGN_USER_ID = b.USER_ID,1,0)) as SECONDHAND_DEAL_COUNT,
            sum(iif(b.PERFORMANCE_TYPE = 3 and a.SIGN_USER_ID = b.USER_ID,1,0)) as NEWHOUSE_DEAL_COUNT,
            sum(iif(b.PERFORMANCE_TYPE = 4 and a.SIGN_USER_ID = b.USER_ID,1,0)) as LEASE_DEAL_COUNT,
            sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ID = b.user_id,1,0)) as TOTAL_DEAL_COUNT
            from FUN_DEAL a join t_profit b ON a.DEAL_ID = b.DEAL_ID
            where a.COMP_ID = #{param.compId} and a.${param.dateType} &gt;= #{param.startTime} and a.${param.dateType} &lt;= #{param.endTime} and a.DEAL_AUDIT_STATUS != 3
            <choose>
              <when test="param.defId == -2">
                and b.ARCHIVE_ID = #{param.archiveId}
              </when>
              <otherwise>
                <if test="null != param.organizationId and param.organizationId &gt; 0">
                	and b.ORGANIZATION_PATH like '%:${param.organizationId}:%'
                </if>
              </otherwise>
            </choose>
            <if test="param.rangeColumn != null and param.rangeColumn != ''">
                AND ${param.rangeColumn} IS NOT NULL
            </if>
            GROUP BY ${param.groupBy}
            HAVING sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0))&gt;0
          </otherwise>
        </choose>
	
	</select>

    <select id="getDealCountListByParamNewPrg" resultMap="BaseResultMapDto">
      with t_profit as(select ${param.queryStr},b.ARCHIVE_ID,b.PERFORMANCE_TYPE,b.DEAL_ID
      from fun_profit b
      where b.COMP_ID = #{param.compId} and b.USER_ID &gt; 0
      <choose>
          <when test="param.defId == -2">
            and b.ARCHIVE_ID = #{param.archiveId}
          </when>
          <otherwise>
          	<if test="null != param.organizationId and param.organizationId &gt; 0">
            	and b.ORGANIZATION_PATH like '%:${param.organizationId}:%'
            </if>
          </otherwise>
      </choose>
      <if test="param.rangeColumn != null and param.rangeColumn != ''">
        AND ${param.rangeColumn} IS NOT NULL
      </if>
      group by ${param.groupBy},b.ARCHIVE_ID,b.PERFORMANCE_TYPE,b.DEAL_ID )
      select ${param.queryStr},
      <choose>
        <when test="param.dimension == 'USER'">
          sum(iif(b.PERFORMANCE_TYPE = 2 and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as SECONDHAND_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE = 3 and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as NEWHOUSE_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE = 4 and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as LEASE_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0)) as TOTAL_DEAL_COUNT
          from FUN_DEAL a join t_profit b ON a.DEAL_ID = b.DEAL_ID
          where a.COMP_ID = #{param.compId} and a.${param.dateType} &gt;= #{param.startTime} and a.${param.dateType} &lt;= #{param.endTime} and a.DEAL_AUDIT_STATUS != 3
          <choose>
              <when test="param.defId == -2">
                and b.ARCHIVE_ID = #{param.archiveId}
              </when>
              <otherwise>
              	<if test="null != param.organizationId and param.organizationId &gt; 0">
                	and b.ORGANIZATION_PATH like '%:${param.organizationId}:%'
                </if>
              </otherwise>
          </choose>
          <if test="param.rangeColumn != null and param.rangeColumn != ''">
            AND ${param.rangeColumn} IS NOT NULL
          </if>
          GROUP BY ${param.groupBy}
          HAVING sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0))&gt;0
        </when>
        <otherwise>
          sum(iif(b.PERFORMANCE_TYPE = 2 and a.SIGN_USER_ID = b.USER_ID,1,0)) as SECONDHAND_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE = 3 and a.SIGN_USER_ID = b.USER_ID,1,0)) as NEWHOUSE_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE = 4 and a.SIGN_USER_ID = b.USER_ID,1,0)) as LEASE_DEAL_COUNT,
          sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ID = b.user_id,1,0)) as TOTAL_DEAL_COUNT
          from FUN_DEAL a join t_profit b ON a.DEAL_ID = b.DEAL_ID
          where a.COMP_ID = #{param.compId} and a.${param.dateType} &gt;= #{param.startTime} and a.${param.dateType} &lt;= #{param.endTime} and a.DEAL_AUDIT_STATUS != 3
          <choose>
            <when test="param.defId == -2">
              and b.ARCHIVE_ID = #{param.archiveId}
            </when>
            <otherwise>
            	<if test="null != param.organizationId and param.organizationId &gt; 0">
              		and b.ORGANIZATION_PATH like '%:${param.organizationId}:%'
              	</if>
            </otherwise>
          </choose>
          <if test="param.rangeColumn != null and param.rangeColumn != ''">
            AND ${param.rangeColumn} IS NOT NULL
          </if>
          GROUP BY ${param.groupBy}
          HAVING sum(iif(b.PERFORMANCE_TYPE in(2,3,4) and a.SIGN_USER_ARCHIVE = b.ARCHIVE_ID,1,0))&gt;0
        </otherwise>
      </choose>
    </select>
	
	<select id="getofficialOrdersCountListByParam" resultMap="BaseResultMapDto">
		with t_profit as(SELECT B.DEAL_ID,B.PERFORMANCE_TYPE FROM FUN_DEAL A JOIN FUN_PROFIT B ON A.DEAL_ID = B.DEAL_ID
		where a.COMP_ID = #{param.compId} and a.${param.dateType} &gt;= #{param.startTime} and a.${param.dateType} &lt;= #{param.endTime} and a.DEAL_AUDIT_STATUS != 3
		GROUP BY B.DEAL_ID,B.PERFORMANCE_TYPE)
		select ${param.queryStr},sum(iif(a.PERFORMANCE_TYPE = 1,1,0)) as TRANSFER_COUNT,
		sum(iif(a.PERFORMANCE_TYPE = 5,1,0)) as FINANCE_COUNT,
		sum(iif(a.PERFORMANCE_TYPE in (1,5),1,0)) as TOTALTF_COUNT
		from t_profit a join DEAL_USER_RELATIVE b on a.DEAL_ID = b.DEAL_ID and b.RELATE_TYPE = 3
		where b.COMP_ID = #{param.compId}
		<choose>
			<when test="param.serchRange == 'USER'">
				and b.ARCHIVE_ID = #{param.archiveId}
			</when>
			<otherwise>
				and b.${param.serchRange} in (#{param.serchRangeId})
			</otherwise>
		</choose>
		GROUP BY ${param.groupBy}
		HAVING sum(iif(a.PERFORMANCE_TYPE in (1,5),1,0))&gt;0
	</select>

    <select id="getofficialOrdersCountListByParamNewPrg" resultMap="BaseResultMapDto">
      with t_profit as(SELECT B.DEAL_ID,B.PERFORMANCE_TYPE FROM FUN_DEAL A JOIN FUN_PROFIT B ON A.DEAL_ID = B.DEAL_ID
      where a.COMP_ID = #{param.compId} and a.${param.dateType} &gt;= #{param.startTime} and a.${param.dateType} &lt;= #{param.endTime} and a.DEAL_AUDIT_STATUS != 3
      GROUP BY B.DEAL_ID,B.PERFORMANCE_TYPE)
      select ${param.queryStr},sum(iif(a.PERFORMANCE_TYPE = 1,1,0)) as TRANSFER_COUNT,
      sum(iif(a.PERFORMANCE_TYPE = 5,1,0)) as FINANCE_COUNT,
      sum(iif(a.PERFORMANCE_TYPE in (1,5),1,0)) as TOTALTF_COUNT
      from t_profit a join DEAL_USER_RELATIVE b on a.DEAL_ID = b.DEAL_ID and b.RELATE_TYPE = 3
      where b.COMP_ID = #{param.compId}
      <choose>
          <when test="param.defId == -2">
            and b.ARCHIVE_ID = #{param.archiveId}
          </when>
          <otherwise>
          	<if test="null != param.organizationId and param.organizationId &gt; 0">
            	and b.ORGANIZATION_PATH like '%:${param.organizationId}:%'
            </if>
          </otherwise>
      </choose>
      <if test="param.rangeColumn != null and param.rangeColumn != ''">
        AND ${param.rangeColumn} IS NOT NULL
      </if>
      GROUP BY ${param.groupBy}
      HAVING sum(iif(a.PERFORMANCE_TYPE in (1,5),1,0))&gt;0
    </select>

    <select id="getTargetListByParam" resultMap="BaseResultMapDto">
          SELECT ${param.targeQueryStr},SUM(TARGET_PROFIT) as TARGET_PROFIT
          FROM FUN_PROFIT_TARGET
          WHERE COMP_ID = #{param.compId} AND
          ${param.serchRange} in (#{param.serchRangeId})
          AND TARGET_DATE  &gt;= #{param.startTime} AND TARGET_DATE &lt;= #{param.endTime} AND PROFIT_TYPE = #{param.profitType}
          GROUP BY ${param.targeGroupBy}
          having SUM(TARGET_PROFIT)&gt;0

      </select>
	
	<select id="getTargetListByParamNewOrg" resultMap="BaseResultMapDto">
		SELECT ${param.targeQueryStr},SUM(TARGET_PROFIT) as TARGET_PROFIT
		FROM FUN_PROFIT_TARGET
		WHERE COMP_ID = #{param.compId} AND
		${param.serchRange} in (#{param.serchRangeId})
        <choose>
          <when test="param.defId == -2">
            and USER_ID = #{param.userId}
          </when>
          <otherwise>
          	<if test="null != param.organizationId and param.organizationId &gt; 0">
            	and ORGANIZATION_PATH like '%:${param.organizationId}:%'
            </if>
            AND DEF_ID = #{param.defId}
          </otherwise>
        </choose>
        <if test="param.rangeColumn != null and param.rangeColumn != ''">
          AND ${param.rangeColumn} IS NOT NULL
        </if>
		AND TARGET_DATE  &gt;= #{param.startTime} AND TARGET_DATE &lt;= #{param.endTime} AND PROFIT_TYPE = #{param.profitType}
		GROUP BY ${param.targeGroupBy}
		having SUM(TARGET_PROFIT)&gt;0
	</select>
	
	
	
	<select id="selectSeqDealId" resultType="java.lang.Integer">
		SELECT NEXT VALUE FOR SEQ_FUN_DEAL_DEAL_ID
	</select>

	<select id="sumTotalNeedPerformance" resultType="java.math.BigDecimal">
		select sum(iif(PF_ACTUAL=0,PAY_AMOUNT,0)) from PROCESS_FINANC where DEAL_ID = #{dealId}
	</select>

	<select id="getFunDealById" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from FUN_DEAL where COMP_ID=#{compId} and DEAL_ID =#{dealId}
	</select>

	<select id="getDealListOne" resultMap="ErpFunDealDtoResultMap">
		select DISTINCT A.DEAL_ID,A.DEAL_TYPE,A.AGREEMENT_NO,A.RENT_DEPOSIT_PAY,A.PAYTYPE_ID,A.PAYTYPE_NAME,
		A.CONTRACT_NO,A.HOUSEADDRESS,A.OWNER_STYLE,A.AREA,A.REAL_TOTALPRICE,A.SELL_DEAL_MONEY,A.RENT_DEAL_MONEY,
		A.RENT_PRICE_UNIT,A.CREATOR_DATE,A.CREATOR_UID,A.CREATOR_NAME,A.DEAL_USER_ID,A.DEAL_USER_NAME,
		A.DEAL_AUDIT_STATUS,A.DEAL_STATUS,A.UPDATE_TIME,A.DEAL_HOUSE_ID,A.DEAL_CUSTOMER_ID,A.MODEL_ID,
		A.MODEL_NAME,A.COMP_ID,A.SALE_PRICE_UNIT,A.DEAL_CUSTOMER_NO,A.DEAL_HOUSE_NO,A.BUY_OWNER_NAME,
		A.SELL_OWNER_NAME,A.BUY_OWNER_NAME_BAK,A.SELL_OWNER_NAME_BAK,A.HOUSE_USEAGE,A.BUY_ID_CARD,
		A.SELL_ID_CARD,A.BUY_ID_CARD_BAK,A.SELL_ID_CARD_BAK,A.CUST_USERNAME,A.HOUSE_USERNAME,
		A.BUY_CALL_PHONE,A.SELL_CALL_PHONE,A.CUST_DEPT_ID,A.HOUSE_DEPT_ID,A.SELL_ADDRESS,A.BUY_MORTGAGE_TYPE,
		A.SIGN_USER_NAME,A.SIGN_MANAGER_NAME,A.SELL_ISHAVE_LOAN,A.OWNER_NO,A.LANDCARD_NO,A.TAX,A.MANGEMENT_TAX,
		A.OWNER_TAX,A.DEAL_AUDIT_STATUS,A.SIGN_USER_DEPT_ID,A.SIGN_USER_DEPT_NAME,A.RENT_DATE,A.RENT_OVER_DATE,
		A.RENT_PAY_EARLY,A.RENT_OTHER_MONEY,A.RENT_PAY_METHOD,A.RENT_PAY_SPACE,A.GOODSDETAILED,A.WATERLIGHTEXPENSES,
		A.SELL_ADDRESS,A.FINANC_NAME,A.CATEGORY_ID,A.CATEGORY_NAME,A.DEAL_BUY_STYLE,A.DEAL_SELL_STYLE,A.DEAL_VERIFY_TIME,
		A.SIGN_DATE,A.TRANSFER_DATE,A.EVIDENCE_DATE,A.RUNSTEP_NAME,A.PROCESS_STATUS,A.BUY_CUSTOMER_PHONEENCODE,
		A.SELL_OWNER_PHONEENCODE,A.TOTAL_NEED_INCOME,A.TOTAL_REAL_INCOME,A.TOTAL_NEED_PERFORMANCE,A.TOTAL_REAL_PERFORMANCE,
		A.NEED_ADUIT_STATUS,A.REAL_ADUIT_STATUS,A.BUY_CUSTOMER_PHONE,A.SELL_OWNER_PHONE,A.RENT_PAY_METHOD,A.COMMERCIAL_LOAN_MONEY,
		A.PROVIDENT_LOAN_MONEY,A.COMMERCIAL_LOAN_DATE,A.COMMERCIAL_LENDER_DATE,A.COMMERCIAL_LENDER_LIMIT,A.COMMERCIAL_LENDER_BANK,
		A.PROVIDENT_LOAN_DATE,A.PROVIDENT_LENDER_DATE,A.PROVIDENT_LENDER_LIMIT,A.PROVIDENT_LENDER_BANK,YOU_ADUIT_STATUS,
		A.BUILD_REG_ID,A.BUILD_REG_NAME,A.BUILD_NAME,A.SIGN_USER_ID,A.SIGN_USER_ARCHIVE,A.FIRST_TRIAL_COMPLETE_DATE,A.RECHECK_COMPLETE_DATE,A.INVALID_COMPLETE_DATE,
		A.SIGN_SITE_DEPT,A.SIGN_SITE_GR,A.INTRODUCER_ID,A.ADULT_PROMOTION_ID
		from FUN_DEAL A where A.COMP_ID = #{compId} AND A.DEAL_ID = #{dealId} order by A.UPDATE_TIME DESC
	</select>

	<select id="getBaseDealInfo" resultMap="BaseResultMap">
		select DEAL_TYPE,DEAL_ID,CONTRACT_NO,CONTRACT_ID,YOU_ADUIT_STATUS,FINANC_NAME,YOU_ADUIT_OPINION,DEAL_AUDITOR,COMP_ID,MODEL_ID,MODEL_NAME,PAYTYPE_ID,SIGN_USER_DEPT_ID,
		DEAL_VERIFY_TIME,DEPT_ID,COMMISSION_RATE,SELL_DEAL_MONEY,RENT_DEAL_MONEY,RENT_PRICE_UNIT,DEAL_USER_ID,FINANC_STATUS_ID,DEAL_AUDIT_STATUS,DEAL_AUDIT_STATUS_BEFORE,DEAL_HOUSE_ID,DEAL_BUY_STYLE, DEAL_SELL_STYLE,
		BUILD_ID,BUILD_NAME,BUY_OWNER_NAME,SELL_OWNER_NAME,AREA,SELL_ADDRESS
		from FUN_DEAL where  DEAL_ID =#{dealId}
	</select>

	<update id="updateWarrantsDates" parameterType="com.myfun.repository.erpdb.po.ErpFunDeal">
		UPDATE FUN_DEAL SET COMMERCIAL_LENDER_BANK=#{commercialLenderBank,jdbcType=VARCHAR},COMMERCIAL_LENDER_DATE=#{commercialLenderDate},
		COMMERCIAL_LENDER_LIMIT=#{commercialLenderLimit},COMMERCIAL_LOAN_DATE=#{commercialLoanDate},COMMERCIAL_LOAN_MONEY=#{commercialLoanMoney},
		DEAL_USER_ID=#{dealUserId},DEAL_USER_NAME=#{dealUserName},EVIDENCE_DATE=#{evidenceDate},PAYTYPE_ID= #{paytypeId},
		PAYTYPE_NAME=#{paytypeName},PROVIDENT_LENDER_BANK=#{providentLenderBank},PROVIDENT_LENDER_DATE=#{providentLenderDate},
		PROVIDENT_LENDER_LIMIT= #{providentLenderLimit},PROVIDENT_LOAN_DATE= #{providentLoanDate},PROVIDENT_LOAN_MONEY=#{providentLoanMoney},
		TRANSFER_DATE= #{transferDate},UPDATE_TIME=#{updateTime},UPDATE_UID=#{updateUid},ENTRUST_BANK=#{entrustBank},ENTRUST_MONEY=#{entrustMoney}
		WHERE DEAL_ID = #{dealId}
	</update>

	<update id="updateDealUser">
		UPDATE FUN_DEAL SET DEAL_USER_NAME = CREATOR_NAME, DEAL_USER_ID = CREATOR_UID, UPDATE_TIME = GETDATE()
		WHERE COMP_ID=#{compId} AND DEAL_ID = #{dealId}
	</update>

	<update id="cleanFunDealData">
		UPDATE FUN_DEAL SET COMMERCIAL_LENDER_BANK=NULL,COMMERCIAL_LENDER_DATE=NULL,COMMERCIAL_LENDER_LIMIT=NULL,
		COMMERCIAL_LOAN_DATE=NULL,DEAL_USER_ID=NULL,DEAL_USER_NAME=NULL,EVIDENCE_DATE=NULL,PROVIDENT_LENDER_BANK=NULL,
		PROVIDENT_LENDER_DATE=NULL,PROVIDENT_LENDER_LIMIT=NULL,PROVIDENT_LOAN_DATE=NULL,TRANSFER_DATE=NULL, RUNSTEP_ID=NULL,RUNSTEP_NAME=NULL
		WHERE DEAL_ID = #{dealId}
	</update>

	<update id="updateDealVerifyTime" parameterType="com.myfun.repository.erpdb.po.ErpFunDeal">
		UPDATE FUN_DEAL SET DEAL_STATUS=#{dealStatus},DEAL_VERIFY_TIME=#{dealVerifyTime} WHERE DEAL_ID = #{dealId}
	</update>

  <update id="updateProcessEndTime" parameterType="com.myfun.repository.erpdb.po.ErpFunDeal">
    UPDATE FUN_DEAL SET PROCESS_STATUS=#{processStatus},PROCESS_END_TIME=#{processEndTime} WHERE DEAL_ID = #{dealId}
  </update>
	
	<select id="getDealLockFlagList" resultMap="BaseResultMap">
		select top 1 LOCK_FLAG
		from FUN_DEAL
		where COMP_ID = #{compId} and DEAL_TYPE = #{dealType} and DEAL_CUSTOMER_ID= #{dealCustomerId}
	
	</select>
	
	<update id="updateDealStatusByDealId">
		update FUN_DEAL
        <set>
          <if test="param.financStatusId!=null">
            FINANC_STATUS_ID = #{param.financStatusId},
          </if>
          <if test="param.financName!=null">
            FINANC_NAME = #{param.financName},
          </if>
          <if test="param.needAduitStatus!=null">
            NEED_ADUIT_STATUS = #{param.needAduitStatus},
          </if>
          
          <if test="param.transferNeedPerformance!=null">
            TRANSFER_NEED_PERFORMANCE = #{param.transferNeedPerformance},
          </if>
          <if test="param.transferRealPerformance!=null">
            TRANSFER_REAL_PERFORMANCE = #{param.transferRealPerformance},
          </if>
          <if test="param.secondhandNeedPerformance!=null">
            SECONDHAND_NEED_PERFORMANCE = #{param.secondhandNeedPerformance},
          </if>
          <if test="param.secondhandRealPerformance!=null">
            SECONDHAND_REAL_PERFORMANCE = #{param.secondhandRealPerformance},
          </if>
          <if test="param.newhouseNeedPerformance!=null">
            NEWHOUSE_NEED_PERFORMANCE = #{param.newhouseNeedPerformance},
          </if>
          <if test="param.newhouseRealPerformance!=null">
            NEWHOUSE_REAL_PERFORMANCE = #{param.newhouseRealPerformance},
          </if>
          <if test="param.leaseNeedPerformance!=null">
            LEASE_NEED_PERFORMANCE = #{param.leaseNeedPerformance},
          </if>
          <if test="param.leaseRealPerformance!=null">
            LEASE_REAL_PERFORMANCE = #{param.leaseRealPerformance},
          </if>
          <if test="param.financeNeedPerformance!=null">
            FINANCE_NEED_PERFORMANCE = #{param.financeNeedPerformance},
          </if>
          <if test="param.financeRealPerformance!=null">
            FINANCE_REAL_PERFORMANCE = #{param.financeRealPerformance},
          </if>
          <if test="param.totalNeedPerformance!=null">
            TOTAL_NEED_PERFORMANCE = #{param.totalNeedPerformance},
          </if>
          <if test="param.totalRealPerformance!=null">
            TOTAL_REAL_PERFORMANCE = #{param.totalRealPerformance},
          </if>
          <if test="param.totalNeedIncome!=null">
            TOTAL_NEED_INCOME = #{param.totalNeedIncome},
          </if>
          <if test="param.totalRealIncome!=null">
            TOTAL_REAL_INCOME = #{param.totalRealIncome},
          </if>
          <if test="param.dealStatus!=null">
            DEAL_STATUS = #{param.dealStatus},
          </if>
          <if test="param.dealAuditStatus!=null">
            DEAL_AUDIT_STATUS = #{param.dealAuditStatus},
          </if>
          <if test="param.dealAuditStatusBefore!=null">
            DEAL_AUDIT_STATUS_BEFORE = #{param.dealAuditStatusBefore},
          </if>

        </set>
		where  DEAL_ID = #{dealId}
	</update>
	
	<update id="updateAgreementNoByDealId">
		update FUN_DEAL set AGREEMENT_NO = #{dealNo}
		where DEAL_ID = #{dealId}
	</update>
	
	<select id="getPfActualOffDealList" resultMap="BaseResultMap">
	  select DISTINCT A.DEAL_ID,A.AGREEMENT_NO,A.CONTRACT_NO,A.SIGN_DATE,A.HOUSEADDRESS,A.DEAL_VERIFY_TIME,A.BUY_OWNER_NAME,A.SELL_OWNER_NAME,A.SIGN_USER_DEPT_NAME,A.SIGN_USER_DEPT_ID,A.SIGN_USER_NAME,A.DEAL_TYPE,A.SELL_DEAL_MONEY,A.RENT_DEAL_MONEY,A.SELL_ADDRESS,A.COMMERCIAL_LOAN_MONEY,A.PROVIDENT_LOAN_MONEY,A.PROCESS_END_TIME,A.SIGN_USER_ID,A.ISBYHAND
      FROM FUN_DEAL A join PROCESS_FINANC B ON A.DEAL_ID=B.DEAL_ID
      <choose>
        <when test="param.userType == 'SIGN_USER_ID'">
          JOIN FUN_USERS C ON C.USER_ID=A.SIGN_USER_ID
        </when>
        <otherwise>
          JOIN FUN_USERS C ON C.USER_ID=B.AUDIT_USER
        </otherwise>
      </choose>
      where A.COMP_ID = #{param.compId} 
      <if test="param.userId!=null">
       <choose>
       		<when test="param.operLevel != null and param.operLevel == 0"><!--个人-->
	      		and C.USER_ID = #{param.userId}
	      	</when>
	      	<when test="param.operLevel != null and param.operLevel == 1"><!--团队三级-->
	      		and C.TISSUE_LINE  LIKE '%:${param.userId}:%'  AND c.USER_LEVEL &lt;= #{param.userLevel}
	      	</when>
	      	<when test="param.operLevel != null and param.operLevel == 2"><!--团队-->
	      		and C.TISSUE_LINE  LIKE '%:${param.userId}:%' 
	      	</when>
	      	<otherwise>
	         	and C.USER_ID = #{param.userId}
	        </otherwise>
      	</choose>	
      </if>
      <if test="param.isNewOrganization != true ">
	      <if test="param.areaId!=null">
	        and C.AREA_ID = #{param.areaId}
	      </if>
	      <if test="param.regId!=null">
	        and C.REG_ID = #{param.regId}
	      </if>
	      <if test="param.deptId!=null">
	        and C.DEPT_ID = #{param.deptId}
	      </if>
	      <if test="param.grId!=null">
	        and C.GR_ID = #{param.grId}
          </if>
      </if>
      <if test="param.isNewOrganization == true and param.organizationId != null and param.organizationId != 0">
			and C.TISSUE_LINE LIKE '%:${param.organizationId}:%'
	  </if>
      <if test="param.rangeColumn != null and param.rangeColumn != ''">
        and C.${param.rangeColumn}  = #{param.rangeId}
      </if>
      <choose>
        <when test="param.intelligentSearch!=null and param.intelligentSearch!=''">
          and ( A.INTELLIGENT_SEARCH LIKE '%${param.intelligentSearch}%' 
          OR B.SERIAL_NUMBER LIKE  '%${param.intelligentSearch}%'
          OR B.PAY_ACCOUNT LIKE  '%${param.intelligentSearch}%'
          ) 
        </when>
        <otherwise>
          <if test="param.auditStatus!=null">
            and B.AUDIT_STATUS = #{param.auditStatus}
          </if>
          <if test="param.pfActual!=null">
            and B.PF_ACTUAL = #{param.pfActual}
          </if>
          <if test="param.performanceType!=null and param.performanceType !=''">
            and B.PERFORMANCE_TYPE = #{param.performanceType}
          </if>
          <if test="param.pfPayer!=null and param.pfPayer !='' ">
            and B.PF_PAYER = #{param.pfPayer}
          </if>
          <if test="param.paymentId!=null and param.paymentId!=''">
            <choose>
              <when test="param.paymentId=='commission'">
                <if test="param.paymentIds!=null">
                  and B.PAYMENT_ID in
                  <foreach close=")" collection="param.paymentIds" item="paymentId" open="(" separator=",">
                    #{paymentId}
                  </foreach>
                </if>
              </when>
              <otherwise>
                and B.PAYMENT_ID = #{param.paymentId}
              </otherwise>
            </choose>
          </if>
          <if test="param.processStatus!=null">
            <choose>
              <when test="param.processStatus == 3">
                and A.PROCESS_STATUS != 2
              </when>
              <otherwise>
                and A.PROCESS_STATUS = #{param.processStatus}
              </otherwise>
            </choose>
          </if>
          <if test="param.pfTime!=null">
            <if test="param.startTime!=null and param.startTime!=''">
              and B.PF_TIME &gt;= #{param.startTime}
            </if>
            <if test="param.endTime!=null and param.endTime!=''">
              and B.PF_TIME &lt;= #{param.endTime}
            </if>
          </if>
          <if test="param.dateType!=null and param.dateType!=''">
            <if test="param.startTime!=null and param.startTime!=''">
              and ${param.dateType} &gt;= #{param.startTime}
            </if>
            <if test="param.endTime!=null and param.endTime!=''">
              and ${param.dateType} &lt;= #{param.endTime}
            </if>
          </if>
        </otherwise>
      </choose>
      order by ${param.orderBy}
    </select>
  
    <select id="getPfActualOffDealCount" resultType="java.lang.Integer">
      SELECT COUNT(DISTINCT A.DEAL_ID) AS ATTR_NAME
      FROM FUN_DEAL A join PROCESS_FINANC B ON A.DEAL_ID=B.DEAL_ID AND A.COMP_ID = B.COMP_ID
      <choose>
        <when test="param.userType == 'SIGN_USER_ID'">
          JOIN FUN_USERS C ON C.USER_ID=A.SIGN_USER_ID
        </when>
        <otherwise>
          JOIN FUN_USERS C ON C.USER_ID=B.AUDIT_USER
        </otherwise>
      </choose>
      where A.COMP_ID = #{param.compId} 
      <if test="param.userId!=null">
        <choose>
        	<when test="param.operLevel != null and param.operLevel == 0"><!--个人-->
	      		and C.USER_ID = #{param.userId}
	      	</when>
	      	<when test="param.operLevel != null and param.operLevel == 1"><!--团队-->
	      		and C.TISSUE_LINE  LIKE '%:${param.userId}:%' AND c.USER_LEVEL &lt;= #{param.userLevel}
	      	</when>
	      	<when test="param.operLevel != null and param.operLevel == 2"><!--团队三级-->
	      		and C.TISSUE_LINE  LIKE '%:${param.userId}:%' 
	      	</when>
	      	<otherwise>
	         	and C.USER_ID = #{param.userId}
	        </otherwise>
      	</choose>	
      </if>
      <if test="param.isNewOrganization != true ">
	      <if test="param.areaId!=null">
	        and C.AREA_ID = #{param.areaId}
	      </if>
	      <if test="param.regId!=null">
	        and C.REG_ID = #{param.regId}
	      </if>
	      <if test="param.deptId!=null">
	        and C.DEPT_ID = #{param.deptId}
	      </if>
	      <if test="param.grId!=null">
	        and C.GR_ID = #{param.grId}
	      </if>
	  </if>
	  <if test="param.isNewOrganization == true and param.organizationId != null and param.organizationId != 0">
			and C.TISSUE_LINE LIKE '%:${param.organizationId}:%'
	  </if>
      <if test="param.rangeColumn != null and param.rangeColumn != ''">
        and C.${param.rangeColumn}  = #{param.rangeId}
      </if>
      
      <choose>
        <when test="param.intelligentSearch!=null and param.intelligentSearch!=''">
          and (A.INTELLIGENT_SEARCH LIKE '%${param.intelligentSearch}%'  
          OR B.SERIAL_NUMBER LIKE  '%${param.intelligentSearch}%'
          OR B.PAY_ACCOUNT LIKE  '%${param.intelligentSearch}%' )
        </when>
        <otherwise>
          <if test="param.auditStatus!=null">
            and B.AUDIT_STATUS = #{param.auditStatus}
          </if>
          <if test="param.pfActual!=null">
            and B.PF_ACTUAL = #{param.pfActual}
          </if>
          <if test="param.performanceType!=null">
            and B.PERFORMANCE_TYPE = #{param.performanceType}
          </if>
          <if test="param.pfPayer!=null">
            and B.PF_PAYER = #{param.pfPayer}
          </if>
          <if test="param.paymentId!=null and param.paymentId!=''">
            <choose>
              <when test="param.paymentId=='commission'">
                <if test="param.paymentIds!=null">
                  and B.PAYMENT_ID in
                  <foreach close=")" collection="param.paymentIds" item="paymentId" open="(" separator=",">
                    #{paymentId}
                  </foreach>
                </if>
              </when>
              <otherwise>
                  and B.PAYMENT_ID = #{param.paymentId}
              </otherwise>
            </choose>
          </if>
          <if test="param.processStatus!=null">
            <choose>
              <when test="param.processStatus == 3">
                and A.PROCESS_STATUS != 2
              </when>
              <otherwise>
                and A.PROCESS_STATUS = #{param.processStatus}
              </otherwise>
            </choose>
          </if>
          <if test="param.pfTime!=null">
            <if test="param.startTime!=null and param.startTime!=''">
              and B.PF_TIME &gt;= #{param.startTime}
            </if>
            <if test="param.endTime!=null and param.endTime!=''">
              and B.PF_TIME &lt;= #{param.endTime}
            </if>
          </if>
          <if test="param.dateType!=null and param.dateType!=''">
            <if test="param.startTime!=null and param.startTime!=''">
              and ${param.dateType} &gt;= #{param.startTime}
            </if>
            <if test="param.endTime!=null and param.endTime!=''">
              and ${param.dateType} &lt;= #{param.endTime}
            </if>
          </if>
        </otherwise>
      </choose>
    </select>
 
<select id="getAppAchieveMonthStatisticsRank" resultType="java.util.Map">
	select
	<choose>
		<when test="2 == lookType">
			b.COMP_ID,b.AREA_ID,CONCAT(b.AREA_ID,'','') AS RANGE,
		</when>
		<when test="3 == lookType">
			b.AREA_ID,b.REG_ID,CONCAT(b.AREA_ID,'_',b.REG_ID,'') AS RANGE,
		</when>
		<when test="4 == lookType">
			b.AREA_ID,b.REG_ID,b.DEPT_ID,CONCAT(b.AREA_ID,'_',b.REG_ID,'_',b.DEPT_ID) AS RANGE,
		</when>
		<when test="5 == lookType">
			b.COMP_ID,b.AREA_ID,b.REG_ID,b.DEPT_ID,b.GR_ID,CONCAT(b.DEPT_ID,'_',b.GR_ID) AS DEPT_GR,
		</when>
		<when test="6 == lookType">
			b.COMP_ID,b.DEPT_ID,b.USER_ID,b.USER_ID AS RANGE,
		</when>
	</choose>
<!-- 	sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 1,b.RECEIVABLE_MONEY,0)) as TRANSFER_DEAL_PROFIT, -->
<!-- 	sum(iif(b.PERFORMANCE_TYPE = 1,b.RECEIVABLE_MONEY,0)) as TRANSFER_TOTAL_PROFIT, -->
<!-- 	sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 2,b.RECEIVABLE_MONEY,0)) as SECONDHAND_DEAL_PROFIT, -->
<!-- 	sum(iif(b.PERFORMANCE_TYPE = 2,b.RECEIVABLE_MONEY,0)) as SECONDHAND_TOTAL_PROFIT, -->
<!-- 	sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 3,b.RECEIVABLE_MONEY,0)) as NEWHOUSE_DEAL_PROFIT, -->
<!-- 	sum(iif(b.PERFORMANCE_TYPE = 3,b.RECEIVABLE_MONEY,0)) as NEWHOUSE_TOTAL_PROFIT, -->
<!-- 	sum(iif(a.DEAL_STATUS = 2 AND b.PERFORMANCE_TYPE = 4,b.RECEIVABLE_MONEY,0)) as LEASE_DEAL_PROFIT, -->
<!-- 	sum(iif(b.PERFORMANCE_TYPE = 4,b.RECEIVABLE_MONEY,0)) as LEASE_TOTAL_PROFIT, -->
<!-- 	sum(iif(b.PERFORMANCE_TYPE = 5,b.RECEIVABLE_MONEY,0)) as FINANCE_TOTAL_PROFIT, -->
<!-- 	sum(iif(b.PERFORMANCE_TYPE > 0,b.RECEIVABLE_MONEY,0)) as TOTAL_PROFIT, PROFIT_MONEY a.DEAL_STATUS = 2 AND -->
	<if test="1 == profitShowType">
		sum(iif(b.PERFORMANCE_TYPE &gt; 0,b.PROFIT_MONEY,0)) as DEAL_TOTAL_PROFIT
	</if>
	<if test="0 == profitShowType">
		sum(iif(b.PERFORMANCE_TYPE &gt; 0,b.RECEIVABLE_MONEY,0)) as DEAL_TOTAL_PROFIT
	</if>
	from fun_deal a join FUN_PROFIT b on b.deal_id=a.deal_id
	where a.COMP_ID = #{compId} AND a.SIGN_DATE &gt;= #{startTime} AND a.SIGN_DATE &lt;= #{endTime}
	AND a.DEAL_AUDIT_STATUS != '3' 
	<if test="rangeType == 2 or rangeType == 3 or rangeType == 4">
			<choose>
				<when test="rangeType == 2">AND b.AREA_ID</when>
				<when test="rangeType == 3">AND b.REG_ID</when>
				<when test="rangeType == 4">AND b.DEPT_ID</when>
			</choose>
			in
			<foreach close=")" collection="rangeIds" index="index" item="rangeId" open="(" separator=",">
				#{rangeId}
			</foreach>
	</if>
	<choose>
		<when test="isFjdFlag">
			<if test="rangeType == 6">
				AND b.USER_ID IN 
				<foreach close=")" collection="rangeIds" index="index" item="rangeId" open="(" separator=",">
					#{rangeId}
				</foreach>
			</if>
		</when>
		<otherwise>
			<if test="rangeType == 5 or rangeType == 6">
				and b.DEPT_ID=#{selfDeptId}
			</if>
		</otherwise>
	</choose>
	GROUP BY
	<choose>
		<when test="2 == lookType">
			b.COMP_ID,b.AREA_ID
		</when>
		<when test="3 == lookType">
			b.AREA_ID,b.REG_ID
		</when>
		<when test="4 == lookType">
			b.AREA_ID,b.REG_ID,b.DEPT_ID
		</when>
		<when test="5 == lookType">
			b.COMP_ID,b.AREA_ID,b.REG_ID,b.DEPT_ID,b.GR_ID
		</when>
		<when test="6 == lookType">
			b.COMP_ID,b.DEPT_ID,b.USER_ID
		</when>
	</choose>
	having sum(iif(b.PERFORMANCE_TYPE &gt; 0,b.RECEIVABLE_MONEY,0))&gt;0
	ORDER BY DEAL_TOTAL_PROFIT DESC
</select>



  <select id="getAppAchieveMonthStatisticsRankForOrg" resultType="java.util.Map">
    select
    (case when ${groupByColumn} is null then 0 else ${groupByColumn} end) as rangeId,
    <if test="1 == profitShowType">
      sum(iif(b.PERFORMANCE_TYPE &gt; 0,b.PROFIT_MONEY,0)) as num
    </if>
    <if test="0 == profitShowType">
      sum(iif(b.PERFORMANCE_TYPE &gt; 0,b.RECEIVABLE_MONEY,0)) as num
    </if>
    from fun_deal a join FUN_PROFIT b on b.deal_id=a.deal_id
    where a.COMP_ID = #{compId} AND a.SIGN_DATE &gt;= #{startTime} AND a.SIGN_DATE &lt;= #{endTime}
    AND a.DEAL_AUDIT_STATUS != '3'
    <if test="whereCause != null and whereCause != ''">
      AND ${whereCause}
    </if>
    GROUP BY
    ${groupByColumn}
    having sum(iif(b.PERFORMANCE_TYPE &gt; 0,b.RECEIVABLE_MONEY,0))&gt;0
    order by rangeId
  </select>

	<sql id="chooseWhenTimeSql">
		<choose>
			<when test="param.dateCountType == 0">
				convert(nvarchar(10),A.${param.dateType},120)
			</when>
			<when test="param.dateCountType == 1">
				(CONVERT (VARCHAR (10),iif (CONVERT (VARCHAR (10),A.${param.dateType},120) &gt;= '${param.startTime}' AND CONVERT (VARCHAR (10),A.${param.dateType},120) &lt;=DATEADD( WEEK,1,DATEADD(DAY, 1 - DATEPART(WEEKDAY, '${param.startTime}' )-1,'${param.startTime}' )),'${param.startTime}' ,DATEADD( WEEKDAY,1 - DATEPART(WEEKDAY, A.${param.dateType}), A.${param.dateType})),120) + '-' + iif (CONVERT (VARCHAR (10),A.${param.dateType},120) &gt;= CONVERT (VARCHAR (10),DATEADD( WEEKDAY,1 - DATEPART(WEEKDAY, '${param.endTime}' ),'${param.endTime}' ),120),CONVERT (VARCHAR (10),'${param.endTime}',120) ,CONVERT (VARCHAR (10),DATEADD(WEEK,1,DATEADD(DAY,1 - DATEPART(WEEKDAY, A.${param.dateType})-1,A.${param.dateType} )),120)))
			</when>
			<when test="param.dateCountType == 2">
				convert(nvarchar(7),A.${param.dateType},120)
			</when>
		</choose>
	</sql>
	<select id="countSaleDeal" resultType="java.util.Map">
		SELECT <include refid="chooseWhenTimeSql" /> as date , ISNULL(COUNT(1),0) data from  FUN_DEAL A
		JOIN DEAL_USER_RELATIVE B ON A.DEAL_ID = B.DEAL_ID AND A.SIGN_USER_ID = B.USER_ID AND B.RELATE_TYPE = 3
		LEFT JOIN FUN_SALE C ON A.DEAL_HOUSE_ID = C.SALE_ID
		WHERE A.DEAL_AUDIT_STATUS != 3 AND A.COMP_ID = #{param.compId} AND A.${param.dateType} &gt;= #{param.startTime}
		AND A.${param.dateType} &lt;= #{param.endTime} AND A.DEAL_TYPE = 101
		GROUP BY <include refid="chooseWhenTimeSql" />
	</select>
	<select id="countLeaseDeal" resultType="java.util.Map">
		SELECT <include refid="chooseWhenTimeSql" /> as date , ISNULL(COUNT(1),0) data from  FUN_DEAL A
		JOIN DEAL_USER_RELATIVE B ON A.DEAL_ID = B.DEAL_ID AND A.SIGN_USER_ID = B.USER_ID AND B.RELATE_TYPE = 3
		LEFT JOIN FUN_LEASE C ON A.DEAL_HOUSE_ID = C.LEASE_ID
		WHERE A.DEAL_AUDIT_STATUS != 3 AND A.COMP_ID = #{param.compId} AND A.${param.dateType} &gt;= #{param.startTime}
		AND A.${param.dateType} &lt;= #{param.endTime} AND A.DEAL_TYPE = 102
		GROUP BY <include refid="chooseWhenTimeSql" />
	</select>
	
	<select id="getProntDealRecordId" resultType="java.lang.Integer">
		select top 1 RECORD_ID 
		from FUN_DEAL_RECORD 
		where 
		AGREEMENT_NO = #{dealId} and UPDATE_TYPE=#{updateType}
		<if test="pfActual != null and pfActual != ''">
			AND PF_ACTUAL= #{pfActual}
		</if>
		order by UPDATE_DATE desc
	</select>
	
	<select id="getDistinctDealIds" resultType="java.lang.Integer">
		SELECT DISTINCT a.DEAL_ID
		FROM FUN_DEAL A join PROCESS_RUNTIME_STEP B ON A.DEAL_ID=B.DEAL_ID 
		and A.COMP_ID=#{param.compId} 
		<choose>
			<when test="param.userType== 1">
				JOIN FUN_USERS C ON A.DEAL_USER_ID = c.USER_ID
			</when>
			<when test="param.userType== 2">
				JOIN FUN_USERS C ON B.UPDATE_USER = c.USER_ID
			</when>
			<when test="param.userType== 3">
				JOIN FUN_USERS C ON A.SIGN_USER_ID = c.USER_ID
			</when>
			<when test="param.userType== 4">
				JOIN FUN_USERS C ON A.CREATOR_UID = c.USER_ID
			</when>
		</choose>
		where B.DEL_FLAG=0
		<if test="param.stepName != null ">
			and B.STEP_NAME=#{param.stepName}
		</if>
		<if test="param.deptId != null ">
			and A.DEPT_ID=#{param.deptId}
		</if>
		<if test="param.modelId != null ">
			and A.MODEL_ID=#{param.modelId}
		</if>
		<if test="param.userId != null ">
			<choose>
				<when test="param.operLevel != null and param.operLevel == 1">
					AND C.TISSUE_LINE LIKE '%:${param.userId}:%' AND C.USER_LEVEL &lt;= #{param.userLevel}
				</when>
				<when test="param.operLevel != null and param.operLevel == 2">
					AND C.TISSUE_LINE LIKE '%:${param.userId}:%'
				</when>
				<otherwise>
					AND C.USER_ID =#{param.userId}
				</otherwise>
			</choose>
		</if>
		<if test="param.dateColumn !=null">
			<choose>
				<when test="param.date != null">
					<choose>
						<when test="param.date== 4 ">
							and ${param.dateColumn} &lt;#{param.dateParam}
						</when>
						<otherwise>
							AND ${param.dateColumn} &gt;= #{param.startTime} and ${param.dateColumn} &lt;=
							#{param.endTime}
						</otherwise>
					</choose>
				</when>
				<otherwise>
					AND ${param.dateColumn} &gt;= #{param.startTime} and ${param.dateColumn} &lt;= #{param.endTime}
				</otherwise>
			</choose>
		</if>
		<if test="param.intelligentSearch != null and param.intelligentSearch != '' ">
			and A.INTELLIGENT_SEARCH like '%${param.intelligentSearch}%'
		</if>
		<if test="param.processStatus != null">
			and A.PROCESS_STATUS = #{param.processStatus}
		</if>
		<if test="param.newOrganization == true and param.organizationId != null and param.organizationId != 0">
            AND C.TISSUE_LINE LIKE '%:${param.organizationId}:%'
        </if>
		order by A.DEAL_ID
	</select>
	
	<select id="getFunDealByDealIds" resultMap="BaseResultMap">
		SELECT CONTRACT_NO, DEAL_ID, DEAL_USER_NAME, SIGN_USER_NAME, MODEL_NAME, SIGN_DATE, DEAL_HOUSE_ID, RUNSTEP_NAME
		FROM FUN_DEAL WHERE DEAL_ID IN
		<foreach close=")" collection="dealIds" index="index" item="dealId" open="(" separator=",">
				#{dealId}
		</foreach>
	</select>
  <update id="updateStepInDeal">
    UPDATE FUN_DEAL
    <set>
      RUNSTEP_ID = #{record.runstepId},
      RUNSTEP_NAME = #{record.runstepName}
    </set>
    WHERE DEAL_ID = #{record.dealId}
  </update>
  <resultMap extends="BaseResultMap" id="extBaseResultMap" type="com.myfun.repository.erpdb.dto.ErpFunDealExtVO" />
  
  <update id="updateSignType">
    UPDATE FUN_DEAL set SIGN_TYPE = null where DEAL_ID = #{dealId}
  </update>
  
   <insert id="insertCooperateDealRelative">
    insert into FUN_COOPERATE_DEAL_RELATIVE(DEAL_ID,COOPERATE_ID, COMP_ID, CREATION_TIME)
    values (#{dealId}, #{cooperateId}, #{compId}, getdate())
  </insert>
	
	<update id="updateDealIntroducer">
		UPDATE FUN_DEAL SET
			INTRODUCER_ID = #{introducerId}, ADULT_PROMOTION_ID = #{adultPromotionId},
			SIGN_SITE_DEPT = #{signSiteDept}, SIGN_SITE_GR = #{signSiteGr}
	    	WHERE DEAL_ID = #{dealId}
	</update>

  <select id="selectGroupByDeptOrGr" resultType="java.lang.Integer">
    SELECT DISTINCT
    <if test="statisticsType == 1">
      SIGN_SITE_DEPT signSiteDept
    </if>
    <if test="statisticsType == 2">
      SIGN_SITE_GR signSiteGr
    </if>
    FROM FUN_DEAL
    WHERE COMP_ID = #{compId} AND DEAL_AUDIT_STATUS IN (0,1,2,4,5,6,7,8,9)<!-- DEAL_AUDIT_STATUS：除了作废的都算 -->
    <if test="statisticsType == 1">
      AND SIGN_SITE_DEPT IS NOT NULL ORDER BY SIGN_SITE_DEPT
    </if>
    <if test="statisticsType == 2">
      AND SIGN_SITE_GR IS NOT NULL ORDER BY SIGN_SITE_GR
    </if>
  </select>

  <select id="selectSignList" resultType="com.myfun.erpWeb.managecenter.profit.vo.SignStatisticsListVO">
    SELECT A.SIGN_SITE_DEPT signSiteDept,
    <if test="statisticsType == 2">
      A.SIGN_SITE_GR signSiteGr,
    </if>
    SUM(IIF(B.PERFORMANCE_TYPE = 1,B.PAY_AMOUNT,0)) realTransfer,
    SUM(IIF(B.PERFORMANCE_TYPE = 2,B.PAY_AMOUNT,0)) realSell,
    SUM(IIF(B.PERFORMANCE_TYPE = 3,B.PAY_AMOUNT,0)) realNewhouse,
    SUM(IIF(B.PERFORMANCE_TYPE = 4,B.PAY_AMOUNT,0)) realLease,
    SUM(IIF(B.PERFORMANCE_TYPE = 5,B.PAY_AMOUNT,0)) realFinance,
    SUM(IIF(B.PERFORMANCE_TYPE NOT IN(1,2,3,4,5),B.PAY_AMOUNT,0)) realOther,
    SUM(IIF(B.PAY_AMOUNT IS NOT NULL,B.PAY_AMOUNT,0)) realSum
    FROM FUN_DEAL A
    LEFT JOIN PROCESS_FINANC B ON B.COMP_ID = A.COMP_ID AND B.DEAL_ID = A.DEAL_ID
    WHERE A.SIGN_DATE BETWEEN #{startTime} AND #{endTime} AND B.PF_ACTUAL = 1 AND B.AUDIT_STATUS = 1
    <if test="statisticsType == 1">
      AND A.SIGN_SITE_DEPT IN
      <foreach close=")" collection="ids" item="id" open="(" separator=",">
         #{id}
      </foreach> AND SIGN_SITE_GR IS NULL
      GROUP BY SIGN_SITE_DEPT ORDER BY SIGN_SITE_DEPT
    </if>
    <if test="statisticsType == 2">
      AND A.SIGN_SITE_GR IN
      <foreach close=")" collection="ids" item="id" open="(" separator=",">
        #{id}
      </foreach>
      GROUP BY SIGN_SITE_GR,SIGN_SITE_DEPT ORDER BY SIGN_SITE_GR
    </if>
  </select>


  <select id="selectLeaseAndSellDealNum" resultType="com.myfun.erpWeb.managecenter.profit.vo.SignStatisticsListVO">
	SELECT
    <if test="statisticsType == 1">
      A.SIGN_SITE_DEPT signSiteDept,
    </if>
    <if test="statisticsType == 2">
      A.SIGN_SITE_GR signSiteGr,
    </if>
    A.DEAL_TYPE dealType,COUNT(DISTINCT A.DEAL_ID) num
    FROM FUN_DEAL A
    LEFT JOIN PROCESS_FINANC B ON B.COMP_ID = A.COMP_ID AND B.DEAL_ID = A.DEAL_ID
    WHERE B.PF_ACTUAL = 1 AND B.AUDIT_STATUS = 1 AND A.SIGN_DATE BETWEEN #{startTime} AND #{endTime} AND A.COMP_ID = #{compId}
      <if test="statisticsType == 1">
        AND A.SIGN_SITE_DEPT IN
        <foreach close=")" collection="ids" item="id" open="(" separator=",">
          #{id}
        </foreach> AND SIGN_SITE_GR IS NULL
        GROUP BY SIGN_SITE_DEPT,A.DEAL_TYPE ORDER BY SIGN_SITE_DEPT
      </if>
      <if test="statisticsType == 2">
        AND A.SIGN_SITE_GR IN
        <foreach close=")" collection="ids" item="id" open="(" separator=",">
          #{id}
        </foreach>
        GROUP BY SIGN_SITE_GR,A.DEAL_TYPE ORDER BY SIGN_SITE_GR
      </if>
  </select>




  <resultMap extends="BaseResultMap" id="financResult" type="com.myfun.erpWeb.managecenter.profit.vo.FinancAuditListVO">
    <result column="PF_GETER" jdbcType="VARCHAR" property="pfGeter" />
    <result column="PF_PAYER" jdbcType="VARCHAR" property="pfPayer" />
    <result column="PAY_AMOUNT" jdbcType="DECIMAL" property="payAmount" />
    <result column="PF_TIME" jdbcType="TIMESTAMP" property="pfTime" />
    <result column="AUDIT_STATUS" jdbcType="VARCHAR" property="auditStatus" />
    <result column="AUDIT_TIME" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="AUDIT_USER_NAME" jdbcType="VARCHAR" property="auditUserName" />
    <result column="PERFORMANCE_TYPE" jdbcType="TINYINT" property="performanceType" />
  </resultMap>

  <select id="selectFinancAuditList" resultMap="financResult">
    select A.DEAL_ID,A.CREATOR_DATE,B.PERFORMANCE_TYPE,A.SELL_OWNER_NAME,A.BUY_OWNER_NAME,B.PF_PAYER,B.PF_GETER,B.PAY_AMOUNT,B.PF_TIME,A.REMARK,A.AGREEMENT_NO,
    A.HOUSEADDRESS,B.AUDIT_STATUS,B.AUDIT_USER_NAME,B.AUDIT_TIME
    from FUN_DEAL A LEFT JOIN PROCESS_FINANC B ON B.DEAL_ID = A.DEAL_ID AND B.COMP_ID = A.COMP_ID
    WHERE A.COMP_ID = #{compId} AND B.PF_ACTUAL = #{param.pfActual}
    <if test="null != param.auditUserName and '' != param.auditUserName">
      B.AUDIT_USER_NAME LIKE '%${param.auditUserName}%'
    </if>
    <if test="null != param.timeRank and param.timeRank == 1">
      B.PF_TIME BETWEEN #{startTime} AND #{endTime}
    </if>
    <if test="null != param.timeRank and param.timeRank == 2">
      B.AUDIT_TIME BETWEEN #{startTime} AND #{endTime}
    </if>
    <if test="null != param.agreementNo and '' != param.agreementNo">
      A.AGREEMENT_NO LIKE '%${param.agreementNo}%'
    </if>
    ORDER BY A.CREATOR_DATE ASC
  </select>
</mapper>