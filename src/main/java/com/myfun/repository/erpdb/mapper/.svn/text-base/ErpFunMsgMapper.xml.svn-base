<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunMsgMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunMsg">
    <!--@mbggenerated-->
    <id column="MSG_ID" jdbcType="INTEGER" property="msgId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="SEND_USER" jdbcType="INTEGER" property="sendUser" />
    <result column="RECEIVE_USER" jdbcType="INTEGER" property="receiveUser" />
    <result column="READ_FLAG" jdbcType="BIT" property="readFlag" />
    <result column="SEND_TIME" jdbcType="VARCHAR" property="sendTime" />
    <result column="SEND_DEL" jdbcType="BIT" property="sendDel" />
    <result column="RECEIVE_DEL" jdbcType="BIT" property="receiveDel" />
    <result column="SEND_DEPT" jdbcType="INTEGER" property="sendDept" />
    <result column="RECEIVE_DEPT" jdbcType="INTEGER" property="receiveDept" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="CASE_TYPE" jdbcType="INTEGER" property="caseType" />
    <result column="MSG_TYPE" jdbcType="INTEGER" property="msgType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.myfun.repository.erpdb.po.ErpFunMsg">
    <!--@mbggenerated-->
    <result column="MSG_CONTENT" jdbcType="CLOB" property="msgContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    MSG_ID, COMP_ID, SEND_USER, RECEIVE_USER, READ_FLAG, SEND_TIME, SEND_DEL, RECEIVE_DEL, 
    SEND_DEPT, RECEIVE_DEPT, CASE_ID, CASE_TYPE, MSG_TYPE
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbggenerated-->
    MSG_CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.myfun.repository.erpdb.po.ErpFunMsgExample" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_MSG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunMsgExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_MSG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_MSG
    where MSG_ID = #{msgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_MSG
    where MSG_ID = #{msgId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunMsgExample">
    <!--@mbggenerated-->
    delete from FUN_MSG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunMsg">
    <!--@mbggenerated-->
    <selectKey keyProperty="msgId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_MSG_MSG_ID
    </selectKey>
    insert into FUN_MSG (MSG_ID, COMP_ID, SEND_USER, 
      RECEIVE_USER, READ_FLAG, SEND_TIME, 
      SEND_DEL, RECEIVE_DEL, SEND_DEPT, 
      RECEIVE_DEPT, CASE_ID, CASE_TYPE, 
      MSG_TYPE, MSG_CONTENT)
    values (#{msgId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{sendUser,jdbcType=INTEGER}, 
      #{receiveUser,jdbcType=INTEGER}, #{readFlag,jdbcType=BIT}, #{sendTime,jdbcType=VARCHAR}, 
      #{sendDel,jdbcType=BIT}, #{receiveDel,jdbcType=BIT}, #{sendDept,jdbcType=INTEGER}, 
      #{receiveDept,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{caseType,jdbcType=INTEGER}, 
      #{msgType,jdbcType=INTEGER}, #{msgContent,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunMsg">
    <!--@mbggenerated-->
    <selectKey keyProperty="msgId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_MSG_MSG_ID
    </selectKey>
    insert into FUN_MSG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      MSG_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="sendUser != null">
        SEND_USER,
      </if>
      <if test="receiveUser != null">
        RECEIVE_USER,
      </if>
      <if test="readFlag != null">
        READ_FLAG,
      </if>
      <if test="sendTime != null">
        SEND_TIME,
      </if>
      <if test="sendDel != null">
        SEND_DEL,
      </if>
      <if test="receiveDel != null">
        RECEIVE_DEL,
      </if>
      <if test="sendDept != null">
        SEND_DEPT,
      </if>
      <if test="receiveDept != null">
        RECEIVE_DEPT,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
      <if test="msgType != null">
        MSG_TYPE,
      </if>
      <if test="msgContent != null">
        MSG_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{msgId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="sendUser != null">
        #{sendUser,jdbcType=INTEGER},
      </if>
      <if test="receiveUser != null">
        #{receiveUser,jdbcType=INTEGER},
      </if>
      <if test="readFlag != null">
        #{readFlag,jdbcType=BIT},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="sendDel != null">
        #{sendDel,jdbcType=BIT},
      </if>
      <if test="receiveDel != null">
        #{receiveDel,jdbcType=BIT},
      </if>
      <if test="sendDept != null">
        #{sendDept,jdbcType=INTEGER},
      </if>
      <if test="receiveDept != null">
        #{receiveDept,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=INTEGER},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=INTEGER},
      </if>
      <if test="msgContent != null">
        #{msgContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunMsgExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_MSG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_MSG
    <set>
      <if test="record.msgId != null">
        MSG_ID = #{record.msgId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.sendUser != null">
        SEND_USER = #{record.sendUser,jdbcType=INTEGER},
      </if>
      <if test="record.receiveUser != null">
        RECEIVE_USER = #{record.receiveUser,jdbcType=INTEGER},
      </if>
      <if test="record.readFlag != null">
        READ_FLAG = #{record.readFlag,jdbcType=BIT},
      </if>
      <if test="record.sendTime != null">
        SEND_TIME = #{record.sendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.sendDel != null">
        SEND_DEL = #{record.sendDel,jdbcType=BIT},
      </if>
      <if test="record.receiveDel != null">
        RECEIVE_DEL = #{record.receiveDel,jdbcType=BIT},
      </if>
      <if test="record.sendDept != null">
        SEND_DEPT = #{record.sendDept,jdbcType=INTEGER},
      </if>
      <if test="record.receiveDept != null">
        RECEIVE_DEPT = #{record.receiveDept,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      </if>
      <if test="record.msgType != null">
        MSG_TYPE = #{record.msgType,jdbcType=INTEGER},
      </if>
      <if test="record.msgContent != null">
        MSG_CONTENT = #{record.msgContent,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--@mbggenerated-->
    update FUN_MSG
    set MSG_ID = #{record.msgId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      SEND_USER = #{record.sendUser,jdbcType=INTEGER},
      RECEIVE_USER = #{record.receiveUser,jdbcType=INTEGER},
      READ_FLAG = #{record.readFlag,jdbcType=BIT},
      SEND_TIME = #{record.sendTime,jdbcType=VARCHAR},
      SEND_DEL = #{record.sendDel,jdbcType=BIT},
      RECEIVE_DEL = #{record.receiveDel,jdbcType=BIT},
      SEND_DEPT = #{record.sendDept,jdbcType=INTEGER},
      RECEIVE_DEPT = #{record.receiveDept,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      MSG_TYPE = #{record.msgType,jdbcType=INTEGER},
      MSG_CONTENT = #{record.msgContent,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_MSG
    set MSG_ID = #{record.msgId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      SEND_USER = #{record.sendUser,jdbcType=INTEGER},
      RECEIVE_USER = #{record.receiveUser,jdbcType=INTEGER},
      READ_FLAG = #{record.readFlag,jdbcType=BIT},
      SEND_TIME = #{record.sendTime,jdbcType=VARCHAR},
      SEND_DEL = #{record.sendDel,jdbcType=BIT},
      RECEIVE_DEL = #{record.receiveDel,jdbcType=BIT},
      SEND_DEPT = #{record.sendDept,jdbcType=INTEGER},
      RECEIVE_DEPT = #{record.receiveDept,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=INTEGER},
      MSG_TYPE = #{record.msgType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunMsg">
    <!--@mbggenerated-->
    update FUN_MSG
    <set>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="sendUser != null">
        SEND_USER = #{sendUser,jdbcType=INTEGER},
      </if>
      <if test="receiveUser != null">
        RECEIVE_USER = #{receiveUser,jdbcType=INTEGER},
      </if>
      <if test="readFlag != null">
        READ_FLAG = #{readFlag,jdbcType=BIT},
      </if>
      <if test="sendTime != null">
        SEND_TIME = #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="sendDel != null">
        SEND_DEL = #{sendDel,jdbcType=BIT},
      </if>
      <if test="receiveDel != null">
        RECEIVE_DEL = #{receiveDel,jdbcType=BIT},
      </if>
      <if test="sendDept != null">
        SEND_DEPT = #{sendDept,jdbcType=INTEGER},
      </if>
      <if test="receiveDept != null">
        RECEIVE_DEPT = #{receiveDept,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=INTEGER},
      </if>
      <if test="msgType != null">
        MSG_TYPE = #{msgType,jdbcType=INTEGER},
      </if>
      <if test="msgContent != null">
        MSG_CONTENT = #{msgContent,jdbcType=CLOB},
      </if>
    </set>
    where MSG_ID = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myfun.repository.erpdb.po.ErpFunMsg">
    <!--@mbggenerated-->
    update FUN_MSG
    set COMP_ID = #{compId,jdbcType=INTEGER},
      SEND_USER = #{sendUser,jdbcType=INTEGER},
      RECEIVE_USER = #{receiveUser,jdbcType=INTEGER},
      READ_FLAG = #{readFlag,jdbcType=BIT},
      SEND_TIME = #{sendTime,jdbcType=VARCHAR},
      SEND_DEL = #{sendDel,jdbcType=BIT},
      RECEIVE_DEL = #{receiveDel,jdbcType=BIT},
      SEND_DEPT = #{sendDept,jdbcType=INTEGER},
      RECEIVE_DEPT = #{receiveDept,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=INTEGER},
      MSG_TYPE = #{msgType,jdbcType=INTEGER},
      MSG_CONTENT = #{msgContent,jdbcType=CLOB}
    where MSG_ID = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunMsg">
    <!--@mbggenerated-->
    update FUN_MSG
    set COMP_ID = #{compId,jdbcType=INTEGER},
      SEND_USER = #{sendUser,jdbcType=INTEGER},
      RECEIVE_USER = #{receiveUser,jdbcType=INTEGER},
      READ_FLAG = #{readFlag,jdbcType=BIT},
      SEND_TIME = #{sendTime,jdbcType=VARCHAR},
      SEND_DEL = #{sendDel,jdbcType=BIT},
      RECEIVE_DEL = #{receiveDel,jdbcType=BIT},
      SEND_DEPT = #{sendDept,jdbcType=INTEGER},
      RECEIVE_DEPT = #{receiveDept,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=INTEGER},
      MSG_TYPE = #{msgType,jdbcType=INTEGER}
    where MSG_ID = #{msgId,jdbcType=INTEGER}
  </update>
  
  <!-- buniess -->
  <insert id="insertBatch">
  	INSERT FUN_MSG(MSG_ID,COMP_ID,SEND_USER,RECEIVE_USER,MSG_CONTENT,READ_FLAG,SEND_TIME,SEND_DEL,RECEIVE_DEL,SEND_DEPT,RECEIVE_DEPT)
	SELECT NEXT VALUE FOR SEQ_FUN_MSG_MSG_ID,COMP_ID,999,${userId},${msg},0,GETDATE(),0,0,CITY_ID,DEPT_ID
	FROM FUN_USERS
	WHERE USER_ID = #{userId}
  </insert>
  
  <insert id="insertFunMsg" parameterType="com.myfun.repository.erpdb.po.ErpFunMsg">
    <selectKey keyProperty="msgId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_MSG_MSG_ID
    </selectKey>
    insert into FUN_MSG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      MSG_ID,
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="sendUser != null">
        SEND_USER,
      </if>
      <if test="receiveUser != null">
        RECEIVE_USER,
      </if>
      <if test="readFlag != null">
        READ_FLAG,
      </if>
      <if test="sendTime != null">
        SEND_TIME,
      </if>
      <if test="sendDel != null">
        SEND_DEL,
      </if>
      <if test="receiveDel != null">
        RECEIVE_DEL,
      </if>
      <if test="sendDept != null">
        SEND_DEPT,
      </if>
      <if test="receiveDept != null">
        RECEIVE_DEPT,
      </if>
      <if test="msgContent != null">
        MSG_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{msgId,jdbcType=INTEGER},
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="sendUser != null">
        #{sendUser,jdbcType=INTEGER},
      </if>
      <if test="receiveUser != null">
        #{receiveUser,jdbcType=INTEGER},
      </if>
      <if test="readFlag != null">
        #{readFlag,jdbcType=BIT},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="sendDel != null">
        #{sendDel,jdbcType=BIT},
      </if>
      <if test="receiveDel != null">
        #{receiveDel,jdbcType=BIT},
      </if>
      <if test="sendDept != null">
        #{sendDept,jdbcType=INTEGER},
      </if>
      <if test="receiveDept != null">
        #{receiveDept,jdbcType=INTEGER},
      </if>
      <if test="msgContent != null">
        #{msgContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
	
	<insert id="createMsg">
		<selectKey keyProperty="msgId" order="BEFORE" resultType="java.lang.Integer">
			SELECT next value for SEQ_FUN_MSG_MSG_ID
		</selectKey>
		insert into FUN_MSG (MSG_ID, COMP_ID, SEND_USER,RECEIVE_USER, READ_FLAG,
							SEND_TIME, CASE_ID, CASE_TYPE, MSG_TYPE, MSG_CONTENT)
		values (#{msgId}, #{compId}, #{sendUser}, #{receiveUser}, 0, getDate(),
			#{caseId}, #{caseType}, #{msgType}, #{msgContent})
	</insert>
    <select id="getFunMsgList" resultType="java.util.Map">
      select 'newMsg' as title, MSG_ID as id, 0 as bound, MSG_CONTENT as content, b.USER_NAME as senduser,
      CASE_ID as caseId, CASE_TYPE as caseType, MSG_TYPE as msgType,SUBSTRING(CONVERT(VARCHAR(20), SEND_TIME,121), 6, 5) as sendtime
      from fun_msg a
      left join FUN_USERS b on a.SEND_USER = b.USER_ID
      where a.COMP_ID=#{compId}  and RECEIVE_USER = #{userId} and READ_FLAG=0
      and MSG_TYPE != 3
    </select>

	<insert id="createSystemMsg">
		{CALL PROC_SYSMSG #{userId},#{msgContent}}
	</insert>
</mapper>

