<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunProfitTargetMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunProfitTarget">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="TARGET_DATE" jdbcType="TIMESTAMP" property="targetDate" />
    <result column="TARGET_PROFIT" jdbcType="NUMERIC" property="targetProfit" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="REG_ID" jdbcType="INTEGER" property="regId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="PROFIT_TYPE" jdbcType="TINYINT" property="profitType" />
    <result column="TEMPLET_ID" jdbcType="INTEGER" property="templetId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="ORG_1" jdbcType="INTEGER" property="org1" />
    <result column="ORG_2" jdbcType="INTEGER" property="org2" />
    <result column="ORG_3" jdbcType="INTEGER" property="org3" />
    <result column="ORG_4" jdbcType="INTEGER" property="org4" />
    <result column="ORG_5" jdbcType="INTEGER" property="org5" />
    <result column="ORG_6" jdbcType="INTEGER" property="org6" />
    <result column="ORG_7" jdbcType="INTEGER" property="org7" />
    <result column="ORG_8" jdbcType="INTEGER" property="org8" />
    <result column="ORG_9" jdbcType="INTEGER" property="org9" />
    <result column="ORG_10" jdbcType="INTEGER" property="org10" />
    <result column="ORG_11" jdbcType="INTEGER" property="org11" />
    <result column="ORG_12" jdbcType="INTEGER" property="org12" />
    <result column="ORG_13" jdbcType="INTEGER" property="org13" />
    <result column="ORG_14" jdbcType="INTEGER" property="org14" />
    <result column="DEF_ID" jdbcType="INTEGER" property="defId" />
    <result column="ORGANIZATION_ID" jdbcType="INTEGER" property="organizationId" />
    <result column="ORGANIZATION_PATH" jdbcType="VARCHAR" property="organizationPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, TARGET_DATE, TARGET_PROFIT, AREA_ID, REG_ID, COMP_ID, DEPT_ID, USER_ID, PROFIT_TYPE, 
    TEMPLET_ID, CREATE_TIME, ARCHIVE_ID, GR_ID, ORG_1, ORG_2, ORG_3, ORG_4, ORG_5, ORG_6, 
    ORG_7, ORG_8, ORG_9, ORG_10, ORG_11, ORG_12, ORG_13, ORG_14, DEF_ID, ORGANIZATION_ID, 
    ORGANIZATION_PATH
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitTargetExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_PROFIT_TARGET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_PROFIT_TARGET
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_PROFIT_TARGET
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitTargetExample">
    <!--@mbggenerated-->
    delete from FUN_PROFIT_TARGET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitTarget">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT MAX(ISNULL(ID,0))+1 FROM FUN_PROFIT_TARGET
    </selectKey>
    insert into FUN_PROFIT_TARGET (ID, TARGET_DATE, TARGET_PROFIT, 
      AREA_ID, REG_ID, COMP_ID, 
      DEPT_ID, USER_ID, PROFIT_TYPE, 
      TEMPLET_ID, CREATE_TIME, ARCHIVE_ID, 
      GR_ID, ORG_1, ORG_2, ORG_3, 
      ORG_4, ORG_5, ORG_6, ORG_7, 
      ORG_8, ORG_9, ORG_10, 
      ORG_11, ORG_12, ORG_13, 
      ORG_14, DEF_ID, ORGANIZATION_ID, 
      ORGANIZATION_PATH)
    values (#{id,jdbcType=INTEGER}, #{targetDate,jdbcType=TIMESTAMP}, #{targetProfit,jdbcType=NUMERIC}, 
      #{areaId,jdbcType=INTEGER}, #{regId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{profitType,jdbcType=TINYINT}, 
      #{templetId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{archiveId,jdbcType=INTEGER}, 
      #{grId,jdbcType=INTEGER}, #{org1,jdbcType=INTEGER}, #{org2,jdbcType=INTEGER}, #{org3,jdbcType=INTEGER}, 
      #{org4,jdbcType=INTEGER}, #{org5,jdbcType=INTEGER}, #{org6,jdbcType=INTEGER}, #{org7,jdbcType=INTEGER}, 
      #{org8,jdbcType=INTEGER}, #{org9,jdbcType=INTEGER}, #{org10,jdbcType=INTEGER}, 
      #{org11,jdbcType=INTEGER}, #{org12,jdbcType=INTEGER}, #{org13,jdbcType=INTEGER}, 
      #{org14,jdbcType=INTEGER}, #{defId,jdbcType=INTEGER}, #{organizationId,jdbcType=INTEGER}, 
      #{organizationPath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitTarget">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT MAX(ISNULL(ID,0))+1 FROM FUN_PROFIT_TARGET
    </selectKey>
    insert into FUN_PROFIT_TARGET
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="targetDate != null">
        TARGET_DATE,
      </if>
      <if test="targetProfit != null">
        TARGET_PROFIT,
      </if>
      <if test="areaId != null">
        AREA_ID,
      </if>
      <if test="regId != null">
        REG_ID,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="profitType != null">
        PROFIT_TYPE,
      </if>
      <if test="templetId != null">
        TEMPLET_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="org1 != null">
        ORG_1,
      </if>
      <if test="org2 != null">
        ORG_2,
      </if>
      <if test="org3 != null">
        ORG_3,
      </if>
      <if test="org4 != null">
        ORG_4,
      </if>
      <if test="org5 != null">
        ORG_5,
      </if>
      <if test="org6 != null">
        ORG_6,
      </if>
      <if test="org7 != null">
        ORG_7,
      </if>
      <if test="org8 != null">
        ORG_8,
      </if>
      <if test="org9 != null">
        ORG_9,
      </if>
      <if test="org10 != null">
        ORG_10,
      </if>
      <if test="org11 != null">
        ORG_11,
      </if>
      <if test="org12 != null">
        ORG_12,
      </if>
      <if test="org13 != null">
        ORG_13,
      </if>
      <if test="org14 != null">
        ORG_14,
      </if>
      <if test="defId != null">
        DEF_ID,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="targetDate != null">
        #{targetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="targetProfit != null">
        #{targetProfit,jdbcType=NUMERIC},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="profitType != null">
        #{profitType,jdbcType=TINYINT},
      </if>
      <if test="templetId != null">
        #{templetId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="org1 != null">
        #{org1,jdbcType=INTEGER},
      </if>
      <if test="org2 != null">
        #{org2,jdbcType=INTEGER},
      </if>
      <if test="org3 != null">
        #{org3,jdbcType=INTEGER},
      </if>
      <if test="org4 != null">
        #{org4,jdbcType=INTEGER},
      </if>
      <if test="org5 != null">
        #{org5,jdbcType=INTEGER},
      </if>
      <if test="org6 != null">
        #{org6,jdbcType=INTEGER},
      </if>
      <if test="org7 != null">
        #{org7,jdbcType=INTEGER},
      </if>
      <if test="org8 != null">
        #{org8,jdbcType=INTEGER},
      </if>
      <if test="org9 != null">
        #{org9,jdbcType=INTEGER},
      </if>
      <if test="org10 != null">
        #{org10,jdbcType=INTEGER},
      </if>
      <if test="org11 != null">
        #{org11,jdbcType=INTEGER},
      </if>
      <if test="org12 != null">
        #{org12,jdbcType=INTEGER},
      </if>
      <if test="org13 != null">
        #{org13,jdbcType=INTEGER},
      </if>
      <if test="org14 != null">
        #{org14,jdbcType=INTEGER},
      </if>
      <if test="defId != null">
        #{defId,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        #{organizationPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitTargetExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_PROFIT_TARGET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROFIT_TARGET
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.targetDate != null">
        TARGET_DATE = #{record.targetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.targetProfit != null">
        TARGET_PROFIT = #{record.targetProfit,jdbcType=NUMERIC},
      </if>
      <if test="record.areaId != null">
        AREA_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.regId != null">
        REG_ID = #{record.regId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.profitType != null">
        PROFIT_TYPE = #{record.profitType,jdbcType=TINYINT},
      </if>
      <if test="record.templetId != null">
        TEMPLET_ID = #{record.templetId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.grId != null">
        GR_ID = #{record.grId,jdbcType=INTEGER},
      </if>
      <if test="record.org1 != null">
        ORG_1 = #{record.org1,jdbcType=INTEGER},
      </if>
      <if test="record.org2 != null">
        ORG_2 = #{record.org2,jdbcType=INTEGER},
      </if>
      <if test="record.org3 != null">
        ORG_3 = #{record.org3,jdbcType=INTEGER},
      </if>
      <if test="record.org4 != null">
        ORG_4 = #{record.org4,jdbcType=INTEGER},
      </if>
      <if test="record.org5 != null">
        ORG_5 = #{record.org5,jdbcType=INTEGER},
      </if>
      <if test="record.org6 != null">
        ORG_6 = #{record.org6,jdbcType=INTEGER},
      </if>
      <if test="record.org7 != null">
        ORG_7 = #{record.org7,jdbcType=INTEGER},
      </if>
      <if test="record.org8 != null">
        ORG_8 = #{record.org8,jdbcType=INTEGER},
      </if>
      <if test="record.org9 != null">
        ORG_9 = #{record.org9,jdbcType=INTEGER},
      </if>
      <if test="record.org10 != null">
        ORG_10 = #{record.org10,jdbcType=INTEGER},
      </if>
      <if test="record.org11 != null">
        ORG_11 = #{record.org11,jdbcType=INTEGER},
      </if>
      <if test="record.org12 != null">
        ORG_12 = #{record.org12,jdbcType=INTEGER},
      </if>
      <if test="record.org13 != null">
        ORG_13 = #{record.org13,jdbcType=INTEGER},
      </if>
      <if test="record.org14 != null">
        ORG_14 = #{record.org14,jdbcType=INTEGER},
      </if>
      <if test="record.defId != null">
        DEF_ID = #{record.defId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationPath != null">
        ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_PROFIT_TARGET
    set ID = #{record.id,jdbcType=INTEGER},
      TARGET_DATE = #{record.targetDate,jdbcType=TIMESTAMP},
      TARGET_PROFIT = #{record.targetProfit,jdbcType=NUMERIC},
      AREA_ID = #{record.areaId,jdbcType=INTEGER},
      REG_ID = #{record.regId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      PROFIT_TYPE = #{record.profitType,jdbcType=TINYINT},
      TEMPLET_ID = #{record.templetId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      GR_ID = #{record.grId,jdbcType=INTEGER},
      ORG_1 = #{record.org1,jdbcType=INTEGER},
      ORG_2 = #{record.org2,jdbcType=INTEGER},
      ORG_3 = #{record.org3,jdbcType=INTEGER},
      ORG_4 = #{record.org4,jdbcType=INTEGER},
      ORG_5 = #{record.org5,jdbcType=INTEGER},
      ORG_6 = #{record.org6,jdbcType=INTEGER},
      ORG_7 = #{record.org7,jdbcType=INTEGER},
      ORG_8 = #{record.org8,jdbcType=INTEGER},
      ORG_9 = #{record.org9,jdbcType=INTEGER},
      ORG_10 = #{record.org10,jdbcType=INTEGER},
      ORG_11 = #{record.org11,jdbcType=INTEGER},
      ORG_12 = #{record.org12,jdbcType=INTEGER},
      ORG_13 = #{record.org13,jdbcType=INTEGER},
      ORG_14 = #{record.org14,jdbcType=INTEGER},
      DEF_ID = #{record.defId,jdbcType=INTEGER},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{record.organizationPath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitTarget">
    <!--@mbggenerated-->
    update FUN_PROFIT_TARGET
    <set>
      <if test="targetDate != null">
        TARGET_DATE = #{targetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="targetProfit != null">
        TARGET_PROFIT = #{targetProfit,jdbcType=NUMERIC},
      </if>
      <if test="areaId != null">
        AREA_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="regId != null">
        REG_ID = #{regId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="profitType != null">
        PROFIT_TYPE = #{profitType,jdbcType=TINYINT},
      </if>
      <if test="templetId != null">
        TEMPLET_ID = #{templetId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="org1 != null">
        ORG_1 = #{org1,jdbcType=INTEGER},
      </if>
      <if test="org2 != null">
        ORG_2 = #{org2,jdbcType=INTEGER},
      </if>
      <if test="org3 != null">
        ORG_3 = #{org3,jdbcType=INTEGER},
      </if>
      <if test="org4 != null">
        ORG_4 = #{org4,jdbcType=INTEGER},
      </if>
      <if test="org5 != null">
        ORG_5 = #{org5,jdbcType=INTEGER},
      </if>
      <if test="org6 != null">
        ORG_6 = #{org6,jdbcType=INTEGER},
      </if>
      <if test="org7 != null">
        ORG_7 = #{org7,jdbcType=INTEGER},
      </if>
      <if test="org8 != null">
        ORG_8 = #{org8,jdbcType=INTEGER},
      </if>
      <if test="org9 != null">
        ORG_9 = #{org9,jdbcType=INTEGER},
      </if>
      <if test="org10 != null">
        ORG_10 = #{org10,jdbcType=INTEGER},
      </if>
      <if test="org11 != null">
        ORG_11 = #{org11,jdbcType=INTEGER},
      </if>
      <if test="org12 != null">
        ORG_12 = #{org12,jdbcType=INTEGER},
      </if>
      <if test="org13 != null">
        ORG_13 = #{org13,jdbcType=INTEGER},
      </if>
      <if test="org14 != null">
        ORG_14 = #{org14,jdbcType=INTEGER},
      </if>
      <if test="defId != null">
        DEF_ID = #{defId,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="organizationPath != null">
        ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitTarget">
    <!--@mbggenerated-->
    update FUN_PROFIT_TARGET
    set TARGET_DATE = #{targetDate,jdbcType=TIMESTAMP},
      TARGET_PROFIT = #{targetProfit,jdbcType=NUMERIC},
      AREA_ID = #{areaId,jdbcType=INTEGER},
      REG_ID = #{regId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      PROFIT_TYPE = #{profitType,jdbcType=TINYINT},
      TEMPLET_ID = #{templetId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      ORG_1 = #{org1,jdbcType=INTEGER},
      ORG_2 = #{org2,jdbcType=INTEGER},
      ORG_3 = #{org3,jdbcType=INTEGER},
      ORG_4 = #{org4,jdbcType=INTEGER},
      ORG_5 = #{org5,jdbcType=INTEGER},
      ORG_6 = #{org6,jdbcType=INTEGER},
      ORG_7 = #{org7,jdbcType=INTEGER},
      ORG_8 = #{org8,jdbcType=INTEGER},
      ORG_9 = #{org9,jdbcType=INTEGER},
      ORG_10 = #{org10,jdbcType=INTEGER},
      ORG_11 = #{org11,jdbcType=INTEGER},
      ORG_12 = #{org12,jdbcType=INTEGER},
      ORG_13 = #{org13,jdbcType=INTEGER},
      ORG_14 = #{org14,jdbcType=INTEGER},
      DEF_ID = #{defId,jdbcType=INTEGER},
      ORGANIZATION_ID = #{organizationId,jdbcType=INTEGER},
      ORGANIZATION_PATH = #{organizationPath,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap extends="BaseResultMap" id="BaseResultMapDto" type="com.myfun.repository.erpdb.dto.ErpFunDealDto">
    <result column="TRANSFER_DEAL_PROFIT" jdbcType="NUMERIC" property="transferDealProfit" />
    <result column="TRANSFER_TOTAL_PROFIT" jdbcType="NUMERIC" property="transferTotalProfit" />
    <result column="SECONDHAND_DEAL_PROFIT" jdbcType="NUMERIC" property="secondhandDealProfit" />
    <result column="SECONDHAND_TOTAL_PROFIT" jdbcType="NUMERIC" property="secondhandTotalProfit" />
    <result column="NEWHOUSE_DEAL_PROFIT" jdbcType="NUMERIC" property="newhouseDealProfit" />
    <result column="NEWHOUSE_TOTAL_PROFIT" jdbcType="NUMERIC" property="newhouseTotalProfit" />
    <result column="LEASE_DEAL_PROFITL" jdbcType="NUMERIC" property="leaseDealProfitl" />
    <result column="LEASE_TOTAL_PROFIT" jdbcType="NUMERIC" property="leaseTotalProfit" />
    <result column="FINACE_DEAL_PROFIT" jdbcType="NUMERIC" property="financeDealProfit" />
    <result column="FINANCE_TOTAL_PROFIT" jdbcType="NUMERIC" property="financeTotalProfit" />
    <result column="TOTAL_PROFIT" jdbcType="NUMERIC" property="totalProfit" />
    <result column="DEAL_TOTAL_PROFIT" jdbcType="NUMERIC" property="dealTotalProfit" />
    <result column="SECONDHAND_DEAL_COUNT" jdbcType="NUMERIC" property="secondhandDealCount" />
    <result column="NEWHOUSE_DEAL_COUNT" jdbcType="NUMERIC" property="newhouseDealCount" />
    <result column="LEASE_DEAL_COUNT" jdbcType="NUMERIC" property="leaseDealCount" />
    <result column="TOTAL_DEAL_COUNT" jdbcType="NUMERIC" property="totalDealCount" />
    <result column="TRANSFER_COUNT" jdbcType="NUMERIC" property="transferCount" />
    <result column="TARGET_PROFIT" jdbcType="NUMERIC" property="targetProfit" />
    <result column="RANGE" jdbcType="VARCHAR" property="range" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
  </resultMap>
  <insert id="insertSelectiveNewOrg" parameterType="com.myfun.repository.erpdb.po.ErpFunProfitTarget">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT MAX(ISNULL(ID,0))+1 FROM FUN_PROFIT_TARGET
    </selectKey>
    insert into FUN_PROFIT_TARGET
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="param.targetDate != null">
        TARGET_DATE,
      </if>
      <if test="param.targetProfit != null">
        TARGET_PROFIT,
      </if>
      <if test="param.areaId != null">
        AREA_ID,
      </if>
      <if test="param.regId != null">
        REG_ID,
      </if>
      <if test="param.compId != null">
        COMP_ID,
      </if>
      <if test="param.deptId != null">
        DEPT_ID,
      </if>
      <if test="param.userId != null">
        USER_ID,
      </if>
      <if test="param.profitType != null">
        PROFIT_TYPE,
      </if>
      <if test="param.templetId != null">
        TEMPLET_ID,
      </if>
      <if test="param.createTime != null">
        CREATE_TIME,
      </if>
      <if test="param.archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="param.grId != null">
        GR_ID,
      </if>
      <if test="param.defId != null">
        DEF_ID,
      </if>
      <if test="param.organizationPath != null">
        ORGANIZATION_PATH,
      </if>
      <if test="param.organizationId != null">
        ORGANIZATION_ID,
      </if>
      <if test="dbFieldPath != null and dbFieldPath != '' and orgIds != null and orgIds != ''">
        ${dbFieldPath},
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{param.id,jdbcType=INTEGER},
      <if test="param.targetDate != null">
        #{param.targetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="param.targetProfit != null">
        #{param.targetProfit,jdbcType=NUMERIC},
      </if>
      <if test="param.areaId != null">
        #{param.areaId,jdbcType=INTEGER},
      </if>
      <if test="param.regId != null">
        #{param.regId,jdbcType=INTEGER},
      </if>
      <if test="param.compId != null">
        #{param.compId,jdbcType=INTEGER},
      </if>
      <if test="param.deptId != null">
        #{param.deptId,jdbcType=INTEGER},
      </if>
      <if test="param.userId != null">
        #{param.userId,jdbcType=INTEGER},
      </if>
      <if test="param.profitType != null">
        #{param.profitType,jdbcType=TINYINT},
      </if>
      <if test="param.templetId != null">
        #{param.templetId,jdbcType=INTEGER},
      </if>
      <if test="param.createTime != null">
        #{param.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="param.archiveId != null">
        #{param.archiveId,jdbcType=INTEGER},
      </if>
      <if test="param.grId != null">
        #{param.grId,jdbcType=INTEGER},
      </if>
      <if test="param.defId != null">
        #{param.defId,jdbcType=INTEGER},
      </if>
      <if test="param.organizationPath != null">
        #{param.organizationPath,jdbcType=VARCHAR},
      </if>
      <if test="param.organizationId != null">
        #{param.organizationId,jdbcType=INTEGER},
      </if>
      <if test="dbFieldPath != null and dbFieldPath != '' and orgIds != null and orgIds != ''">
        #{orgIds},
      </if>
    </trim>
  </insert>
  <select id="getFunProfitReportTargetCount" resultType="java.util.Map">
  	SELECT
	${param.queryStr},
	SUM (TARGET_PROFIT) targetProfit
	FROM
	FUN_PROFIT_TARGET
	WHERE
	COMP_ID = #{param.compId}
	<if test="param.searchRange != null and 'AREA'== param.searchRange">
		AND AREA_ID = #{param.searchRangeId}
	</if>
	<if test="param.searchRange != null and 'REG'== param.searchRange">
		AND REG_ID = #{param.searchRangeId}
	</if>
	<if test="param.searchRange != null and 'DEPT'== param.searchRange">
		AND DEPT_ID = #{param.searchRangeId}
	</if>
	<if test="param.searchRange != null and 'GROUP'== param.searchRange">
		AND GR_ID = #{param.searchRangeId}
	</if>
	<if test="param.searchRange != null and 'USER'== param.searchRange">
		AND USER_ID = #{param.searchRangeId}
	</if>
	<if test="param.startTime != null and '' != param.startTime">
		AND TARGET_DATE &gt;= #{param.startTime} 
	</if>
	<if test="param.endTime != null and '' != param.endTime">
		AND TARGET_DATE &lt;= #{param.endTime} 
	</if>
	AND PROFIT_TYPE = #{target}
	GROUP BY
		${param.groupStr}
  </select>

  <resultMap extends="BaseResultMap" id="extBaseResultMap" type="com.myfun.repository.erpdb.dto.ErpFunProfitTargetDto">

    <result column="RANGE_ID" jdbcType="INTEGER" property="rangeId" />
    <result column="RANGE_TYPE" jdbcType="INTEGER" property="rangeType" />
  </resultMap>
  <select id="getProfitTargetList" resultMap="extBaseResultMap">
      SELECT
          <choose>
            <when test="groupRange == 5">GR_ID</when>
            <when test="groupRange == 6">USER_ID</when>
          </choose> as RANGE_ID, sum(TARGET_PROFIT) TARGET_PROFIT, #{groupRange} RANGE_TYPE
      FROM FUN_PROFIT_TARGET
      WHERE COMP_ID=#{compId} AND
      <choose>
        <when test="groupRange == 5">PROFIT_TYPE = 0 and GR_ID</when>
        <when test="groupRange == 6">USER_ID</when>
      </choose>
      IN
      <foreach close=")" collection="manageRangIds" item="rangeId" open="(" separator=",">
        #{rangeId}
      </foreach>
      and TARGET_DATE &gt;= #{startTime}
      GROUP BY
      <choose>
        <when test="groupRange == 5">GR_ID</when>
        <when test="groupRange == 6">USER_ID</when>
      </choose>
  </select>
  
  <select id="getPersonalRank" resultType="java.util.Map">
		with t_profit as(
		select sum(a.RECEIVABLE_MONEY) as total_money,A.USER_ID ,a.COMP_ID from
		FUN_PROFIT A LEFT JOIN FUN_DEAL B ON a.deal_id = B.deal_id where
		a.COMP_ID = #{compId} and b.SIGN_DATE &gt;=#{startTime} GROUP BY A.USER_ID,a.COMP_ID
		) select total_money,USER_ID,COMP_ID,ROW_NUMBER() over(order by
		total_money DESC) as rows from t_profit where USER_ID= #{userId}
	</select>

    <select id="getProfitListByMap" resultMap="BaseResultMap">
      SELECT
      *
      FROM FUN_PROFIT_TARGET
      WHERE PROFIT_TYPE=#{param.profitType} and COMP_ID=#{param.compId}
      　<if test="param.userId != null and param.userId != '' ">
      　　   and USER_ID=#{param.userId}
      　</if>
      <if test="param.grId != null and param.grId != '' ">
        　 and GR_ID=#{param.grId}
      </if>
      <if test="param.deptId != null and param.deptId != '' ">
        　 and DEPT_ID=#{param.deptId}
      </if>
      <if test="param.regId != null and param.regId != '' ">
        　 and REG_ID=#{param.regId}
      </if>
      <if test="param.defId != null and param.defId != '' ">
        　 and DEF_ID=#{param.defId}
      </if>
      <if test="param.organizationId != null and param.organizationId != '' and param.organizationId &gt; 0">
        　 and ORGANIZATION_PATH LIKE '%:${param.organizationId}:%'
      </if>
      AND TARGET_DATE &gt;= #{param.startTime} AND TARGET_DATE &lt; #{param.endTime}
    </select>
	
	<delete id="deleteByParam">
		delete from FUN_PROFIT_TARGET
		where PROFIT_TYPE = #{profitType} and TARGET_DATE = #{profitDate} and ${keyFild} in
		<foreach close=")" collection="delKeys" item="delKey" open="(" separator=",">
			#{delKey}
		</foreach>
		<if test="ids!=null and ids.length&gt;0">
			and ID NOT IN
			<foreach close=")" collection="ids" item="id" open="(" separator=",">
				#{id}
			</foreach>
		</if>
	</delete>
	
	<select id="getProfitTargetByCondition" resultMap="BaseResultMap">
		select TARGET_PROFIT
		from FUN_PROFIT_TARGET
		where COMP_ID = #{compId} and PROFIT_TYPE = #{profitType}
		<if test="profitType==4">
			and AREA_ID = #{param.areaId}
		</if>
		<if test="profitType==3">
			and REG_ID = #{param.regId}
		</if>
		<if test="profitType==2">
			and DEPT_ID = #{param.deptId}
		</if>
		<if test="profitType==0">
			and DEPT_ID = #{param.deptId}
			and GR_ID = #{param.grId}
		</if>
		<if test="profitType==1">
			and USER_ID = #{param.userId}
		</if>
		<if test="profitType==-1">
			and ORGANIZATION_ID = #{param.userId}
		</if>
        and TARGET_DATE &gt;= #{startTime} and TARGET_DATE &lt; #{endTime}
	</select>
	
	<select id="getProfitTarget" resultMap="extBaseResultMap">
		select TARGET_PROFIT,convert(varchar(10),TARGET_DATE, 120) as TARGET_DATE
		from TARGET_PROFIT
		where PROFIT_TYPE = 1 and COMP_ID = #{compId} and TARGET_DATE &gt;= #{startDate} and TARGET_DATE &lt; #{subDate}
		and USER_ID in
		<foreach close=")" collection="userIds" item="userId" open="(" separator=",">
			#{userId}
		</foreach>
	</select>

	<select id="getTargetListMap" resultMap="BaseResultMapDto">
		select ${param.queryStr},
		SUM(TARGET_PROFIT) TARGET_PROFIT FROM FUN_PROFIT_TARGET
		WHERE COMP_ID = #{compId}
		<choose>
			<when test="param.serchRange == 'USER_ID' AND !param.isHome">
				AND ARCHIVE_ID = #{param.archiveId}
			</when>
		</choose>
		AND TARGET_DATE &gt;=#{param.startTime} AND TARGET_DATE &lt;=#{param.endTime} AND PROFIT_TYPE = #{param.profitType}
		GROUP BY ${param.queryStr}  having SUM(TARGET_PROFIT)&gt;0
	</select>
 
</mapper>