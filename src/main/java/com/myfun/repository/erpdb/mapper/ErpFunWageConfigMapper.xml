<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.erpdb.dao.ErpFunWageConfigMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.erpdb.po.ErpFunWageConfig">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="EXCHANGE_AMOUNT" jdbcType="NUMERIC" property="exchangeAmount" />
    <result column="SHOW_TYPE" jdbcType="TINYINT" property="showType" />
    <result column="PERFORMANCE_CALCULATE_TYPE" jdbcType="TINYINT" property="performanceCalculateType" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CUSTOMER_PUB_PRI_TYPE" jdbcType="TINYINT" property="customerPubPriType" />
    <result column="HOUSE_ADD" jdbcType="TINYINT" property="houseAdd" />
    <result column="HOUSE_BUILD_INFO" jdbcType="TINYINT" property="houseBuildInfo" />
    <result column="HOUSE_SOSO" jdbcType="TINYINT" property="houseSoso" />
    <result column="HOUSE_PUB_PRI" jdbcType="TINYINT" property="housePubPri" />
    <result column="HOUSE_SHARE_PRI" jdbcType="TINYINT" property="houseSharePri" />
    <result column="HOUSE_TO_EFFECTIVE" jdbcType="TINYINT" property="houseToEffective" />
    <result column="CUSTOMER_ADD" jdbcType="TINYINT" property="customerAdd" />
    <result column="CUSTOMER_PUB_PRI" jdbcType="TINYINT" property="customerPubPri" />
    <result column="CUSTOMER_SHARE_PRI" jdbcType="TINYINT" property="customerSharePri" />
    <result column="CUSTOMER_TO_EFFECTIVE" jdbcType="TINYINT" property="customerToEffective" />
    <result column="IS_DEL" jdbcType="TINYINT" property="isDel" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_UID" jdbcType="INTEGER" property="createUid" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="HOUSE_CANCEL_RESPITE" jdbcType="TINYINT" property="houseCancelRespite" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, EXCHANGE_AMOUNT, SHOW_TYPE, PERFORMANCE_CALCULATE_TYPE, COMP_ID, CUSTOMER_PUB_PRI_TYPE, 
    HOUSE_ADD, HOUSE_BUILD_INFO, HOUSE_SOSO, HOUSE_PUB_PRI, HOUSE_SHARE_PRI, HOUSE_TO_EFFECTIVE, 
    CUSTOMER_ADD, CUSTOMER_PUB_PRI, CUSTOMER_SHARE_PRI, CUSTOMER_TO_EFFECTIVE, IS_DEL, 
    UPDATE_TIME, CREATE_UID, CREATE_TIME, HOUSE_CANCEL_RESPITE
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunWageConfigExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_WAGE_CONFIG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_WAGE_CONFIG
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_WAGE_CONFIG
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunWageConfigExample">
    <!--@mbggenerated-->
    delete from FUN_WAGE_CONFIG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunWageConfig" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_WAGE_CONFIG (EXCHANGE_AMOUNT, SHOW_TYPE, PERFORMANCE_CALCULATE_TYPE, 
      COMP_ID, CUSTOMER_PUB_PRI_TYPE, HOUSE_ADD, 
      HOUSE_BUILD_INFO, HOUSE_SOSO, HOUSE_PUB_PRI, 
      HOUSE_SHARE_PRI, HOUSE_TO_EFFECTIVE, CUSTOMER_ADD, 
      CUSTOMER_PUB_PRI, CUSTOMER_SHARE_PRI, CUSTOMER_TO_EFFECTIVE, 
      IS_DEL, UPDATE_TIME, CREATE_UID, 
      CREATE_TIME, HOUSE_CANCEL_RESPITE)
    values (#{exchangeAmount,jdbcType=NUMERIC}, #{showType,jdbcType=TINYINT}, #{performanceCalculateType,jdbcType=TINYINT}, 
      #{compId,jdbcType=INTEGER}, #{customerPubPriType,jdbcType=TINYINT}, #{houseAdd,jdbcType=TINYINT}, 
      #{houseBuildInfo,jdbcType=TINYINT}, #{houseSoso,jdbcType=TINYINT}, #{housePubPri,jdbcType=TINYINT}, 
      #{houseSharePri,jdbcType=TINYINT}, #{houseToEffective,jdbcType=TINYINT}, #{customerAdd,jdbcType=TINYINT}, 
      #{customerPubPri,jdbcType=TINYINT}, #{customerSharePri,jdbcType=TINYINT}, #{customerToEffective,jdbcType=TINYINT}, 
      #{isDel,jdbcType=TINYINT}, #{updateTime,jdbcType=TIMESTAMP}, #{createUid,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{houseCancelRespite,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.erpdb.po.ErpFunWageConfig" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_WAGE_CONFIG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="exchangeAmount != null">
        EXCHANGE_AMOUNT,
      </if>
      <if test="showType != null">
        SHOW_TYPE,
      </if>
      <if test="performanceCalculateType != null">
        PERFORMANCE_CALCULATE_TYPE,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="customerPubPriType != null">
        CUSTOMER_PUB_PRI_TYPE,
      </if>
      <if test="houseAdd != null">
        HOUSE_ADD,
      </if>
      <if test="houseBuildInfo != null">
        HOUSE_BUILD_INFO,
      </if>
      <if test="houseSoso != null">
        HOUSE_SOSO,
      </if>
      <if test="housePubPri != null">
        HOUSE_PUB_PRI,
      </if>
      <if test="houseSharePri != null">
        HOUSE_SHARE_PRI,
      </if>
      <if test="houseToEffective != null">
        HOUSE_TO_EFFECTIVE,
      </if>
      <if test="customerAdd != null">
        CUSTOMER_ADD,
      </if>
      <if test="customerPubPri != null">
        CUSTOMER_PUB_PRI,
      </if>
      <if test="customerSharePri != null">
        CUSTOMER_SHARE_PRI,
      </if>
      <if test="customerToEffective != null">
        CUSTOMER_TO_EFFECTIVE,
      </if>
      <if test="isDel != null">
        IS_DEL,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="createUid != null">
        CREATE_UID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="houseCancelRespite != null">
        HOUSE_CANCEL_RESPITE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="exchangeAmount != null">
        #{exchangeAmount,jdbcType=NUMERIC},
      </if>
      <if test="showType != null">
        #{showType,jdbcType=TINYINT},
      </if>
      <if test="performanceCalculateType != null">
        #{performanceCalculateType,jdbcType=TINYINT},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="customerPubPriType != null">
        #{customerPubPriType,jdbcType=TINYINT},
      </if>
      <if test="houseAdd != null">
        #{houseAdd,jdbcType=TINYINT},
      </if>
      <if test="houseBuildInfo != null">
        #{houseBuildInfo,jdbcType=TINYINT},
      </if>
      <if test="houseSoso != null">
        #{houseSoso,jdbcType=TINYINT},
      </if>
      <if test="housePubPri != null">
        #{housePubPri,jdbcType=TINYINT},
      </if>
      <if test="houseSharePri != null">
        #{houseSharePri,jdbcType=TINYINT},
      </if>
      <if test="houseToEffective != null">
        #{houseToEffective,jdbcType=TINYINT},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=TINYINT},
      </if>
      <if test="customerPubPri != null">
        #{customerPubPri,jdbcType=TINYINT},
      </if>
      <if test="customerSharePri != null">
        #{customerSharePri,jdbcType=TINYINT},
      </if>
      <if test="customerToEffective != null">
        #{customerToEffective,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="houseCancelRespite != null">
        #{houseCancelRespite,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.erpdb.po.ErpFunWageConfigExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_WAGE_CONFIG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_WAGE_CONFIG
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.exchangeAmount != null">
        EXCHANGE_AMOUNT = #{record.exchangeAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.showType != null">
        SHOW_TYPE = #{record.showType,jdbcType=TINYINT},
      </if>
      <if test="record.performanceCalculateType != null">
        PERFORMANCE_CALCULATE_TYPE = #{record.performanceCalculateType,jdbcType=TINYINT},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.customerPubPriType != null">
        CUSTOMER_PUB_PRI_TYPE = #{record.customerPubPriType,jdbcType=TINYINT},
      </if>
      <if test="record.houseAdd != null">
        HOUSE_ADD = #{record.houseAdd,jdbcType=TINYINT},
      </if>
      <if test="record.houseBuildInfo != null">
        HOUSE_BUILD_INFO = #{record.houseBuildInfo,jdbcType=TINYINT},
      </if>
      <if test="record.houseSoso != null">
        HOUSE_SOSO = #{record.houseSoso,jdbcType=TINYINT},
      </if>
      <if test="record.housePubPri != null">
        HOUSE_PUB_PRI = #{record.housePubPri,jdbcType=TINYINT},
      </if>
      <if test="record.houseSharePri != null">
        HOUSE_SHARE_PRI = #{record.houseSharePri,jdbcType=TINYINT},
      </if>
      <if test="record.houseToEffective != null">
        HOUSE_TO_EFFECTIVE = #{record.houseToEffective,jdbcType=TINYINT},
      </if>
      <if test="record.customerAdd != null">
        CUSTOMER_ADD = #{record.customerAdd,jdbcType=TINYINT},
      </if>
      <if test="record.customerPubPri != null">
        CUSTOMER_PUB_PRI = #{record.customerPubPri,jdbcType=TINYINT},
      </if>
      <if test="record.customerSharePri != null">
        CUSTOMER_SHARE_PRI = #{record.customerSharePri,jdbcType=TINYINT},
      </if>
      <if test="record.customerToEffective != null">
        CUSTOMER_TO_EFFECTIVE = #{record.customerToEffective,jdbcType=TINYINT},
      </if>
      <if test="record.isDel != null">
        IS_DEL = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUid != null">
        CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.houseCancelRespite != null">
        HOUSE_CANCEL_RESPITE = #{record.houseCancelRespite,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_WAGE_CONFIG
    set ID = #{record.id,jdbcType=INTEGER},
      EXCHANGE_AMOUNT = #{record.exchangeAmount,jdbcType=NUMERIC},
      SHOW_TYPE = #{record.showType,jdbcType=TINYINT},
      PERFORMANCE_CALCULATE_TYPE = #{record.performanceCalculateType,jdbcType=TINYINT},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CUSTOMER_PUB_PRI_TYPE = #{record.customerPubPriType,jdbcType=TINYINT},
      HOUSE_ADD = #{record.houseAdd,jdbcType=TINYINT},
      HOUSE_BUILD_INFO = #{record.houseBuildInfo,jdbcType=TINYINT},
      HOUSE_SOSO = #{record.houseSoso,jdbcType=TINYINT},
      HOUSE_PUB_PRI = #{record.housePubPri,jdbcType=TINYINT},
      HOUSE_SHARE_PRI = #{record.houseSharePri,jdbcType=TINYINT},
      HOUSE_TO_EFFECTIVE = #{record.houseToEffective,jdbcType=TINYINT},
      CUSTOMER_ADD = #{record.customerAdd,jdbcType=TINYINT},
      CUSTOMER_PUB_PRI = #{record.customerPubPri,jdbcType=TINYINT},
      CUSTOMER_SHARE_PRI = #{record.customerSharePri,jdbcType=TINYINT},
      CUSTOMER_TO_EFFECTIVE = #{record.customerToEffective,jdbcType=TINYINT},
      IS_DEL = #{record.isDel,jdbcType=TINYINT},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      HOUSE_CANCEL_RESPITE = #{record.houseCancelRespite,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.erpdb.po.ErpFunWageConfig">
    <!--@mbggenerated-->
    update FUN_WAGE_CONFIG
    <set>
      <if test="exchangeAmount != null">
        EXCHANGE_AMOUNT = #{exchangeAmount,jdbcType=NUMERIC},
      </if>
      <if test="showType != null">
        SHOW_TYPE = #{showType,jdbcType=TINYINT},
      </if>
      <if test="performanceCalculateType != null">
        PERFORMANCE_CALCULATE_TYPE = #{performanceCalculateType,jdbcType=TINYINT},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="customerPubPriType != null">
        CUSTOMER_PUB_PRI_TYPE = #{customerPubPriType,jdbcType=TINYINT},
      </if>
      <if test="houseAdd != null">
        HOUSE_ADD = #{houseAdd,jdbcType=TINYINT},
      </if>
      <if test="houseBuildInfo != null">
        HOUSE_BUILD_INFO = #{houseBuildInfo,jdbcType=TINYINT},
      </if>
      <if test="houseSoso != null">
        HOUSE_SOSO = #{houseSoso,jdbcType=TINYINT},
      </if>
      <if test="housePubPri != null">
        HOUSE_PUB_PRI = #{housePubPri,jdbcType=TINYINT},
      </if>
      <if test="houseSharePri != null">
        HOUSE_SHARE_PRI = #{houseSharePri,jdbcType=TINYINT},
      </if>
      <if test="houseToEffective != null">
        HOUSE_TO_EFFECTIVE = #{houseToEffective,jdbcType=TINYINT},
      </if>
      <if test="customerAdd != null">
        CUSTOMER_ADD = #{customerAdd,jdbcType=TINYINT},
      </if>
      <if test="customerPubPri != null">
        CUSTOMER_PUB_PRI = #{customerPubPri,jdbcType=TINYINT},
      </if>
      <if test="customerSharePri != null">
        CUSTOMER_SHARE_PRI = #{customerSharePri,jdbcType=TINYINT},
      </if>
      <if test="customerToEffective != null">
        CUSTOMER_TO_EFFECTIVE = #{customerToEffective,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        IS_DEL = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        CREATE_UID = #{createUid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="houseCancelRespite != null">
        HOUSE_CANCEL_RESPITE = #{houseCancelRespite,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.erpdb.po.ErpFunWageConfig">
    <!--@mbggenerated-->
    update FUN_WAGE_CONFIG
    set EXCHANGE_AMOUNT = #{exchangeAmount,jdbcType=NUMERIC},
      SHOW_TYPE = #{showType,jdbcType=TINYINT},
      PERFORMANCE_CALCULATE_TYPE = #{performanceCalculateType,jdbcType=TINYINT},
      COMP_ID = #{compId,jdbcType=INTEGER},
      CUSTOMER_PUB_PRI_TYPE = #{customerPubPriType,jdbcType=TINYINT},
      HOUSE_ADD = #{houseAdd,jdbcType=TINYINT},
      HOUSE_BUILD_INFO = #{houseBuildInfo,jdbcType=TINYINT},
      HOUSE_SOSO = #{houseSoso,jdbcType=TINYINT},
      HOUSE_PUB_PRI = #{housePubPri,jdbcType=TINYINT},
      HOUSE_SHARE_PRI = #{houseSharePri,jdbcType=TINYINT},
      HOUSE_TO_EFFECTIVE = #{houseToEffective,jdbcType=TINYINT},
      CUSTOMER_ADD = #{customerAdd,jdbcType=TINYINT},
      CUSTOMER_PUB_PRI = #{customerPubPri,jdbcType=TINYINT},
      CUSTOMER_SHARE_PRI = #{customerSharePri,jdbcType=TINYINT},
      CUSTOMER_TO_EFFECTIVE = #{customerToEffective,jdbcType=TINYINT},
      IS_DEL = #{isDel,jdbcType=TINYINT},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_UID = #{createUid,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      HOUSE_CANCEL_RESPITE = #{houseCancelRespite,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getLastUpdateConfig" resultMap="BaseResultMap">
    SELECT
      TOP 1 <include refid="Base_Column_List" />
    FROM FUN_WAGE_CONFIG
    WHERE COMP_ID=#{compId} and IS_DEL = 0
    <if test="null != updateTime">
        and UPDATE_TIME &gt; #{updateTime}
    </if>
    ORDER BY UPDATE_TIME DESC
  </select>
  <select id="getCurrentCycleConfig" resultMap="BaseResultMap">
    SELECT
      TOP 1 <include refid="Base_Column_List" />
    FROM FUN_WAGE_CONFIG
    WHERE COMP_ID=#{compId} and IS_DEL = 0
    AND CREATE_TIME &gt;= #{startTime} and CREATE_TIME &lt; #{endTime}
    ORDER BY CREATE_TIME DESC
  </select>
  <select id="selectThisMonthConfig" resultMap="BaseResultMap">
    select top 1 <include refid="Base_Column_List" /> from FUN_WAGE_CONFIG where comp_id=#{compId} and IS_DEL=0 order by id DESC
  </select>
</mapper>