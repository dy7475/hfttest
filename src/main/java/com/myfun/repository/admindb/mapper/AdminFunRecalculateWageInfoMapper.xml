<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunRecalculateWageInfoMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunRecalculateWageInfo">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="ASSESSMENT_MONTH" jdbcType="VARCHAR" property="assessmentMonth" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="MANAGE_CACULATE" jdbcType="TINYINT" property="manageCaculate" />
    <result column="CUSTOMIZED_TYPE" jdbcType="INTEGER" property="customizedType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, CITY_ID, COMP_ID, USER_ID, ROLE_ID, ASSESSMENT_MONTH, CREATION_TIME, MANAGE_CACULATE, 
    CUSTOMIZED_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminFunRecalculateWageInfoExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_RECALCULATE_WAGE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_RECALCULATE_WAGE_INFO
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_RECALCULATE_WAGE_INFO
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminFunRecalculateWageInfoExample">
    <!--@mbggenerated-->
    delete from FUN_RECALCULATE_WAGE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminFunRecalculateWageInfo" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_RECALCULATE_WAGE_INFO (CITY_ID, COMP_ID, USER_ID, 
      ROLE_ID, ASSESSMENT_MONTH, CREATION_TIME, 
      MANAGE_CACULATE, CUSTOMIZED_TYPE)
    values (#{cityId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{roleId,jdbcType=VARCHAR}, #{assessmentMonth,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{manageCaculate,jdbcType=TINYINT}, #{customizedType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminFunRecalculateWageInfo" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_RECALCULATE_WAGE_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="manageCaculate != null">
        MANAGE_CACULATE,
      </if>
      <if test="customizedType != null">
        CUSTOMIZED_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="assessmentMonth != null">
        #{assessmentMonth,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="manageCaculate != null">
        #{manageCaculate,jdbcType=TINYINT},
      </if>
      <if test="customizedType != null">
        #{customizedType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminFunRecalculateWageInfoExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_RECALCULATE_WAGE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_RECALCULATE_WAGE_INFO
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.assessmentMonth != null">
        ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.manageCaculate != null">
        MANAGE_CACULATE = #{record.manageCaculate,jdbcType=TINYINT},
      </if>
      <if test="record.customizedType != null">
        CUSTOMIZED_TYPE = #{record.customizedType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_RECALCULATE_WAGE_INFO
    set ID = #{record.id,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      ASSESSMENT_MONTH = #{record.assessmentMonth,jdbcType=VARCHAR},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      MANAGE_CACULATE = #{record.manageCaculate,jdbcType=TINYINT},
      CUSTOMIZED_TYPE = #{record.customizedType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunRecalculateWageInfo">
    <!--@mbggenerated-->
    update FUN_RECALCULATE_WAGE_INFO
    <set>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="assessmentMonth != null">
        ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="manageCaculate != null">
        MANAGE_CACULATE = #{manageCaculate,jdbcType=TINYINT},
      </if>
      <if test="customizedType != null">
        CUSTOMIZED_TYPE = #{customizedType,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunRecalculateWageInfo">
    <!--@mbggenerated-->
    update FUN_RECALCULATE_WAGE_INFO
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      ROLE_ID = #{roleId,jdbcType=VARCHAR},
      ASSESSMENT_MONTH = #{assessmentMonth,jdbcType=VARCHAR},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      MANAGE_CACULATE = #{manageCaculate,jdbcType=TINYINT},
      CUSTOMIZED_TYPE = #{customizedType,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>