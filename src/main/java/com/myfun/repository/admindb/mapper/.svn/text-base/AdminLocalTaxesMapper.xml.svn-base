<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminLocalTaxesMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminLocalTaxes">
    <!--@mbggenerated-->
    <id column="TAXES_ID" jdbcType="INTEGER" property="taxesId" />
    <result column="TAXES_TYPE" jdbcType="VARCHAR" property="taxesType" />
    <result column="BUY_PROPOR" jdbcType="DOUBLE" property="buyPropor" />
    <result column="SALE_PROPOR" jdbcType="DOUBLE" property="salePropor" />
    <result column="AREA" jdbcType="VARCHAR" property="area" />
    <result column="FUN_NUM" jdbcType="INTEGER" property="funNum" />
    <result column="BEGENERAL" jdbcType="INTEGER" property="begeneral" />
    <result column="BEELEVATOR" jdbcType="INTEGER" property="beelevator" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    TAXES_ID, TAXES_TYPE, BUY_PROPOR, SALE_PROPOR, AREA, FUN_NUM, BEGENERAL, BEELEVATOR, 
    UPDATE_TIME, CREATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminLocalTaxesExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LOCAL_TAXES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from LOCAL_TAXES
    where TAXES_ID = #{taxesId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from LOCAL_TAXES
    where TAXES_ID = #{taxesId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminLocalTaxesExample">
    <!--@mbggenerated-->
    delete from LOCAL_TAXES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="taxesId" parameterType="com.myfun.repository.admindb.po.AdminLocalTaxes" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into LOCAL_TAXES (TAXES_TYPE, BUY_PROPOR, SALE_PROPOR, 
      AREA, FUN_NUM, BEGENERAL, 
      BEELEVATOR, UPDATE_TIME, CREATE_TIME
      )
    values (#{taxesType,jdbcType=VARCHAR}, #{buyPropor,jdbcType=DOUBLE}, #{salePropor,jdbcType=DOUBLE}, 
      #{area,jdbcType=VARCHAR}, #{funNum,jdbcType=INTEGER}, #{begeneral,jdbcType=INTEGER}, 
      #{beelevator,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="taxesId" parameterType="com.myfun.repository.admindb.po.AdminLocalTaxes" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into LOCAL_TAXES
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taxesType != null">
        TAXES_TYPE,
      </if>
      <if test="buyPropor != null">
        BUY_PROPOR,
      </if>
      <if test="salePropor != null">
        SALE_PROPOR,
      </if>
      <if test="area != null">
        AREA,
      </if>
      <if test="funNum != null">
        FUN_NUM,
      </if>
      <if test="begeneral != null">
        BEGENERAL,
      </if>
      <if test="beelevator != null">
        BEELEVATOR,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taxesType != null">
        #{taxesType,jdbcType=VARCHAR},
      </if>
      <if test="buyPropor != null">
        #{buyPropor,jdbcType=DOUBLE},
      </if>
      <if test="salePropor != null">
        #{salePropor,jdbcType=DOUBLE},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="funNum != null">
        #{funNum,jdbcType=INTEGER},
      </if>
      <if test="begeneral != null">
        #{begeneral,jdbcType=INTEGER},
      </if>
      <if test="beelevator != null">
        #{beelevator,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminLocalTaxesExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from LOCAL_TAXES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update LOCAL_TAXES
    <set>
      <if test="record.taxesId != null">
        TAXES_ID = #{record.taxesId,jdbcType=INTEGER},
      </if>
      <if test="record.taxesType != null">
        TAXES_TYPE = #{record.taxesType,jdbcType=VARCHAR},
      </if>
      <if test="record.buyPropor != null">
        BUY_PROPOR = #{record.buyPropor,jdbcType=DOUBLE},
      </if>
      <if test="record.salePropor != null">
        SALE_PROPOR = #{record.salePropor,jdbcType=DOUBLE},
      </if>
      <if test="record.area != null">
        AREA = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.funNum != null">
        FUN_NUM = #{record.funNum,jdbcType=INTEGER},
      </if>
      <if test="record.begeneral != null">
        BEGENERAL = #{record.begeneral,jdbcType=INTEGER},
      </if>
      <if test="record.beelevator != null">
        BEELEVATOR = #{record.beelevator,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update LOCAL_TAXES
    set TAXES_ID = #{record.taxesId,jdbcType=INTEGER},
      TAXES_TYPE = #{record.taxesType,jdbcType=VARCHAR},
      BUY_PROPOR = #{record.buyPropor,jdbcType=DOUBLE},
      SALE_PROPOR = #{record.salePropor,jdbcType=DOUBLE},
      AREA = #{record.area,jdbcType=VARCHAR},
      FUN_NUM = #{record.funNum,jdbcType=INTEGER},
      BEGENERAL = #{record.begeneral,jdbcType=INTEGER},
      BEELEVATOR = #{record.beelevator,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminLocalTaxes">
    <!--@mbggenerated-->
    update LOCAL_TAXES
    <set>
      <if test="taxesType != null">
        TAXES_TYPE = #{taxesType,jdbcType=VARCHAR},
      </if>
      <if test="buyPropor != null">
        BUY_PROPOR = #{buyPropor,jdbcType=DOUBLE},
      </if>
      <if test="salePropor != null">
        SALE_PROPOR = #{salePropor,jdbcType=DOUBLE},
      </if>
      <if test="area != null">
        AREA = #{area,jdbcType=VARCHAR},
      </if>
      <if test="funNum != null">
        FUN_NUM = #{funNum,jdbcType=INTEGER},
      </if>
      <if test="begeneral != null">
        BEGENERAL = #{begeneral,jdbcType=INTEGER},
      </if>
      <if test="beelevator != null">
        BEELEVATOR = #{beelevator,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where TAXES_ID = #{taxesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminLocalTaxes">
    <!--@mbggenerated-->
    update LOCAL_TAXES
    set TAXES_TYPE = #{taxesType,jdbcType=VARCHAR},
      BUY_PROPOR = #{buyPropor,jdbcType=DOUBLE},
      SALE_PROPOR = #{salePropor,jdbcType=DOUBLE},
      AREA = #{area,jdbcType=VARCHAR},
      FUN_NUM = #{funNum,jdbcType=INTEGER},
      BEGENERAL = #{begeneral,jdbcType=INTEGER},
      BEELEVATOR = #{beelevator,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where TAXES_ID = #{taxesId,jdbcType=INTEGER}
  </update>
	<resultMap id="extBaseResultVoMap" type="com.myfun.erpWeb.common.vo.AdminLocalTaxesVo">
		<id column="TAXES_ID" jdbcType="INTEGER" property="taxesId" />
		<result column="TAXES_TYPE" jdbcType="VARCHAR" property="taxesType" />
		<result column="BUY_PROPOR" jdbcType="DOUBLE" property="buyPropor" />
		<result column="SALE_PROPOR" jdbcType="DOUBLE" property="salePropor" />
		<result column="AREA" jdbcType="VARCHAR" property="area" />
		<result column="FUN_NUM" jdbcType="INTEGER" property="funNum" />
		<result column="BEGENERAL" jdbcType="INTEGER" property="begeneral" />
		<result column="BEELEVATOR" jdbcType="INTEGER" property="beelevator" />
		<result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
	</resultMap>
	<select id="getLocalTaxesVoList" resultMap="extBaseResultVoMap">
		select <include refid="Base_Column_List" /> from LOCAL_TAXES
		<where>
			<if test="null != updateTaxesTime and '' != updateTaxesTime">
				and UPDATE_TIME &gt;= #{updateTaxesTime}
			</if>
		</where>
	</select>
</mapper>