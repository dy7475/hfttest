<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminCrmUserMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminCrmUser">
    <!--@mbggenerated-->
    <id column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="USER_LOGINID" jdbcType="VARCHAR" property="userLoginid" />
    <result column="USER_PWD" jdbcType="VARCHAR" property="userPwd" />
    <result column="USER_SEX" jdbcType="BIT" property="userSex" />
    <result column="USER_ICCODE" jdbcType="VARCHAR" property="userIccode" />
    <result column="USER_BIRTHDAY" jdbcType="TIMESTAMP" property="userBirthday" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="GR_ID" jdbcType="INTEGER" property="grId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_MOBILE" jdbcType="VARCHAR" property="userMobile" />
    <result column="USER_FIXEDPH" jdbcType="VARCHAR" property="userFixedph" />
    <result column="USER_OFFICEPH" jdbcType="VARCHAR" property="userOfficeph" />
    <result column="USER_ADDRESS" jdbcType="VARCHAR" property="userAddress" />
    <result column="USER_EMAIL" jdbcType="VARCHAR" property="userEmail" />
    <result column="USER_QQ" jdbcType="VARCHAR" property="userQq" />
    <result column="USER_POSITION" jdbcType="VARCHAR" property="userPosition" />
    <result column="USER_JOB_DATE" jdbcType="TIMESTAMP" property="userJobDate" />
    <result column="USER_POSTCODE" jdbcType="VARCHAR" property="userPostcode" />
    <result column="USER_SCHOOL" jdbcType="VARCHAR" property="userSchool" />
    <result column="USER_FIELD" jdbcType="VARCHAR" property="userField" />
    <result column="USER_SCHLRECORD" jdbcType="VARCHAR" property="userSchlrecord" />
    <result column="USER_FOREIGN" jdbcType="VARCHAR" property="userForeign" />
    <result column="USER_POLITY" jdbcType="VARCHAR" property="userPolity" />
    <result column="USER_DESC" jdbcType="VARCHAR" property="userDesc" />
    <result column="USER_WRITEOFF" jdbcType="BIT" property="userWriteoff" />
    <result column="WRITEOFF_TIME" jdbcType="TIMESTAMP" property="writeoffTime" />
    <result column="LOGSID" jdbcType="VARCHAR" property="logsid" />
    <result column="PEW_NUM" jdbcType="VARCHAR" property="pewNum" />
    <result column="PEW_PWD" jdbcType="VARCHAR" property="pewPwd" />
    <result column="SALES_TYPE" jdbcType="TINYINT" property="salesType" />
    <result column="THE_GRAB_NUMBER" jdbcType="INTEGER" property="theGrabNumber" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    USER_ID, ARCHIVE_ID, USER_LOGINID, USER_PWD, USER_SEX, USER_ICCODE, USER_BIRTHDAY, 
    COMP_ID, DEPT_ID, GR_ID, USER_NAME, USER_MOBILE, USER_FIXEDPH, USER_OFFICEPH, USER_ADDRESS, 
    USER_EMAIL, USER_QQ, USER_POSITION, USER_JOB_DATE, USER_POSTCODE, USER_SCHOOL, USER_FIELD, 
    USER_SCHLRECORD, USER_FOREIGN, USER_POLITY, USER_DESC, USER_WRITEOFF, WRITEOFF_TIME, 
    LOGSID, PEW_NUM, PEW_PWD, SALES_TYPE, THE_GRAB_NUMBER
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from CRM_USER
    where USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from CRM_USER
    where USER_ID = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminCrmUser">
    <!--@mbggenerated-->
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT MAX(USER_ID)+1 FROM CRM_USER
    </selectKey>
    insert into CRM_USER (ARCHIVE_ID, USER_LOGINID, USER_PWD, 
      USER_SEX, USER_ICCODE, USER_BIRTHDAY, 
      COMP_ID, DEPT_ID, GR_ID, 
      USER_NAME, USER_MOBILE, USER_FIXEDPH, 
      USER_OFFICEPH, USER_ADDRESS, USER_EMAIL, 
      USER_QQ, USER_POSITION, USER_JOB_DATE, 
      USER_POSTCODE, USER_SCHOOL, USER_FIELD, 
      USER_SCHLRECORD, USER_FOREIGN, USER_POLITY, 
      USER_DESC, USER_WRITEOFF, WRITEOFF_TIME, 
      LOGSID, PEW_NUM, PEW_PWD, 
      SALES_TYPE, THE_GRAB_NUMBER)
    values (#{archiveId,jdbcType=INTEGER}, #{userLoginid,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=BIT}, #{userIccode,jdbcType=VARCHAR}, #{userBirthday,jdbcType=TIMESTAMP}, 
      #{compId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{grId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, #{userFixedph,jdbcType=VARCHAR}, 
      #{userOfficeph,jdbcType=VARCHAR}, #{userAddress,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{userQq,jdbcType=VARCHAR}, #{userPosition,jdbcType=VARCHAR}, #{userJobDate,jdbcType=TIMESTAMP}, 
      #{userPostcode,jdbcType=VARCHAR}, #{userSchool,jdbcType=VARCHAR}, #{userField,jdbcType=VARCHAR}, 
      #{userSchlrecord,jdbcType=VARCHAR}, #{userForeign,jdbcType=VARCHAR}, #{userPolity,jdbcType=VARCHAR}, 
      #{userDesc,jdbcType=VARCHAR}, #{userWriteoff,jdbcType=BIT}, #{writeoffTime,jdbcType=TIMESTAMP}, 
      #{logsid,jdbcType=VARCHAR}, #{pewNum,jdbcType=VARCHAR}, #{pewPwd,jdbcType=VARCHAR}, 
      #{salesType,jdbcType=TINYINT}, #{theGrabNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminCrmUser">
    <!--@mbggenerated-->
    <selectKey keyProperty="userId" order="BEFORE" resultType="java.lang.Integer">
      SELECT MAX(USER_ID)+1 FROM CRM_USER
    </selectKey>
    insert into CRM_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
	    <if test="userId != null ">
	    	USER_ID,
	    </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="userLoginid != null">
        USER_LOGINID,
      </if>
      <if test="userPwd != null">
        USER_PWD,
      </if>
      <if test="userSex != null">
        USER_SEX,
      </if>
      <if test="userIccode != null">
        USER_ICCODE,
      </if>
      <if test="userBirthday != null">
        USER_BIRTHDAY,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="grId != null">
        GR_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userMobile != null">
        USER_MOBILE,
      </if>
      <if test="userFixedph != null">
        USER_FIXEDPH,
      </if>
      <if test="userOfficeph != null">
        USER_OFFICEPH,
      </if>
      <if test="userAddress != null">
        USER_ADDRESS,
      </if>
      <if test="userEmail != null">
        USER_EMAIL,
      </if>
      <if test="userQq != null">
        USER_QQ,
      </if>
      <if test="userPosition != null">
        USER_POSITION,
      </if>
      <if test="userJobDate != null">
        USER_JOB_DATE,
      </if>
      <if test="userPostcode != null">
        USER_POSTCODE,
      </if>
      <if test="userSchool != null">
        USER_SCHOOL,
      </if>
      <if test="userField != null">
        USER_FIELD,
      </if>
      <if test="userSchlrecord != null">
        USER_SCHLRECORD,
      </if>
      <if test="userForeign != null">
        USER_FOREIGN,
      </if>
      <if test="userPolity != null">
        USER_POLITY,
      </if>
      <if test="userDesc != null">
        USER_DESC,
      </if>
      <if test="userWriteoff != null">
        USER_WRITEOFF,
      </if>
      <if test="writeoffTime != null">
        WRITEOFF_TIME,
      </if>
      <if test="logsid != null">
        LOGSID,
      </if>
      <if test="pewNum != null">
        PEW_NUM,
      </if>
      <if test="pewPwd != null">
        PEW_PWD,
      </if>
      <if test="salesType != null">
        SALES_TYPE,
      </if>
      <if test="theGrabNumber != null">
        THE_GRAB_NUMBER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="userLoginid != null">
        #{userLoginid,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=BIT},
      </if>
      <if test="userIccode != null">
        #{userIccode,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null">
        #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        #{grId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userFixedph != null">
        #{userFixedph,jdbcType=VARCHAR},
      </if>
      <if test="userOfficeph != null">
        #{userOfficeph,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null">
        #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userPosition != null">
        #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="userJobDate != null">
        #{userJobDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userPostcode != null">
        #{userPostcode,jdbcType=VARCHAR},
      </if>
      <if test="userSchool != null">
        #{userSchool,jdbcType=VARCHAR},
      </if>
      <if test="userField != null">
        #{userField,jdbcType=VARCHAR},
      </if>
      <if test="userSchlrecord != null">
        #{userSchlrecord,jdbcType=VARCHAR},
      </if>
      <if test="userForeign != null">
        #{userForeign,jdbcType=VARCHAR},
      </if>
      <if test="userPolity != null">
        #{userPolity,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null">
        #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="userWriteoff != null">
        #{userWriteoff,jdbcType=BIT},
      </if>
      <if test="writeoffTime != null">
        #{writeoffTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logsid != null">
        #{logsid,jdbcType=VARCHAR},
      </if>
      <if test="pewNum != null">
        #{pewNum,jdbcType=VARCHAR},
      </if>
      <if test="pewPwd != null">
        #{pewPwd,jdbcType=VARCHAR},
      </if>
      <if test="salesType != null">
        #{salesType,jdbcType=TINYINT},
      </if>
      <if test="theGrabNumber != null">
        #{theGrabNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminCrmUser">
    <!--@mbggenerated-->
    update CRM_USER
    <set>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="userLoginid != null">
        USER_LOGINID = #{userLoginid,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        USER_PWD = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        USER_SEX = #{userSex,jdbcType=BIT},
      </if>
      <if test="userIccode != null">
        USER_ICCODE = #{userIccode,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null">
        USER_BIRTHDAY = #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="grId != null">
        GR_ID = #{grId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userFixedph != null">
        USER_FIXEDPH = #{userFixedph,jdbcType=VARCHAR},
      </if>
      <if test="userOfficeph != null">
        USER_OFFICEPH = #{userOfficeph,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        USER_ADDRESS = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        USER_EMAIL = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null">
        USER_QQ = #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userPosition != null">
        USER_POSITION = #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="userJobDate != null">
        USER_JOB_DATE = #{userJobDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userPostcode != null">
        USER_POSTCODE = #{userPostcode,jdbcType=VARCHAR},
      </if>
      <if test="userSchool != null">
        USER_SCHOOL = #{userSchool,jdbcType=VARCHAR},
      </if>
      <if test="userField != null">
        USER_FIELD = #{userField,jdbcType=VARCHAR},
      </if>
      <if test="userSchlrecord != null">
        USER_SCHLRECORD = #{userSchlrecord,jdbcType=VARCHAR},
      </if>
      <if test="userForeign != null">
        USER_FOREIGN = #{userForeign,jdbcType=VARCHAR},
      </if>
      <if test="userPolity != null">
        USER_POLITY = #{userPolity,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null">
        USER_DESC = #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="userWriteoff != null">
        USER_WRITEOFF = #{userWriteoff,jdbcType=BIT},
      </if>
      <if test="writeoffTime != null">
        WRITEOFF_TIME = #{writeoffTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logsid != null">
        LOGSID = #{logsid,jdbcType=VARCHAR},
      </if>
      <if test="pewNum != null">
        PEW_NUM = #{pewNum,jdbcType=VARCHAR},
      </if>
      <if test="pewPwd != null">
        PEW_PWD = #{pewPwd,jdbcType=VARCHAR},
      </if>
      <if test="salesType != null">
        SALES_TYPE = #{salesType,jdbcType=TINYINT},
      </if>
      <if test="theGrabNumber != null">
        THE_GRAB_NUMBER = #{theGrabNumber,jdbcType=INTEGER},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminCrmUser">
    <!--@mbggenerated-->
    update CRM_USER
    set ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      USER_LOGINID = #{userLoginid,jdbcType=VARCHAR},
      USER_PWD = #{userPwd,jdbcType=VARCHAR},
      USER_SEX = #{userSex,jdbcType=BIT},
      USER_ICCODE = #{userIccode,jdbcType=VARCHAR},
      USER_BIRTHDAY = #{userBirthday,jdbcType=TIMESTAMP},
      COMP_ID = #{compId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      GR_ID = #{grId,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      USER_FIXEDPH = #{userFixedph,jdbcType=VARCHAR},
      USER_OFFICEPH = #{userOfficeph,jdbcType=VARCHAR},
      USER_ADDRESS = #{userAddress,jdbcType=VARCHAR},
      USER_EMAIL = #{userEmail,jdbcType=VARCHAR},
      USER_QQ = #{userQq,jdbcType=VARCHAR},
      USER_POSITION = #{userPosition,jdbcType=VARCHAR},
      USER_JOB_DATE = #{userJobDate,jdbcType=TIMESTAMP},
      USER_POSTCODE = #{userPostcode,jdbcType=VARCHAR},
      USER_SCHOOL = #{userSchool,jdbcType=VARCHAR},
      USER_FIELD = #{userField,jdbcType=VARCHAR},
      USER_SCHLRECORD = #{userSchlrecord,jdbcType=VARCHAR},
      USER_FOREIGN = #{userForeign,jdbcType=VARCHAR},
      USER_POLITY = #{userPolity,jdbcType=VARCHAR},
      USER_DESC = #{userDesc,jdbcType=VARCHAR},
      USER_WRITEOFF = #{userWriteoff,jdbcType=BIT},
      WRITEOFF_TIME = #{writeoffTime,jdbcType=TIMESTAMP},
      LOGSID = #{logsid,jdbcType=VARCHAR},
      PEW_NUM = #{pewNum,jdbcType=VARCHAR},
      PEW_PWD = #{pewPwd,jdbcType=VARCHAR},
      SALES_TYPE = #{salesType,jdbcType=TINYINT},
      THE_GRAB_NUMBER = #{theGrabNumber,jdbcType=INTEGER}
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
 <cache type="com.myfun.repository.support.mybatis.cache.redis.MybatisCacheRedisImpl" />
  
  <resultMap extends="BaseResultMap" id="BaseResultMapDto" type="com.myfun.repository.admindb.dto.AdminCrmUserDto">
  	<result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
  </resultMap>
  
  <resultMap id="selectDtoMap" type="com.myfun.repository.agencydb.dto.SelectDto">
  	 <result column="USER_ID" jdbcType="VARCHAR" property="value" />
  	 <result column="USER_NAME" jdbcType="VARCHAR" property="text" />
  </resultMap>
  
  <resultMap id="userRoleMap" type="com.myfun.repository.admindb.dto.UserRoleDto">
  	 <result column="USER_ID" jdbcType="INTEGER" property="userId" />
  	 <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
  	 <result column="USER_POSITION" jdbcType="VARCHAR" property="userPosition" />
  	 <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  
  <resultMap id="userOperMap" type="com.myfun.repository.admindb.dto.PrivilegesDto">
   	 <result column="OPER_ID" jdbcType="VARCHAR" property="operId" />
  	 <result column="OPER_NAME" jdbcType="VARCHAR" property="operName" />
  	 <result column="ROLE_TYPE" jdbcType="VARCHAR" property="roleType" />
  	 <result column="DIC_CN_MSG" jdbcType="VARCHAR" property="dicCnMsg" />		
  	 <result column="SUPER_OPER" jdbcType="BIT" property="superOper" />
  	 <result column="CHECKED" jdbcType="VARCHAR" property="checked" />		
  	 <result column="DISABLED" jdbcType="VARCHAR" property="disabled" />
  </resultMap>
  <!-- business -->
  <select id="getValidUserByLoginId" parameterType="java.lang.String" resultMap="BaseResultMap" useCache="true">
    select 
    <include refid="Base_Column_List" />
    from CRM_USER
    where USER_LOGINID = #{userLoginid,jdbcType=VARCHAR}
  </select>
  
  <select id="getUserByDeptId" resultMap="selectDtoMap">
  	SELECT USER_ID, USER_NAME from CRM_USER WHERE COMP_ID = #{compId} AND USER_WRITEOFF = 0 
  	<if test="deptId != null and deptId != ''">
  		AND DEPT_ID = #{deptId}
  	</if>
  	<if test="userName != '' and userName != null">
  		and USER_NAME like '%${userName}%'
  	</if>
  </select>
  <select id="getUsesByCompIdAndUserName" resultMap="selectDtoMap">
  	SELECT USER_ID, USER_NAME from CRM_USER WHERE USER_WRITEOFF = 0 
  	<if test="compId != null">
  		AND COMP_ID = #{compId}
  	</if>
  	<if test="userName != '' and userName != null">
  		and USER_NAME like '%${userName}%'
  	</if>
  </select>
  
  <select id="getCrmUsersByCompIdAndInputValue" resultMap="selectDtoMap">
  		SELECT top 15 USER_ID, USER_NAME from CRM_USER WHERE COMP_ID = #{compId} 
  		<if test="inputValue != null and inputValue != ''">
  			AND USER_NAME  like '%${inputValue}%' 
  		</if>
  		AND USER_WRITEOFF = 0 
  </select>
  
  <select id="getUsers" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CRM_USER
    where USER_WRITEOFF = 0 and GR_ID = #{grId}
  </select>
  
  <select id="getUsersByCompIdDeptIdGrid" resultMap="BaseResultMapDto">
  SELECT 
	CRM_USER.*,
	CRM_ROLE.ROLE_NAME,
	CRM_DEPT.DEPT_NAME
	FROM
		CRM_USER
	LEFT JOIN CRM_DEPT ON CRM_USER.DEPT_ID = CRM_DEPT.DEPT_ID
	LEFT JOIN CRM_ROLE ON CRM_ROLE.ROLE_ID = CRM_USER.USER_POSITION
	where CRM_USER.COMP_ID = #{compId} and USER_WRITEOFF = 0
	 
	 <if test="deptId != null">
	 	and CRM_USER.DEPT_ID = #{deptId,jdbcType=INTEGER}
	 </if>
	  <if test="grId != null">
	 	and GR_ID = #{grId,jdbcType=INTEGER}
	 </if>
	ORDER BY CRM_USER.DEPT_ID, CRM_USER.USER_ID
  </select>
  
  <select id="count" resultType="java.lang.Integer">
  select count(*) from CRM_USER
  where   COMP_ID = #{compId} and DEPT_ID = #{deptId}
  <if test="grId != null and grId != ''">
  and GR_ID = #{grId}
  </if>
  </select>
  
  <select id="countUserByMobile" resultType="java.lang.Integer">
  	select count(*) from CRM_USER where USER_MOBILE = #{userMobile} and USER_WRITEOFF = 0
  </select>
  
  <select id="getId" resultType="java.lang.Integer">
  	select max(USER_ID) from CRM_USER
  </select>
  
  <select id="getUserInfo" resultMap="BaseResultMap">
  	select top 1 COMP_ID,  USER_ID, USER_NAME from CRM_USER where 
	USER_POSITION = 'FINANCE_MANAGER' and USER_WRITEOFF = 0 
	and COMP_ID = (select COMP_ID from CRM_COMP where SUPER_COMP = 1) order by USER_ID ASC
  </select>
  
  <select id="getUsersByCompId" resultMap="BaseResultMap">
  	select USER_ID, USER_NAME from CRM_USER where comp_id = #{compId} and USER_WRITEOFF = 0
  </select>
  
  <update id="writeOff">
      update CRM_USER set USER_WRITEOFF = 1, WRITEOFF_TIME = GETDATE() where COMP_ID = #{compId}
  </update>
  
  <select id="getUsesByCompId" resultMap="BaseResultMap">
	  select <include refid="Base_Column_List" /> from CRM_USER where USER_WRITEOFF = 0
	  <if test="compId !=null">
		  and COMP_ID = #{compId} 
	  </if>
	  order by DEPT_ID, USER_ID
  </select>
  
  <select id="getUsesByOperId" resultMap="BaseResultMap">
  	select a.USER_ID,a.USER_NAME from CRM_USER a 
  	inner join CRM_USER_OPER b on a.USER_ID = b.USER_ID and a.USER_WRITEOFF=0
	where b.OPER_ID = 'AGENT_MANGE'
  </select>
  
   <select id="getFinanceManagerUses" resultMap="BaseResultMap">
  	select top 1 <include refid="Base_Column_List" /> from CRM_USER
	where USER_POSITION = 'FINANCE_MANAGER' and COMP_ID = #{compId} and USER_WRITEOFF = 0
  </select>
  
  <select id="selectByCompId" resultMap="BaseResultMap">
    select top 1
    <include refid="Base_Column_List" />
    from CRM_USER
    where COMP_ID = #{compId} and USER_POSITION = 'GENERAL_MANAGER'
  </select>
  
  <select id="selectUserByCompIdAndUserPostion" resultMap="BaseResultMap">
  	select top 1 USER_ID from CRM_USER where COMP_ID = #{superCompId} and USER_POSITION = #{userPosition} and USER_WRITEOFF = 0
  </select>
  
  <select id="getUsersByCompIdAndDeptId" parameterType="com.myfun.repository.admindb.po.AdminCrmUser" resultMap="userRoleMap">
  	select A.USER_ID,A.USER_NAME,A.USER_POSITION,B.ROLE_NAME from CRM_USER A LEFT JOIN CRM_ROLE B ON A.USER_POSITION=B.ROLE_ID
  	where (USER_POSITION !='GENERAL_MANAGER' or  USER_POSITION is null )
  	and A.USER_WRITEOFF = 0 
  	<if test="compId !=null">
  		and A.COMP_ID = #{compId,jdbcType=INTEGER}
  	</if>
  	<if test="deptId !=null">
  		and A.DEPT_ID = #{deptId,jdbcType=INTEGER}
  	</if>
  	<if test="userId !=null">
  		and A.USER_ID != #{userId,jdbcType=INTEGER}
  	</if>
  </select>
  
  <select id="getUsersForCrmSales" resultMap="BaseResultMapDto">
  	 	select <include refid="Base_Column_List" /> from CRM_USER
  	 	where COMP_ID = #{crmCompId}
  	 	and (USER_WRITEOFF = #{wrotrOff} or WRITEOFF_TIME &gt; #{timeStart})
  	 	ORDER BY DEPT_ID
  </select>
  
  <select id="getPrivilegeByRoleId" parameterType="java.lang.String" resultMap="userOperMap">
  	SELECT OPER_ID,OPER_NAME,ROLE_TYPE,CRM_DIC.DIC_CN_MSG,SUPER_OPER,'' CHECKED,'' DISABLED FROM CRM_OPER 
	LEFT JOIN CRM_DIC ON CRM_DIC.DIC_VALUE=CRM_OPER.ROLE_TYPE
	WHERE OPER_ID in( SELECT OPER_ID FROM CRM_ROLE_OPER WHERE ROLE_ID = #{userPosition,jdbcType=VARCHAR}) ORDER BY CRM_OPER.SEQ_NO
  </select>
  
  <select id="getUserListByNotNull" parameterType="com.myfun.repository.admindb.po.AdminCrmUser" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CRM_USER
     <where>
      <if test="archiveId != null">
        AND ARCHIVE_ID = #{archiveId,jdbcType=INTEGER}
      </if>
      <if test="userLoginid != null and userLoginid != ''">
        AND USER_LOGINID = #{userLoginid,jdbcType=VARCHAR}
      </if>
      <if test="userPwd != null and userPwd != ''">
        AND USER_PWD = #{userPwd,jdbcType=VARCHAR}
      </if>
      <if test="userSex != null">
        AND USER_SEX = #{userSex,jdbcType=BIT}
      </if>
      <if test="userIccode != null and userIccode != ''">
        AND USER_ICCODE = #{userIccode,jdbcType=VARCHAR}
      </if>
      <if test="userBirthday != null">
        AND USER_BIRTHDAY = #{userBirthday,jdbcType=TIMESTAMP}
      </if>
      <if test="compId != null">
        AND COMP_ID = #{compId,jdbcType=INTEGER}
      </if>
      <if test="deptId != null">
        AND DEPT_ID = #{deptId,jdbcType=INTEGER}
      </if>
      <if test="grId != null">
        AND GR_ID = #{grId,jdbcType=INTEGER}
      </if>
      <if test="userName != null and userName != ''">
        AND USER_NAME = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="userMobile != null and userMobile != ''">
        AND USER_MOBILE = #{userMobile,jdbcType=VARCHAR}
      </if>
      <if test="userFixedph != null and userFixedph != ''">
        AND USER_FIXEDPH = #{userFixedph,jdbcType=VARCHAR}
      </if>
      <if test="userOfficeph != null and userOfficeph != ''">
        AND USER_OFFICEPH = #{userOfficeph,jdbcType=VARCHAR}
      </if>
      <if test="userAddress != null and userAddress != ''">
        AND USER_ADDRESS = #{userAddress,jdbcType=VARCHAR}
      </if>
      <if test="userEmail != null and userEmail != ''">
        AND USER_EMAIL = #{userEmail,jdbcType=VARCHAR}
      </if>
      <if test="userQq != null and userQq != ''">
        AND USER_QQ = #{userQq,jdbcType=VARCHAR}
      </if>
      <if test="userPosition != null and userPosition != ''">
        AND USER_POSITION = #{userPosition,jdbcType=VARCHAR}
      </if>
      <if test="userJobDate != null">
        AND USER_JOB_DATE = #{userJobDate,jdbcType=TIMESTAMP}
      </if>
      <if test="userPostcode != null and userPostcode != ''">
        AND USER_POSTCODE = #{userPostcode,jdbcType=VARCHAR}
      </if>
      <if test="userSchool != null and userSchool != ''">
        AND USER_SCHOOL = #{userSchool,jdbcType=VARCHAR}
      </if>
      <if test="userField != null and userField != ''">
        AND USER_FIELD = #{userField,jdbcType=VARCHAR}
      </if>
      <if test="userSchlrecord != null and userSchlrecord != ''">
        AND USER_SCHLRECORD = #{userSchlrecord,jdbcType=VARCHAR}
      </if>
      <if test="userForeign != null and userForeign != ''">
        AND USER_FOREIGN = #{userForeign,jdbcType=VARCHAR}
      </if>
      <if test="userPolity != null and userPolity != ''">
        AND USER_POLITY = #{userPolity,jdbcType=VARCHAR}
      </if>
      <if test="userDesc != null and userDesc != ''">
        AND USER_DESC = #{userDesc,jdbcType=VARCHAR}
      </if>
      <if test="userWriteoff != null">
        AND USER_WRITEOFF = #{userWriteoff,jdbcType=BIT}
      </if>
      <if test="writeoffTime != null">
        AND WRITEOFF_TIME = #{writeoffTime,jdbcType=TIMESTAMP}
      </if>
      <if test="logsid != null and logsid != ''">
        AND LOGSID = #{logsid,jdbcType=VARCHAR}
      </if>
      <if test="pewNum != null and pewNum != ''">
        AND PEW_NUM = #{pewNum,jdbcType=VARCHAR}
      </if>
      <if test="pewPwd != null and pewPwd != ''">
        AND PEW_PWD = #{pewPwd,jdbcType=VARCHAR}
      </if>
      <if test="salesType != null">
        AND SALES_TYPE = #{salesType,jdbcType=TINYINT}
      </if>
      	AND USER_WRITEOFF = 0
     </where>
  </select>
  <update id="updateCrmUserByUserIds">
    update CRM_USER
    <set>
     <if test="upCrmUser.archiveId != null">
        ARCHIVE_ID = #{upCrmUser.archiveId,jdbcType=INTEGER},
      </if>
      <if test="upCrmUser.userLoginid != null and userLoginid != ''">
        USER_LOGINID = #{upCrmUser.userLoginid,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userPwd != null and userPwd != ''">
        USER_PWD = #{upCrmUser.userPwd,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userSex != null">
        USER_SEX = #{upCrmUser.userSex,jdbcType=BIT},
      </if>
      <if test="upCrmUser.userIccode != null and userIccode != ''">
        USER_ICCODE = #{upCrmUser.userIccode,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userBirthday != null">
        USER_BIRTHDAY = #{upCrmUser.userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="upCrmUser.compId != null">
        COMP_ID = #{upCrmUser.compId,jdbcType=INTEGER},
      </if>
      <if test="upCrmUser.deptId != null">
        DEPT_ID = #{upCrmUser.deptId,jdbcType=INTEGER},
      </if>
      <if test="upCrmUser.grId != null">
        GR_ID = #{upCrmUser.grId,jdbcType=INTEGER},
      </if>
      <if test="upCrmUser.userName != null and userName != ''">
        USER_NAME = #{upCrmUser.userName,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userMobile != null and userMobile != ''">
        USER_MOBILE = #{upCrmUser.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userFixedph != null and userFixedph != ''">
        USER_FIXEDPH = #{upCrmUser.userFixedph,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userOfficeph != null and userOfficeph != ''">
        USER_OFFICEPH = #{upCrmUser.userOfficeph,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userAddress != null and userAddress != ''">
        USER_ADDRESS = #{upCrmUser.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userEmail != null and userEmail != ''">
        USER_EMAIL = #{upCrmUser.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userQq != null and userQq != ''">
        USER_QQ = #{upCrmUser.userQq,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userPosition != null and userPosition != ''">
        USER_POSITION = #{upCrmUser.userPosition,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userJobDate != null">
        USER_JOB_DATE = #{upCrmUser.userJobDate,jdbcType=TIMESTAMP},
      </if>
      <if test="upCrmUser.userPostcode != null and userPostcode != ''">
        USER_POSTCODE = #{upCrmUser.userPostcode,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userSchool != null and userSchool != ''">
        USER_SCHOOL = #{upCrmUser.userSchool,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userField != null and userField != ''">
        USER_FIELD = #{upCrmUser.userField,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userSchlrecord != null and userSchlrecord != ''">
        USER_SCHLRECORD = #{upCrmUser.userSchlrecord,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userForeign != null and userForeign != ''">
        USER_FOREIGN = #{upCrmUser.userForeign,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userPolity != null and userPolity != ''">
        USER_POLITY = #{upCrmUser.userPolity,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userDesc != null and userDesc != ''">
        USER_DESC = #{upCrmUser.userDesc,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.userWriteoff != null">
        USER_WRITEOFF = #{upCrmUser.userWriteoff,jdbcType=BIT},
      </if>
      <if test="upCrmUser.writeoffTime != null">
        WRITEOFF_TIME = #{upCrmUser.writeoffTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upCrmUser.logsid != null and logsid != ''">
        LOGSID = #{upCrmUser.logsid,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.pewNum != null and pewNum != ''">
        PEW_NUM = #{upCrmUser.pewNum,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.pewPwd != null and pewPwd != ''">
        PEW_PWD = #{upCrmUser.pewPwd,jdbcType=VARCHAR},
      </if>
      <if test="upCrmUser.salesType != null">
        SALES_TYPE = #{upCrmUser.salesType,jdbcType=TINYINT},
      </if>
    </set>
     where USER_ID in
    <foreach  collection="array" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
    </foreach>  
  </update>
  
  <select id="selectAgentUserWithPriv" parameterType="com.myfun.repository.admindb.po.AdminCrmUser" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from CRM_USER
     <where>
     	<if test="writeoffTime != null">
        	AND WRITEOFF_TIME = #{writeoffTime,jdbcType=TIMESTAMP}
      	</if>
      	<if test="userPosition != null and userPosition != ''">
        	AND USER_POSITION in ${userPosition}
      	</if>
      	<if test="compId != null">
        	AND COMP_ID = #{compId,jdbcType=INTEGER}
     	</if>
     </where>
  </select>
  
  <update id="clearGroupUserIds">
  	update CRM_USER set GR_ID = null where DEPT_ID = #{deptId} AND GR_ID = #{grId}
  </update>
  <select id="getCrmUserListByIds" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from CRM_USER
    where USER_ID IN 
    <foreach collection="crmUserIds" item="userId"  open="(" close=")" separator=",">
    	#{userId}
    </foreach>
  </select>
</mapper>