<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminCrmPaymentTasksMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminCrmPaymentTasks" >
    <!--@mbggenerated-->
    <id column="PT_ID" property="ptId" jdbcType="INTEGER" />
    <result column="PT_TYPE" property="ptType" jdbcType="INTEGER" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="UA_ID" property="uaId" jdbcType="INTEGER" />
    <result column="SRV_MONTH" property="srvMonth" jdbcType="INTEGER" />
    <result column="SRV_GIFT" property="srvGift" jdbcType="INTEGER" />
    <result column="CION_GIFT" property="cionGift" jdbcType="INTEGER" />
    <result column="IS_PROMOTION" property="isPromotion" jdbcType="TINYINT" />
    <result column="TOTAL_MONEY" property="totalMoney" jdbcType="DOUBLE" />
    <result column="PT_CREATOR" property="ptCreator" jdbcType="INTEGER" />
    <result column="PT_TIME" property="ptTime" jdbcType="TIMESTAMP" />
    <result column="IS_CLEAR" property="isClear" jdbcType="TINYINT" />
    <result column="CLEAR_TIME" property="clearTime" jdbcType="TIMESTAMP" />
    <result column="PAYMENTS_DESC" property="paymentsDesc" jdbcType="VARCHAR" />
    <result column="QUAN_GIFT" property="quanGift" jdbcType="INTEGER" />
    <result column="AUTO_TASK" property="autoTask" jdbcType="BIT" />
    <result column="PAYMENT_STATUS" property="paymentStatus" jdbcType="TINYINT" />
    <result column="TARGET_IDS" property="targetIds" jdbcType="VARCHAR" />
    <result column="EXT_FIELD" property="extField" jdbcType="VARCHAR" />
    <result column="OPEN_WEINXIN_STATUS" property="openWeinxinStatus" jdbcType="TINYINT" />
    <result column="OPEN_CUST_LEVEL" property="openCustLevel" jdbcType="TINYINT" />
    <result column="PAY_SOURCE" property="paySource" jdbcType="TINYINT" />
    <result column="OTO_VR_ACTIVITY" property="otoVrActivity" jdbcType="TINYINT" />
    <result column="COMMISION_RATE" property="commisionRate" jdbcType="DOUBLE" />
    <result column="ORDER_NO" property="orderNo" jdbcType="VARCHAR" />
    <result column="PAY_MODEL" property="payModel" jdbcType="TINYINT" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="ACTIVITY_NUM" property="activityNum" jdbcType="VARCHAR" />
    <result column="ADD_VR" property="addVr" jdbcType="TINYINT" />
    <result column="VR_PRICE" property="vrPrice" jdbcType="DOUBLE" />
    <result column="DKQ_PRICE" property="dkqPrice" jdbcType="DECIMAL" />
    <result column="SERVER_ID" property="serverId" jdbcType="INTEGER" />
    <result column="REFUND_TIME" property="refundTime" jdbcType="TIMESTAMP" />
    <result column="RECOMMEND_ID" property="recommendId" jdbcType="INTEGER" />
    <result column="BALANCE_PRICE" property="balancePrice" jdbcType="DECIMAL" />
    <result column="ADD_VR_PRICE" property="addVrPrice" jdbcType="DOUBLE" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="SOURCE" property="source" jdbcType="INTEGER" />
    <result column="HB_FQ_NUM" property="hbFqNum" jdbcType="INTEGER" />
    <result column="HB_FQ_SELLER_PERCENT" property="hbFqSellerPercent" jdbcType="DECIMAL" />
    <result column="FUND_CHANNEL" property="fundChannel" jdbcType="VARCHAR" />
    <result column="RECEIVABLE" property="receivable" jdbcType="DECIMAL" />
    <result column="HB_FQ_SELLER_PRECENT_RATE" property="hbFqSellerPrecentRate" jdbcType="DECIMAL" />
    <result column="GIFT_VR_NUM" property="giftVrNum" jdbcType="INTEGER" />
    <result column="TRAIN_TICKET" property="trainTicket" jdbcType="INTEGER" />
    <result column="SOFT_PRICE" property="softPrice" jdbcType="INTEGER" />
    <result column="BIND_VR_UNIT_PRICE" property="bindVrUnitPrice" jdbcType="INTEGER" />
    <result column="BIND_WX_PRICE" property="bindWxPrice" jdbcType="INTEGER" />
    <result column="BIND_CUST_PRICE" property="bindCustPrice" jdbcType="INTEGER" />
    <result column="BIND_SMALE_PROGRAM_PRICE" property="bindSmaleProgramPrice" jdbcType="INTEGER" />
    <result column="BIND_CUST_VIP_NUM" property="bindCustVipNum" jdbcType="INTEGER" />
    <result column="BIND_OTO_NUM" property="bindOtoNum" jdbcType="INTEGER" />
    <result column="BIND_OTO_PRICE" property="bindOtoPrice" jdbcType="INTEGER" />
    <result column="SERVICE_START_TIME" property="serviceStartTime" jdbcType="TIMESTAMP" />
    <result column="SERVICE_END_TIME" property="serviceEndTime" jdbcType="TIMESTAMP" />
    <result column="SUB_PT_TYPE" property="subPtType" jdbcType="VARCHAR" />
    <result column="SHARE_PRICE" property="sharePrice" jdbcType="DECIMAL" />
    <result column="BROKER_ARCHIVE_ID" property="brokerArchiveId" jdbcType="INTEGER" />
    <result column="GIFT_WSK_NUM" property="giftWskNum" jdbcType="DOUBLE" />
    <result column="COMP_ACCOUNT_MONEY" property="compAccountMoney" jdbcType="NUMERIC" />
    <result column="COMP_UA_ID" property="compUaId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    PT_ID, PT_TYPE, DEPT_ID, ARCHIVE_ID, CITY_ID, UA_ID, SRV_MONTH, SRV_GIFT, CION_GIFT, 
    IS_PROMOTION, TOTAL_MONEY, PT_CREATOR, PT_TIME, IS_CLEAR, CLEAR_TIME, PAYMENTS_DESC, 
    QUAN_GIFT, AUTO_TASK, PAYMENT_STATUS, TARGET_IDS, EXT_FIELD, OPEN_WEINXIN_STATUS, 
    OPEN_CUST_LEVEL, PAY_SOURCE, OTO_VR_ACTIVITY, COMMISION_RATE, ORDER_NO, PAY_MODEL, 
    COMP_ID, ACTIVITY_NUM, ADD_VR, VR_PRICE, DKQ_PRICE, SERVER_ID, REFUND_TIME, RECOMMEND_ID, 
    BALANCE_PRICE, ADD_VR_PRICE, UPDATE_TIME, [SOURCE], HB_FQ_NUM, HB_FQ_SELLER_PERCENT, 
    FUND_CHANNEL, RECEIVABLE, HB_FQ_SELLER_PRECENT_RATE, GIFT_VR_NUM, TRAIN_TICKET, SOFT_PRICE, 
    BIND_VR_UNIT_PRICE, BIND_WX_PRICE, BIND_CUST_PRICE, BIND_SMALE_PROGRAM_PRICE, BIND_CUST_VIP_NUM, 
    BIND_OTO_NUM, BIND_OTO_PRICE, SERVICE_START_TIME, SERVICE_END_TIME, SUB_PT_TYPE, 
    SHARE_PRICE, BROKER_ARCHIVE_ID, GIFT_WSK_NUM, COMP_ACCOUNT_MONEY, COMP_UA_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.admindb.po.AdminCrmPaymentTasksExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CRM_PAYMENT_TASKS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from CRM_PAYMENT_TASKS
    where PT_ID = #{ptId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from CRM_PAYMENT_TASKS
    where PT_ID = #{ptId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminCrmPaymentTasksExample" >
    <!--@mbggenerated-->
    delete from CRM_PAYMENT_TASKS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminCrmPaymentTasks" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="ptId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into CRM_PAYMENT_TASKS (PT_TYPE, DEPT_ID, ARCHIVE_ID, 
      CITY_ID, UA_ID, SRV_MONTH, 
      SRV_GIFT, CION_GIFT, IS_PROMOTION, 
      TOTAL_MONEY, PT_CREATOR, PT_TIME, 
      IS_CLEAR, CLEAR_TIME, PAYMENTS_DESC, 
      QUAN_GIFT, AUTO_TASK, PAYMENT_STATUS, 
      TARGET_IDS, EXT_FIELD, OPEN_WEINXIN_STATUS, 
      OPEN_CUST_LEVEL, PAY_SOURCE, OTO_VR_ACTIVITY, 
      COMMISION_RATE, ORDER_NO, PAY_MODEL, 
      COMP_ID, ACTIVITY_NUM, ADD_VR, 
      VR_PRICE, DKQ_PRICE, SERVER_ID, 
      REFUND_TIME, RECOMMEND_ID, BALANCE_PRICE, 
      ADD_VR_PRICE, UPDATE_TIME, [SOURCE], 
      HB_FQ_NUM, HB_FQ_SELLER_PERCENT, FUND_CHANNEL, 
      RECEIVABLE, HB_FQ_SELLER_PRECENT_RATE, GIFT_VR_NUM, 
      TRAIN_TICKET, SOFT_PRICE, BIND_VR_UNIT_PRICE, 
      BIND_WX_PRICE, BIND_CUST_PRICE, BIND_SMALE_PROGRAM_PRICE, 
      BIND_CUST_VIP_NUM, BIND_OTO_NUM, BIND_OTO_PRICE, 
      SERVICE_START_TIME, SERVICE_END_TIME, SUB_PT_TYPE, 
      SHARE_PRICE, BROKER_ARCHIVE_ID, GIFT_WSK_NUM, 
      COMP_ACCOUNT_MONEY, COMP_UA_ID)
    values (#{ptType,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, 
      #{cityId,jdbcType=INTEGER}, #{uaId,jdbcType=INTEGER}, #{srvMonth,jdbcType=INTEGER}, 
      #{srvGift,jdbcType=INTEGER}, #{cionGift,jdbcType=INTEGER}, #{isPromotion,jdbcType=TINYINT}, 
      #{totalMoney,jdbcType=DOUBLE}, #{ptCreator,jdbcType=INTEGER}, #{ptTime,jdbcType=TIMESTAMP}, 
      #{isClear,jdbcType=TINYINT}, #{clearTime,jdbcType=TIMESTAMP}, #{paymentsDesc,jdbcType=VARCHAR}, 
      #{quanGift,jdbcType=INTEGER}, #{autoTask,jdbcType=BIT}, #{paymentStatus,jdbcType=TINYINT}, 
      #{targetIds,jdbcType=VARCHAR}, #{extField,jdbcType=VARCHAR}, #{openWeinxinStatus,jdbcType=TINYINT}, 
      #{openCustLevel,jdbcType=TINYINT}, #{paySource,jdbcType=TINYINT}, #{otoVrActivity,jdbcType=TINYINT}, 
      #{commisionRate,jdbcType=DOUBLE}, #{orderNo,jdbcType=VARCHAR}, #{payModel,jdbcType=TINYINT}, 
      #{compId,jdbcType=INTEGER}, #{activityNum,jdbcType=VARCHAR}, #{addVr,jdbcType=TINYINT}, 
      #{vrPrice,jdbcType=DOUBLE}, #{dkqPrice,jdbcType=DECIMAL}, #{serverId,jdbcType=INTEGER}, 
      #{refundTime,jdbcType=TIMESTAMP}, #{recommendId,jdbcType=INTEGER}, #{balancePrice,jdbcType=DECIMAL}, 
      #{addVrPrice,jdbcType=DOUBLE}, #{updateTime,jdbcType=TIMESTAMP}, #{source,jdbcType=INTEGER}, 
      #{hbFqNum,jdbcType=INTEGER}, #{hbFqSellerPercent,jdbcType=DECIMAL}, #{fundChannel,jdbcType=VARCHAR}, 
      #{receivable,jdbcType=DECIMAL}, #{hbFqSellerPrecentRate,jdbcType=DECIMAL}, #{giftVrNum,jdbcType=INTEGER}, 
      #{trainTicket,jdbcType=INTEGER}, #{softPrice,jdbcType=INTEGER}, #{bindVrUnitPrice,jdbcType=INTEGER}, 
      #{bindWxPrice,jdbcType=INTEGER}, #{bindCustPrice,jdbcType=INTEGER}, #{bindSmaleProgramPrice,jdbcType=INTEGER}, 
      #{bindCustVipNum,jdbcType=INTEGER}, #{bindOtoNum,jdbcType=INTEGER}, #{bindOtoPrice,jdbcType=INTEGER}, 
      #{serviceStartTime,jdbcType=TIMESTAMP}, #{serviceEndTime,jdbcType=TIMESTAMP}, #{subPtType,jdbcType=VARCHAR}, 
      #{sharePrice,jdbcType=DECIMAL}, #{brokerArchiveId,jdbcType=INTEGER}, #{giftWskNum,jdbcType=DOUBLE}, 
      #{compAccountMoney,jdbcType=NUMERIC}, #{compUaId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminCrmPaymentTasks" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="ptId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into CRM_PAYMENT_TASKS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ptType != null" >
        PT_TYPE,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="uaId != null" >
        UA_ID,
      </if>
      <if test="srvMonth != null" >
        SRV_MONTH,
      </if>
      <if test="srvGift != null" >
        SRV_GIFT,
      </if>
      <if test="cionGift != null" >
        CION_GIFT,
      </if>
      <if test="isPromotion != null" >
        IS_PROMOTION,
      </if>
      <if test="totalMoney != null" >
        TOTAL_MONEY,
      </if>
      <if test="ptCreator != null" >
        PT_CREATOR,
      </if>
      <if test="ptTime != null" >
        PT_TIME,
      </if>
      <if test="isClear != null" >
        IS_CLEAR,
      </if>
      <if test="clearTime != null" >
        CLEAR_TIME,
      </if>
      <if test="paymentsDesc != null" >
        PAYMENTS_DESC,
      </if>
      <if test="quanGift != null" >
        QUAN_GIFT,
      </if>
      <if test="autoTask != null" >
        AUTO_TASK,
      </if>
      <if test="paymentStatus != null" >
        PAYMENT_STATUS,
      </if>
      <if test="targetIds != null" >
        TARGET_IDS,
      </if>
      <if test="extField != null" >
        EXT_FIELD,
      </if>
      <if test="openWeinxinStatus != null" >
        OPEN_WEINXIN_STATUS,
      </if>
      <if test="openCustLevel != null" >
        OPEN_CUST_LEVEL,
      </if>
      <if test="paySource != null" >
        PAY_SOURCE,
      </if>
      <if test="otoVrActivity != null" >
        OTO_VR_ACTIVITY,
      </if>
      <if test="commisionRate != null" >
        COMMISION_RATE,
      </if>
      <if test="orderNo != null" >
        ORDER_NO,
      </if>
      <if test="payModel != null" >
        PAY_MODEL,
      </if>
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="activityNum != null" >
        ACTIVITY_NUM,
      </if>
      <if test="addVr != null" >
        ADD_VR,
      </if>
      <if test="vrPrice != null" >
        VR_PRICE,
      </if>
      <if test="dkqPrice != null" >
        DKQ_PRICE,
      </if>
      <if test="serverId != null" >
        SERVER_ID,
      </if>
      <if test="refundTime != null" >
        REFUND_TIME,
      </if>
      <if test="recommendId != null" >
        RECOMMEND_ID,
      </if>
      <if test="balancePrice != null" >
        BALANCE_PRICE,
      </if>
      <if test="addVrPrice != null" >
        ADD_VR_PRICE,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="source != null" >
        [SOURCE],
      </if>
      <if test="hbFqNum != null" >
        HB_FQ_NUM,
      </if>
      <if test="hbFqSellerPercent != null" >
        HB_FQ_SELLER_PERCENT,
      </if>
      <if test="fundChannel != null" >
        FUND_CHANNEL,
      </if>
      <if test="receivable != null" >
        RECEIVABLE,
      </if>
      <if test="hbFqSellerPrecentRate != null" >
        HB_FQ_SELLER_PRECENT_RATE,
      </if>
      <if test="giftVrNum != null" >
        GIFT_VR_NUM,
      </if>
      <if test="trainTicket != null" >
        TRAIN_TICKET,
      </if>
      <if test="softPrice != null" >
        SOFT_PRICE,
      </if>
      <if test="bindVrUnitPrice != null" >
        BIND_VR_UNIT_PRICE,
      </if>
      <if test="bindWxPrice != null" >
        BIND_WX_PRICE,
      </if>
      <if test="bindCustPrice != null" >
        BIND_CUST_PRICE,
      </if>
      <if test="bindSmaleProgramPrice != null" >
        BIND_SMALE_PROGRAM_PRICE,
      </if>
      <if test="bindCustVipNum != null" >
        BIND_CUST_VIP_NUM,
      </if>
      <if test="bindOtoNum != null" >
        BIND_OTO_NUM,
      </if>
      <if test="bindOtoPrice != null" >
        BIND_OTO_PRICE,
      </if>
      <if test="serviceStartTime != null" >
        SERVICE_START_TIME,
      </if>
      <if test="serviceEndTime != null" >
        SERVICE_END_TIME,
      </if>
      <if test="subPtType != null" >
        SUB_PT_TYPE,
      </if>
      <if test="sharePrice != null" >
        SHARE_PRICE,
      </if>
      <if test="brokerArchiveId != null" >
        BROKER_ARCHIVE_ID,
      </if>
      <if test="giftWskNum != null" >
        GIFT_WSK_NUM,
      </if>
      <if test="compAccountMoney != null" >
        COMP_ACCOUNT_MONEY,
      </if>
      <if test="compUaId != null" >
        COMP_UA_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ptType != null" >
        #{ptType,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="uaId != null" >
        #{uaId,jdbcType=INTEGER},
      </if>
      <if test="srvMonth != null" >
        #{srvMonth,jdbcType=INTEGER},
      </if>
      <if test="srvGift != null" >
        #{srvGift,jdbcType=INTEGER},
      </if>
      <if test="cionGift != null" >
        #{cionGift,jdbcType=INTEGER},
      </if>
      <if test="isPromotion != null" >
        #{isPromotion,jdbcType=TINYINT},
      </if>
      <if test="totalMoney != null" >
        #{totalMoney,jdbcType=DOUBLE},
      </if>
      <if test="ptCreator != null" >
        #{ptCreator,jdbcType=INTEGER},
      </if>
      <if test="ptTime != null" >
        #{ptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isClear != null" >
        #{isClear,jdbcType=TINYINT},
      </if>
      <if test="clearTime != null" >
        #{clearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentsDesc != null" >
        #{paymentsDesc,jdbcType=VARCHAR},
      </if>
      <if test="quanGift != null" >
        #{quanGift,jdbcType=INTEGER},
      </if>
      <if test="autoTask != null" >
        #{autoTask,jdbcType=BIT},
      </if>
      <if test="paymentStatus != null" >
        #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="targetIds != null" >
        #{targetIds,jdbcType=VARCHAR},
      </if>
      <if test="extField != null" >
        #{extField,jdbcType=VARCHAR},
      </if>
      <if test="openWeinxinStatus != null" >
        #{openWeinxinStatus,jdbcType=TINYINT},
      </if>
      <if test="openCustLevel != null" >
        #{openCustLevel,jdbcType=TINYINT},
      </if>
      <if test="paySource != null" >
        #{paySource,jdbcType=TINYINT},
      </if>
      <if test="otoVrActivity != null" >
        #{otoVrActivity,jdbcType=TINYINT},
      </if>
      <if test="commisionRate != null" >
        #{commisionRate,jdbcType=DOUBLE},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="payModel != null" >
        #{payModel,jdbcType=TINYINT},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="activityNum != null" >
        #{activityNum,jdbcType=VARCHAR},
      </if>
      <if test="addVr != null" >
        #{addVr,jdbcType=TINYINT},
      </if>
      <if test="vrPrice != null" >
        #{vrPrice,jdbcType=DOUBLE},
      </if>
      <if test="dkqPrice != null" >
        #{dkqPrice,jdbcType=DECIMAL},
      </if>
      <if test="serverId != null" >
        #{serverId,jdbcType=INTEGER},
      </if>
      <if test="refundTime != null" >
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recommendId != null" >
        #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="balancePrice != null" >
        #{balancePrice,jdbcType=DECIMAL},
      </if>
      <if test="addVrPrice != null" >
        #{addVrPrice,jdbcType=DOUBLE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
      <if test="hbFqNum != null" >
        #{hbFqNum,jdbcType=INTEGER},
      </if>
      <if test="hbFqSellerPercent != null" >
        #{hbFqSellerPercent,jdbcType=DECIMAL},
      </if>
      <if test="fundChannel != null" >
        #{fundChannel,jdbcType=VARCHAR},
      </if>
      <if test="receivable != null" >
        #{receivable,jdbcType=DECIMAL},
      </if>
      <if test="hbFqSellerPrecentRate != null" >
        #{hbFqSellerPrecentRate,jdbcType=DECIMAL},
      </if>
      <if test="giftVrNum != null" >
        #{giftVrNum,jdbcType=INTEGER},
      </if>
      <if test="trainTicket != null" >
        #{trainTicket,jdbcType=INTEGER},
      </if>
      <if test="softPrice != null" >
        #{softPrice,jdbcType=INTEGER},
      </if>
      <if test="bindVrUnitPrice != null" >
        #{bindVrUnitPrice,jdbcType=INTEGER},
      </if>
      <if test="bindWxPrice != null" >
        #{bindWxPrice,jdbcType=INTEGER},
      </if>
      <if test="bindCustPrice != null" >
        #{bindCustPrice,jdbcType=INTEGER},
      </if>
      <if test="bindSmaleProgramPrice != null" >
        #{bindSmaleProgramPrice,jdbcType=INTEGER},
      </if>
      <if test="bindCustVipNum != null" >
        #{bindCustVipNum,jdbcType=INTEGER},
      </if>
      <if test="bindOtoNum != null" >
        #{bindOtoNum,jdbcType=INTEGER},
      </if>
      <if test="bindOtoPrice != null" >
        #{bindOtoPrice,jdbcType=INTEGER},
      </if>
      <if test="serviceStartTime != null" >
        #{serviceStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceEndTime != null" >
        #{serviceEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subPtType != null" >
        #{subPtType,jdbcType=VARCHAR},
      </if>
      <if test="sharePrice != null" >
        #{sharePrice,jdbcType=DECIMAL},
      </if>
      <if test="brokerArchiveId != null" >
        #{brokerArchiveId,jdbcType=INTEGER},
      </if>
      <if test="giftWskNum != null" >
        #{giftWskNum,jdbcType=DOUBLE},
      </if>
      <if test="compAccountMoney != null" >
        #{compAccountMoney,jdbcType=NUMERIC},
      </if>
      <if test="compUaId != null" >
        #{compUaId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminCrmPaymentTasksExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from CRM_PAYMENT_TASKS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update CRM_PAYMENT_TASKS
    <set >
      <if test="record.ptId != null" >
        PT_ID = #{record.ptId,jdbcType=INTEGER},
      </if>
      <if test="record.ptType != null" >
        PT_TYPE = #{record.ptType,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null" >
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.uaId != null" >
        UA_ID = #{record.uaId,jdbcType=INTEGER},
      </if>
      <if test="record.srvMonth != null" >
        SRV_MONTH = #{record.srvMonth,jdbcType=INTEGER},
      </if>
      <if test="record.srvGift != null" >
        SRV_GIFT = #{record.srvGift,jdbcType=INTEGER},
      </if>
      <if test="record.cionGift != null" >
        CION_GIFT = #{record.cionGift,jdbcType=INTEGER},
      </if>
      <if test="record.isPromotion != null" >
        IS_PROMOTION = #{record.isPromotion,jdbcType=TINYINT},
      </if>
      <if test="record.totalMoney != null" >
        TOTAL_MONEY = #{record.totalMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.ptCreator != null" >
        PT_CREATOR = #{record.ptCreator,jdbcType=INTEGER},
      </if>
      <if test="record.ptTime != null" >
        PT_TIME = #{record.ptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isClear != null" >
        IS_CLEAR = #{record.isClear,jdbcType=TINYINT},
      </if>
      <if test="record.clearTime != null" >
        CLEAR_TIME = #{record.clearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentsDesc != null" >
        PAYMENTS_DESC = #{record.paymentsDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.quanGift != null" >
        QUAN_GIFT = #{record.quanGift,jdbcType=INTEGER},
      </if>
      <if test="record.autoTask != null" >
        AUTO_TASK = #{record.autoTask,jdbcType=BIT},
      </if>
      <if test="record.paymentStatus != null" >
        PAYMENT_STATUS = #{record.paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.targetIds != null" >
        TARGET_IDS = #{record.targetIds,jdbcType=VARCHAR},
      </if>
      <if test="record.extField != null" >
        EXT_FIELD = #{record.extField,jdbcType=VARCHAR},
      </if>
      <if test="record.openWeinxinStatus != null" >
        OPEN_WEINXIN_STATUS = #{record.openWeinxinStatus,jdbcType=TINYINT},
      </if>
      <if test="record.openCustLevel != null" >
        OPEN_CUST_LEVEL = #{record.openCustLevel,jdbcType=TINYINT},
      </if>
      <if test="record.paySource != null" >
        PAY_SOURCE = #{record.paySource,jdbcType=TINYINT},
      </if>
      <if test="record.otoVrActivity != null" >
        OTO_VR_ACTIVITY = #{record.otoVrActivity,jdbcType=TINYINT},
      </if>
      <if test="record.commisionRate != null" >
        COMMISION_RATE = #{record.commisionRate,jdbcType=DOUBLE},
      </if>
      <if test="record.orderNo != null" >
        ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payModel != null" >
        PAY_MODEL = #{record.payModel,jdbcType=TINYINT},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.activityNum != null" >
        ACTIVITY_NUM = #{record.activityNum,jdbcType=VARCHAR},
      </if>
      <if test="record.addVr != null" >
        ADD_VR = #{record.addVr,jdbcType=TINYINT},
      </if>
      <if test="record.vrPrice != null" >
        VR_PRICE = #{record.vrPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.dkqPrice != null" >
        DKQ_PRICE = #{record.dkqPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.serverId != null" >
        SERVER_ID = #{record.serverId,jdbcType=INTEGER},
      </if>
      <if test="record.refundTime != null" >
        REFUND_TIME = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recommendId != null" >
        RECOMMEND_ID = #{record.recommendId,jdbcType=INTEGER},
      </if>
      <if test="record.balancePrice != null" >
        BALANCE_PRICE = #{record.balancePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.addVrPrice != null" >
        ADD_VR_PRICE = #{record.addVrPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.source != null" >
        [SOURCE] = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.hbFqNum != null" >
        HB_FQ_NUM = #{record.hbFqNum,jdbcType=INTEGER},
      </if>
      <if test="record.hbFqSellerPercent != null" >
        HB_FQ_SELLER_PERCENT = #{record.hbFqSellerPercent,jdbcType=DECIMAL},
      </if>
      <if test="record.fundChannel != null" >
        FUND_CHANNEL = #{record.fundChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.receivable != null" >
        RECEIVABLE = #{record.receivable,jdbcType=DECIMAL},
      </if>
      <if test="record.hbFqSellerPrecentRate != null" >
        HB_FQ_SELLER_PRECENT_RATE = #{record.hbFqSellerPrecentRate,jdbcType=DECIMAL},
      </if>
      <if test="record.giftVrNum != null" >
        GIFT_VR_NUM = #{record.giftVrNum,jdbcType=INTEGER},
      </if>
      <if test="record.trainTicket != null" >
        TRAIN_TICKET = #{record.trainTicket,jdbcType=INTEGER},
      </if>
      <if test="record.softPrice != null" >
        SOFT_PRICE = #{record.softPrice,jdbcType=INTEGER},
      </if>
      <if test="record.bindVrUnitPrice != null" >
        BIND_VR_UNIT_PRICE = #{record.bindVrUnitPrice,jdbcType=INTEGER},
      </if>
      <if test="record.bindWxPrice != null" >
        BIND_WX_PRICE = #{record.bindWxPrice,jdbcType=INTEGER},
      </if>
      <if test="record.bindCustPrice != null" >
        BIND_CUST_PRICE = #{record.bindCustPrice,jdbcType=INTEGER},
      </if>
      <if test="record.bindSmaleProgramPrice != null" >
        BIND_SMALE_PROGRAM_PRICE = #{record.bindSmaleProgramPrice,jdbcType=INTEGER},
      </if>
      <if test="record.bindCustVipNum != null" >
        BIND_CUST_VIP_NUM = #{record.bindCustVipNum,jdbcType=INTEGER},
      </if>
      <if test="record.bindOtoNum != null" >
        BIND_OTO_NUM = #{record.bindOtoNum,jdbcType=INTEGER},
      </if>
      <if test="record.bindOtoPrice != null" >
        BIND_OTO_PRICE = #{record.bindOtoPrice,jdbcType=INTEGER},
      </if>
      <if test="record.serviceStartTime != null" >
        SERVICE_START_TIME = #{record.serviceStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serviceEndTime != null" >
        SERVICE_END_TIME = #{record.serviceEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.subPtType != null" >
        SUB_PT_TYPE = #{record.subPtType,jdbcType=VARCHAR},
      </if>
      <if test="record.sharePrice != null" >
        SHARE_PRICE = #{record.sharePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.brokerArchiveId != null" >
        BROKER_ARCHIVE_ID = #{record.brokerArchiveId,jdbcType=INTEGER},
      </if>
      <if test="record.giftWskNum != null" >
        GIFT_WSK_NUM = #{record.giftWskNum,jdbcType=DOUBLE},
      </if>
      <if test="record.compAccountMoney != null" >
        COMP_ACCOUNT_MONEY = #{record.compAccountMoney,jdbcType=NUMERIC},
      </if>
      <if test="record.compUaId != null" >
        COMP_UA_ID = #{record.compUaId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update CRM_PAYMENT_TASKS
    set PT_ID = #{record.ptId,jdbcType=INTEGER},
      PT_TYPE = #{record.ptType,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      UA_ID = #{record.uaId,jdbcType=INTEGER},
      SRV_MONTH = #{record.srvMonth,jdbcType=INTEGER},
      SRV_GIFT = #{record.srvGift,jdbcType=INTEGER},
      CION_GIFT = #{record.cionGift,jdbcType=INTEGER},
      IS_PROMOTION = #{record.isPromotion,jdbcType=TINYINT},
      TOTAL_MONEY = #{record.totalMoney,jdbcType=DOUBLE},
      PT_CREATOR = #{record.ptCreator,jdbcType=INTEGER},
      PT_TIME = #{record.ptTime,jdbcType=TIMESTAMP},
      IS_CLEAR = #{record.isClear,jdbcType=TINYINT},
      CLEAR_TIME = #{record.clearTime,jdbcType=TIMESTAMP},
      PAYMENTS_DESC = #{record.paymentsDesc,jdbcType=VARCHAR},
      QUAN_GIFT = #{record.quanGift,jdbcType=INTEGER},
      AUTO_TASK = #{record.autoTask,jdbcType=BIT},
      PAYMENT_STATUS = #{record.paymentStatus,jdbcType=TINYINT},
      TARGET_IDS = #{record.targetIds,jdbcType=VARCHAR},
      EXT_FIELD = #{record.extField,jdbcType=VARCHAR},
      OPEN_WEINXIN_STATUS = #{record.openWeinxinStatus,jdbcType=TINYINT},
      OPEN_CUST_LEVEL = #{record.openCustLevel,jdbcType=TINYINT},
      PAY_SOURCE = #{record.paySource,jdbcType=TINYINT},
      OTO_VR_ACTIVITY = #{record.otoVrActivity,jdbcType=TINYINT},
      COMMISION_RATE = #{record.commisionRate,jdbcType=DOUBLE},
      ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      PAY_MODEL = #{record.payModel,jdbcType=TINYINT},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      ACTIVITY_NUM = #{record.activityNum,jdbcType=VARCHAR},
      ADD_VR = #{record.addVr,jdbcType=TINYINT},
      VR_PRICE = #{record.vrPrice,jdbcType=DOUBLE},
      DKQ_PRICE = #{record.dkqPrice,jdbcType=DECIMAL},
      SERVER_ID = #{record.serverId,jdbcType=INTEGER},
      REFUND_TIME = #{record.refundTime,jdbcType=TIMESTAMP},
      RECOMMEND_ID = #{record.recommendId,jdbcType=INTEGER},
      BALANCE_PRICE = #{record.balancePrice,jdbcType=DECIMAL},
      ADD_VR_PRICE = #{record.addVrPrice,jdbcType=DOUBLE},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      [SOURCE] = #{record.source,jdbcType=INTEGER},
      HB_FQ_NUM = #{record.hbFqNum,jdbcType=INTEGER},
      HB_FQ_SELLER_PERCENT = #{record.hbFqSellerPercent,jdbcType=DECIMAL},
      FUND_CHANNEL = #{record.fundChannel,jdbcType=VARCHAR},
      RECEIVABLE = #{record.receivable,jdbcType=DECIMAL},
      HB_FQ_SELLER_PRECENT_RATE = #{record.hbFqSellerPrecentRate,jdbcType=DECIMAL},
      GIFT_VR_NUM = #{record.giftVrNum,jdbcType=INTEGER},
      TRAIN_TICKET = #{record.trainTicket,jdbcType=INTEGER},
      SOFT_PRICE = #{record.softPrice,jdbcType=INTEGER},
      BIND_VR_UNIT_PRICE = #{record.bindVrUnitPrice,jdbcType=INTEGER},
      BIND_WX_PRICE = #{record.bindWxPrice,jdbcType=INTEGER},
      BIND_CUST_PRICE = #{record.bindCustPrice,jdbcType=INTEGER},
      BIND_SMALE_PROGRAM_PRICE = #{record.bindSmaleProgramPrice,jdbcType=INTEGER},
      BIND_CUST_VIP_NUM = #{record.bindCustVipNum,jdbcType=INTEGER},
      BIND_OTO_NUM = #{record.bindOtoNum,jdbcType=INTEGER},
      BIND_OTO_PRICE = #{record.bindOtoPrice,jdbcType=INTEGER},
      SERVICE_START_TIME = #{record.serviceStartTime,jdbcType=TIMESTAMP},
      SERVICE_END_TIME = #{record.serviceEndTime,jdbcType=TIMESTAMP},
      SUB_PT_TYPE = #{record.subPtType,jdbcType=VARCHAR},
      SHARE_PRICE = #{record.sharePrice,jdbcType=DECIMAL},
      BROKER_ARCHIVE_ID = #{record.brokerArchiveId,jdbcType=INTEGER},
      GIFT_WSK_NUM = #{record.giftWskNum,jdbcType=DOUBLE},
      COMP_ACCOUNT_MONEY = #{record.compAccountMoney,jdbcType=NUMERIC},
      COMP_UA_ID = #{record.compUaId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminCrmPaymentTasks" >
    <!--@mbggenerated-->
    update CRM_PAYMENT_TASKS
    <set >
      <if test="ptType != null" >
        PT_TYPE = #{ptType,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="uaId != null" >
        UA_ID = #{uaId,jdbcType=INTEGER},
      </if>
      <if test="srvMonth != null" >
        SRV_MONTH = #{srvMonth,jdbcType=INTEGER},
      </if>
      <if test="srvGift != null" >
        SRV_GIFT = #{srvGift,jdbcType=INTEGER},
      </if>
      <if test="cionGift != null" >
        CION_GIFT = #{cionGift,jdbcType=INTEGER},
      </if>
      <if test="isPromotion != null" >
        IS_PROMOTION = #{isPromotion,jdbcType=TINYINT},
      </if>
      <if test="totalMoney != null" >
        TOTAL_MONEY = #{totalMoney,jdbcType=DOUBLE},
      </if>
      <if test="ptCreator != null" >
        PT_CREATOR = #{ptCreator,jdbcType=INTEGER},
      </if>
      <if test="ptTime != null" >
        PT_TIME = #{ptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isClear != null" >
        IS_CLEAR = #{isClear,jdbcType=TINYINT},
      </if>
      <if test="clearTime != null" >
        CLEAR_TIME = #{clearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentsDesc != null" >
        PAYMENTS_DESC = #{paymentsDesc,jdbcType=VARCHAR},
      </if>
      <if test="quanGift != null" >
        QUAN_GIFT = #{quanGift,jdbcType=INTEGER},
      </if>
      <if test="autoTask != null" >
        AUTO_TASK = #{autoTask,jdbcType=BIT},
      </if>
      <if test="paymentStatus != null" >
        PAYMENT_STATUS = #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="targetIds != null" >
        TARGET_IDS = #{targetIds,jdbcType=VARCHAR},
      </if>
      <if test="extField != null" >
        EXT_FIELD = #{extField,jdbcType=VARCHAR},
      </if>
      <if test="openWeinxinStatus != null" >
        OPEN_WEINXIN_STATUS = #{openWeinxinStatus,jdbcType=TINYINT},
      </if>
      <if test="openCustLevel != null" >
        OPEN_CUST_LEVEL = #{openCustLevel,jdbcType=TINYINT},
      </if>
      <if test="paySource != null" >
        PAY_SOURCE = #{paySource,jdbcType=TINYINT},
      </if>
      <if test="otoVrActivity != null" >
        OTO_VR_ACTIVITY = #{otoVrActivity,jdbcType=TINYINT},
      </if>
      <if test="commisionRate != null" >
        COMMISION_RATE = #{commisionRate,jdbcType=DOUBLE},
      </if>
      <if test="orderNo != null" >
        ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="payModel != null" >
        PAY_MODEL = #{payModel,jdbcType=TINYINT},
      </if>
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="activityNum != null" >
        ACTIVITY_NUM = #{activityNum,jdbcType=VARCHAR},
      </if>
      <if test="addVr != null" >
        ADD_VR = #{addVr,jdbcType=TINYINT},
      </if>
      <if test="vrPrice != null" >
        VR_PRICE = #{vrPrice,jdbcType=DOUBLE},
      </if>
      <if test="dkqPrice != null" >
        DKQ_PRICE = #{dkqPrice,jdbcType=DECIMAL},
      </if>
      <if test="serverId != null" >
        SERVER_ID = #{serverId,jdbcType=INTEGER},
      </if>
      <if test="refundTime != null" >
        REFUND_TIME = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recommendId != null" >
        RECOMMEND_ID = #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="balancePrice != null" >
        BALANCE_PRICE = #{balancePrice,jdbcType=DECIMAL},
      </if>
      <if test="addVrPrice != null" >
        ADD_VR_PRICE = #{addVrPrice,jdbcType=DOUBLE},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="source != null" >
        [SOURCE] = #{source,jdbcType=INTEGER},
      </if>
      <if test="hbFqNum != null" >
        HB_FQ_NUM = #{hbFqNum,jdbcType=INTEGER},
      </if>
      <if test="hbFqSellerPercent != null" >
        HB_FQ_SELLER_PERCENT = #{hbFqSellerPercent,jdbcType=DECIMAL},
      </if>
      <if test="fundChannel != null" >
        FUND_CHANNEL = #{fundChannel,jdbcType=VARCHAR},
      </if>
      <if test="receivable != null" >
        RECEIVABLE = #{receivable,jdbcType=DECIMAL},
      </if>
      <if test="hbFqSellerPrecentRate != null" >
        HB_FQ_SELLER_PRECENT_RATE = #{hbFqSellerPrecentRate,jdbcType=DECIMAL},
      </if>
      <if test="giftVrNum != null" >
        GIFT_VR_NUM = #{giftVrNum,jdbcType=INTEGER},
      </if>
      <if test="trainTicket != null" >
        TRAIN_TICKET = #{trainTicket,jdbcType=INTEGER},
      </if>
      <if test="softPrice != null" >
        SOFT_PRICE = #{softPrice,jdbcType=INTEGER},
      </if>
      <if test="bindVrUnitPrice != null" >
        BIND_VR_UNIT_PRICE = #{bindVrUnitPrice,jdbcType=INTEGER},
      </if>
      <if test="bindWxPrice != null" >
        BIND_WX_PRICE = #{bindWxPrice,jdbcType=INTEGER},
      </if>
      <if test="bindCustPrice != null" >
        BIND_CUST_PRICE = #{bindCustPrice,jdbcType=INTEGER},
      </if>
      <if test="bindSmaleProgramPrice != null" >
        BIND_SMALE_PROGRAM_PRICE = #{bindSmaleProgramPrice,jdbcType=INTEGER},
      </if>
      <if test="bindCustVipNum != null" >
        BIND_CUST_VIP_NUM = #{bindCustVipNum,jdbcType=INTEGER},
      </if>
      <if test="bindOtoNum != null" >
        BIND_OTO_NUM = #{bindOtoNum,jdbcType=INTEGER},
      </if>
      <if test="bindOtoPrice != null" >
        BIND_OTO_PRICE = #{bindOtoPrice,jdbcType=INTEGER},
      </if>
      <if test="serviceStartTime != null" >
        SERVICE_START_TIME = #{serviceStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceEndTime != null" >
        SERVICE_END_TIME = #{serviceEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subPtType != null" >
        SUB_PT_TYPE = #{subPtType,jdbcType=VARCHAR},
      </if>
      <if test="sharePrice != null" >
        SHARE_PRICE = #{sharePrice,jdbcType=DECIMAL},
      </if>
      <if test="brokerArchiveId != null" >
        BROKER_ARCHIVE_ID = #{brokerArchiveId,jdbcType=INTEGER},
      </if>
      <if test="giftWskNum != null" >
        GIFT_WSK_NUM = #{giftWskNum,jdbcType=DOUBLE},
      </if>
      <if test="compAccountMoney != null" >
        COMP_ACCOUNT_MONEY = #{compAccountMoney,jdbcType=NUMERIC},
      </if>
      <if test="compUaId != null" >
        COMP_UA_ID = #{compUaId,jdbcType=INTEGER},
      </if>
    </set>
    where PT_ID = #{ptId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminCrmPaymentTasks" >
    <!--@mbggenerated-->
    update CRM_PAYMENT_TASKS
    set PT_TYPE = #{ptType,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      UA_ID = #{uaId,jdbcType=INTEGER},
      SRV_MONTH = #{srvMonth,jdbcType=INTEGER},
      SRV_GIFT = #{srvGift,jdbcType=INTEGER},
      CION_GIFT = #{cionGift,jdbcType=INTEGER},
      IS_PROMOTION = #{isPromotion,jdbcType=TINYINT},
      TOTAL_MONEY = #{totalMoney,jdbcType=DOUBLE},
      PT_CREATOR = #{ptCreator,jdbcType=INTEGER},
      PT_TIME = #{ptTime,jdbcType=TIMESTAMP},
      IS_CLEAR = #{isClear,jdbcType=TINYINT},
      CLEAR_TIME = #{clearTime,jdbcType=TIMESTAMP},
      PAYMENTS_DESC = #{paymentsDesc,jdbcType=VARCHAR},
      QUAN_GIFT = #{quanGift,jdbcType=INTEGER},
      AUTO_TASK = #{autoTask,jdbcType=BIT},
      PAYMENT_STATUS = #{paymentStatus,jdbcType=TINYINT},
      TARGET_IDS = #{targetIds,jdbcType=VARCHAR},
      EXT_FIELD = #{extField,jdbcType=VARCHAR},
      OPEN_WEINXIN_STATUS = #{openWeinxinStatus,jdbcType=TINYINT},
      OPEN_CUST_LEVEL = #{openCustLevel,jdbcType=TINYINT},
      PAY_SOURCE = #{paySource,jdbcType=TINYINT},
      OTO_VR_ACTIVITY = #{otoVrActivity,jdbcType=TINYINT},
      COMMISION_RATE = #{commisionRate,jdbcType=DOUBLE},
      ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      PAY_MODEL = #{payModel,jdbcType=TINYINT},
      COMP_ID = #{compId,jdbcType=INTEGER},
      ACTIVITY_NUM = #{activityNum,jdbcType=VARCHAR},
      ADD_VR = #{addVr,jdbcType=TINYINT},
      VR_PRICE = #{vrPrice,jdbcType=DOUBLE},
      DKQ_PRICE = #{dkqPrice,jdbcType=DECIMAL},
      SERVER_ID = #{serverId,jdbcType=INTEGER},
      REFUND_TIME = #{refundTime,jdbcType=TIMESTAMP},
      RECOMMEND_ID = #{recommendId,jdbcType=INTEGER},
      BALANCE_PRICE = #{balancePrice,jdbcType=DECIMAL},
      ADD_VR_PRICE = #{addVrPrice,jdbcType=DOUBLE},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      [SOURCE] = #{source,jdbcType=INTEGER},
      HB_FQ_NUM = #{hbFqNum,jdbcType=INTEGER},
      HB_FQ_SELLER_PERCENT = #{hbFqSellerPercent,jdbcType=DECIMAL},
      FUND_CHANNEL = #{fundChannel,jdbcType=VARCHAR},
      RECEIVABLE = #{receivable,jdbcType=DECIMAL},
      HB_FQ_SELLER_PRECENT_RATE = #{hbFqSellerPrecentRate,jdbcType=DECIMAL},
      GIFT_VR_NUM = #{giftVrNum,jdbcType=INTEGER},
      TRAIN_TICKET = #{trainTicket,jdbcType=INTEGER},
      SOFT_PRICE = #{softPrice,jdbcType=INTEGER},
      BIND_VR_UNIT_PRICE = #{bindVrUnitPrice,jdbcType=INTEGER},
      BIND_WX_PRICE = #{bindWxPrice,jdbcType=INTEGER},
      BIND_CUST_PRICE = #{bindCustPrice,jdbcType=INTEGER},
      BIND_SMALE_PROGRAM_PRICE = #{bindSmaleProgramPrice,jdbcType=INTEGER},
      BIND_CUST_VIP_NUM = #{bindCustVipNum,jdbcType=INTEGER},
      BIND_OTO_NUM = #{bindOtoNum,jdbcType=INTEGER},
      BIND_OTO_PRICE = #{bindOtoPrice,jdbcType=INTEGER},
      SERVICE_START_TIME = #{serviceStartTime,jdbcType=TIMESTAMP},
      SERVICE_END_TIME = #{serviceEndTime,jdbcType=TIMESTAMP},
      SUB_PT_TYPE = #{subPtType,jdbcType=VARCHAR},
      SHARE_PRICE = #{sharePrice,jdbcType=DECIMAL},
      BROKER_ARCHIVE_ID = #{brokerArchiveId,jdbcType=INTEGER},
      GIFT_WSK_NUM = #{giftWskNum,jdbcType=DOUBLE},
      COMP_ACCOUNT_MONEY = #{compAccountMoney,jdbcType=NUMERIC},
      COMP_UA_ID = #{compUaId,jdbcType=INTEGER}
    where PT_ID = #{ptId,jdbcType=INTEGER}
  </update>

	<select id="getCrmPaymentTasks" resultMap="BaseResultMap">
		SELECT TOP 1 <include refid="Base_Column_List" /> FROM dbo.CRM_PAYMENT_TASKS WHERE PT_TYPE=1 AND IS_CLEAR=0 AND DEPT_ID=#{adminDeptId} ORDER BY PT_ID DESC
	</select>
</mapper>