<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunPaidErrMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunPaidErr" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_MOBILE" property="userMobile" jdbcType="VARCHAR" />
    <result column="archive_id" property="archiveId" jdbcType="INTEGER" />
    <result column="ua_id" property="uaId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, USER_MOBILE, archive_id, ua_id, amount, creation_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_PAID_ERR
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_PAID_ERR
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunPaidErr" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_PAID_ERR (USER_MOBILE, archive_id, ua_id, 
      amount, creation_time)
    values (#{userMobile,jdbcType=VARCHAR}, #{archiveId,jdbcType=INTEGER}, #{uaId,jdbcType=INTEGER}, 
      #{amount,jdbcType=DOUBLE}, #{creationTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunPaidErr" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_PAID_ERR
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userMobile != null" >
        USER_MOBILE,
      </if>
      <if test="archiveId != null" >
        archive_id,
      </if>
      <if test="uaId != null" >
        ua_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userMobile != null" >
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="uaId != null" >
        #{uaId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunPaidErr" >
    <!--@mbggenerated-->
    update FUN_PAID_ERR
    <set >
      <if test="userMobile != null" >
        USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="archiveId != null" >
        archive_id = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="uaId != null" >
        ua_id = #{uaId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="creationTime != null" >
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunPaidErr" >
    <!--@mbggenerated-->
    update FUN_PAID_ERR
    set USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      archive_id = #{archiveId,jdbcType=INTEGER},
      ua_id = #{uaId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      creation_time = #{creationTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>