<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminPropertyWithdrawManageMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminPropertyWithdrawManage">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="COMP_NO" jdbcType="VARCHAR" property="compNo" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="DEPT_NO" jdbcType="VARCHAR" property="deptNo" />
    <result column="WITHDRAW_STATUS" jdbcType="TINYINT" property="withdrawStatus" />
    <result column="APPLY_TIME" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="WITHDRAW_TIME" jdbcType="TIMESTAMP" property="withdrawTime" />
    <result column="ARRIVAL_TIME" jdbcType="TIMESTAMP" property="arrivalTime" />
    <result column="RECEIVE_BANK_TYPE" jdbcType="INTEGER" property="receiveBankType" />
    <result column="RECEIVE_BANK_NAME" jdbcType="VARCHAR" property="receiveBankName" />
    <result column="RECEIVE_BANK_NO" jdbcType="VARCHAR" property="receiveBankNo" />
    <result column="WITHDRAW_AMOUNT" jdbcType="NUMERIC" property="withdrawAmount" />
    <result column="APPLY_USER_ID" jdbcType="INTEGER" property="applyUserId" />
    <result column="APPLY_USER_MOBILE" jdbcType="VARCHAR" property="applyUserMobile" />
    <result column="BROKERAGE_FEE" jdbcType="NUMERIC" property="brokerageFee" />
    <result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
    <result column="APPLY_USER_NAME" jdbcType="VARCHAR" property="applyUserName" />
    <result column="TOTAL_APPLY_MONEY" jdbcType="NUMERIC" property="totalApplyMoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, CITY_ID, COMP_NO, COMP_ID, CREATION_TIME, DEPT_ID, DEPT_NO, WITHDRAW_STATUS, 
    APPLY_TIME, WITHDRAW_TIME, ARRIVAL_TIME, RECEIVE_BANK_TYPE, RECEIVE_BANK_NAME, RECEIVE_BANK_NO, 
    WITHDRAW_AMOUNT, APPLY_USER_ID, APPLY_USER_MOBILE, BROKERAGE_FEE, DEPT_NAME, APPLY_USER_NAME, 
    TOTAL_APPLY_MONEY
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminPropertyWithdrawManageExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PROPERTY_WITHDRAW_MANAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from PROPERTY_WITHDRAW_MANAGE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from PROPERTY_WITHDRAW_MANAGE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminPropertyWithdrawManageExample">
    <!--@mbggenerated-->
    delete from PROPERTY_WITHDRAW_MANAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminPropertyWithdrawManage" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into PROPERTY_WITHDRAW_MANAGE (CITY_ID, COMP_NO, COMP_ID, 
      CREATION_TIME, DEPT_ID, DEPT_NO, 
      WITHDRAW_STATUS, APPLY_TIME, WITHDRAW_TIME, 
      ARRIVAL_TIME, RECEIVE_BANK_TYPE, RECEIVE_BANK_NAME, 
      RECEIVE_BANK_NO, WITHDRAW_AMOUNT, APPLY_USER_ID, 
      APPLY_USER_MOBILE, BROKERAGE_FEE, DEPT_NAME, 
      APPLY_USER_NAME, TOTAL_APPLY_MONEY)
    values (#{cityId,jdbcType=INTEGER}, #{compNo,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{deptId,jdbcType=INTEGER}, #{deptNo,jdbcType=VARCHAR}, 
      #{withdrawStatus,jdbcType=TINYINT}, #{applyTime,jdbcType=TIMESTAMP}, #{withdrawTime,jdbcType=TIMESTAMP}, 
      #{arrivalTime,jdbcType=TIMESTAMP}, #{receiveBankType,jdbcType=INTEGER}, #{receiveBankName,jdbcType=VARCHAR}, 
      #{receiveBankNo,jdbcType=VARCHAR}, #{withdrawAmount,jdbcType=NUMERIC}, #{applyUserId,jdbcType=INTEGER}, 
      #{applyUserMobile,jdbcType=VARCHAR}, #{brokerageFee,jdbcType=NUMERIC}, #{deptName,jdbcType=VARCHAR}, 
      #{applyUserName,jdbcType=VARCHAR}, #{totalApplyMoney,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminPropertyWithdrawManage" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into PROPERTY_WITHDRAW_MANAGE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="compNo != null">
        COMP_NO,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="deptNo != null">
        DEPT_NO,
      </if>
      <if test="withdrawStatus != null">
        WITHDRAW_STATUS,
      </if>
      <if test="applyTime != null">
        APPLY_TIME,
      </if>
      <if test="withdrawTime != null">
        WITHDRAW_TIME,
      </if>
      <if test="arrivalTime != null">
        ARRIVAL_TIME,
      </if>
      <if test="receiveBankType != null">
        RECEIVE_BANK_TYPE,
      </if>
      <if test="receiveBankName != null">
        RECEIVE_BANK_NAME,
      </if>
      <if test="receiveBankNo != null">
        RECEIVE_BANK_NO,
      </if>
      <if test="withdrawAmount != null">
        WITHDRAW_AMOUNT,
      </if>
      <if test="applyUserId != null">
        APPLY_USER_ID,
      </if>
      <if test="applyUserMobile != null">
        APPLY_USER_MOBILE,
      </if>
      <if test="brokerageFee != null">
        BROKERAGE_FEE,
      </if>
      <if test="deptName != null">
        DEPT_NAME,
      </if>
      <if test="applyUserName != null">
        APPLY_USER_NAME,
      </if>
      <if test="totalApplyMoney != null">
        TOTAL_APPLY_MONEY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null">
        #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null">
        #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="withdrawStatus != null">
        #{withdrawStatus,jdbcType=TINYINT},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrawTime != null">
        #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="arrivalTime != null">
        #{arrivalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveBankType != null">
        #{receiveBankType,jdbcType=INTEGER},
      </if>
      <if test="receiveBankName != null">
        #{receiveBankName,jdbcType=VARCHAR},
      </if>
      <if test="receiveBankNo != null">
        #{receiveBankNo,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAmount != null">
        #{withdrawAmount,jdbcType=NUMERIC},
      </if>
      <if test="applyUserId != null">
        #{applyUserId,jdbcType=INTEGER},
      </if>
      <if test="applyUserMobile != null">
        #{applyUserMobile,jdbcType=VARCHAR},
      </if>
      <if test="brokerageFee != null">
        #{brokerageFee,jdbcType=NUMERIC},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="applyUserName != null">
        #{applyUserName,jdbcType=VARCHAR},
      </if>
      <if test="totalApplyMoney != null">
        #{totalApplyMoney,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminPropertyWithdrawManageExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from PROPERTY_WITHDRAW_MANAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update PROPERTY_WITHDRAW_MANAGE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.compNo != null">
        COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.deptNo != null">
        DEPT_NO = #{record.deptNo,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawStatus != null">
        WITHDRAW_STATUS = #{record.withdrawStatus,jdbcType=TINYINT},
      </if>
      <if test="record.applyTime != null">
        APPLY_TIME = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.withdrawTime != null">
        WITHDRAW_TIME = #{record.withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.arrivalTime != null">
        ARRIVAL_TIME = #{record.arrivalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiveBankType != null">
        RECEIVE_BANK_TYPE = #{record.receiveBankType,jdbcType=INTEGER},
      </if>
      <if test="record.receiveBankName != null">
        RECEIVE_BANK_NAME = #{record.receiveBankName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveBankNo != null">
        RECEIVE_BANK_NO = #{record.receiveBankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawAmount != null">
        WITHDRAW_AMOUNT = #{record.withdrawAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.applyUserId != null">
        APPLY_USER_ID = #{record.applyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.applyUserMobile != null">
        APPLY_USER_MOBILE = #{record.applyUserMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerageFee != null">
        BROKERAGE_FEE = #{record.brokerageFee,jdbcType=NUMERIC},
      </if>
      <if test="record.deptName != null">
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.applyUserName != null">
        APPLY_USER_NAME = #{record.applyUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.totalApplyMoney != null">
        TOTAL_APPLY_MONEY = #{record.totalApplyMoney,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update PROPERTY_WITHDRAW_MANAGE
    set ID = #{record.id,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      DEPT_NO = #{record.deptNo,jdbcType=VARCHAR},
      WITHDRAW_STATUS = #{record.withdrawStatus,jdbcType=TINYINT},
      APPLY_TIME = #{record.applyTime,jdbcType=TIMESTAMP},
      WITHDRAW_TIME = #{record.withdrawTime,jdbcType=TIMESTAMP},
      ARRIVAL_TIME = #{record.arrivalTime,jdbcType=TIMESTAMP},
      RECEIVE_BANK_TYPE = #{record.receiveBankType,jdbcType=INTEGER},
      RECEIVE_BANK_NAME = #{record.receiveBankName,jdbcType=VARCHAR},
      RECEIVE_BANK_NO = #{record.receiveBankNo,jdbcType=VARCHAR},
      WITHDRAW_AMOUNT = #{record.withdrawAmount,jdbcType=NUMERIC},
      APPLY_USER_ID = #{record.applyUserId,jdbcType=INTEGER},
      APPLY_USER_MOBILE = #{record.applyUserMobile,jdbcType=VARCHAR},
      BROKERAGE_FEE = #{record.brokerageFee,jdbcType=NUMERIC},
      DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      APPLY_USER_NAME = #{record.applyUserName,jdbcType=VARCHAR},
      TOTAL_APPLY_MONEY = #{record.totalApplyMoney,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminPropertyWithdrawManage">
    <!--@mbggenerated-->
    update PROPERTY_WITHDRAW_MANAGE
    <set>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null">
        COMP_NO = #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null">
        DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="withdrawStatus != null">
        WITHDRAW_STATUS = #{withdrawStatus,jdbcType=TINYINT},
      </if>
      <if test="applyTime != null">
        APPLY_TIME = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrawTime != null">
        WITHDRAW_TIME = #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="arrivalTime != null">
        ARRIVAL_TIME = #{arrivalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveBankType != null">
        RECEIVE_BANK_TYPE = #{receiveBankType,jdbcType=INTEGER},
      </if>
      <if test="receiveBankName != null">
        RECEIVE_BANK_NAME = #{receiveBankName,jdbcType=VARCHAR},
      </if>
      <if test="receiveBankNo != null">
        RECEIVE_BANK_NO = #{receiveBankNo,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAmount != null">
        WITHDRAW_AMOUNT = #{withdrawAmount,jdbcType=NUMERIC},
      </if>
      <if test="applyUserId != null">
        APPLY_USER_ID = #{applyUserId,jdbcType=INTEGER},
      </if>
      <if test="applyUserMobile != null">
        APPLY_USER_MOBILE = #{applyUserMobile,jdbcType=VARCHAR},
      </if>
      <if test="brokerageFee != null">
        BROKERAGE_FEE = #{brokerageFee,jdbcType=NUMERIC},
      </if>
      <if test="deptName != null">
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="applyUserName != null">
        APPLY_USER_NAME = #{applyUserName,jdbcType=VARCHAR},
      </if>
      <if test="totalApplyMoney != null">
        TOTAL_APPLY_MONEY = #{totalApplyMoney,jdbcType=NUMERIC},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminPropertyWithdrawManage">
    <!--@mbggenerated-->
    update PROPERTY_WITHDRAW_MANAGE
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      COMP_NO = #{compNo,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      WITHDRAW_STATUS = #{withdrawStatus,jdbcType=TINYINT},
      APPLY_TIME = #{applyTime,jdbcType=TIMESTAMP},
      WITHDRAW_TIME = #{withdrawTime,jdbcType=TIMESTAMP},
      ARRIVAL_TIME = #{arrivalTime,jdbcType=TIMESTAMP},
      RECEIVE_BANK_TYPE = #{receiveBankType,jdbcType=INTEGER},
      RECEIVE_BANK_NAME = #{receiveBankName,jdbcType=VARCHAR},
      RECEIVE_BANK_NO = #{receiveBankNo,jdbcType=VARCHAR},
      WITHDRAW_AMOUNT = #{withdrawAmount,jdbcType=NUMERIC},
      APPLY_USER_ID = #{applyUserId,jdbcType=INTEGER},
      APPLY_USER_MOBILE = #{applyUserMobile,jdbcType=VARCHAR},
      BROKERAGE_FEE = #{brokerageFee,jdbcType=NUMERIC},
      DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      APPLY_USER_NAME = #{applyUserName,jdbcType=VARCHAR},
      TOTAL_APPLY_MONEY = #{totalApplyMoney,jdbcType=NUMERIC}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>