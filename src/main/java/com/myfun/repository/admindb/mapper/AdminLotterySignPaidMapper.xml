<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminLotterySignPaidMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminLotterySignPaid" >
    <!--@mbggenerated-->
    <id column="PAID_ID" property="paidId" jdbcType="INTEGER" />
    <result column="UA_ID" property="uaId" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="PAID_CATIGORY" property="paidCatigory" jdbcType="VARCHAR" />
    <result column="PAID_TYPE" property="paidType" jdbcType="VARCHAR" />
    <result column="CARDNO" property="cardno" jdbcType="VARCHAR" />
    <result column="ORDERNO" property="orderno" jdbcType="VARCHAR" />
    <result column="AMOUNT" property="amount" jdbcType="DOUBLE" />
    <result column="PADI_TIME" property="padiTime" jdbcType="TIMESTAMP" />
    <result column="DEAL_ID" property="dealId" jdbcType="INTEGER" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="OLD_TIME" property="oldTime" jdbcType="TIMESTAMP" />
    <result column="DESC" property="desc" jdbcType="VARCHAR" />
    <result column="AMOUNT_BEFORE" property="amountBefore" jdbcType="DOUBLE" />
    <result column="AMOUNT_AFTER" property="amountAfter" jdbcType="DOUBLE" />
    <result column="PAID_SOURCE" property="paidSource" jdbcType="TINYINT" />
    <result column="CRM_COMP_ID" property="crmCompId" jdbcType="INTEGER" />
    <result column="NETBANK_LOCK" property="netbankLock" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    PAID_ID, UA_ID, ARCHIVE_ID, CITY_ID, PAID_CATIGORY, PAID_TYPE, CARDNO, ORDERNO, AMOUNT, 
    PADI_TIME, DEAL_ID, STATUS, OLD_TIME, DESC, AMOUNT_BEFORE, AMOUNT_AFTER, PAID_SOURCE, 
    CRM_COMP_ID, NETBANK_LOCK
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from LOTTERY_SIGN_PAID
    where PAID_ID = #{paidId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from LOTTERY_SIGN_PAID
    where PAID_ID = #{paidId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminLotterySignPaid" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="paidId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into LOTTERY_SIGN_PAID (UA_ID, ARCHIVE_ID, CITY_ID, 
      PAID_CATIGORY, PAID_TYPE, CARDNO, 
      ORDERNO, AMOUNT, PADI_TIME, 
      DEAL_ID, STATUS, OLD_TIME, 
      DESC, AMOUNT_BEFORE, AMOUNT_AFTER, 
      PAID_SOURCE, CRM_COMP_ID, NETBANK_LOCK
      )
    values (#{uaId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, 
      #{paidCatigory,jdbcType=VARCHAR}, #{paidType,jdbcType=VARCHAR}, #{cardno,jdbcType=VARCHAR}, 
      #{orderno,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, #{padiTime,jdbcType=TIMESTAMP}, 
      #{dealId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{oldTime,jdbcType=TIMESTAMP}, 
      #{desc,jdbcType=VARCHAR}, #{amountBefore,jdbcType=DOUBLE}, #{amountAfter,jdbcType=DOUBLE}, 
      #{paidSource,jdbcType=TINYINT}, #{crmCompId,jdbcType=INTEGER}, #{netbankLock,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminLotterySignPaid" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="paidId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into LOTTERY_SIGN_PAID
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uaId != null" >
        UA_ID,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="paidCatigory != null" >
        PAID_CATIGORY,
      </if>
      <if test="paidType != null" >
        PAID_TYPE,
      </if>
      <if test="cardno != null" >
        CARDNO,
      </if>
      <if test="orderno != null" >
        ORDERNO,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="padiTime != null" >
        PADI_TIME,
      </if>
      <if test="dealId != null" >
        DEAL_ID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="oldTime != null" >
        OLD_TIME,
      </if>
      <if test="desc != null" >
        DESC,
      </if>
      <if test="amountBefore != null" >
        AMOUNT_BEFORE,
      </if>
      <if test="amountAfter != null" >
        AMOUNT_AFTER,
      </if>
      <if test="paidSource != null" >
        PAID_SOURCE,
      </if>
      <if test="crmCompId != null" >
        CRM_COMP_ID,
      </if>
      <if test="netbankLock != null" >
        NETBANK_LOCK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uaId != null" >
        #{uaId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="paidCatigory != null" >
        #{paidCatigory,jdbcType=VARCHAR},
      </if>
      <if test="paidType != null" >
        #{paidType,jdbcType=VARCHAR},
      </if>
      <if test="cardno != null" >
        #{cardno,jdbcType=VARCHAR},
      </if>
      <if test="orderno != null" >
        #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="padiTime != null" >
        #{padiTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealId != null" >
        #{dealId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="oldTime != null" >
        #{oldTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="amountBefore != null" >
        #{amountBefore,jdbcType=DOUBLE},
      </if>
      <if test="amountAfter != null" >
        #{amountAfter,jdbcType=DOUBLE},
      </if>
      <if test="paidSource != null" >
        #{paidSource,jdbcType=TINYINT},
      </if>
      <if test="crmCompId != null" >
        #{crmCompId,jdbcType=INTEGER},
      </if>
      <if test="netbankLock != null" >
        #{netbankLock,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminLotterySignPaid" >
    <!--@mbggenerated-->
    update LOTTERY_SIGN_PAID
    <set >
      <if test="uaId != null" >
        UA_ID = #{uaId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="paidCatigory != null" >
        PAID_CATIGORY = #{paidCatigory,jdbcType=VARCHAR},
      </if>
      <if test="paidType != null" >
        PAID_TYPE = #{paidType,jdbcType=VARCHAR},
      </if>
      <if test="cardno != null" >
        CARDNO = #{cardno,jdbcType=VARCHAR},
      </if>
      <if test="orderno != null" >
        ORDERNO = #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="padiTime != null" >
        PADI_TIME = #{padiTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealId != null" >
        DEAL_ID = #{dealId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="oldTime != null" >
        OLD_TIME = #{oldTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null" >
        DESC = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="amountBefore != null" >
        AMOUNT_BEFORE = #{amountBefore,jdbcType=DOUBLE},
      </if>
      <if test="amountAfter != null" >
        AMOUNT_AFTER = #{amountAfter,jdbcType=DOUBLE},
      </if>
      <if test="paidSource != null" >
        PAID_SOURCE = #{paidSource,jdbcType=TINYINT},
      </if>
      <if test="crmCompId != null" >
        CRM_COMP_ID = #{crmCompId,jdbcType=INTEGER},
      </if>
      <if test="netbankLock != null" >
        NETBANK_LOCK = #{netbankLock,jdbcType=VARCHAR},
      </if>
    </set>
    where PAID_ID = #{paidId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminLotterySignPaid" >
    <!--@mbggenerated-->
    update LOTTERY_SIGN_PAID
    set UA_ID = #{uaId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      PAID_CATIGORY = #{paidCatigory,jdbcType=VARCHAR},
      PAID_TYPE = #{paidType,jdbcType=VARCHAR},
      CARDNO = #{cardno,jdbcType=VARCHAR},
      ORDERNO = #{orderno,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DOUBLE},
      PADI_TIME = #{padiTime,jdbcType=TIMESTAMP},
      DEAL_ID = #{dealId,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=INTEGER},
      OLD_TIME = #{oldTime,jdbcType=TIMESTAMP},
      DESC = #{desc,jdbcType=VARCHAR},
      AMOUNT_BEFORE = #{amountBefore,jdbcType=DOUBLE},
      AMOUNT_AFTER = #{amountAfter,jdbcType=DOUBLE},
      PAID_SOURCE = #{paidSource,jdbcType=TINYINT},
      CRM_COMP_ID = #{crmCompId,jdbcType=INTEGER},
      NETBANK_LOCK = #{netbankLock,jdbcType=VARCHAR}
    where PAID_ID = #{paidId,jdbcType=INTEGER}
  </update>
</mapper>