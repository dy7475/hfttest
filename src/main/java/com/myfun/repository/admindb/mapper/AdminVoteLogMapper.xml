<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminVoteLogMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminVoteLog" >
    <!--@mbggenerated-->
    <id column="LOG_ID" property="logId" jdbcType="INTEGER" />
    <result column="VOTE_ID" property="voteId" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="CREATION_TIME" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="BULLET_ID" property="bulletId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    LOG_ID, VOTE_ID, ARCHIVE_ID, CREATION_TIME, BULLET_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from VOTE_LOG
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from VOTE_LOG
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminVoteLog" >
    <!--@mbggenerated-->
    insert into VOTE_LOG (LOG_ID, VOTE_ID, ARCHIVE_ID, 
      CREATION_TIME, BULLET_ID)
    values (#{logId,jdbcType=INTEGER}, #{voteId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{bulletId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminVoteLog" >
   <selectKey keyProperty="logId" order="BEFORE" resultType="java.lang.Integer">
      SELECT isnull(max(LOG_ID), 0) +1 from VOTE_LOG
    </selectKey>
    insert into VOTE_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        LOG_ID,
      </if>
      <if test="voteId != null" >
        VOTE_ID,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
      <if test="bulletId != null" >
        BULLET_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="voteId != null" >
        #{voteId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bulletId != null" >
        #{bulletId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminVoteLog" >
    <!--@mbggenerated-->
    update VOTE_LOG
    <set >
      <if test="voteId != null" >
        VOTE_ID = #{voteId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bulletId != null" >
        BULLET_ID = #{bulletId,jdbcType=INTEGER},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminVoteLog" >
    <!--@mbggenerated-->
    update VOTE_LOG
    set VOTE_ID = #{voteId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      BULLET_ID = #{bulletId,jdbcType=INTEGER}
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </update>
  <select id="getAdminVoteLog" parameterType="com.myfun.repository.admindb.po.AdminVoteLog" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List" /> FROM VOTE_LOG
  	WHERE BULLET_ID = #{bulletId} AND ARCHIVE_ID = #{archiveId}
  </select>
  
  <select id="getAdminVoteLogByArchive" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List" /> from VOTE_LOG
  	WHERE ARCHIVE_ID = #{archivedId}
  	ORDER by VOTE_ID ASC
  </select>
	<select id="selectVoteList" resultMap="BaseResultMap" >
		SELECT <include refid="Base_Column_List" /> from VOTE_LOG
		WHERE ARCHIVE_ID = #{archiveId} and BULLET_ID = #{bulletId}
	</select>
	
</mapper>