<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunContactMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunContact" >
    <!--@mbggenerated-->
    <id column="CONTACT_ID" property="contactId" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="GROUP_TYPE" property="groupType" jdbcType="TINYINT" />
    <result column="CONTACT_NAME" property="contactName" jdbcType="VARCHAR" />
    <result column="COMP_NAME" property="compName" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="BIT" />
    <result column="JOB" property="job" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="PHONE1" property="phone1" jdbcType="VARCHAR" />
    <result column="REG_TIME" property="regTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    CONTACT_ID, ARCHIVE_ID, GROUP_TYPE, CONTACT_NAME, COMP_NAME, SEX, JOB, EMAIL, QQ, 
    PHONE, PHONE1, REG_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_CONTACT
    where CONTACT_ID = #{contactId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_CONTACT
    where CONTACT_ID = #{contactId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunContact" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="contactId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_CONTACT (ARCHIVE_ID, GROUP_TYPE, CONTACT_NAME, 
      COMP_NAME, SEX, JOB, EMAIL, 
      QQ, PHONE, PHONE1, 
      REG_TIME)
    values (#{archiveId,jdbcType=INTEGER}, #{groupType,jdbcType=TINYINT}, #{contactName,jdbcType=VARCHAR}, 
      #{compName,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, #{job,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{phone1,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunContact" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="contactId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_CONTACT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="groupType != null" >
        GROUP_TYPE,
      </if>
      <if test="contactName != null" >
        CONTACT_NAME,
      </if>
      <if test="compName != null" >
        COMP_NAME,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="job != null" >
        JOB,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="qq != null" >
        QQ,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="phone1 != null" >
        PHONE1,
      </if>
      <if test="regTime != null" >
        REG_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="groupType != null" >
        #{groupType,jdbcType=TINYINT},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="compName != null" >
        #{compName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null" >
        #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunContact" >
    <!--@mbggenerated-->
    update FUN_CONTACT
    <set >
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="groupType != null" >
        GROUP_TYPE = #{groupType,jdbcType=TINYINT},
      </if>
      <if test="contactName != null" >
        CONTACT_NAME = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="compName != null" >
        COMP_NAME = #{compName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=BIT},
      </if>
      <if test="job != null" >
        JOB = #{job,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        QQ = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null" >
        PHONE1 = #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        REG_TIME = #{regTime,jdbcType=VARCHAR},
      </if>
    </set>
    where CONTACT_ID = #{contactId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunContact" >
    <!--@mbggenerated-->
    update FUN_CONTACT
    set ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      GROUP_TYPE = #{groupType,jdbcType=TINYINT},
      CONTACT_NAME = #{contactName,jdbcType=VARCHAR},
      COMP_NAME = #{compName,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=BIT},
      JOB = #{job,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      QQ = #{qq,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      PHONE1 = #{phone1,jdbcType=VARCHAR},
      REG_TIME = #{regTime,jdbcType=VARCHAR}
    where CONTACT_ID = #{contactId,jdbcType=INTEGER}
  </update>
</mapper>