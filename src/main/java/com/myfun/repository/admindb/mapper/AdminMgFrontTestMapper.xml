<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminMgFrontTestMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminMgFrontTest" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="TEST_JSON" property="testJson" jdbcType="VARCHAR" />
    <result column="DIR_ID" property="dirId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, USER_ID, CREATE_TIME, TEST_JSON, DIR_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.admindb.po.AdminMgFrontTestExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from MG_FRONT_TEST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from MG_FRONT_TEST
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from MG_FRONT_TEST
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminMgFrontTestExample" >
    <!--@mbggenerated-->
    delete from MG_FRONT_TEST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminMgFrontTest" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into MG_FRONT_TEST (USER_ID, CREATE_TIME, TEST_JSON, 
      DIR_ID)
    values (#{userId,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, #{testJson,jdbcType=VARCHAR}, 
      #{dirId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminMgFrontTest" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into MG_FRONT_TEST
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="testJson != null" >
        TEST_JSON,
      </if>
      <if test="dirId != null" >
        DIR_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="testJson != null" >
        #{testJson,jdbcType=VARCHAR},
      </if>
      <if test="dirId != null" >
        #{dirId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminMgFrontTestExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from MG_FRONT_TEST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update MG_FRONT_TEST
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.testJson != null" >
        TEST_JSON = #{record.testJson,jdbcType=VARCHAR},
      </if>
      <if test="record.dirId != null" >
        DIR_ID = #{record.dirId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update MG_FRONT_TEST
    set ID = #{record.id,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      TEST_JSON = #{record.testJson,jdbcType=VARCHAR},
      DIR_ID = #{record.dirId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminMgFrontTest" >
    <!--@mbggenerated-->
    update MG_FRONT_TEST
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="testJson != null" >
        TEST_JSON = #{testJson,jdbcType=VARCHAR},
      </if>
      <if test="dirId != null" >
        DIR_ID = #{dirId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminMgFrontTest" >
    <!--@mbggenerated-->
    update MG_FRONT_TEST
    set USER_ID = #{userId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      TEST_JSON = #{testJson,jdbcType=VARCHAR},
      DIR_ID = #{dirId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectResponseJsonByUrl" resultType="String" >
   select top 1 A.TEST_JSON from MG_FRONT_TEST A LEFT JOIN FUN_DOC_DATA B on A.DIR_ID = B.DATA_ID where A.USER_MOBILE=#{userMobile} and B.ACTION_NAME =#{requestUrl} ORDER BY A.CREATE_TIME DESC
  </select>
</mapper>