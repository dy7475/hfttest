<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunCompSkinMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunCompSkin" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ADMIN_COMP_ID" property="adminCompId" jdbcType="INTEGER" />
    <result column="COMP_NO" property="compNo" jdbcType="VARCHAR" />
    <result column="SKIN_TYPE" property="skinType" jdbcType="VARCHAR" />
    <result column="SKIN_PIC_URL" property="skinPicUrl" jdbcType="VARCHAR" />
    <result column="CLIENT_TYPE" property="clientType" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="SKIN_PIC_URL_TYPE" property="skinPicUrlType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, ADMIN_COMP_ID, COMP_NO, SKIN_TYPE, SKIN_PIC_URL, CLIENT_TYPE, CREATE_TIME, SKIN_PIC_URL_TYPE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.admindb.po.AdminFunCompSkinExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_COMP_SKIN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_COMP_SKIN
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_COMP_SKIN
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminFunCompSkinExample" >
    <!--@mbggenerated-->
    delete from FUN_COMP_SKIN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunCompSkin" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_COMP_SKIN (ADMIN_COMP_ID, COMP_NO, SKIN_TYPE, 
      SKIN_PIC_URL, CLIENT_TYPE, CREATE_TIME, 
      SKIN_PIC_URL_TYPE)
    values (#{adminCompId,jdbcType=INTEGER}, #{compNo,jdbcType=VARCHAR}, #{skinType,jdbcType=VARCHAR}, 
      #{skinPicUrl,jdbcType=VARCHAR}, #{clientType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{skinPicUrlType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunCompSkin" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_COMP_SKIN
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminCompId != null" >
        ADMIN_COMP_ID,
      </if>
      <if test="compNo != null" >
        COMP_NO,
      </if>
      <if test="skinType != null" >
        SKIN_TYPE,
      </if>
      <if test="skinPicUrl != null" >
        SKIN_PIC_URL,
      </if>
      <if test="clientType != null" >
        CLIENT_TYPE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="skinPicUrlType != null" >
        SKIN_PIC_URL_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminCompId != null" >
        #{adminCompId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null" >
        #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="skinType != null" >
        #{skinType,jdbcType=VARCHAR},
      </if>
      <if test="skinPicUrl != null" >
        #{skinPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null" >
        #{clientType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="skinPicUrlType != null" >
        #{skinPicUrlType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminFunCompSkinExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from FUN_COMP_SKIN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_COMP_SKIN
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.adminCompId != null" >
        ADMIN_COMP_ID = #{record.adminCompId,jdbcType=INTEGER},
      </if>
      <if test="record.compNo != null" >
        COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      </if>
      <if test="record.skinType != null" >
        SKIN_TYPE = #{record.skinType,jdbcType=VARCHAR},
      </if>
      <if test="record.skinPicUrl != null" >
        SKIN_PIC_URL = #{record.skinPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.clientType != null" >
        CLIENT_TYPE = #{record.clientType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.skinPicUrlType != null" >
        SKIN_PIC_URL_TYPE = #{record.skinPicUrlType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_COMP_SKIN
    set ID = #{record.id,jdbcType=INTEGER},
      ADMIN_COMP_ID = #{record.adminCompId,jdbcType=INTEGER},
      COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      SKIN_TYPE = #{record.skinType,jdbcType=VARCHAR},
      SKIN_PIC_URL = #{record.skinPicUrl,jdbcType=VARCHAR},
      CLIENT_TYPE = #{record.clientType,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      SKIN_PIC_URL_TYPE = #{record.skinPicUrlType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunCompSkin" >
    <!--@mbggenerated-->
    update FUN_COMP_SKIN
    <set >
      <if test="adminCompId != null" >
        ADMIN_COMP_ID = #{adminCompId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null" >
        COMP_NO = #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="skinType != null" >
        SKIN_TYPE = #{skinType,jdbcType=VARCHAR},
      </if>
      <if test="skinPicUrl != null" >
        SKIN_PIC_URL = #{skinPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null" >
        CLIENT_TYPE = #{clientType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="skinPicUrlType != null" >
        SKIN_PIC_URL_TYPE = #{skinPicUrlType,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunCompSkin" >
    <!--@mbggenerated-->
    update FUN_COMP_SKIN
    set ADMIN_COMP_ID = #{adminCompId,jdbcType=INTEGER},
      COMP_NO = #{compNo,jdbcType=VARCHAR},
      SKIN_TYPE = #{skinType,jdbcType=VARCHAR},
      SKIN_PIC_URL = #{skinPicUrl,jdbcType=VARCHAR},
      CLIENT_TYPE = #{clientType,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      SKIN_PIC_URL_TYPE = #{skinPicUrlType,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>