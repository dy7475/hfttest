<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunShareRelevanceMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunShareRelevance">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="SHARE_COMP_NO" jdbcType="VARCHAR" property="shareCompNo" />
    <result column="SHARE_ID" jdbcType="INTEGER" property="shareId" />
    <result column="FLAG" jdbcType="INTEGER" property="flag" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_UID" jdbcType="INTEGER" property="createUid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, SHARE_COMP_NO, SHARE_ID, FLAG, CREATE_TIME, UPDATE_TIME, CREATE_UID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminFunShareRelevanceExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_SHARE_RELEVANCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_SHARE_RELEVANCE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_SHARE_RELEVANCE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminFunShareRelevanceExample">
    <!--@mbggenerated-->
    delete from FUN_SHARE_RELEVANCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunShareRelevance">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_SHARE_RELEVANCE_ID
    </selectKey>
    insert into FUN_SHARE_RELEVANCE (ID, SHARE_COMP_NO, SHARE_ID, 
      FLAG, CREATE_TIME, UPDATE_TIME, 
      CREATE_UID)
    values (#{id,jdbcType=INTEGER}, #{shareCompNo,jdbcType=VARCHAR}, #{shareId,jdbcType=INTEGER}, 
      #{flag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunShareRelevance">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_SHARE_RELEVANCE_ID
    </selectKey>
    insert into FUN_SHARE_RELEVANCE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="shareCompNo != null">
        SHARE_COMP_NO,
      </if>
      <if test="shareId != null">
        SHARE_ID,
      </if>
      <if test="flag != null">
        FLAG,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="createUid != null">
        CREATE_UID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="shareCompNo != null">
        #{shareCompNo,jdbcType=VARCHAR},
      </if>
      <if test="shareId != null">
        #{shareId,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminFunShareRelevanceExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_SHARE_RELEVANCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_SHARE_RELEVANCE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shareCompNo != null">
        SHARE_COMP_NO = #{record.shareCompNo,jdbcType=VARCHAR},
      </if>
      <if test="record.shareId != null">
        SHARE_ID = #{record.shareId,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null">
        FLAG = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUid != null">
        CREATE_UID = #{record.createUid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_SHARE_RELEVANCE
    set ID = #{record.id,jdbcType=INTEGER},
      SHARE_COMP_NO = #{record.shareCompNo,jdbcType=VARCHAR},
      SHARE_ID = #{record.shareId,jdbcType=INTEGER},
      FLAG = #{record.flag,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATE_UID = #{record.createUid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunShareRelevance">
    <!--@mbggenerated-->
    update FUN_SHARE_RELEVANCE
    <set>
      <if test="shareCompNo != null">
        SHARE_COMP_NO = #{shareCompNo,jdbcType=VARCHAR},
      </if>
      <if test="shareId != null">
        SHARE_ID = #{shareId,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        CREATE_UID = #{createUid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunShareRelevance">
    <!--@mbggenerated-->
    update FUN_SHARE_RELEVANCE
    set SHARE_COMP_NO = #{shareCompNo,jdbcType=VARCHAR},
      SHARE_ID = #{shareId,jdbcType=INTEGER},
      FLAG = #{flag,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_UID = #{createUid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <!-- business -->
  <update id="updateByShareCompNo" parameterType="com.myfun.repository.admindb.po.AdminFunShareRelevance">
    update FUN_SHARE_RELEVANCE
    <set>
      <if test="shareId != null">
        SHARE_ID = #{shareId,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        CREATE_UID = #{createUid,jdbcType=INTEGER},
      </if>
    </set>
    where SHARE_COMP_NO = #{shareCompNo,jdbcType=VARCHAR}
  </update>

	<select id="getCompIdsByShareId" resultMap="BaseResultMap">
		SELECT SHARE_COMP_NO 
		FROM FUN_SHARE_RELEVANCE
		WHERE
		SHARE_ID = #{shareId}
		AND FLAG = 1
	</select>
</mapper>