<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunHouseBiddingMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunHouseBidding">
    <!--@mbggenerated-->
    <id column="BIDD_ID" jdbcType="INTEGER" property="biddId" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="HOUSE_ID" jdbcType="INTEGER" property="houseId" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="HOUSE_USEAGE" jdbcType="VARCHAR" property="houseUseage" />
    <result column="SALE_LEASE" jdbcType="VARCHAR" property="saleLease" />
    <result column="BIDDING_SUCC_TIME" jdbcType="TIMESTAMP" property="biddingSuccTime" />
    <result column="BIDDING_END_TIME" jdbcType="TIMESTAMP" property="biddingEndTime" />
    <result column="BIDDING_DAYS" jdbcType="INTEGER" property="biddingDays" />
    <result column="BIDDING_PRICE" jdbcType="NUMERIC" property="biddingPrice" />
    <result column="COMP_PRICE" jdbcType="NUMERIC" property="compPrice" />
    <result column="PERSONAL_PRICE" jdbcType="NUMERIC" property="personalPrice" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="QQ_STATUS" jdbcType="TINYINT" property="qqStatus" />
    <result column="HAOFANG_STATUS" jdbcType="TINYINT" property="haofangStatus" />
    <result column="UA_TYPE" jdbcType="TINYINT" property="uaType" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="COMP_COIN" jdbcType="NUMERIC" property="compCoin" />
    <result column="COMP_UA_ID" jdbcType="INTEGER" property="compUaId" />
    <result column="PERSONAL_COIN" jdbcType="NUMERIC" property="personalCoin" />
    <result column="BIDD_SOURCE" jdbcType="TINYINT" property="biddSource" />
    <result column="SYNC_FLAG" jdbcType="INTEGER" property="syncFlag" />
    <result column="AUDIT_STATUS" jdbcType="TINYINT" property="auditStatus" />
    <result column="SORT_PRICE" jdbcType="NUMERIC" property="sortPrice" />
    <result column="ACTIVITY_PRICE" jdbcType="NUMERIC" property="activityPrice" />
    <result column="CASH_BALANCE_PRICE" jdbcType="NUMERIC" property="cashBalancePrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    BIDD_ID, CITY_ID, HOUSE_ID, BUILD_ID, HOUSE_USEAGE, SALE_LEASE, BIDDING_SUCC_TIME, 
    BIDDING_END_TIME, BIDDING_DAYS, BIDDING_PRICE, COMP_PRICE, PERSONAL_PRICE, ARCHIVE_ID, 
    QQ_STATUS, HAOFANG_STATUS, UA_TYPE, UPDATE_TIME, COMP_COIN, COMP_UA_ID, PERSONAL_COIN, 
    BIDD_SOURCE, SYNC_FLAG, AUDIT_STATUS, SORT_PRICE, ACTIVITY_PRICE, CASH_BALANCE_PRICE
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminFunHouseBiddingExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_HOUSE_BIDDING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_HOUSE_BIDDING
    where BIDD_ID = #{biddId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_HOUSE_BIDDING
    where BIDD_ID = #{biddId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminFunHouseBiddingExample">
    <!--@mbggenerated-->
    delete from FUN_HOUSE_BIDDING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunHouseBidding">
    <!--@mbggenerated-->
    <selectKey keyProperty="biddId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_HOUSE_BIDDING_BIDD_ID
    </selectKey>
    insert into FUN_HOUSE_BIDDING (BIDD_ID, CITY_ID, HOUSE_ID, 
      BUILD_ID, HOUSE_USEAGE, SALE_LEASE, 
      BIDDING_SUCC_TIME, BIDDING_END_TIME, BIDDING_DAYS, 
      BIDDING_PRICE, COMP_PRICE, PERSONAL_PRICE, 
      ARCHIVE_ID, QQ_STATUS, HAOFANG_STATUS, 
      UA_TYPE, UPDATE_TIME, COMP_COIN, 
      COMP_UA_ID, PERSONAL_COIN, BIDD_SOURCE, 
      SYNC_FLAG, AUDIT_STATUS, SORT_PRICE, 
      ACTIVITY_PRICE, CASH_BALANCE_PRICE)
    values (#{biddId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{houseId,jdbcType=INTEGER}, 
      #{buildId,jdbcType=INTEGER}, #{houseUseage,jdbcType=VARCHAR}, #{saleLease,jdbcType=VARCHAR}, 
      #{biddingSuccTime,jdbcType=TIMESTAMP}, #{biddingEndTime,jdbcType=TIMESTAMP}, #{biddingDays,jdbcType=INTEGER}, 
      #{biddingPrice,jdbcType=NUMERIC}, #{compPrice,jdbcType=NUMERIC}, #{personalPrice,jdbcType=NUMERIC}, 
      #{archiveId,jdbcType=INTEGER}, #{qqStatus,jdbcType=TINYINT}, #{haofangStatus,jdbcType=TINYINT}, 
      #{uaType,jdbcType=TINYINT}, #{updateTime,jdbcType=TIMESTAMP}, #{compCoin,jdbcType=NUMERIC}, 
      #{compUaId,jdbcType=INTEGER}, #{personalCoin,jdbcType=NUMERIC}, #{biddSource,jdbcType=TINYINT}, 
      #{syncFlag,jdbcType=INTEGER}, #{auditStatus,jdbcType=TINYINT}, #{sortPrice,jdbcType=NUMERIC}, 
      #{activityPrice,jdbcType=NUMERIC}, #{cashBalancePrice,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunHouseBidding">
    <!--@mbggenerated-->
    <selectKey keyProperty="biddId" order="BEFORE" resultType="java.lang.Integer">
      SELECT next value for SEQ_FUN_HOUSE_BIDDING_BIDD_ID
    </selectKey>
    insert into FUN_HOUSE_BIDDING
    <trim prefix="(" suffix=")" suffixOverrides=",">
      BIDD_ID,
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="houseId != null">
        HOUSE_ID,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE,
      </if>
      <if test="saleLease != null">
        SALE_LEASE,
      </if>
      <if test="biddingSuccTime != null">
        BIDDING_SUCC_TIME,
      </if>
      <if test="biddingEndTime != null">
        BIDDING_END_TIME,
      </if>
      <if test="biddingDays != null">
        BIDDING_DAYS,
      </if>
      <if test="biddingPrice != null">
        BIDDING_PRICE,
      </if>
      <if test="compPrice != null">
        COMP_PRICE,
      </if>
      <if test="personalPrice != null">
        PERSONAL_PRICE,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="qqStatus != null">
        QQ_STATUS,
      </if>
      <if test="haofangStatus != null">
        HAOFANG_STATUS,
      </if>
      <if test="uaType != null">
        UA_TYPE,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="compCoin != null">
        COMP_COIN,
      </if>
      <if test="compUaId != null">
        COMP_UA_ID,
      </if>
      <if test="personalCoin != null">
        PERSONAL_COIN,
      </if>
      <if test="biddSource != null">
        BIDD_SOURCE,
      </if>
      <if test="syncFlag != null">
        SYNC_FLAG,
      </if>
      <if test="auditStatus != null">
        AUDIT_STATUS,
      </if>
      <if test="sortPrice != null">
        SORT_PRICE,
      </if>
      <if test="activityPrice != null">
        ACTIVITY_PRICE,
      </if>
      <if test="cashBalancePrice != null">
        CASH_BALANCE_PRICE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{biddId,jdbcType=INTEGER},
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="houseUseage != null">
        #{houseUseage,jdbcType=VARCHAR},
      </if>
      <if test="saleLease != null">
        #{saleLease,jdbcType=VARCHAR},
      </if>
      <if test="biddingSuccTime != null">
        #{biddingSuccTime,jdbcType=TIMESTAMP},
      </if>
      <if test="biddingEndTime != null">
        #{biddingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="biddingDays != null">
        #{biddingDays,jdbcType=INTEGER},
      </if>
      <if test="biddingPrice != null">
        #{biddingPrice,jdbcType=NUMERIC},
      </if>
      <if test="compPrice != null">
        #{compPrice,jdbcType=NUMERIC},
      </if>
      <if test="personalPrice != null">
        #{personalPrice,jdbcType=NUMERIC},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="qqStatus != null">
        #{qqStatus,jdbcType=TINYINT},
      </if>
      <if test="haofangStatus != null">
        #{haofangStatus,jdbcType=TINYINT},
      </if>
      <if test="uaType != null">
        #{uaType,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="compCoin != null">
        #{compCoin,jdbcType=NUMERIC},
      </if>
      <if test="compUaId != null">
        #{compUaId,jdbcType=INTEGER},
      </if>
      <if test="personalCoin != null">
        #{personalCoin,jdbcType=NUMERIC},
      </if>
      <if test="biddSource != null">
        #{biddSource,jdbcType=TINYINT},
      </if>
      <if test="syncFlag != null">
        #{syncFlag,jdbcType=INTEGER},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="sortPrice != null">
        #{sortPrice,jdbcType=NUMERIC},
      </if>
      <if test="activityPrice != null">
        #{activityPrice,jdbcType=NUMERIC},
      </if>
      <if test="cashBalancePrice != null">
        #{cashBalancePrice,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminFunHouseBiddingExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_HOUSE_BIDDING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_HOUSE_BIDDING
    <set>
      <if test="record.biddId != null">
        BIDD_ID = #{record.biddId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.houseId != null">
        HOUSE_ID = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.houseUseage != null">
        HOUSE_USEAGE = #{record.houseUseage,jdbcType=VARCHAR},
      </if>
      <if test="record.saleLease != null">
        SALE_LEASE = #{record.saleLease,jdbcType=VARCHAR},
      </if>
      <if test="record.biddingSuccTime != null">
        BIDDING_SUCC_TIME = #{record.biddingSuccTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.biddingEndTime != null">
        BIDDING_END_TIME = #{record.biddingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.biddingDays != null">
        BIDDING_DAYS = #{record.biddingDays,jdbcType=INTEGER},
      </if>
      <if test="record.biddingPrice != null">
        BIDDING_PRICE = #{record.biddingPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.compPrice != null">
        COMP_PRICE = #{record.compPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.personalPrice != null">
        PERSONAL_PRICE = #{record.personalPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.qqStatus != null">
        QQ_STATUS = #{record.qqStatus,jdbcType=TINYINT},
      </if>
      <if test="record.haofangStatus != null">
        HAOFANG_STATUS = #{record.haofangStatus,jdbcType=TINYINT},
      </if>
      <if test="record.uaType != null">
        UA_TYPE = #{record.uaType,jdbcType=TINYINT},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.compCoin != null">
        COMP_COIN = #{record.compCoin,jdbcType=NUMERIC},
      </if>
      <if test="record.compUaId != null">
        COMP_UA_ID = #{record.compUaId,jdbcType=INTEGER},
      </if>
      <if test="record.personalCoin != null">
        PERSONAL_COIN = #{record.personalCoin,jdbcType=NUMERIC},
      </if>
      <if test="record.biddSource != null">
        BIDD_SOURCE = #{record.biddSource,jdbcType=TINYINT},
      </if>
      <if test="record.syncFlag != null">
        SYNC_FLAG = #{record.syncFlag,jdbcType=INTEGER},
      </if>
      <if test="record.auditStatus != null">
        AUDIT_STATUS = #{record.auditStatus,jdbcType=TINYINT},
      </if>
      <if test="record.sortPrice != null">
        SORT_PRICE = #{record.sortPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.activityPrice != null">
        ACTIVITY_PRICE = #{record.activityPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.cashBalancePrice != null">
        CASH_BALANCE_PRICE = #{record.cashBalancePrice,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_HOUSE_BIDDING
    set BIDD_ID = #{record.biddId,jdbcType=INTEGER},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      HOUSE_ID = #{record.houseId,jdbcType=INTEGER},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      HOUSE_USEAGE = #{record.houseUseage,jdbcType=VARCHAR},
      SALE_LEASE = #{record.saleLease,jdbcType=VARCHAR},
      BIDDING_SUCC_TIME = #{record.biddingSuccTime,jdbcType=TIMESTAMP},
      BIDDING_END_TIME = #{record.biddingEndTime,jdbcType=TIMESTAMP},
      BIDDING_DAYS = #{record.biddingDays,jdbcType=INTEGER},
      BIDDING_PRICE = #{record.biddingPrice,jdbcType=NUMERIC},
      COMP_PRICE = #{record.compPrice,jdbcType=NUMERIC},
      PERSONAL_PRICE = #{record.personalPrice,jdbcType=NUMERIC},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      QQ_STATUS = #{record.qqStatus,jdbcType=TINYINT},
      HAOFANG_STATUS = #{record.haofangStatus,jdbcType=TINYINT},
      UA_TYPE = #{record.uaType,jdbcType=TINYINT},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      COMP_COIN = #{record.compCoin,jdbcType=NUMERIC},
      COMP_UA_ID = #{record.compUaId,jdbcType=INTEGER},
      PERSONAL_COIN = #{record.personalCoin,jdbcType=NUMERIC},
      BIDD_SOURCE = #{record.biddSource,jdbcType=TINYINT},
      SYNC_FLAG = #{record.syncFlag,jdbcType=INTEGER},
      AUDIT_STATUS = #{record.auditStatus,jdbcType=TINYINT},
      SORT_PRICE = #{record.sortPrice,jdbcType=NUMERIC},
      ACTIVITY_PRICE = #{record.activityPrice,jdbcType=NUMERIC},
      CASH_BALANCE_PRICE = #{record.cashBalancePrice,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunHouseBidding">
    <!--@mbggenerated-->
    update FUN_HOUSE_BIDDING
    <set>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null">
        HOUSE_ID = #{houseId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE = #{houseUseage,jdbcType=VARCHAR},
      </if>
      <if test="saleLease != null">
        SALE_LEASE = #{saleLease,jdbcType=VARCHAR},
      </if>
      <if test="biddingSuccTime != null">
        BIDDING_SUCC_TIME = #{biddingSuccTime,jdbcType=TIMESTAMP},
      </if>
      <if test="biddingEndTime != null">
        BIDDING_END_TIME = #{biddingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="biddingDays != null">
        BIDDING_DAYS = #{biddingDays,jdbcType=INTEGER},
      </if>
      <if test="biddingPrice != null">
        BIDDING_PRICE = #{biddingPrice,jdbcType=NUMERIC},
      </if>
      <if test="compPrice != null">
        COMP_PRICE = #{compPrice,jdbcType=NUMERIC},
      </if>
      <if test="personalPrice != null">
        PERSONAL_PRICE = #{personalPrice,jdbcType=NUMERIC},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="qqStatus != null">
        QQ_STATUS = #{qqStatus,jdbcType=TINYINT},
      </if>
      <if test="haofangStatus != null">
        HAOFANG_STATUS = #{haofangStatus,jdbcType=TINYINT},
      </if>
      <if test="uaType != null">
        UA_TYPE = #{uaType,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="compCoin != null">
        COMP_COIN = #{compCoin,jdbcType=NUMERIC},
      </if>
      <if test="compUaId != null">
        COMP_UA_ID = #{compUaId,jdbcType=INTEGER},
      </if>
      <if test="personalCoin != null">
        PERSONAL_COIN = #{personalCoin,jdbcType=NUMERIC},
      </if>
      <if test="biddSource != null">
        BIDD_SOURCE = #{biddSource,jdbcType=TINYINT},
      </if>
      <if test="syncFlag != null">
        SYNC_FLAG = #{syncFlag,jdbcType=INTEGER},
      </if>
      <if test="auditStatus != null">
        AUDIT_STATUS = #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="sortPrice != null">
        SORT_PRICE = #{sortPrice,jdbcType=NUMERIC},
      </if>
      <if test="activityPrice != null">
        ACTIVITY_PRICE = #{activityPrice,jdbcType=NUMERIC},
      </if>
      <if test="cashBalancePrice != null">
        CASH_BALANCE_PRICE = #{cashBalancePrice,jdbcType=NUMERIC},
      </if>
    </set>
    where BIDD_ID = #{biddId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunHouseBidding">
    <!--@mbggenerated-->
    update FUN_HOUSE_BIDDING
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      HOUSE_ID = #{houseId,jdbcType=INTEGER},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      HOUSE_USEAGE = #{houseUseage,jdbcType=VARCHAR},
      SALE_LEASE = #{saleLease,jdbcType=VARCHAR},
      BIDDING_SUCC_TIME = #{biddingSuccTime,jdbcType=TIMESTAMP},
      BIDDING_END_TIME = #{biddingEndTime,jdbcType=TIMESTAMP},
      BIDDING_DAYS = #{biddingDays,jdbcType=INTEGER},
      BIDDING_PRICE = #{biddingPrice,jdbcType=NUMERIC},
      COMP_PRICE = #{compPrice,jdbcType=NUMERIC},
      PERSONAL_PRICE = #{personalPrice,jdbcType=NUMERIC},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      QQ_STATUS = #{qqStatus,jdbcType=TINYINT},
      HAOFANG_STATUS = #{haofangStatus,jdbcType=TINYINT},
      UA_TYPE = #{uaType,jdbcType=TINYINT},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      COMP_COIN = #{compCoin,jdbcType=NUMERIC},
      COMP_UA_ID = #{compUaId,jdbcType=INTEGER},
      PERSONAL_COIN = #{personalCoin,jdbcType=NUMERIC},
      BIDD_SOURCE = #{biddSource,jdbcType=TINYINT},
      SYNC_FLAG = #{syncFlag,jdbcType=INTEGER},
      AUDIT_STATUS = #{auditStatus,jdbcType=TINYINT},
      SORT_PRICE = #{sortPrice,jdbcType=NUMERIC},
      ACTIVITY_PRICE = #{activityPrice,jdbcType=NUMERIC},
      CASH_BALANCE_PRICE = #{cashBalancePrice,jdbcType=NUMERIC}
    where BIDD_ID = #{biddId,jdbcType=INTEGER}
  </update>
  
	<update id="updateBiddingEndTimeToLastTime">
		UPDATE FUN_HOUSE_BIDDING
		SET BIDDING_END_TIME = #{toLastTime}
		WHERE BIDDING_END_TIME &gt;= #{nowDate}
		AND ARCHIVE_ID IN
		<foreach close=")" collection="archiveIds" index="index" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</update>
</mapper>