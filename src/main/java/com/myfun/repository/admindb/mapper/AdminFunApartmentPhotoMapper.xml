<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunApartmentPhotoMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunApartmentPhoto">
    <!--@mbggenerated-->
    <id column="UUID" jdbcType="VARCHAR" property="uuid" />
    <result column="APARTMENT_UUID" jdbcType="VARCHAR" property="apartmentUuid" />
    <result column="ROOM_UUID" jdbcType="VARCHAR" property="roomUuid" />
    <result column="PHOTO_ADDR" jdbcType="VARCHAR" property="photoAddr" />
    <result column="PHOTO_TYPE" jdbcType="TINYINT" property="photoType" />
    <result column="PHOTO_STATUS" jdbcType="TINYINT" property="photoStatus" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="PHOTO_CLASSIC" jdbcType="TINYINT" property="photoClassic" />
    <result column="PIC_TAG" jdbcType="TINYINT" property="picTag" />
    <result column="PHOTO_SEQ" jdbcType="INTEGER" property="photoSeq" />
    <result column="HOUSE_NUM" jdbcType="VARCHAR" property="houseNum" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    UUID, APARTMENT_UUID, ROOM_UUID, PHOTO_ADDR, PHOTO_TYPE, PHOTO_STATUS, CREATE_TIME, 
    PHOTO_CLASSIC, PIC_TAG, PHOTO_SEQ, HOUSE_NUM
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_APARTMENT_PHOTO
    where UUID = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbggenerated-->
    delete from FUN_APARTMENT_PHOTO
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunApartmentPhoto">
    <!--@mbggenerated-->
    insert into FUN_APARTMENT_PHOTO (UUID, APARTMENT_UUID, ROOM_UUID, 
      PHOTO_ADDR, PHOTO_TYPE, PHOTO_STATUS, 
      CREATE_TIME, PHOTO_CLASSIC, PIC_TAG, 
      PHOTO_SEQ, HOUSE_NUM)
    values (#{uuid,jdbcType=VARCHAR}, #{apartmentUuid,jdbcType=VARCHAR}, #{roomUuid,jdbcType=VARCHAR}, 
      #{photoAddr,jdbcType=VARCHAR}, #{photoType,jdbcType=TINYINT}, #{photoStatus,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{photoClassic,jdbcType=TINYINT}, #{picTag,jdbcType=TINYINT}, 
      #{photoSeq,jdbcType=INTEGER}, #{houseNum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunApartmentPhoto">
    <!--@mbggenerated-->
    insert into FUN_APARTMENT_PHOTO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        UUID,
      </if>
      <if test="apartmentUuid != null">
        APARTMENT_UUID,
      </if>
      <if test="roomUuid != null">
        ROOM_UUID,
      </if>
      <if test="photoAddr != null">
        PHOTO_ADDR,
      </if>
      <if test="photoType != null">
        PHOTO_TYPE,
      </if>
      <if test="photoStatus != null">
        PHOTO_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="photoClassic != null">
        PHOTO_CLASSIC,
      </if>
      <if test="picTag != null">
        PIC_TAG,
      </if>
      <if test="photoSeq != null">
        PHOTO_SEQ,
      </if>
      <if test="houseNum != null">
        HOUSE_NUM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="apartmentUuid != null">
        #{apartmentUuid,jdbcType=VARCHAR},
      </if>
      <if test="roomUuid != null">
        #{roomUuid,jdbcType=VARCHAR},
      </if>
      <if test="photoAddr != null">
        #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="photoType != null">
        #{photoType,jdbcType=TINYINT},
      </if>
      <if test="photoStatus != null">
        #{photoStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="photoClassic != null">
        #{photoClassic,jdbcType=TINYINT},
      </if>
      <if test="picTag != null">
        #{picTag,jdbcType=TINYINT},
      </if>
      <if test="photoSeq != null">
        #{photoSeq,jdbcType=INTEGER},
      </if>
      <if test="houseNum != null">
        #{houseNum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunApartmentPhoto">
    <!--@mbggenerated-->
    update FUN_APARTMENT_PHOTO
    <set>
      <if test="apartmentUuid != null">
        APARTMENT_UUID = #{apartmentUuid,jdbcType=VARCHAR},
      </if>
      <if test="roomUuid != null">
        ROOM_UUID = #{roomUuid,jdbcType=VARCHAR},
      </if>
      <if test="photoAddr != null">
        PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="photoType != null">
        PHOTO_TYPE = #{photoType,jdbcType=TINYINT},
      </if>
      <if test="photoStatus != null">
        PHOTO_STATUS = #{photoStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="photoClassic != null">
        PHOTO_CLASSIC = #{photoClassic,jdbcType=TINYINT},
      </if>
      <if test="picTag != null">
        PIC_TAG = #{picTag,jdbcType=TINYINT},
      </if>
      <if test="photoSeq != null">
        PHOTO_SEQ = #{photoSeq,jdbcType=INTEGER},
      </if>
      <if test="houseNum != null">
        HOUSE_NUM = #{houseNum,jdbcType=VARCHAR},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunApartmentPhoto">
    <!--@mbggenerated-->
    update FUN_APARTMENT_PHOTO
    set APARTMENT_UUID = #{apartmentUuid,jdbcType=VARCHAR},
      ROOM_UUID = #{roomUuid,jdbcType=VARCHAR},
      PHOTO_ADDR = #{photoAddr,jdbcType=VARCHAR},
      PHOTO_TYPE = #{photoType,jdbcType=TINYINT},
      PHOTO_STATUS = #{photoStatus,jdbcType=TINYINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      PHOTO_CLASSIC = #{photoClassic,jdbcType=TINYINT},
      PIC_TAG = #{picTag,jdbcType=TINYINT},
      PHOTO_SEQ = #{photoSeq,jdbcType=INTEGER},
      HOUSE_NUM = #{houseNum,jdbcType=VARCHAR}
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="getMainPhoto" resultMap="BaseResultMap">
		select top 1
		<include refid="Base_Column_List" />
		from FUN_APARTMENT_PHOTO 
		where 
		PHOTO_STATUS = 1
		AND APARTMENT_UUID=#{apartmentUuid}
		<if test="roomUuid != null">
			AND ROOM_UUID = #{roomUuid}
		</if>
		ORDER BY PHOTO_CLASSIC ASC
  </select>
  <select id="getPhotoCount" resultType="java.lang.Integer">
		select count(1) as COUNTS
		from FUN_APARTMENT_PHOTO 
		where 
		PHOTO_STATUS = 1
		AND APARTMENT_UUID=#{apartmentUuid}
		<if test="roomUuid != null">
			AND ROOM_UUID = #{roomUuid}
		</if>
  </select>
</mapper>