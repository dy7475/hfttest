<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminBroadcastMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminBroadcast">
    <!--@mbggenerated-->
    <id column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <id column="BULLET_ID" jdbcType="INTEGER" property="bulletId" />
    <id column="BC_TYPE" jdbcType="INTEGER" property="bcType" />
    <result column="BOUND" jdbcType="INTEGER" property="bound" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ARCHIVE_ID, BULLET_ID, BC_TYPE, BOUND, CREATE_TIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminBroadcastKey" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from BROADCAST
    where ARCHIVE_ID = #{archiveId,jdbcType=INTEGER}
      and BULLET_ID = #{bulletId,jdbcType=INTEGER}
      and BC_TYPE = #{bcType,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminBroadcastKey">
    <!--@mbggenerated-->
    delete from BROADCAST
    where ARCHIVE_ID = #{archiveId,jdbcType=INTEGER}
      and BULLET_ID = #{bulletId,jdbcType=INTEGER}
      and BC_TYPE = #{bcType,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminBroadcast">
    <!--@mbggenerated-->
    insert into BROADCAST (ARCHIVE_ID, BULLET_ID, BC_TYPE, 
      BOUND, CREATE_TIME)
    values (#{archiveId,jdbcType=INTEGER}, #{bulletId,jdbcType=INTEGER}, #{bcType,jdbcType=INTEGER}, 
      #{bound,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminBroadcast">
    <!--@mbggenerated-->
    insert into BROADCAST
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="bulletId != null">
        BULLET_ID,
      </if>
      <if test="bcType != null">
        BC_TYPE,
      </if>
      <if test="bound != null">
        BOUND,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="bulletId != null">
        #{bulletId,jdbcType=INTEGER},
      </if>
      <if test="bcType != null">
        #{bcType,jdbcType=INTEGER},
      </if>
      <if test="bound != null">
        #{bound,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminBroadcast">
    <!--@mbggenerated-->
    update BROADCAST
    <set>
      <if test="bound != null">
        BOUND = #{bound,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ARCHIVE_ID = #{archiveId,jdbcType=INTEGER}
      and BULLET_ID = #{bulletId,jdbcType=INTEGER}
      and BC_TYPE = #{bcType,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminBroadcast">
    <!--@mbggenerated-->
    update BROADCAST
    set BOUND = #{bound,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ARCHIVE_ID = #{archiveId,jdbcType=INTEGER}
      and BULLET_ID = #{bulletId,jdbcType=INTEGER}
      and BC_TYPE = #{bcType,jdbcType=INTEGER}
  </update>
  <insert id="insertAdminBroadCast" parameterType="java.util.Map">
  		INSERT INTO BROADCAST(ARCHIVE_ID , BULLET_ID, BC_TYPE,BOUND, YOU_JIA_FLAG) 
  			select ARCHIVE_ID, #{bulletId}, 1 , #{bound} , #{youjiaflag} 
  			from FUN_ARCHIVE 
  			where not exists (select ARCHIVE_ID from BROADCAST where BROADCAST.ARCHIVE_ID=FUN_ARCHIVE.ARCHIVE_ID and BULLET_ID = #{bulletId} and BC_TYPE = 1 and BOUND=#{bound})
   </insert>
</mapper>