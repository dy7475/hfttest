<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminCompGiftCoinRecordMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminCompGiftCoinRecord" >
    <!--@mbggenerated-->
    <id column="GIFT_ID" property="giftId" jdbcType="INTEGER" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="COMP_NO" property="compNo" jdbcType="VARCHAR" />
    <result column="DEPT_NO" property="deptNo" jdbcType="VARCHAR" />
    <result column="GIFT_AMOUNT" property="giftAmount" jdbcType="INTEGER" />
    <result column="ARCHIVE_IDS" property="archiveIds" jdbcType="VARCHAR" />
    <result column="CREATION_TIME" property="creationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    GIFT_ID, DEPT_ID, COMP_NO, DEPT_NO, GIFT_AMOUNT, ARCHIVE_IDS, CREATION_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.admindb.po.AdminCompGiftCoinRecordExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from COMP_GIFT_COIN_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from COMP_GIFT_COIN_RECORD
    where GIFT_ID = #{giftId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from COMP_GIFT_COIN_RECORD
    where GIFT_ID = #{giftId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminCompGiftCoinRecordExample" >
    <!--@mbggenerated-->
    delete from COMP_GIFT_COIN_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminCompGiftCoinRecord" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="giftId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into COMP_GIFT_COIN_RECORD (DEPT_ID, COMP_NO, DEPT_NO, 
      GIFT_AMOUNT, ARCHIVE_IDS, CREATION_TIME
      )
    values (#{deptId,jdbcType=INTEGER}, #{compNo,jdbcType=VARCHAR}, #{deptNo,jdbcType=VARCHAR}, 
      #{giftAmount,jdbcType=INTEGER}, #{archiveIds,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminCompGiftCoinRecord" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="giftId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into COMP_GIFT_COIN_RECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="compNo != null" >
        COMP_NO,
      </if>
      <if test="deptNo != null" >
        DEPT_NO,
      </if>
      <if test="giftAmount != null" >
        GIFT_AMOUNT,
      </if>
      <if test="archiveIds != null" >
        ARCHIVE_IDS,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null" >
        #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="deptNo != null" >
        #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="giftAmount != null" >
        #{giftAmount,jdbcType=INTEGER},
      </if>
      <if test="archiveIds != null" >
        #{archiveIds,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminCompGiftCoinRecordExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from COMP_GIFT_COIN_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update COMP_GIFT_COIN_RECORD
    <set >
      <if test="record.giftId != null" >
        GIFT_ID = #{record.giftId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.compNo != null" >
        COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      </if>
      <if test="record.deptNo != null" >
        DEPT_NO = #{record.deptNo,jdbcType=VARCHAR},
      </if>
      <if test="record.giftAmount != null" >
        GIFT_AMOUNT = #{record.giftAmount,jdbcType=INTEGER},
      </if>
      <if test="record.archiveIds != null" >
        ARCHIVE_IDS = #{record.archiveIds,jdbcType=VARCHAR},
      </if>
      <if test="record.creationTime != null" >
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update COMP_GIFT_COIN_RECORD
    set GIFT_ID = #{record.giftId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      COMP_NO = #{record.compNo,jdbcType=VARCHAR},
      DEPT_NO = #{record.deptNo,jdbcType=VARCHAR},
      GIFT_AMOUNT = #{record.giftAmount,jdbcType=INTEGER},
      ARCHIVE_IDS = #{record.archiveIds,jdbcType=VARCHAR},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminCompGiftCoinRecord" >
    <!--@mbggenerated-->
    update COMP_GIFT_COIN_RECORD
    <set >
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null" >
        COMP_NO = #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="deptNo != null" >
        DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="giftAmount != null" >
        GIFT_AMOUNT = #{giftAmount,jdbcType=INTEGER},
      </if>
      <if test="archiveIds != null" >
        ARCHIVE_IDS = #{archiveIds,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where GIFT_ID = #{giftId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminCompGiftCoinRecord" >
    <!--@mbggenerated-->
    update COMP_GIFT_COIN_RECORD
    set DEPT_ID = #{deptId,jdbcType=INTEGER},
      COMP_NO = #{compNo,jdbcType=VARCHAR},
      DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      GIFT_AMOUNT = #{giftAmount,jdbcType=INTEGER},
      ARCHIVE_IDS = #{archiveIds,jdbcType=VARCHAR},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP}
    where GIFT_ID = #{giftId,jdbcType=INTEGER}
  </update>
</mapper>