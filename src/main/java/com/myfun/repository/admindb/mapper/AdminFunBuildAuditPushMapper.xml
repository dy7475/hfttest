<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunBuildAuditPushMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunBuildAuditPush">
    <!--@mbggenerated-->
    <id column="AUDIT_ID" jdbcType="INTEGER" property="auditId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="WINDOW_SHOW" jdbcType="TINYINT" property="windowShow" />
    <result column="AUDIT_COUNT" jdbcType="INTEGER" property="auditCount" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    AUDIT_ID, ARCHIVE_ID, WINDOW_SHOW, AUDIT_COUNT, UPDATE_TIME, CREATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminFunBuildAuditPushExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_BUILD_AUDIT_PUSH
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_BUILD_AUDIT_PUSH
    where AUDIT_ID = #{auditId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_BUILD_AUDIT_PUSH
    where AUDIT_ID = #{auditId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminFunBuildAuditPushExample">
    <!--@mbggenerated-->
    delete from FUN_BUILD_AUDIT_PUSH
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="auditId" parameterType="com.myfun.repository.admindb.po.AdminFunBuildAuditPush" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_BUILD_AUDIT_PUSH (ARCHIVE_ID, WINDOW_SHOW, AUDIT_COUNT, 
      UPDATE_TIME, CREATE_TIME)
    values (#{archiveId,jdbcType=INTEGER}, #{windowShow,jdbcType=TINYINT}, #{auditCount,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="auditId" parameterType="com.myfun.repository.admindb.po.AdminFunBuildAuditPush" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_BUILD_AUDIT_PUSH
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="windowShow != null">
        WINDOW_SHOW,
      </if>
      <if test="auditCount != null">
        AUDIT_COUNT,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="windowShow != null">
        #{windowShow,jdbcType=TINYINT},
      </if>
      <if test="auditCount != null">
        #{auditCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminFunBuildAuditPushExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_BUILD_AUDIT_PUSH
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_BUILD_AUDIT_PUSH
    <set>
      <if test="record.auditId != null">
        AUDIT_ID = #{record.auditId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.windowShow != null">
        WINDOW_SHOW = #{record.windowShow,jdbcType=TINYINT},
      </if>
      <if test="record.auditCount != null">
        AUDIT_COUNT = #{record.auditCount,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_BUILD_AUDIT_PUSH
    set AUDIT_ID = #{record.auditId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      WINDOW_SHOW = #{record.windowShow,jdbcType=TINYINT},
      AUDIT_COUNT = #{record.auditCount,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunBuildAuditPush">
    <!--@mbggenerated-->
    update FUN_BUILD_AUDIT_PUSH
    <set>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="windowShow != null">
        WINDOW_SHOW = #{windowShow,jdbcType=TINYINT},
      </if>
      <if test="auditCount != null">
        AUDIT_COUNT = #{auditCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where AUDIT_ID = #{auditId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunBuildAuditPush">
    <!--@mbggenerated-->
    update FUN_BUILD_AUDIT_PUSH
    set ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      WINDOW_SHOW = #{windowShow,jdbcType=TINYINT},
      AUDIT_COUNT = #{auditCount,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where AUDIT_ID = #{auditId,jdbcType=INTEGER}
  </update>
    <select id="getFunBuildAuditPushByArchiveId" parameterType="java.lang.Integer"
	resultMap="BaseResultMap">
	SELECT
	<include refid="Base_Column_List" />
	FROM
	FUN_BUILD_AUDIT_PUSH
	WHERE
	ARCHIVE_ID = #{archiveId,jdbcType=INTEGER}
</select>
</mapper>