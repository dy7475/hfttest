<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunDeptsActivityMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunDeptsActivity" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="ACTIVITY_TYPE" property="activityType" jdbcType="INTEGER" />
    <result column="CONTRACT_ID" property="contractId" jdbcType="INTEGER" />
    <result column="ACTIVITY_STATUS" property="activityStatus" jdbcType="TINYINT" />
    <result column="CREATION_TIME" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="CLEAR_TIME" property="clearTime" jdbcType="TIMESTAMP" />
    <result column="REFUND_TIME" property="refundTime" jdbcType="TIMESTAMP" />
    <result column="PT_ID" property="ptId" jdbcType="INTEGER" />
    <result column="ARCHIVE_UA_ID" property="archiveUaId" jdbcType="INTEGER" />
    <result column="AMOUNT" property="amount" jdbcType="DOUBLE" />
    <result column="FINAL_PAYMENT_STATUS" property="finalPaymentStatus" jdbcType="TINYINT" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, DEPT_ID, ACTIVITY_TYPE, CONTRACT_ID, ACTIVITY_STATUS, CREATION_TIME, CLEAR_TIME, 
    REFUND_TIME, PT_ID, ARCHIVE_UA_ID, AMOUNT, FINAL_PAYMENT_STATUS, COMP_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.admindb.po.AdminFunDeptsActivityExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_DEPTS_ACTIVITY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_DEPTS_ACTIVITY
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_DEPTS_ACTIVITY
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminFunDeptsActivityExample" >
    <!--@mbggenerated-->
    delete from FUN_DEPTS_ACTIVITY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunDeptsActivity" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_DEPTS_ACTIVITY (DEPT_ID, ACTIVITY_TYPE, CONTRACT_ID, 
      ACTIVITY_STATUS, CREATION_TIME, CLEAR_TIME, 
      REFUND_TIME, PT_ID, ARCHIVE_UA_ID, 
      AMOUNT, FINAL_PAYMENT_STATUS, COMP_ID
      )
    values (#{deptId,jdbcType=INTEGER}, #{activityType,jdbcType=INTEGER}, #{contractId,jdbcType=INTEGER}, 
      #{activityStatus,jdbcType=TINYINT}, #{creationTime,jdbcType=TIMESTAMP}, #{clearTime,jdbcType=TIMESTAMP}, 
      #{refundTime,jdbcType=TIMESTAMP}, #{ptId,jdbcType=INTEGER}, #{archiveUaId,jdbcType=INTEGER}, 
      #{amount,jdbcType=DOUBLE}, #{finalPaymentStatus,jdbcType=TINYINT}, #{compId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunDeptsActivity" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into FUN_DEPTS_ACTIVITY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="activityType != null" >
        ACTIVITY_TYPE,
      </if>
      <if test="contractId != null" >
        CONTRACT_ID,
      </if>
      <if test="activityStatus != null" >
        ACTIVITY_STATUS,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
      <if test="clearTime != null" >
        CLEAR_TIME,
      </if>
      <if test="refundTime != null" >
        REFUND_TIME,
      </if>
      <if test="ptId != null" >
        PT_ID,
      </if>
      <if test="archiveUaId != null" >
        ARCHIVE_UA_ID,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="finalPaymentStatus != null" >
        FINAL_PAYMENT_STATUS,
      </if>
      <if test="compId != null" >
        COMP_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="activityType != null" >
        #{activityType,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="activityStatus != null" >
        #{activityStatus,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clearTime != null" >
        #{clearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null" >
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ptId != null" >
        #{ptId,jdbcType=INTEGER},
      </if>
      <if test="archiveUaId != null" >
        #{archiveUaId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="finalPaymentStatus != null" >
        #{finalPaymentStatus,jdbcType=TINYINT},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminFunDeptsActivityExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from FUN_DEPTS_ACTIVITY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_DEPTS_ACTIVITY
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.activityType != null" >
        ACTIVITY_TYPE = #{record.activityType,jdbcType=INTEGER},
      </if>
      <if test="record.contractId != null" >
        CONTRACT_ID = #{record.contractId,jdbcType=INTEGER},
      </if>
      <if test="record.activityStatus != null" >
        ACTIVITY_STATUS = #{record.activityStatus,jdbcType=TINYINT},
      </if>
      <if test="record.creationTime != null" >
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.clearTime != null" >
        CLEAR_TIME = #{record.clearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundTime != null" >
        REFUND_TIME = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ptId != null" >
        PT_ID = #{record.ptId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveUaId != null" >
        ARCHIVE_UA_ID = #{record.archiveUaId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        AMOUNT = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.finalPaymentStatus != null" >
        FINAL_PAYMENT_STATUS = #{record.finalPaymentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.compId != null" >
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update FUN_DEPTS_ACTIVITY
    set ID = #{record.id,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      ACTIVITY_TYPE = #{record.activityType,jdbcType=INTEGER},
      CONTRACT_ID = #{record.contractId,jdbcType=INTEGER},
      ACTIVITY_STATUS = #{record.activityStatus,jdbcType=TINYINT},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      CLEAR_TIME = #{record.clearTime,jdbcType=TIMESTAMP},
      REFUND_TIME = #{record.refundTime,jdbcType=TIMESTAMP},
      PT_ID = #{record.ptId,jdbcType=INTEGER},
      ARCHIVE_UA_ID = #{record.archiveUaId,jdbcType=INTEGER},
      AMOUNT = #{record.amount,jdbcType=DOUBLE},
      FINAL_PAYMENT_STATUS = #{record.finalPaymentStatus,jdbcType=TINYINT},
      COMP_ID = #{record.compId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunDeptsActivity" >
    <!--@mbggenerated-->
    update FUN_DEPTS_ACTIVITY
    <set >
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="activityType != null" >
        ACTIVITY_TYPE = #{activityType,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        CONTRACT_ID = #{contractId,jdbcType=INTEGER},
      </if>
      <if test="activityStatus != null" >
        ACTIVITY_STATUS = #{activityStatus,jdbcType=TINYINT},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clearTime != null" >
        CLEAR_TIME = #{clearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null" >
        REFUND_TIME = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ptId != null" >
        PT_ID = #{ptId,jdbcType=INTEGER},
      </if>
      <if test="archiveUaId != null" >
        ARCHIVE_UA_ID = #{archiveUaId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="finalPaymentStatus != null" >
        FINAL_PAYMENT_STATUS = #{finalPaymentStatus,jdbcType=TINYINT},
      </if>
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunDeptsActivity" >
    <!--@mbggenerated-->
    update FUN_DEPTS_ACTIVITY
    set DEPT_ID = #{deptId,jdbcType=INTEGER},
      ACTIVITY_TYPE = #{activityType,jdbcType=INTEGER},
      CONTRACT_ID = #{contractId,jdbcType=INTEGER},
      ACTIVITY_STATUS = #{activityStatus,jdbcType=TINYINT},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      CLEAR_TIME = #{clearTime,jdbcType=TIMESTAMP},
      REFUND_TIME = #{refundTime,jdbcType=TIMESTAMP},
      PT_ID = #{ptId,jdbcType=INTEGER},
      ARCHIVE_UA_ID = #{archiveUaId,jdbcType=INTEGER},
      AMOUNT = #{amount,jdbcType=DOUBLE},
      FINAL_PAYMENT_STATUS = #{finalPaymentStatus,jdbcType=TINYINT},
      COMP_ID = #{compId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>