<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminCrmFunContractMapper">
	<resultMap extends="BaseResultMap" id="SoftContractDto" type="com.myfun.repository.admindb.dto.SoftContractDto">
		<result column="WEI_CONTRACT_NO" jdbcType="VARCHAR" property="weiContractNo" />
		<result column="CONTRACT_STATUS" jdbcType="INTEGER" property="contractStatus" />
		<result column="WEI_CONTRACT_ID" jdbcType="INTEGER" property="weiContractId" />
		<result column="WEI_CONTRACT_HTML" jdbcType="VARCHAR" property="weiContractHtml" />
		<result column="WEI_CONTRACT_PATH" jdbcType="VARCHAR" property="weiContractPath" />
		<result column="WEI_TOTAL_PRICE" jdbcType="DOUBLE" property="weiTotalPrice" />
	</resultMap>
	
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminCrmFunContract">
    <!--@mbggenerated-->
    <id column="CONTRACT_ID" jdbcType="INTEGER" property="contractId" />
    <result column="CRM_COMP_ID" jdbcType="INTEGER" property="crmCompId" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="CONTRACT_NO" jdbcType="VARCHAR" property="contractNo" />
    <result column="PARTY_A" jdbcType="VARCHAR" property="partyA" />
    <result column="PARTY_A_ADDR" jdbcType="VARCHAR" property="partyAAddr" />
    <result column="PARTY_A_TEL" jdbcType="VARCHAR" property="partyATel" />
    <result column="PARTY_A_LINKMAN" jdbcType="VARCHAR" property="partyALinkman" />
    <result column="PARTY_A_LINKMOBILE" jdbcType="VARCHAR" property="partyALinkmobile" />
    <result column="PARTY_A_AGENT" jdbcType="VARCHAR" property="partyAAgent" />
    <result column="PARTY_B" jdbcType="VARCHAR" property="partyB" />
    <result column="PARTY_B_ADDR" jdbcType="VARCHAR" property="partyBAddr" />
    <result column="PARTY_B_TEL" jdbcType="VARCHAR" property="partyBTel" />
    <result column="PARTY_B_ID" jdbcType="INTEGER" property="partyBId" />
    <result column="PARTY_B_AGENT" jdbcType="VARCHAR" property="partyBAgent" />
    <result column="SPACE_PRICE" jdbcType="DOUBLE" property="spacePrice" />
    <result column="SPACE_PAY_YEAR" jdbcType="INTEGER" property="spacePayYear" />
    <result column="SPACE_FREE_YEAR" jdbcType="INTEGER" property="spaceFreeYear" />
    <result column="SOFT_SUIT" jdbcType="INTEGER" property="softSuit" />
    <result column="UNIT_PRICE" jdbcType="DOUBLE" property="unitPrice" />
    <result column="TOTAL_PRICE" jdbcType="DOUBLE" property="totalPrice" />
    <result column="TOTAL_PRICE_CN" jdbcType="VARCHAR" property="totalPriceCn" />
    <result column="TOTAL_AMOUNT" jdbcType="DOUBLE" property="totalAmount" />
    <result column="TOTAL_AMOUNT_CN" jdbcType="VARCHAR" property="totalAmountCn" />
    <result column="PAY_RATE" jdbcType="INTEGER" property="payRate" />
    <result column="SIGN_DATE" jdbcType="TIMESTAMP" property="signDate" />
    <result column="SIGN_EXAM" jdbcType="INTEGER" property="signExam" />
    <result column="SIGN_STATUS" jdbcType="INTEGER" property="signStatus" />
    <result column="CONTRACT_PATH" jdbcType="VARCHAR" property="contractPath" />
    <result column="CONTRACT_HTML" jdbcType="VARCHAR" property="contractHtml" />
    <result column="SAFETY_PATH" jdbcType="VARCHAR" property="safetyPath" />
    <result column="UPGRADE_PROTOCOL" jdbcType="VARCHAR" property="upgradeProtocol" />
    <result column="PAY_TYPE" jdbcType="INTEGER" property="payType" />
    <result column="SERVICE_GIFT" jdbcType="INTEGER" property="serviceGift" />
    <result column="SRV_GIFT_EXTRA" jdbcType="INTEGER" property="srvGiftExtra" />
    <result column="STAGE_YEAR" jdbcType="INTEGER" property="stageYear" />
    <result column="PAY_GIFTED" jdbcType="INTEGER" property="payGifted" />
    <result column="GIFT_TYPE" jdbcType="TINYINT" property="giftType" />
    <result column="GIFT_PRICE" jdbcType="INTEGER" property="giftPrice" />
    <result column="SIGN_USER" jdbcType="INTEGER" property="signUser" />
    <result column="SIGN_TIME" jdbcType="TIMESTAMP" property="signTime" />
    <result column="REQ_UID" jdbcType="INTEGER" property="reqUid" />
    <result column="REQ_TIME" jdbcType="TIMESTAMP" property="reqTime" />
    <result column="EXAM_UID" jdbcType="INTEGER" property="examUid" />
    <result column="GIFT_TIME" jdbcType="TIMESTAMP" property="giftTime" />
    <result column="CREATION_UID" jdbcType="INTEGER" property="creationUid" />
    <result column="TRAIN" jdbcType="INTEGER" property="train" />
    <result column="TICKET" jdbcType="INTEGER" property="ticket" />
    <result column="CONTRACT_VERSION" jdbcType="VARCHAR" property="contractVersion" />
    <result column="BIND_OPEN_WEIXIN" jdbcType="TINYINT" property="bindOpenWeixin" />
    <result column="YOU_DISCOUNT_EXAM" jdbcType="TINYINT" property="youDiscountExam" />
    <result column="CONTRACT_TIME" jdbcType="TIMESTAMP" property="contractTime" />
    <result column="BIND_CUST_LEVEL" jdbcType="TINYINT" property="bindCustLevel" />
    <result column="PAY_MODEL" jdbcType="TINYINT" property="payModel" />
    <result column="IS_REFUND_PAY" jdbcType="TINYINT" property="isRefundPay" />
    <result column="PAY_MODEL_EXAMFLAG" jdbcType="TINYINT" property="payModelExamflag" />
    <result column="PAY_MODEL_EXAMTIME" jdbcType="TIMESTAMP" property="payModelExamtime" />
    <result column="CUST_LEVEL_PRICE" jdbcType="DOUBLE" property="custLevelPrice" />
    <result column="ACTIVITY_NUM" jdbcType="VARCHAR" property="activityNum" />
    <result column="GIFT_VR_NUM" jdbcType="INTEGER" property="giftVrNum" />
    <result column="TRAIN_TICKET" jdbcType="INTEGER" property="trainTicket" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
    <result column="CONTRACT_TYPE" jdbcType="TINYINT" property="contractType" />
    <result column="SOFT_RATE" jdbcType="NUMERIC" property="softRate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.myfun.repository.admindb.po.AdminCrmFunContract">
    <!--@mbggenerated-->
    <result column="CONTRACT_JSON" jdbcType="CLOB" property="contractJson" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    CONTRACT_ID, CRM_COMP_ID, DEPT_ID, CONTRACT_NO, PARTY_A, PARTY_A_ADDR, PARTY_A_TEL, 
    PARTY_A_LINKMAN, PARTY_A_LINKMOBILE, PARTY_A_AGENT, PARTY_B, PARTY_B_ADDR, PARTY_B_TEL, 
    PARTY_B_ID, PARTY_B_AGENT, SPACE_PRICE, SPACE_PAY_YEAR, SPACE_FREE_YEAR, SOFT_SUIT, 
    UNIT_PRICE, TOTAL_PRICE, TOTAL_PRICE_CN, TOTAL_AMOUNT, TOTAL_AMOUNT_CN, PAY_RATE, 
    SIGN_DATE, SIGN_EXAM, SIGN_STATUS, CONTRACT_PATH, CONTRACT_HTML, SAFETY_PATH, UPGRADE_PROTOCOL, 
    PAY_TYPE, SERVICE_GIFT, SRV_GIFT_EXTRA, STAGE_YEAR, PAY_GIFTED, GIFT_TYPE, GIFT_PRICE, 
    SIGN_USER, SIGN_TIME, REQ_UID, REQ_TIME, EXAM_UID, GIFT_TIME, CREATION_UID, TRAIN, 
    TICKET, CONTRACT_VERSION, BIND_OPEN_WEIXIN, YOU_DISCOUNT_EXAM, CONTRACT_TIME, BIND_CUST_LEVEL, 
    PAY_MODEL, IS_REFUND_PAY, PAY_MODEL_EXAMFLAG, PAY_MODEL_EXAMTIME, CUST_LEVEL_PRICE, 
    ACTIVITY_NUM, GIFT_VR_NUM, TRAIN_TICKET, [STATUS], CONTRACT_TYPE, SOFT_RATE
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbggenerated-->
    CONTRACT_JSON
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContractExample" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from CRM_FUN_CONTRACT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContractExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CRM_FUN_CONTRACT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from CRM_FUN_CONTRACT
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from CRM_FUN_CONTRACT
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContractExample">
    <!--@mbggenerated-->
    delete from CRM_FUN_CONTRACT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContract">
    <!--@mbggenerated-->
    <selectKey keyProperty="contractId" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into CRM_FUN_CONTRACT (CRM_COMP_ID, DEPT_ID, CONTRACT_NO, 
      PARTY_A, PARTY_A_ADDR, PARTY_A_TEL, 
      PARTY_A_LINKMAN, PARTY_A_LINKMOBILE, PARTY_A_AGENT, 
      PARTY_B, PARTY_B_ADDR, PARTY_B_TEL, 
      PARTY_B_ID, PARTY_B_AGENT, SPACE_PRICE, 
      SPACE_PAY_YEAR, SPACE_FREE_YEAR, SOFT_SUIT, 
      UNIT_PRICE, TOTAL_PRICE, TOTAL_PRICE_CN, 
      TOTAL_AMOUNT, TOTAL_AMOUNT_CN, PAY_RATE, 
      SIGN_DATE, SIGN_EXAM, SIGN_STATUS, 
      CONTRACT_PATH, CONTRACT_HTML, SAFETY_PATH, 
      UPGRADE_PROTOCOL, PAY_TYPE, SERVICE_GIFT, 
      SRV_GIFT_EXTRA, STAGE_YEAR, PAY_GIFTED, 
      GIFT_TYPE, GIFT_PRICE, SIGN_USER, 
      SIGN_TIME, REQ_UID, REQ_TIME, 
      EXAM_UID, GIFT_TIME, CREATION_UID, 
      TRAIN, TICKET, CONTRACT_VERSION, 
      BIND_OPEN_WEIXIN, YOU_DISCOUNT_EXAM, CONTRACT_TIME, 
      BIND_CUST_LEVEL, PAY_MODEL, IS_REFUND_PAY, 
      PAY_MODEL_EXAMFLAG, PAY_MODEL_EXAMTIME, CUST_LEVEL_PRICE, 
      ACTIVITY_NUM, GIFT_VR_NUM, TRAIN_TICKET, 
      [STATUS], CONTRACT_TYPE, SOFT_RATE, 
      CONTRACT_JSON)
    values (#{crmCompId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{contractNo,jdbcType=VARCHAR}, 
      #{partyA,jdbcType=VARCHAR}, #{partyAAddr,jdbcType=VARCHAR}, #{partyATel,jdbcType=VARCHAR}, 
      #{partyALinkman,jdbcType=VARCHAR}, #{partyALinkmobile,jdbcType=VARCHAR}, #{partyAAgent,jdbcType=VARCHAR}, 
      #{partyB,jdbcType=VARCHAR}, #{partyBAddr,jdbcType=VARCHAR}, #{partyBTel,jdbcType=VARCHAR}, 
      #{partyBId,jdbcType=INTEGER}, #{partyBAgent,jdbcType=VARCHAR}, #{spacePrice,jdbcType=DOUBLE}, 
      #{spacePayYear,jdbcType=INTEGER}, #{spaceFreeYear,jdbcType=INTEGER}, #{softSuit,jdbcType=INTEGER}, 
      #{unitPrice,jdbcType=DOUBLE}, #{totalPrice,jdbcType=DOUBLE}, #{totalPriceCn,jdbcType=VARCHAR}, 
      #{totalAmount,jdbcType=DOUBLE}, #{totalAmountCn,jdbcType=VARCHAR}, #{payRate,jdbcType=INTEGER}, 
      #{signDate,jdbcType=TIMESTAMP}, #{signExam,jdbcType=INTEGER}, #{signStatus,jdbcType=INTEGER}, 
      #{contractPath,jdbcType=VARCHAR}, #{contractHtml,jdbcType=VARCHAR}, #{safetyPath,jdbcType=VARCHAR}, 
      #{upgradeProtocol,jdbcType=VARCHAR}, #{payType,jdbcType=INTEGER}, #{serviceGift,jdbcType=INTEGER}, 
      #{srvGiftExtra,jdbcType=INTEGER}, #{stageYear,jdbcType=INTEGER}, #{payGifted,jdbcType=INTEGER}, 
      #{giftType,jdbcType=TINYINT}, #{giftPrice,jdbcType=INTEGER}, #{signUser,jdbcType=INTEGER}, 
      #{signTime,jdbcType=TIMESTAMP}, #{reqUid,jdbcType=INTEGER}, #{reqTime,jdbcType=TIMESTAMP}, 
      #{examUid,jdbcType=INTEGER}, #{giftTime,jdbcType=TIMESTAMP}, #{creationUid,jdbcType=INTEGER}, 
      #{train,jdbcType=INTEGER}, #{ticket,jdbcType=INTEGER}, #{contractVersion,jdbcType=VARCHAR}, 
      #{bindOpenWeixin,jdbcType=TINYINT}, #{youDiscountExam,jdbcType=TINYINT}, #{contractTime,jdbcType=TIMESTAMP}, 
      #{bindCustLevel,jdbcType=TINYINT}, #{payModel,jdbcType=TINYINT}, #{isRefundPay,jdbcType=TINYINT}, 
      #{payModelExamflag,jdbcType=TINYINT}, #{payModelExamtime,jdbcType=TIMESTAMP}, #{custLevelPrice,jdbcType=DOUBLE}, 
      #{activityNum,jdbcType=VARCHAR}, #{giftVrNum,jdbcType=INTEGER}, #{trainTicket,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{contractType,jdbcType=TINYINT}, #{softRate,jdbcType=NUMERIC}, 
      #{contractJson,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContract">
    <!--@mbggenerated-->
    <selectKey keyProperty="contractId" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into CRM_FUN_CONTRACT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="crmCompId != null">
        CRM_COMP_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="contractNo != null">
        CONTRACT_NO,
      </if>
      <if test="partyA != null">
        PARTY_A,
      </if>
      <if test="partyAAddr != null">
        PARTY_A_ADDR,
      </if>
      <if test="partyATel != null">
        PARTY_A_TEL,
      </if>
      <if test="partyALinkman != null">
        PARTY_A_LINKMAN,
      </if>
      <if test="partyALinkmobile != null">
        PARTY_A_LINKMOBILE,
      </if>
      <if test="partyAAgent != null">
        PARTY_A_AGENT,
      </if>
      <if test="partyB != null">
        PARTY_B,
      </if>
      <if test="partyBAddr != null">
        PARTY_B_ADDR,
      </if>
      <if test="partyBTel != null">
        PARTY_B_TEL,
      </if>
      <if test="partyBId != null">
        PARTY_B_ID,
      </if>
      <if test="partyBAgent != null">
        PARTY_B_AGENT,
      </if>
      <if test="spacePrice != null">
        SPACE_PRICE,
      </if>
      <if test="spacePayYear != null">
        SPACE_PAY_YEAR,
      </if>
      <if test="spaceFreeYear != null">
        SPACE_FREE_YEAR,
      </if>
      <if test="softSuit != null">
        SOFT_SUIT,
      </if>
      <if test="unitPrice != null">
        UNIT_PRICE,
      </if>
      <if test="totalPrice != null">
        TOTAL_PRICE,
      </if>
      <if test="totalPriceCn != null">
        TOTAL_PRICE_CN,
      </if>
      <if test="totalAmount != null">
        TOTAL_AMOUNT,
      </if>
      <if test="totalAmountCn != null">
        TOTAL_AMOUNT_CN,
      </if>
      <if test="payRate != null">
        PAY_RATE,
      </if>
      <if test="signDate != null">
        SIGN_DATE,
      </if>
      <if test="signExam != null">
        SIGN_EXAM,
      </if>
      <if test="signStatus != null">
        SIGN_STATUS,
      </if>
      <if test="contractPath != null">
        CONTRACT_PATH,
      </if>
      <if test="contractHtml != null">
        CONTRACT_HTML,
      </if>
      <if test="safetyPath != null">
        SAFETY_PATH,
      </if>
      <if test="upgradeProtocol != null">
        UPGRADE_PROTOCOL,
      </if>
      <if test="payType != null">
        PAY_TYPE,
      </if>
      <if test="serviceGift != null">
        SERVICE_GIFT,
      </if>
      <if test="srvGiftExtra != null">
        SRV_GIFT_EXTRA,
      </if>
      <if test="stageYear != null">
        STAGE_YEAR,
      </if>
      <if test="payGifted != null">
        PAY_GIFTED,
      </if>
      <if test="giftType != null">
        GIFT_TYPE,
      </if>
      <if test="giftPrice != null">
        GIFT_PRICE,
      </if>
      <if test="signUser != null">
        SIGN_USER,
      </if>
      <if test="signTime != null">
        SIGN_TIME,
      </if>
      <if test="reqUid != null">
        REQ_UID,
      </if>
      <if test="reqTime != null">
        REQ_TIME,
      </if>
      <if test="examUid != null">
        EXAM_UID,
      </if>
      <if test="giftTime != null">
        GIFT_TIME,
      </if>
      <if test="creationUid != null">
        CREATION_UID,
      </if>
      <if test="train != null">
        TRAIN,
      </if>
      <if test="ticket != null">
        TICKET,
      </if>
      <if test="contractVersion != null">
        CONTRACT_VERSION,
      </if>
      <if test="bindOpenWeixin != null">
        BIND_OPEN_WEIXIN,
      </if>
      <if test="youDiscountExam != null">
        YOU_DISCOUNT_EXAM,
      </if>
      <if test="contractTime != null">
        CONTRACT_TIME,
      </if>
      <if test="bindCustLevel != null">
        BIND_CUST_LEVEL,
      </if>
      <if test="payModel != null">
        PAY_MODEL,
      </if>
      <if test="isRefundPay != null">
        IS_REFUND_PAY,
      </if>
      <if test="payModelExamflag != null">
        PAY_MODEL_EXAMFLAG,
      </if>
      <if test="payModelExamtime != null">
        PAY_MODEL_EXAMTIME,
      </if>
      <if test="custLevelPrice != null">
        CUST_LEVEL_PRICE,
      </if>
      <if test="activityNum != null">
        ACTIVITY_NUM,
      </if>
      <if test="giftVrNum != null">
        GIFT_VR_NUM,
      </if>
      <if test="trainTicket != null">
        TRAIN_TICKET,
      </if>
      <if test="status != null">
        [STATUS],
      </if>
      <if test="contractType != null">
        CONTRACT_TYPE,
      </if>
      <if test="softRate != null">
        SOFT_RATE,
      </if>
      <if test="contractJson != null">
        CONTRACT_JSON,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="crmCompId != null">
        #{crmCompId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="partyA != null">
        #{partyA,jdbcType=VARCHAR},
      </if>
      <if test="partyAAddr != null">
        #{partyAAddr,jdbcType=VARCHAR},
      </if>
      <if test="partyATel != null">
        #{partyATel,jdbcType=VARCHAR},
      </if>
      <if test="partyALinkman != null">
        #{partyALinkman,jdbcType=VARCHAR},
      </if>
      <if test="partyALinkmobile != null">
        #{partyALinkmobile,jdbcType=VARCHAR},
      </if>
      <if test="partyAAgent != null">
        #{partyAAgent,jdbcType=VARCHAR},
      </if>
      <if test="partyB != null">
        #{partyB,jdbcType=VARCHAR},
      </if>
      <if test="partyBAddr != null">
        #{partyBAddr,jdbcType=VARCHAR},
      </if>
      <if test="partyBTel != null">
        #{partyBTel,jdbcType=VARCHAR},
      </if>
      <if test="partyBId != null">
        #{partyBId,jdbcType=INTEGER},
      </if>
      <if test="partyBAgent != null">
        #{partyBAgent,jdbcType=VARCHAR},
      </if>
      <if test="spacePrice != null">
        #{spacePrice,jdbcType=DOUBLE},
      </if>
      <if test="spacePayYear != null">
        #{spacePayYear,jdbcType=INTEGER},
      </if>
      <if test="spaceFreeYear != null">
        #{spaceFreeYear,jdbcType=INTEGER},
      </if>
      <if test="softSuit != null">
        #{softSuit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="totalPriceCn != null">
        #{totalPriceCn,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="totalAmountCn != null">
        #{totalAmountCn,jdbcType=VARCHAR},
      </if>
      <if test="payRate != null">
        #{payRate,jdbcType=INTEGER},
      </if>
      <if test="signDate != null">
        #{signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signExam != null">
        #{signExam,jdbcType=INTEGER},
      </if>
      <if test="signStatus != null">
        #{signStatus,jdbcType=INTEGER},
      </if>
      <if test="contractPath != null">
        #{contractPath,jdbcType=VARCHAR},
      </if>
      <if test="contractHtml != null">
        #{contractHtml,jdbcType=VARCHAR},
      </if>
      <if test="safetyPath != null">
        #{safetyPath,jdbcType=VARCHAR},
      </if>
      <if test="upgradeProtocol != null">
        #{upgradeProtocol,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="serviceGift != null">
        #{serviceGift,jdbcType=INTEGER},
      </if>
      <if test="srvGiftExtra != null">
        #{srvGiftExtra,jdbcType=INTEGER},
      </if>
      <if test="stageYear != null">
        #{stageYear,jdbcType=INTEGER},
      </if>
      <if test="payGifted != null">
        #{payGifted,jdbcType=INTEGER},
      </if>
      <if test="giftType != null">
        #{giftType,jdbcType=TINYINT},
      </if>
      <if test="giftPrice != null">
        #{giftPrice,jdbcType=INTEGER},
      </if>
      <if test="signUser != null">
        #{signUser,jdbcType=INTEGER},
      </if>
      <if test="signTime != null">
        #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqUid != null">
        #{reqUid,jdbcType=INTEGER},
      </if>
      <if test="reqTime != null">
        #{reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examUid != null">
        #{examUid,jdbcType=INTEGER},
      </if>
      <if test="giftTime != null">
        #{giftTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creationUid != null">
        #{creationUid,jdbcType=INTEGER},
      </if>
      <if test="train != null">
        #{train,jdbcType=INTEGER},
      </if>
      <if test="ticket != null">
        #{ticket,jdbcType=INTEGER},
      </if>
      <if test="contractVersion != null">
        #{contractVersion,jdbcType=VARCHAR},
      </if>
      <if test="bindOpenWeixin != null">
        #{bindOpenWeixin,jdbcType=TINYINT},
      </if>
      <if test="youDiscountExam != null">
        #{youDiscountExam,jdbcType=TINYINT},
      </if>
      <if test="contractTime != null">
        #{contractTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bindCustLevel != null">
        #{bindCustLevel,jdbcType=TINYINT},
      </if>
      <if test="payModel != null">
        #{payModel,jdbcType=TINYINT},
      </if>
      <if test="isRefundPay != null">
        #{isRefundPay,jdbcType=TINYINT},
      </if>
      <if test="payModelExamflag != null">
        #{payModelExamflag,jdbcType=TINYINT},
      </if>
      <if test="payModelExamtime != null">
        #{payModelExamtime,jdbcType=TIMESTAMP},
      </if>
      <if test="custLevelPrice != null">
        #{custLevelPrice,jdbcType=DOUBLE},
      </if>
      <if test="activityNum != null">
        #{activityNum,jdbcType=VARCHAR},
      </if>
      <if test="giftVrNum != null">
        #{giftVrNum,jdbcType=INTEGER},
      </if>
      <if test="trainTicket != null">
        #{trainTicket,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="contractType != null">
        #{contractType,jdbcType=TINYINT},
      </if>
      <if test="softRate != null">
        #{softRate,jdbcType=NUMERIC},
      </if>
      <if test="contractJson != null">
        #{contractJson,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContractExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from CRM_FUN_CONTRACT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update CRM_FUN_CONTRACT
    <set>
      <if test="record.contractId != null">
        CONTRACT_ID = #{record.contractId,jdbcType=INTEGER},
      </if>
      <if test="record.crmCompId != null">
        CRM_COMP_ID = #{record.crmCompId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.contractNo != null">
        CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.partyA != null">
        PARTY_A = #{record.partyA,jdbcType=VARCHAR},
      </if>
      <if test="record.partyAAddr != null">
        PARTY_A_ADDR = #{record.partyAAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.partyATel != null">
        PARTY_A_TEL = #{record.partyATel,jdbcType=VARCHAR},
      </if>
      <if test="record.partyALinkman != null">
        PARTY_A_LINKMAN = #{record.partyALinkman,jdbcType=VARCHAR},
      </if>
      <if test="record.partyALinkmobile != null">
        PARTY_A_LINKMOBILE = #{record.partyALinkmobile,jdbcType=VARCHAR},
      </if>
      <if test="record.partyAAgent != null">
        PARTY_A_AGENT = #{record.partyAAgent,jdbcType=VARCHAR},
      </if>
      <if test="record.partyB != null">
        PARTY_B = #{record.partyB,jdbcType=VARCHAR},
      </if>
      <if test="record.partyBAddr != null">
        PARTY_B_ADDR = #{record.partyBAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.partyBTel != null">
        PARTY_B_TEL = #{record.partyBTel,jdbcType=VARCHAR},
      </if>
      <if test="record.partyBId != null">
        PARTY_B_ID = #{record.partyBId,jdbcType=INTEGER},
      </if>
      <if test="record.partyBAgent != null">
        PARTY_B_AGENT = #{record.partyBAgent,jdbcType=VARCHAR},
      </if>
      <if test="record.spacePrice != null">
        SPACE_PRICE = #{record.spacePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.spacePayYear != null">
        SPACE_PAY_YEAR = #{record.spacePayYear,jdbcType=INTEGER},
      </if>
      <if test="record.spaceFreeYear != null">
        SPACE_FREE_YEAR = #{record.spaceFreeYear,jdbcType=INTEGER},
      </if>
      <if test="record.softSuit != null">
        SOFT_SUIT = #{record.softSuit,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        UNIT_PRICE = #{record.unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.totalPrice != null">
        TOTAL_PRICE = #{record.totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.totalPriceCn != null">
        TOTAL_PRICE_CN = #{record.totalPriceCn,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null">
        TOTAL_AMOUNT = #{record.totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.totalAmountCn != null">
        TOTAL_AMOUNT_CN = #{record.totalAmountCn,jdbcType=VARCHAR},
      </if>
      <if test="record.payRate != null">
        PAY_RATE = #{record.payRate,jdbcType=INTEGER},
      </if>
      <if test="record.signDate != null">
        SIGN_DATE = #{record.signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signExam != null">
        SIGN_EXAM = #{record.signExam,jdbcType=INTEGER},
      </if>
      <if test="record.signStatus != null">
        SIGN_STATUS = #{record.signStatus,jdbcType=INTEGER},
      </if>
      <if test="record.contractPath != null">
        CONTRACT_PATH = #{record.contractPath,jdbcType=VARCHAR},
      </if>
      <if test="record.contractHtml != null">
        CONTRACT_HTML = #{record.contractHtml,jdbcType=VARCHAR},
      </if>
      <if test="record.safetyPath != null">
        SAFETY_PATH = #{record.safetyPath,jdbcType=VARCHAR},
      </if>
      <if test="record.upgradeProtocol != null">
        UPGRADE_PROTOCOL = #{record.upgradeProtocol,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null">
        PAY_TYPE = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.serviceGift != null">
        SERVICE_GIFT = #{record.serviceGift,jdbcType=INTEGER},
      </if>
      <if test="record.srvGiftExtra != null">
        SRV_GIFT_EXTRA = #{record.srvGiftExtra,jdbcType=INTEGER},
      </if>
      <if test="record.stageYear != null">
        STAGE_YEAR = #{record.stageYear,jdbcType=INTEGER},
      </if>
      <if test="record.payGifted != null">
        PAY_GIFTED = #{record.payGifted,jdbcType=INTEGER},
      </if>
      <if test="record.giftType != null">
        GIFT_TYPE = #{record.giftType,jdbcType=TINYINT},
      </if>
      <if test="record.giftPrice != null">
        GIFT_PRICE = #{record.giftPrice,jdbcType=INTEGER},
      </if>
      <if test="record.signUser != null">
        SIGN_USER = #{record.signUser,jdbcType=INTEGER},
      </if>
      <if test="record.signTime != null">
        SIGN_TIME = #{record.signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reqUid != null">
        REQ_UID = #{record.reqUid,jdbcType=INTEGER},
      </if>
      <if test="record.reqTime != null">
        REQ_TIME = #{record.reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.examUid != null">
        EXAM_UID = #{record.examUid,jdbcType=INTEGER},
      </if>
      <if test="record.giftTime != null">
        GIFT_TIME = #{record.giftTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creationUid != null">
        CREATION_UID = #{record.creationUid,jdbcType=INTEGER},
      </if>
      <if test="record.train != null">
        TRAIN = #{record.train,jdbcType=INTEGER},
      </if>
      <if test="record.ticket != null">
        TICKET = #{record.ticket,jdbcType=INTEGER},
      </if>
      <if test="record.contractVersion != null">
        CONTRACT_VERSION = #{record.contractVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.bindOpenWeixin != null">
        BIND_OPEN_WEIXIN = #{record.bindOpenWeixin,jdbcType=TINYINT},
      </if>
      <if test="record.youDiscountExam != null">
        YOU_DISCOUNT_EXAM = #{record.youDiscountExam,jdbcType=TINYINT},
      </if>
      <if test="record.contractTime != null">
        CONTRACT_TIME = #{record.contractTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bindCustLevel != null">
        BIND_CUST_LEVEL = #{record.bindCustLevel,jdbcType=TINYINT},
      </if>
      <if test="record.payModel != null">
        PAY_MODEL = #{record.payModel,jdbcType=TINYINT},
      </if>
      <if test="record.isRefundPay != null">
        IS_REFUND_PAY = #{record.isRefundPay,jdbcType=TINYINT},
      </if>
      <if test="record.payModelExamflag != null">
        PAY_MODEL_EXAMFLAG = #{record.payModelExamflag,jdbcType=TINYINT},
      </if>
      <if test="record.payModelExamtime != null">
        PAY_MODEL_EXAMTIME = #{record.payModelExamtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.custLevelPrice != null">
        CUST_LEVEL_PRICE = #{record.custLevelPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.activityNum != null">
        ACTIVITY_NUM = #{record.activityNum,jdbcType=VARCHAR},
      </if>
      <if test="record.giftVrNum != null">
        GIFT_VR_NUM = #{record.giftVrNum,jdbcType=INTEGER},
      </if>
      <if test="record.trainTicket != null">
        TRAIN_TICKET = #{record.trainTicket,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        [STATUS] = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.contractType != null">
        CONTRACT_TYPE = #{record.contractType,jdbcType=TINYINT},
      </if>
      <if test="record.softRate != null">
        SOFT_RATE = #{record.softRate,jdbcType=NUMERIC},
      </if>
      <if test="record.contractJson != null">
        CONTRACT_JSON = #{record.contractJson,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--@mbggenerated-->
    update CRM_FUN_CONTRACT
    set CONTRACT_ID = #{record.contractId,jdbcType=INTEGER},
      CRM_COMP_ID = #{record.crmCompId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      PARTY_A = #{record.partyA,jdbcType=VARCHAR},
      PARTY_A_ADDR = #{record.partyAAddr,jdbcType=VARCHAR},
      PARTY_A_TEL = #{record.partyATel,jdbcType=VARCHAR},
      PARTY_A_LINKMAN = #{record.partyALinkman,jdbcType=VARCHAR},
      PARTY_A_LINKMOBILE = #{record.partyALinkmobile,jdbcType=VARCHAR},
      PARTY_A_AGENT = #{record.partyAAgent,jdbcType=VARCHAR},
      PARTY_B = #{record.partyB,jdbcType=VARCHAR},
      PARTY_B_ADDR = #{record.partyBAddr,jdbcType=VARCHAR},
      PARTY_B_TEL = #{record.partyBTel,jdbcType=VARCHAR},
      PARTY_B_ID = #{record.partyBId,jdbcType=INTEGER},
      PARTY_B_AGENT = #{record.partyBAgent,jdbcType=VARCHAR},
      SPACE_PRICE = #{record.spacePrice,jdbcType=DOUBLE},
      SPACE_PAY_YEAR = #{record.spacePayYear,jdbcType=INTEGER},
      SPACE_FREE_YEAR = #{record.spaceFreeYear,jdbcType=INTEGER},
      SOFT_SUIT = #{record.softSuit,jdbcType=INTEGER},
      UNIT_PRICE = #{record.unitPrice,jdbcType=DOUBLE},
      TOTAL_PRICE = #{record.totalPrice,jdbcType=DOUBLE},
      TOTAL_PRICE_CN = #{record.totalPriceCn,jdbcType=VARCHAR},
      TOTAL_AMOUNT = #{record.totalAmount,jdbcType=DOUBLE},
      TOTAL_AMOUNT_CN = #{record.totalAmountCn,jdbcType=VARCHAR},
      PAY_RATE = #{record.payRate,jdbcType=INTEGER},
      SIGN_DATE = #{record.signDate,jdbcType=TIMESTAMP},
      SIGN_EXAM = #{record.signExam,jdbcType=INTEGER},
      SIGN_STATUS = #{record.signStatus,jdbcType=INTEGER},
      CONTRACT_PATH = #{record.contractPath,jdbcType=VARCHAR},
      CONTRACT_HTML = #{record.contractHtml,jdbcType=VARCHAR},
      SAFETY_PATH = #{record.safetyPath,jdbcType=VARCHAR},
      UPGRADE_PROTOCOL = #{record.upgradeProtocol,jdbcType=VARCHAR},
      PAY_TYPE = #{record.payType,jdbcType=INTEGER},
      SERVICE_GIFT = #{record.serviceGift,jdbcType=INTEGER},
      SRV_GIFT_EXTRA = #{record.srvGiftExtra,jdbcType=INTEGER},
      STAGE_YEAR = #{record.stageYear,jdbcType=INTEGER},
      PAY_GIFTED = #{record.payGifted,jdbcType=INTEGER},
      GIFT_TYPE = #{record.giftType,jdbcType=TINYINT},
      GIFT_PRICE = #{record.giftPrice,jdbcType=INTEGER},
      SIGN_USER = #{record.signUser,jdbcType=INTEGER},
      SIGN_TIME = #{record.signTime,jdbcType=TIMESTAMP},
      REQ_UID = #{record.reqUid,jdbcType=INTEGER},
      REQ_TIME = #{record.reqTime,jdbcType=TIMESTAMP},
      EXAM_UID = #{record.examUid,jdbcType=INTEGER},
      GIFT_TIME = #{record.giftTime,jdbcType=TIMESTAMP},
      CREATION_UID = #{record.creationUid,jdbcType=INTEGER},
      TRAIN = #{record.train,jdbcType=INTEGER},
      TICKET = #{record.ticket,jdbcType=INTEGER},
      CONTRACT_VERSION = #{record.contractVersion,jdbcType=VARCHAR},
      BIND_OPEN_WEIXIN = #{record.bindOpenWeixin,jdbcType=TINYINT},
      YOU_DISCOUNT_EXAM = #{record.youDiscountExam,jdbcType=TINYINT},
      CONTRACT_TIME = #{record.contractTime,jdbcType=TIMESTAMP},
      BIND_CUST_LEVEL = #{record.bindCustLevel,jdbcType=TINYINT},
      PAY_MODEL = #{record.payModel,jdbcType=TINYINT},
      IS_REFUND_PAY = #{record.isRefundPay,jdbcType=TINYINT},
      PAY_MODEL_EXAMFLAG = #{record.payModelExamflag,jdbcType=TINYINT},
      PAY_MODEL_EXAMTIME = #{record.payModelExamtime,jdbcType=TIMESTAMP},
      CUST_LEVEL_PRICE = #{record.custLevelPrice,jdbcType=DOUBLE},
      ACTIVITY_NUM = #{record.activityNum,jdbcType=VARCHAR},
      GIFT_VR_NUM = #{record.giftVrNum,jdbcType=INTEGER},
      TRAIN_TICKET = #{record.trainTicket,jdbcType=INTEGER},
      [STATUS] = #{record.status,jdbcType=TINYINT},
      CONTRACT_TYPE = #{record.contractType,jdbcType=TINYINT},
      SOFT_RATE = #{record.softRate,jdbcType=NUMERIC},
      CONTRACT_JSON = #{record.contractJson,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update CRM_FUN_CONTRACT
    set CONTRACT_ID = #{record.contractId,jdbcType=INTEGER},
      CRM_COMP_ID = #{record.crmCompId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      PARTY_A = #{record.partyA,jdbcType=VARCHAR},
      PARTY_A_ADDR = #{record.partyAAddr,jdbcType=VARCHAR},
      PARTY_A_TEL = #{record.partyATel,jdbcType=VARCHAR},
      PARTY_A_LINKMAN = #{record.partyALinkman,jdbcType=VARCHAR},
      PARTY_A_LINKMOBILE = #{record.partyALinkmobile,jdbcType=VARCHAR},
      PARTY_A_AGENT = #{record.partyAAgent,jdbcType=VARCHAR},
      PARTY_B = #{record.partyB,jdbcType=VARCHAR},
      PARTY_B_ADDR = #{record.partyBAddr,jdbcType=VARCHAR},
      PARTY_B_TEL = #{record.partyBTel,jdbcType=VARCHAR},
      PARTY_B_ID = #{record.partyBId,jdbcType=INTEGER},
      PARTY_B_AGENT = #{record.partyBAgent,jdbcType=VARCHAR},
      SPACE_PRICE = #{record.spacePrice,jdbcType=DOUBLE},
      SPACE_PAY_YEAR = #{record.spacePayYear,jdbcType=INTEGER},
      SPACE_FREE_YEAR = #{record.spaceFreeYear,jdbcType=INTEGER},
      SOFT_SUIT = #{record.softSuit,jdbcType=INTEGER},
      UNIT_PRICE = #{record.unitPrice,jdbcType=DOUBLE},
      TOTAL_PRICE = #{record.totalPrice,jdbcType=DOUBLE},
      TOTAL_PRICE_CN = #{record.totalPriceCn,jdbcType=VARCHAR},
      TOTAL_AMOUNT = #{record.totalAmount,jdbcType=DOUBLE},
      TOTAL_AMOUNT_CN = #{record.totalAmountCn,jdbcType=VARCHAR},
      PAY_RATE = #{record.payRate,jdbcType=INTEGER},
      SIGN_DATE = #{record.signDate,jdbcType=TIMESTAMP},
      SIGN_EXAM = #{record.signExam,jdbcType=INTEGER},
      SIGN_STATUS = #{record.signStatus,jdbcType=INTEGER},
      CONTRACT_PATH = #{record.contractPath,jdbcType=VARCHAR},
      CONTRACT_HTML = #{record.contractHtml,jdbcType=VARCHAR},
      SAFETY_PATH = #{record.safetyPath,jdbcType=VARCHAR},
      UPGRADE_PROTOCOL = #{record.upgradeProtocol,jdbcType=VARCHAR},
      PAY_TYPE = #{record.payType,jdbcType=INTEGER},
      SERVICE_GIFT = #{record.serviceGift,jdbcType=INTEGER},
      SRV_GIFT_EXTRA = #{record.srvGiftExtra,jdbcType=INTEGER},
      STAGE_YEAR = #{record.stageYear,jdbcType=INTEGER},
      PAY_GIFTED = #{record.payGifted,jdbcType=INTEGER},
      GIFT_TYPE = #{record.giftType,jdbcType=TINYINT},
      GIFT_PRICE = #{record.giftPrice,jdbcType=INTEGER},
      SIGN_USER = #{record.signUser,jdbcType=INTEGER},
      SIGN_TIME = #{record.signTime,jdbcType=TIMESTAMP},
      REQ_UID = #{record.reqUid,jdbcType=INTEGER},
      REQ_TIME = #{record.reqTime,jdbcType=TIMESTAMP},
      EXAM_UID = #{record.examUid,jdbcType=INTEGER},
      GIFT_TIME = #{record.giftTime,jdbcType=TIMESTAMP},
      CREATION_UID = #{record.creationUid,jdbcType=INTEGER},
      TRAIN = #{record.train,jdbcType=INTEGER},
      TICKET = #{record.ticket,jdbcType=INTEGER},
      CONTRACT_VERSION = #{record.contractVersion,jdbcType=VARCHAR},
      BIND_OPEN_WEIXIN = #{record.bindOpenWeixin,jdbcType=TINYINT},
      YOU_DISCOUNT_EXAM = #{record.youDiscountExam,jdbcType=TINYINT},
      CONTRACT_TIME = #{record.contractTime,jdbcType=TIMESTAMP},
      BIND_CUST_LEVEL = #{record.bindCustLevel,jdbcType=TINYINT},
      PAY_MODEL = #{record.payModel,jdbcType=TINYINT},
      IS_REFUND_PAY = #{record.isRefundPay,jdbcType=TINYINT},
      PAY_MODEL_EXAMFLAG = #{record.payModelExamflag,jdbcType=TINYINT},
      PAY_MODEL_EXAMTIME = #{record.payModelExamtime,jdbcType=TIMESTAMP},
      CUST_LEVEL_PRICE = #{record.custLevelPrice,jdbcType=DOUBLE},
      ACTIVITY_NUM = #{record.activityNum,jdbcType=VARCHAR},
      GIFT_VR_NUM = #{record.giftVrNum,jdbcType=INTEGER},
      TRAIN_TICKET = #{record.trainTicket,jdbcType=INTEGER},
      [STATUS] = #{record.status,jdbcType=TINYINT},
      CONTRACT_TYPE = #{record.contractType,jdbcType=TINYINT},
      SOFT_RATE = #{record.softRate,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContract">
    <!--@mbggenerated-->
    update CRM_FUN_CONTRACT
    <set>
      <if test="crmCompId != null">
        CRM_COMP_ID = #{crmCompId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null">
        CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="partyA != null">
        PARTY_A = #{partyA,jdbcType=VARCHAR},
      </if>
      <if test="partyAAddr != null">
        PARTY_A_ADDR = #{partyAAddr,jdbcType=VARCHAR},
      </if>
      <if test="partyATel != null">
        PARTY_A_TEL = #{partyATel,jdbcType=VARCHAR},
      </if>
      <if test="partyALinkman != null">
        PARTY_A_LINKMAN = #{partyALinkman,jdbcType=VARCHAR},
      </if>
      <if test="partyALinkmobile != null">
        PARTY_A_LINKMOBILE = #{partyALinkmobile,jdbcType=VARCHAR},
      </if>
      <if test="partyAAgent != null">
        PARTY_A_AGENT = #{partyAAgent,jdbcType=VARCHAR},
      </if>
      <if test="partyB != null">
        PARTY_B = #{partyB,jdbcType=VARCHAR},
      </if>
      <if test="partyBAddr != null">
        PARTY_B_ADDR = #{partyBAddr,jdbcType=VARCHAR},
      </if>
      <if test="partyBTel != null">
        PARTY_B_TEL = #{partyBTel,jdbcType=VARCHAR},
      </if>
      <if test="partyBId != null">
        PARTY_B_ID = #{partyBId,jdbcType=INTEGER},
      </if>
      <if test="partyBAgent != null">
        PARTY_B_AGENT = #{partyBAgent,jdbcType=VARCHAR},
      </if>
      <if test="spacePrice != null">
        SPACE_PRICE = #{spacePrice,jdbcType=DOUBLE},
      </if>
      <if test="spacePayYear != null">
        SPACE_PAY_YEAR = #{spacePayYear,jdbcType=INTEGER},
      </if>
      <if test="spaceFreeYear != null">
        SPACE_FREE_YEAR = #{spaceFreeYear,jdbcType=INTEGER},
      </if>
      <if test="softSuit != null">
        SOFT_SUIT = #{softSuit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        UNIT_PRICE = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="totalPrice != null">
        TOTAL_PRICE = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="totalPriceCn != null">
        TOTAL_PRICE_CN = #{totalPriceCn,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        TOTAL_AMOUNT = #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="totalAmountCn != null">
        TOTAL_AMOUNT_CN = #{totalAmountCn,jdbcType=VARCHAR},
      </if>
      <if test="payRate != null">
        PAY_RATE = #{payRate,jdbcType=INTEGER},
      </if>
      <if test="signDate != null">
        SIGN_DATE = #{signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signExam != null">
        SIGN_EXAM = #{signExam,jdbcType=INTEGER},
      </if>
      <if test="signStatus != null">
        SIGN_STATUS = #{signStatus,jdbcType=INTEGER},
      </if>
      <if test="contractPath != null">
        CONTRACT_PATH = #{contractPath,jdbcType=VARCHAR},
      </if>
      <if test="contractHtml != null">
        CONTRACT_HTML = #{contractHtml,jdbcType=VARCHAR},
      </if>
      <if test="safetyPath != null">
        SAFETY_PATH = #{safetyPath,jdbcType=VARCHAR},
      </if>
      <if test="upgradeProtocol != null">
        UPGRADE_PROTOCOL = #{upgradeProtocol,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        PAY_TYPE = #{payType,jdbcType=INTEGER},
      </if>
      <if test="serviceGift != null">
        SERVICE_GIFT = #{serviceGift,jdbcType=INTEGER},
      </if>
      <if test="srvGiftExtra != null">
        SRV_GIFT_EXTRA = #{srvGiftExtra,jdbcType=INTEGER},
      </if>
      <if test="stageYear != null">
        STAGE_YEAR = #{stageYear,jdbcType=INTEGER},
      </if>
      <if test="payGifted != null">
        PAY_GIFTED = #{payGifted,jdbcType=INTEGER},
      </if>
      <if test="giftType != null">
        GIFT_TYPE = #{giftType,jdbcType=TINYINT},
      </if>
      <if test="giftPrice != null">
        GIFT_PRICE = #{giftPrice,jdbcType=INTEGER},
      </if>
      <if test="signUser != null">
        SIGN_USER = #{signUser,jdbcType=INTEGER},
      </if>
      <if test="signTime != null">
        SIGN_TIME = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqUid != null">
        REQ_UID = #{reqUid,jdbcType=INTEGER},
      </if>
      <if test="reqTime != null">
        REQ_TIME = #{reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examUid != null">
        EXAM_UID = #{examUid,jdbcType=INTEGER},
      </if>
      <if test="giftTime != null">
        GIFT_TIME = #{giftTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creationUid != null">
        CREATION_UID = #{creationUid,jdbcType=INTEGER},
      </if>
      <if test="train != null">
        TRAIN = #{train,jdbcType=INTEGER},
      </if>
      <if test="ticket != null">
        TICKET = #{ticket,jdbcType=INTEGER},
      </if>
      <if test="contractVersion != null">
        CONTRACT_VERSION = #{contractVersion,jdbcType=VARCHAR},
      </if>
      <if test="bindOpenWeixin != null">
        BIND_OPEN_WEIXIN = #{bindOpenWeixin,jdbcType=TINYINT},
      </if>
      <if test="youDiscountExam != null">
        YOU_DISCOUNT_EXAM = #{youDiscountExam,jdbcType=TINYINT},
      </if>
      <if test="contractTime != null">
        CONTRACT_TIME = #{contractTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bindCustLevel != null">
        BIND_CUST_LEVEL = #{bindCustLevel,jdbcType=TINYINT},
      </if>
      <if test="payModel != null">
        PAY_MODEL = #{payModel,jdbcType=TINYINT},
      </if>
      <if test="isRefundPay != null">
        IS_REFUND_PAY = #{isRefundPay,jdbcType=TINYINT},
      </if>
      <if test="payModelExamflag != null">
        PAY_MODEL_EXAMFLAG = #{payModelExamflag,jdbcType=TINYINT},
      </if>
      <if test="payModelExamtime != null">
        PAY_MODEL_EXAMTIME = #{payModelExamtime,jdbcType=TIMESTAMP},
      </if>
      <if test="custLevelPrice != null">
        CUST_LEVEL_PRICE = #{custLevelPrice,jdbcType=DOUBLE},
      </if>
      <if test="activityNum != null">
        ACTIVITY_NUM = #{activityNum,jdbcType=VARCHAR},
      </if>
      <if test="giftVrNum != null">
        GIFT_VR_NUM = #{giftVrNum,jdbcType=INTEGER},
      </if>
      <if test="trainTicket != null">
        TRAIN_TICKET = #{trainTicket,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        [STATUS] = #{status,jdbcType=TINYINT},
      </if>
      <if test="contractType != null">
        CONTRACT_TYPE = #{contractType,jdbcType=TINYINT},
      </if>
      <if test="softRate != null">
        SOFT_RATE = #{softRate,jdbcType=NUMERIC},
      </if>
      <if test="contractJson != null">
        CONTRACT_JSON = #{contractJson,jdbcType=CLOB},
      </if>
    </set>
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContract">
    <!--@mbggenerated-->
    update CRM_FUN_CONTRACT
    set CRM_COMP_ID = #{crmCompId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      PARTY_A = #{partyA,jdbcType=VARCHAR},
      PARTY_A_ADDR = #{partyAAddr,jdbcType=VARCHAR},
      PARTY_A_TEL = #{partyATel,jdbcType=VARCHAR},
      PARTY_A_LINKMAN = #{partyALinkman,jdbcType=VARCHAR},
      PARTY_A_LINKMOBILE = #{partyALinkmobile,jdbcType=VARCHAR},
      PARTY_A_AGENT = #{partyAAgent,jdbcType=VARCHAR},
      PARTY_B = #{partyB,jdbcType=VARCHAR},
      PARTY_B_ADDR = #{partyBAddr,jdbcType=VARCHAR},
      PARTY_B_TEL = #{partyBTel,jdbcType=VARCHAR},
      PARTY_B_ID = #{partyBId,jdbcType=INTEGER},
      PARTY_B_AGENT = #{partyBAgent,jdbcType=VARCHAR},
      SPACE_PRICE = #{spacePrice,jdbcType=DOUBLE},
      SPACE_PAY_YEAR = #{spacePayYear,jdbcType=INTEGER},
      SPACE_FREE_YEAR = #{spaceFreeYear,jdbcType=INTEGER},
      SOFT_SUIT = #{softSuit,jdbcType=INTEGER},
      UNIT_PRICE = #{unitPrice,jdbcType=DOUBLE},
      TOTAL_PRICE = #{totalPrice,jdbcType=DOUBLE},
      TOTAL_PRICE_CN = #{totalPriceCn,jdbcType=VARCHAR},
      TOTAL_AMOUNT = #{totalAmount,jdbcType=DOUBLE},
      TOTAL_AMOUNT_CN = #{totalAmountCn,jdbcType=VARCHAR},
      PAY_RATE = #{payRate,jdbcType=INTEGER},
      SIGN_DATE = #{signDate,jdbcType=TIMESTAMP},
      SIGN_EXAM = #{signExam,jdbcType=INTEGER},
      SIGN_STATUS = #{signStatus,jdbcType=INTEGER},
      CONTRACT_PATH = #{contractPath,jdbcType=VARCHAR},
      CONTRACT_HTML = #{contractHtml,jdbcType=VARCHAR},
      SAFETY_PATH = #{safetyPath,jdbcType=VARCHAR},
      UPGRADE_PROTOCOL = #{upgradeProtocol,jdbcType=VARCHAR},
      PAY_TYPE = #{payType,jdbcType=INTEGER},
      SERVICE_GIFT = #{serviceGift,jdbcType=INTEGER},
      SRV_GIFT_EXTRA = #{srvGiftExtra,jdbcType=INTEGER},
      STAGE_YEAR = #{stageYear,jdbcType=INTEGER},
      PAY_GIFTED = #{payGifted,jdbcType=INTEGER},
      GIFT_TYPE = #{giftType,jdbcType=TINYINT},
      GIFT_PRICE = #{giftPrice,jdbcType=INTEGER},
      SIGN_USER = #{signUser,jdbcType=INTEGER},
      SIGN_TIME = #{signTime,jdbcType=TIMESTAMP},
      REQ_UID = #{reqUid,jdbcType=INTEGER},
      REQ_TIME = #{reqTime,jdbcType=TIMESTAMP},
      EXAM_UID = #{examUid,jdbcType=INTEGER},
      GIFT_TIME = #{giftTime,jdbcType=TIMESTAMP},
      CREATION_UID = #{creationUid,jdbcType=INTEGER},
      TRAIN = #{train,jdbcType=INTEGER},
      TICKET = #{ticket,jdbcType=INTEGER},
      CONTRACT_VERSION = #{contractVersion,jdbcType=VARCHAR},
      BIND_OPEN_WEIXIN = #{bindOpenWeixin,jdbcType=TINYINT},
      YOU_DISCOUNT_EXAM = #{youDiscountExam,jdbcType=TINYINT},
      CONTRACT_TIME = #{contractTime,jdbcType=TIMESTAMP},
      BIND_CUST_LEVEL = #{bindCustLevel,jdbcType=TINYINT},
      PAY_MODEL = #{payModel,jdbcType=TINYINT},
      IS_REFUND_PAY = #{isRefundPay,jdbcType=TINYINT},
      PAY_MODEL_EXAMFLAG = #{payModelExamflag,jdbcType=TINYINT},
      PAY_MODEL_EXAMTIME = #{payModelExamtime,jdbcType=TIMESTAMP},
      CUST_LEVEL_PRICE = #{custLevelPrice,jdbcType=DOUBLE},
      ACTIVITY_NUM = #{activityNum,jdbcType=VARCHAR},
      GIFT_VR_NUM = #{giftVrNum,jdbcType=INTEGER},
      TRAIN_TICKET = #{trainTicket,jdbcType=INTEGER},
      [STATUS] = #{status,jdbcType=TINYINT},
      CONTRACT_TYPE = #{contractType,jdbcType=TINYINT},
      SOFT_RATE = #{softRate,jdbcType=NUMERIC},
      CONTRACT_JSON = #{contractJson,jdbcType=CLOB}
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContract">
    <!--@mbggenerated-->
    update CRM_FUN_CONTRACT
    set CRM_COMP_ID = #{crmCompId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      PARTY_A = #{partyA,jdbcType=VARCHAR},
      PARTY_A_ADDR = #{partyAAddr,jdbcType=VARCHAR},
      PARTY_A_TEL = #{partyATel,jdbcType=VARCHAR},
      PARTY_A_LINKMAN = #{partyALinkman,jdbcType=VARCHAR},
      PARTY_A_LINKMOBILE = #{partyALinkmobile,jdbcType=VARCHAR},
      PARTY_A_AGENT = #{partyAAgent,jdbcType=VARCHAR},
      PARTY_B = #{partyB,jdbcType=VARCHAR},
      PARTY_B_ADDR = #{partyBAddr,jdbcType=VARCHAR},
      PARTY_B_TEL = #{partyBTel,jdbcType=VARCHAR},
      PARTY_B_ID = #{partyBId,jdbcType=INTEGER},
      PARTY_B_AGENT = #{partyBAgent,jdbcType=VARCHAR},
      SPACE_PRICE = #{spacePrice,jdbcType=DOUBLE},
      SPACE_PAY_YEAR = #{spacePayYear,jdbcType=INTEGER},
      SPACE_FREE_YEAR = #{spaceFreeYear,jdbcType=INTEGER},
      SOFT_SUIT = #{softSuit,jdbcType=INTEGER},
      UNIT_PRICE = #{unitPrice,jdbcType=DOUBLE},
      TOTAL_PRICE = #{totalPrice,jdbcType=DOUBLE},
      TOTAL_PRICE_CN = #{totalPriceCn,jdbcType=VARCHAR},
      TOTAL_AMOUNT = #{totalAmount,jdbcType=DOUBLE},
      TOTAL_AMOUNT_CN = #{totalAmountCn,jdbcType=VARCHAR},
      PAY_RATE = #{payRate,jdbcType=INTEGER},
      SIGN_DATE = #{signDate,jdbcType=TIMESTAMP},
      SIGN_EXAM = #{signExam,jdbcType=INTEGER},
      SIGN_STATUS = #{signStatus,jdbcType=INTEGER},
      CONTRACT_PATH = #{contractPath,jdbcType=VARCHAR},
      CONTRACT_HTML = #{contractHtml,jdbcType=VARCHAR},
      SAFETY_PATH = #{safetyPath,jdbcType=VARCHAR},
      UPGRADE_PROTOCOL = #{upgradeProtocol,jdbcType=VARCHAR},
      PAY_TYPE = #{payType,jdbcType=INTEGER},
      SERVICE_GIFT = #{serviceGift,jdbcType=INTEGER},
      SRV_GIFT_EXTRA = #{srvGiftExtra,jdbcType=INTEGER},
      STAGE_YEAR = #{stageYear,jdbcType=INTEGER},
      PAY_GIFTED = #{payGifted,jdbcType=INTEGER},
      GIFT_TYPE = #{giftType,jdbcType=TINYINT},
      GIFT_PRICE = #{giftPrice,jdbcType=INTEGER},
      SIGN_USER = #{signUser,jdbcType=INTEGER},
      SIGN_TIME = #{signTime,jdbcType=TIMESTAMP},
      REQ_UID = #{reqUid,jdbcType=INTEGER},
      REQ_TIME = #{reqTime,jdbcType=TIMESTAMP},
      EXAM_UID = #{examUid,jdbcType=INTEGER},
      GIFT_TIME = #{giftTime,jdbcType=TIMESTAMP},
      CREATION_UID = #{creationUid,jdbcType=INTEGER},
      TRAIN = #{train,jdbcType=INTEGER},
      TICKET = #{ticket,jdbcType=INTEGER},
      CONTRACT_VERSION = #{contractVersion,jdbcType=VARCHAR},
      BIND_OPEN_WEIXIN = #{bindOpenWeixin,jdbcType=TINYINT},
      YOU_DISCOUNT_EXAM = #{youDiscountExam,jdbcType=TINYINT},
      CONTRACT_TIME = #{contractTime,jdbcType=TIMESTAMP},
      BIND_CUST_LEVEL = #{bindCustLevel,jdbcType=TINYINT},
      PAY_MODEL = #{payModel,jdbcType=TINYINT},
      IS_REFUND_PAY = #{isRefundPay,jdbcType=TINYINT},
      PAY_MODEL_EXAMFLAG = #{payModelExamflag,jdbcType=TINYINT},
      PAY_MODEL_EXAMTIME = #{payModelExamtime,jdbcType=TIMESTAMP},
      CUST_LEVEL_PRICE = #{custLevelPrice,jdbcType=DOUBLE},
      ACTIVITY_NUM = #{activityNum,jdbcType=VARCHAR},
      GIFT_VR_NUM = #{giftVrNum,jdbcType=INTEGER},
      TRAIN_TICKET = #{trainTicket,jdbcType=INTEGER},
      [STATUS] = #{status,jdbcType=TINYINT},
      CONTRACT_TYPE = #{contractType,jdbcType=TINYINT},
      SOFT_RATE = #{softRate,jdbcType=NUMERIC}
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </update>
  
   <resultMap extends="ResultMapWithBLOBs" id="funDeptsMap" type="com.myfun.repository.admindb.po.AdminFunDepts">
    <id column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="CRM_COMP_ID" jdbcType="INTEGER" property="crmCompId" />
    <result column="DEPT_NO" jdbcType="VARCHAR" property="deptNo" />
    <result column="COMP_NO" jdbcType="VARCHAR" property="compNo" />
    <result column="PROVINCE_ID" jdbcType="INTEGER" property="provinceId" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="SEQ_NO" jdbcType="INTEGER" property="seqNo" />
    <result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
    <result column="DEPT_CNAME" jdbcType="VARCHAR" property="deptCname" />
    <result column="DEPT_ADDR" jdbcType="VARCHAR" property="deptAddr" />
    <result column="DEPT_TELE" jdbcType="VARCHAR" property="deptTele" />
    <result column="DEPT_CONTACT" jdbcType="VARCHAR" property="deptContact" />
    <result column="CONTACT_SEX" jdbcType="INTEGER" property="contactSex" />
    <result column="CONTACT_PHONE" jdbcType="VARCHAR" property="contactPhone" />
    <result column="DEPT_DESC" jdbcType="VARCHAR" property="deptDesc" />
    <result column="DEPT_ID_LOCAL" jdbcType="INTEGER" property="deptIdLocal" />
    <result column="INSTALL_COUNT" jdbcType="INTEGER" property="installCount" />
    <result column="INSTALL_PCNUMBER" jdbcType="INTEGER" property="installPcnumber" />
    <result column="INSTALL_LICENSE" jdbcType="INTEGER" property="installLicense" />
    <result column="STORE_NO" jdbcType="VARCHAR" property="storeNo" />
    <result column="STORE_TIME_BEG" jdbcType="TIMESTAMP" property="storeTimeBeg" />
    <result column="STORE_TIME_END" jdbcType="TIMESTAMP" property="storeTimeEnd" />
    <result column="DEPT_STATUS" jdbcType="VARCHAR" property="deptStatus" />
    <result column="DEPT_FLAG" jdbcType="INTEGER" property="deptFlag" />
    <result column="REGION_ID" jdbcType="INTEGER" property="regionId" />
    <result column="AREA_ID" jdbcType="INTEGER" property="areaId" />
    <result column="SELL_ID" jdbcType="INTEGER" property="sellId" />
    <result column="SERVICE_ID" jdbcType="INTEGER" property="serviceId" />
    <result column="STOP_TIME" jdbcType="TIMESTAMP" property="stopTime" />
    <result column="TRY_TIME" jdbcType="TIMESTAMP" property="tryTime" />
    <result column="EXTEND_COUNT" jdbcType="INTEGER" property="extendCount" />
    <result column="FORM_TIME" jdbcType="TIMESTAMP" property="formTime" />
    <result column="REF_TIME" jdbcType="TIMESTAMP" property="refTime" />
    <result column="SPUER_DEPT" jdbcType="TINYINT" property="spuerDept" />
    <result column="PAY_TYPE" jdbcType="TINYINT" property="payType" />
    <result column="PAY_MONTHS" jdbcType="TINYINT" property="payMonths" />
    <result column="TRACK_TIME" jdbcType="TIMESTAMP" property="trackTime" />
    <result column="SELL_TRACK_TIME" jdbcType="TIMESTAMP" property="sellTrackTime" />
    <result column="REASON" jdbcType="VARCHAR" property="reason" />
    <result column="CREATOR_UID" jdbcType="INTEGER" property="creatorUid" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="SUPER_START" jdbcType="TIMESTAMP" property="superStart" />
    <result column="SUPER_END" jdbcType="TIMESTAMP" property="superEnd" />
    <result column="DEPT_LAMP" jdbcType="TINYINT" property="deptLamp" />
    <result column="MACADDR" jdbcType="VARCHAR" property="macaddr" />
    <result column="PWD_DESC" jdbcType="VARCHAR" property="pwdDesc" />
    <result column="DEPT_TYPE" jdbcType="TINYINT" property="deptType" />
    <result column="VERTIFY_CODE" jdbcType="VARCHAR" property="vertifyCode" />
    <result column="SPACE_END" jdbcType="TIMESTAMP" property="spaceEnd" />
    <result column="CONTRACT_ID" jdbcType="INTEGER" property="contractId" />
    <result column="TRY_END" jdbcType="TIMESTAMP" property="tryEnd" />
    <result column="PLATE_TYPE" jdbcType="TINYINT" property="plateType" />
    <result column="ACTION_TIME" jdbcType="TIMESTAMP" property="actionTime" />
    <result column="TRACK_FLAG" jdbcType="TIMESTAMP" property="trackFlag" />
    <result column="TRY_FLAG" jdbcType="TIMESTAMP" property="tryFlag" />
    <result column="DEPT_SOURCE" jdbcType="VARCHAR" property="deptSource" />
    <result column="USE_FLAG" jdbcType="BIT" property="useFlag" />
    <result column="VISITED_TIME" jdbcType="TIMESTAMP" property="visitedTime" />
    <result column="AGENT_FLAG" jdbcType="BIT" property="agentFlag" />
    <result column="DEPT_LEVEL" jdbcType="VARCHAR" property="deptLevel" />
    <result column="CUST_LEVEL" jdbcType="TINYINT" property="custLevel" />
    <result column="ONLINE_FLAG" jdbcType="TINYINT" property="onlineFlag" />
    <result column="SUPER_DAYS" jdbcType="INTEGER" property="superDays" />
    <result column="CLOSE_FLAG" jdbcType="BIT" property="closeFlag" />
    <result column="SUPER_FLAG" jdbcType="TINYINT" property="superFlag" />
    <result column="SIGN_TIMEEND" jdbcType="TIMESTAMP" property="signTimeend" />
    <result column="CONTACT_QQ" jdbcType="VARCHAR" property="contactQq" />
    <result column="TRANS_FLAG" jdbcType="BIT" property="transFlag" />
    <result column="SELL_OLD" jdbcType="INTEGER" property="sellOld" />
    <result column="SRV_STATUS" jdbcType="TINYINT" property="srvStatus" />
    <result column="REC_TIME" jdbcType="TIMESTAMP" property="recTime" />
    <result column="CION_GIFT" jdbcType="TINYINT" property="cionGift" />
    <result column="TRAIN_ID" jdbcType="INTEGER" property="trainId" />
    <result column="TRAIN_COUNT" jdbcType="TINYINT" property="trainCount" />
    <result column="ADVANCE_TRYEND" jdbcType="TIMESTAMP" property="advanceTryend" />
    <result column="VIP_FLAG" jdbcType="TINYINT" property="vipFlag" />
    <result column="VIP_COUNT" jdbcType="INTEGER" property="vipCount" />
    <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="DEPT_WEIXIN_STATUS" jdbcType="TINYINT" property="deptWeixinStatus" />
    <result column="LENDON_PERSON" jdbcType="INTEGER" property="lendonPerson" />
    <result column="TRANS_DEPT_ID" jdbcType="INTEGER" property="transDeptId" />
    <result column="OPEN_STATUS" jdbcType="TINYINT" property="openStatus" />
    <result column="WEIXIN_SERVICE_TIME" jdbcType="TIMESTAMP" property="weixinServiceTime" />
    <result column="WEIXIN_SERVICE_YEAR" jdbcType="TINYINT" property="weixinServiceYear" />
    <result column="SIGN_FLAG" jdbcType="INTEGER" property="signFlag" />
    <result column="OTO_END" jdbcType="TIMESTAMP" property="otoEnd" />
    <result column="TRYDATA_IMPORTED" jdbcType="TINYINT" property="trydataImported" />
  </resultMap>
  
  <resultMap extends="funDeptsMap" id="contractBaseMap" type="com.myfun.repository.admindb.dto.AdminCrmFunContrackDto">
  	 <result column="CITY_NAME" jdbcType="VARCHAR" property="cityName" />
  	 <result column="REAL_WEIXIN" jdbcType="VARCHAR" property="realWeixin" />
  	 <result column="SAFETY_PATH" jdbcType="VARCHAR" property="safetyPath" />
  	 <result column="CONTRACT_NO" jdbcType="VARCHAR" property="contractNo" />
  	 <result column="CONTRACT_PATH" jdbcType="VARCHAR" property="contractPath" />
  	 <result column="CONTRACT_VERSION" jdbcType="VARCHAR" property="contractVersion" />
  	 <result column="UPGRADE_PROTOCOL" jdbcType="VARCHAR" property="upgradeProtocol" />
  	 <result column="CONTRACT_HTML" jdbcType="VARCHAR" property="contractHtml" />
  	 <result column="SIGN_STATUS" jdbcType="VARCHAR" property="signStatus" />
  	 <result column="SIGN_EXAM" jdbcType="VARCHAR" property="signExam" />
  	 <result column="SIGN_DATE" jdbcType="VARCHAR" property="signDate" />
  	 <result column="PARTY_B_AGENT" jdbcType="VARCHAR" property="partyBAgent" />
  	 <result column="PAY_GIFTED" jdbcType="VARCHAR" property="payGifted" />
  	 <result column="GIFT_TYPE" jdbcType="VARCHAR" property="giftType" />
  	 <result column="REQ_TIME" jdbcType="VARCHAR" property="reqTime" />
  	 <result column="REQ_UID" jdbcType="VARCHAR" property="reqUid" />
  	 <result column="GIFT_TIME" jdbcType="VARCHAR" property="giftTime" />
  	 <result column="GIFT_PRICE" jdbcType="VARCHAR" property="giftPrice" />
  	 <result column="WEI_CONTRACT_HTML" jdbcType="VARCHAR" property="weiContractHtml" />
  	 <result column="WEI_CONTRACT_PATH" jdbcType="VARCHAR" property="weiContractPath" />
  	 <result column="CONTRACT_STATUS" jdbcType="VARCHAR" property="contractStatus" />
  </resultMap>
  
  <!-- buniess -->
	<select id="selectContract" resultMap="ResultMapWithBLOBs">
		select PARTY_B_ID from CRM_FUN_CONTRACT where DEPT_ID = #{deptId}
	</select>
	
	<delete id="deleteByDeptId">
		delete from CRM_FUN_CONTRACT where DEPT_ID = #{deptId}
	</delete>
	
	<select id="query" resultMap="contractBaseMap">
		SELECT
			fd.*,
		  city.CITY_NAME,
			comp.REAL_WEIXIN,
			fc.SAFETY_PATH,
			fc.CONTRACT_NO,
			fc.CONTRACT_PATH,
			fc.CONTRACT_VERSION,
			fc.UPGRADE_PROTOCOL,
			fc.CONTRACT_HTML,
			fc.SIGN_STATUS,
			fc.SIGN_EXAM,
			fc.SIGN_DATE,
			fc.PARTY_B_AGENT,
			fc.PAY_GIFTED,
			fc.GIFT_TYPE,
			fc.REQ_TIME,
			fc.REQ_UID,
			fc.GIFT_TIME,
			fc.GIFT_PRICE,
			wc.WEI_CONTRACT_HTML,
			wc.WEI_CONTRACT_PATH,
			wc.CONTRACT_STATUS
		FROM
			fun_depts fd
		LEFT JOIN FUN_CITY city ON fd.CITY_ID = city.CITY_ID
		LEFT JOIN FUN_COMP comp ON fd.COMP_ID = comp.COMP_ID
		LEFT JOIN CRM_FUN_CONTRACT fc ON fd.dept_id = fc.dept_id
		LEFT JOIN WEIXIN_CONTRACT wc ON fd.COMP_ID = wc.WEI_COMP_ID
		WHERE
			fd.CRM_COMP_ID = #{crmCompId}
		AND fd.AGENT_FLAG = 0
		<if test="deptStatus != null and deptStatus != ''">
			and fd.DEPT_STATUS = #{deptStatus}
		</if>
		<if test="cityId != null and cityId != ''">
			and fd.CITY_ID = #{cityId}
		</if>
		<if test="compNo != null and compNo != ''">
			and fd.comp_no = #{compNo}
		</if>
		<choose>
			<when test="payGifted != null and payGifted !=''">
				and fc.SIGN_STATUS=1 
				and fc.PAY_GIFTED = #{payGifted,jdbcType=INTEGER}
			</when>
			<otherwise>
				<if test="contractStatus != '' and contractStatus == 0">
					and fd.CONTRACT_ID is null
				</if>
				<if test="contractStatus != '' and contractStatus == 1">
					and fc.SIGN_STATUS=0
				</if>
				<if test="contractStatus != '' and contractStatus == 2">
					and fc.SIGN_STATUS=1
				</if>
			</otherwise>
		</choose>
		<if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
			and fd.FORM_TIME <![CDATA[   >=  ]]> #{date1,jdbcType=TIMESTAMP}
			and fd.FORM_TIME <![CDATA[   <=  ]]> #{date2,jdbcType=TIMESTAMP}
		</if>
		<if test="keyWord != null and keyWord != ''">
			and (fd.dept_name like '%${keyWord}%'
				or fd.comp_no like '%${keyWord}%'
				or fc.party_b_agent like '%${keyWord}%'
				or fd.dept_no like '%${keyWord}%'
			)
		</if>
		order by SIGN_STATUS desc, FORM_TIME desc
	</select>
	
	<select id="selectByPrimaryByDeptId" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from CRM_FUN_CONTRACT
    where DEPT_ID = #{deptid}
	</select>
	
	<update id="updateBydeptId">
		 update CRM_FUN_CONTRACT
    <set>
      <if test="crmCompId != null">
        CRM_COMP_ID = #{crmCompId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null">
        CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="partyA != null">
        PARTY_A = #{partyA,jdbcType=VARCHAR},
      </if>
      <if test="partyAAddr != null">
        PARTY_A_ADDR = #{partyAAddr,jdbcType=VARCHAR},
      </if>
      <if test="partyATel != null">
        PARTY_A_TEL = #{partyATel,jdbcType=VARCHAR},
      </if>
      <if test="partyALinkman != null">
        PARTY_A_LINKMAN = #{partyALinkman,jdbcType=VARCHAR},
      </if>
      <if test="partyALinkmobile != null">
        PARTY_A_LINKMOBILE = #{partyALinkmobile,jdbcType=VARCHAR},
      </if>
      <if test="partyAAgent != null">
        PARTY_A_AGENT = #{partyAAgent,jdbcType=VARCHAR},
      </if>
      <if test="partyB != null">
        PARTY_B = #{partyB,jdbcType=VARCHAR},
      </if>
      <if test="partyBAddr != null">
        PARTY_B_ADDR = #{partyBAddr,jdbcType=VARCHAR},
      </if>
      <if test="partyBTel != null">
        PARTY_B_TEL = #{partyBTel,jdbcType=VARCHAR},
      </if>
      <if test="partyBId != null">
        PARTY_B_ID = #{partyBId,jdbcType=INTEGER},
      </if>
      <if test="partyBAgent != null">
        PARTY_B_AGENT = #{partyBAgent,jdbcType=VARCHAR},
      </if>
      <if test="spacePrice != null">
        SPACE_PRICE = #{spacePrice,jdbcType=DOUBLE},
      </if>
      <if test="spacePayYear != null">
        SPACE_PAY_YEAR = #{spacePayYear,jdbcType=INTEGER},
      </if>
      <if test="spaceFreeYear != null">
        SPACE_FREE_YEAR = #{spaceFreeYear,jdbcType=INTEGER},
      </if>
      <if test="softSuit != null">
        SOFT_SUIT = #{softSuit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        UNIT_PRICE = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="totalPrice != null">
        TOTAL_PRICE = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="totalPriceCn != null">
        TOTAL_PRICE_CN = #{totalPriceCn,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        TOTAL_AMOUNT = #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="totalAmountCn != null">
        TOTAL_AMOUNT_CN = #{totalAmountCn,jdbcType=VARCHAR},
      </if>
      <if test="payRate != null">
        PAY_RATE = #{payRate,jdbcType=INTEGER},
      </if>
      <if test="signDate != null">
        SIGN_DATE = #{signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signExam != null">
        SIGN_EXAM = #{signExam,jdbcType=INTEGER},
      </if>
      <if test="signStatus != null">
        SIGN_STATUS = #{signStatus,jdbcType=INTEGER},
      </if>
      <if test="contractPath != null">
        CONTRACT_PATH = #{contractPath,jdbcType=VARCHAR},
      </if>
      <if test="contractHtml != null">
        CONTRACT_HTML = #{contractHtml,jdbcType=VARCHAR},
      </if>
      <if test="safetyPath != null">
        SAFETY_PATH = #{safetyPath,jdbcType=VARCHAR},
      </if>
      <if test="upgradeProtocol != null">
        UPGRADE_PROTOCOL = #{upgradeProtocol,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        PAY_TYPE = #{payType,jdbcType=INTEGER},
      </if>
      <if test="serviceGift != null">
        SERVICE_GIFT = #{serviceGift,jdbcType=INTEGER},
      </if>
      <if test="srvGiftExtra != null">
        SRV_GIFT_EXTRA = #{srvGiftExtra,jdbcType=INTEGER},
      </if>
      <if test="stageYear != null">
        STAGE_YEAR = #{stageYear,jdbcType=INTEGER},
      </if>
      <if test="payGifted != null">
        PAY_GIFTED = #{payGifted,jdbcType=INTEGER},
      </if>
      <if test="giftType != null">
        GIFT_TYPE = #{giftType,jdbcType=TINYINT},
      </if>
      <if test="giftPrice != null">
        GIFT_PRICE = #{giftPrice,jdbcType=INTEGER},
      </if>
      <if test="signUser != null">
        SIGN_USER = #{signUser,jdbcType=INTEGER},
      </if>
      <if test="signTime != null">
        SIGN_TIME = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqUid != null">
        REQ_UID = #{reqUid,jdbcType=INTEGER},
      </if>
      <if test="reqTime != null">
        REQ_TIME = #{reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examUid != null">
        EXAM_UID = #{examUid,jdbcType=INTEGER},
      </if>
      <if test="giftTime != null">
        GIFT_TIME = #{giftTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creationUid != null">
        CREATION_UID = #{creationUid,jdbcType=INTEGER},
      </if>
      <if test="train != null">
        TRAIN = #{train,jdbcType=INTEGER},
      </if>
      <if test="ticket != null">
        TICKET = #{ticket,jdbcType=INTEGER},
      </if>
      <if test="contractVersion != null">
        CONTRACT_VERSION = #{contractVersion,jdbcType=VARCHAR},
      </if>
      <if test="bindOpenWeixin != null">
        BIND_OPEN_WEIXIN = #{bindOpenWeixin,jdbcType=TINYINT},
      </if>
      <if test="contractJson != null">
        CONTRACT_JSON = #{contractJson,jdbcType=CLOB},
      </if>
    </set>
    where DEPT_ID = #{deptId}
	</update>
	
	<select id="call_PROC_SPEC_RECORD_COMGIFT" parameterMap="contractMap" resultType="java.lang.Integer" statementType="CALLABLE">
          {CALL PROC_SPEC_RECORD_COMGIFT(?,?,?,?,?)}
    </select>
    <parameterMap id="contractMap" type="java.util.Map">
         <parameter jdbcType="VARCHAR" mode="IN" property="COMP_NO" />
         <parameter jdbcType="VARCHAR" mode="IN" property="DEPT_NO" />
         <parameter jdbcType="VARCHAR" mode="IN" property="MONTHS" />
         <parameter jdbcType="VARCHAR" mode="IN" property="MSG NVARCHAR" />
         <parameter jdbcType="VARCHAR" mode="IN" property="GIFT_USER" />
    </parameterMap>
    
    <select id="call_PROC_SPEC_RECORD_CUST_LEVEL" parameterMap="contractLeavelMap" resultType="java.lang.Integer" statementType="CALLABLE">
    	  {CALL PROC_SPEC_RECORD_CUST_LEVEL(?,?,?,?,?,?,?)}
    </select>
     <parameterMap id="contractLeavelMap" type="java.util.Map">
     	 <parameter jdbcType="VARCHAR" mode="IN" property="aId" />
     	 <parameter jdbcType="VARCHAR" mode="IN" property="price" />
         <parameter jdbcType="VARCHAR" mode="IN" property="COMP_NO" />
         <parameter jdbcType="VARCHAR" mode="IN" property="DEPT_NO" />
         <parameter jdbcType="VARCHAR" mode="IN" property="CUST_LEVEL" />
         <parameter jdbcType="VARCHAR" mode="IN" property="MONTHS" />
         <parameter jdbcType="VARCHAR" mode="IN" property="GIFT_USER" />
    </parameterMap>
    
    <delete id="deleteRecordsByCompId">
    	DELETE CRM_FUN_CONTRACT WHERE DEPT_ID IN (SELECT DEPT_ID FROM FUN_DEPTS WHERE COMP_ID = #{compId} AND DEPT_FLAG <![CDATA[ < ]]>2)
    </delete>
    
    <select id="call_proc_upgradeVersion" parameterMap="updateVersionMap" resultType="java.lang.String" statementType="CALLABLE">
          {CALL proc_upgradeVersion(?,?,?,?,?,?,?)}
    </select>
    <parameterMap id="updateVersionMap" type="java.util.Map">
         <parameter jdbcType="VARCHAR" mode="IN" property="deptid" />
         <parameter jdbcType="VARCHAR" mode="IN" property="archive_id" />
         <parameter jdbcType="VARCHAR" mode="IN" property="operatorId" />
         <parameter jdbcType="VARCHAR" mode="IN" property="price" />
         <parameter jdbcType="VARCHAR" mode="IN" property="oldCompType" />
         <parameter jdbcType="VARCHAR" mode="IN" property="compType" />
         <parameter jdbcType="VARCHAR" mode="IN" property="comp_no" />
    </parameterMap>
    
    <select id="generatNo" resultMap="BaseResultMap">
    	select max(CONTRACT_NO) as CONTRACT_NO from CRM_FUN_CONTRACT where contract_no like #{pref}+'%' and len(CONTRACT_NO) &gt; 16
    </select>
    
    <select id="call_proc_pay4Weixin" parameterMap="weixinParam" resultType="java.lang.String" statementType="CALLABLE">
          {CALL proc_pay4Weixin(?,?,?,?)}
    </select>
    <parameterMap id="weixinParam" type="java.util.Map">
         <parameter jdbcType="VARCHAR" mode="IN" property="deptid" />
         <parameter jdbcType="VARCHAR" mode="IN" property="archive_id" />
         <parameter jdbcType="VARCHAR" mode="IN" property="price" />
         <parameter jdbcType="VARCHAR" mode="IN" property="operatorId" />
    </parameterMap>
    
    <select id="call_proc_buyVip" parameterMap="proc_buyVip" resultType="java.lang.String" statementType="CALLABLE">
          {CALL proc_buyVip(?,?,?,?,?,?,?,?,?,?)}
    </select>
    <parameterMap id="proc_buyVip" type="java.util.Map">
         <parameter jdbcType="VARCHAR" mode="IN" property="archiveId" />
         <parameter jdbcType="VARCHAR" mode="IN" property="ua_id" />
         <parameter jdbcType="VARCHAR" mode="IN" property="cityId" />
         <parameter jdbcType="VARCHAR" mode="IN" property="month" />
         <parameter jdbcType="VARCHAR" mode="IN" property="dcDay" />
         <parameter jdbcType="VARCHAR" mode="IN" property="dcCoin" />
         <parameter jdbcType="VARCHAR" mode="IN" property="dcQuan" />
         <parameter jdbcType="VARCHAR" mode="IN" property="amount" />
         <parameter jdbcType="VARCHAR" mode="IN" property="operatorid" />
         <parameter jdbcType="VARCHAR" mode="IN" property="promotion" />
    </parameterMap>
    
    <select id="call_proc_restore_space" parameterMap="proc_paySpace" resultType="java.lang.String" statementType="CALLABLE">
      {CALL proc_restore_space(?,?,?,?,?)}
    </select>
    <parameterMap id="proc_paySpace" type="java.util.Map">
         <parameter jdbcType="VARCHAR" mode="IN" property="year" />
         <parameter jdbcType="VARCHAR" mode="IN" property="amount" />
         <parameter jdbcType="VARCHAR" mode="IN" property="deptId" />
         <parameter jdbcType="VARCHAR" mode="IN" property="archive_id" />
         <parameter jdbcType="VARCHAR" mode="IN" property="operatorId" />
    </parameterMap>
    
    <select id="call_proc_restore_o2o" parameterMap="proc_paySpace" resultType="java.lang.String" statementType="CALLABLE">
     {CALL proc_restore_o2o(?,?,?,?,?)}
    </select>
    
     <parameterMap id="proc_Crm_Virement_map" type="java.util.Map">
         <parameter jdbcType="VARCHAR" mode="IN" property="uname" />
         <parameter jdbcType="VARCHAR" mode="IN" property="total_price" />
         <parameter jdbcType="VARCHAR" mode="IN" property="cash_uaid" />
         <parameter jdbcType="VARCHAR" mode="IN" property="cash_archiveId" />
         <parameter jdbcType="VARCHAR" mode="IN" property="sellUser" />
    </parameterMap>
    <select id="call_proc_Crm_Virement" parameterMap="proc_Crm_Virement_map" resultType="java.lang.String" statementType="CALLABLE">
    	  {CALL proc_Crm_Virement(?,?,?,?,?)}
    </select>
    
    <update id="updateDeptIdByDeptId">
     UPDATE CRM_FUN_CONTRACT SET DEPT_ID = #{deptIdNew} WHERE DEPT_ID = #{deptIdOld}
    </update>
    <update id="updatePayment">
     UPDATE a set a.CONTRACT_ID = b.CONTRACT_ID,
		a.SPACE_END = b.SPACE_END,
		a.DEPT_STATUS = b.DEPT_STATUS,
		a.DEPT_FLAG = b.DEPT_FLAG,
		a.PAY_TYPE = b.PAY_TYPE,
		a.TRY_TIME = b.TRY_TIME,
		a.FORM_TIME = b.FORM_TIME,
		a.TRACK_TIME = b.TRACK_TIME,
		a.REF_TIME = b.REF_TIME,
		a.SELL_TRACK_TIME = b.SELL_TRACK_TIME,
		a.CREATION_TIME = b.CREATION_TIME,
		a.ACTION_TIME = b.ACTION_TIME,
		a.DEPT_SOURCE = b.DEPT_SOURCE,
		a.VISITED_TIME = b.VISITED_TIME,
		a.TRAIN_ID = b.TRAIN_ID,
		a.TRAIN_COUNT = b.TRAIN_COUNT,
		a.OPEN_STATUS = b.OPEN_STATUS,
		a.DEPT_WEIXIN_STATUS = b.DEPT_WEIXIN_STATUS,
		a.WEIXIN_SERVICE_TIME = b.WEIXIN_SERVICE_TIME,
		a.WEIXIN_SERVICE_YEAR = b.WEIXIN_SERVICE_YEAR,
		a.TRANS_DEPT_ID = #{deptIdOld} 
		FROM FUN_DEPTS a,FUN_DEPTS b
	WHERE a.DEPT_ID = #{deptIdNew} and b.DEPT_ID = #{deptIdOld}
    </update>
    <select id="selectSendGiftContract" resultMap="ResultMapWithBLOBs">
		select PARTY_B_ID from CRM_FUN_CONTRACT 
		where DEPT_ID = #{deptId} and SIGN_DATE &gt;= '2015-01-01' and UNIT_PRICE &gt;= 600
	</select>
	
	<update id="updateContract" parameterType="com.myfun.repository.admindb.po.AdminCrmFunContract">
    update CRM_FUN_CONTRACT
    <set>
      <if test="payGifted != null">
        PAY_GIFTED = #{payGifted,jdbcType=INTEGER},
      </if>
      <if test="giftType != null">
        GIFT_TYPE = #{giftType,jdbcType=TINYINT},
      </if>
        GIFT_PRICE = NULL,
      <if test="reqUid != null">
        REQ_UID = #{reqUid,jdbcType=INTEGER},
      </if>
      <if test="reqTime != null">
        REQ_TIME = #{reqTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where CONTRACT_ID = #{contractId,jdbcType=INTEGER}
  </update>

	<insert id="insertForFastDfs">
		<foreach collection="dfsParamList" item="dfsParam" separator=";">
			INSERT INTO
			CRM_FUN_CONTRACT_FASTDFS_TMP(CONTRACT_ID,CONTRACT_PATH_OLD,CONTRACT_PATH_NEW)
			VALUES (#{dfsParam.contractId}, #{dfsParam.contractPathOld},
			#{dfsParam.contractPathNew})
		</foreach>
	</insert>

	<select id="getSoftContract" resultMap="SoftContractDto">
		SELECT TOP 1 
		A.*,B.WEI_CONTRACT_NO,B.CONTRACT_STATUS, B.WEI_CONTRACT_ID,
		B.WEI_CONTRACT_HTML, B.WEI_CONTRACT_PATH, B.WEI_TOTAL_PRICE
		FROM CRM_FUN_CONTRACT A LEFT JOIN WEIXIN_CONTRACT B
		ON A.DEPT_ID=B.WEI_DEPT_ID
		WHERE A.DEPT_ID=#{adminDeptId} and SIGN_STATUS=0
	</select>

</mapper>

