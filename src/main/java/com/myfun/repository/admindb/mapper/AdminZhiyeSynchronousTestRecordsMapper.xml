<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminZhiyeSynchronousTestRecordsMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminZhiyeSynchronousTestRecords">
    <!--@mbggenerated-->
    <id column="RECORDS_ID" jdbcType="INTEGER" property="recordsId" />
    <result column="ID" jdbcType="INTEGER" property="id" />
    <result column="BROKER_ID" jdbcType="INTEGER" property="brokerId" />
    <result column="EXAM_ID" jdbcType="INTEGER" property="examId" />
    <result column="EXAM_NAME" jdbcType="VARCHAR" property="examName" />
    <result column="EXAM_RESULT" jdbcType="INTEGER" property="examResult" />
    <result column="USER_SCORE" jdbcType="NUMERIC" property="userScore" />
    <result column="SUBJECT_ID" jdbcType="INTEGER" property="subjectId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    RECORDS_ID, ID, BROKER_ID, EXAM_ID, EXAM_NAME, EXAM_RESULT, USER_SCORE, SUBJECT_ID, 
    CREATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminZhiyeSynchronousTestRecordsExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ZHIYE_SYNCHRONOUS_TEST_RECORDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from ZHIYE_SYNCHRONOUS_TEST_RECORDS
    where RECORDS_ID = #{recordsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from ZHIYE_SYNCHRONOUS_TEST_RECORDS
    where RECORDS_ID = #{recordsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminZhiyeSynchronousTestRecordsExample">
    <!--@mbggenerated-->
    delete from ZHIYE_SYNCHRONOUS_TEST_RECORDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="recordsId" parameterType="com.myfun.repository.admindb.po.AdminZhiyeSynchronousTestRecords" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into ZHIYE_SYNCHRONOUS_TEST_RECORDS (ID, BROKER_ID, EXAM_ID, 
      EXAM_NAME, EXAM_RESULT, USER_SCORE, 
      SUBJECT_ID, CREATE_TIME)
    values (#{id,jdbcType=INTEGER}, #{brokerId,jdbcType=INTEGER}, #{examId,jdbcType=INTEGER}, 
      #{examName,jdbcType=VARCHAR}, #{examResult,jdbcType=INTEGER}, #{userScore,jdbcType=NUMERIC}, 
      #{subjectId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="recordsId" parameterType="com.myfun.repository.admindb.po.AdminZhiyeSynchronousTestRecords" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into ZHIYE_SYNCHRONOUS_TEST_RECORDS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="brokerId != null">
        BROKER_ID,
      </if>
      <if test="examId != null">
        EXAM_ID,
      </if>
      <if test="examName != null">
        EXAM_NAME,
      </if>
      <if test="examResult != null">
        EXAM_RESULT,
      </if>
      <if test="userScore != null">
        USER_SCORE,
      </if>
      <if test="subjectId != null">
        SUBJECT_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="brokerId != null">
        #{brokerId,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=INTEGER},
      </if>
      <if test="examName != null">
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="examResult != null">
        #{examResult,jdbcType=INTEGER},
      </if>
      <if test="userScore != null">
        #{userScore,jdbcType=NUMERIC},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminZhiyeSynchronousTestRecordsExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from ZHIYE_SYNCHRONOUS_TEST_RECORDS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update ZHIYE_SYNCHRONOUS_TEST_RECORDS
    <set>
      <if test="record.recordsId != null">
        RECORDS_ID = #{record.recordsId,jdbcType=INTEGER},
      </if>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.brokerId != null">
        BROKER_ID = #{record.brokerId,jdbcType=INTEGER},
      </if>
      <if test="record.examId != null">
        EXAM_ID = #{record.examId,jdbcType=INTEGER},
      </if>
      <if test="record.examName != null">
        EXAM_NAME = #{record.examName,jdbcType=VARCHAR},
      </if>
      <if test="record.examResult != null">
        EXAM_RESULT = #{record.examResult,jdbcType=INTEGER},
      </if>
      <if test="record.userScore != null">
        USER_SCORE = #{record.userScore,jdbcType=NUMERIC},
      </if>
      <if test="record.subjectId != null">
        SUBJECT_ID = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update ZHIYE_SYNCHRONOUS_TEST_RECORDS
    set RECORDS_ID = #{record.recordsId,jdbcType=INTEGER},
      ID = #{record.id,jdbcType=INTEGER},
      BROKER_ID = #{record.brokerId,jdbcType=INTEGER},
      EXAM_ID = #{record.examId,jdbcType=INTEGER},
      EXAM_NAME = #{record.examName,jdbcType=VARCHAR},
      EXAM_RESULT = #{record.examResult,jdbcType=INTEGER},
      USER_SCORE = #{record.userScore,jdbcType=NUMERIC},
      SUBJECT_ID = #{record.subjectId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminZhiyeSynchronousTestRecords">
    <!--@mbggenerated-->
    update ZHIYE_SYNCHRONOUS_TEST_RECORDS
    <set>
      <if test="id != null">
        ID = #{id,jdbcType=INTEGER},
      </if>
      <if test="brokerId != null">
        BROKER_ID = #{brokerId,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        EXAM_ID = #{examId,jdbcType=INTEGER},
      </if>
      <if test="examName != null">
        EXAM_NAME = #{examName,jdbcType=VARCHAR},
      </if>
      <if test="examResult != null">
        EXAM_RESULT = #{examResult,jdbcType=INTEGER},
      </if>
      <if test="userScore != null">
        USER_SCORE = #{userScore,jdbcType=NUMERIC},
      </if>
      <if test="subjectId != null">
        SUBJECT_ID = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where RECORDS_ID = #{recordsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminZhiyeSynchronousTestRecords">
    <!--@mbggenerated-->
    update ZHIYE_SYNCHRONOUS_TEST_RECORDS
    set ID = #{id,jdbcType=INTEGER},
      BROKER_ID = #{brokerId,jdbcType=INTEGER},
      EXAM_ID = #{examId,jdbcType=INTEGER},
      EXAM_NAME = #{examName,jdbcType=VARCHAR},
      EXAM_RESULT = #{examResult,jdbcType=INTEGER},
      USER_SCORE = #{userScore,jdbcType=NUMERIC},
      SUBJECT_ID = #{subjectId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where RECORDS_ID = #{recordsId,jdbcType=INTEGER}
  </update>
</mapper>