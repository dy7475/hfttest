<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunTempletMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunTemplet">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="SUBJECT_TEMPLET" jdbcType="VARCHAR" property="subjectTemplet" />
    <result column="TYPE" jdbcType="BIT" property="type" />
    <result column="SALE_LEASE" jdbcType="TINYINT" property="saleLease" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="TYPES_FLAG" jdbcType="VARCHAR" property="typesFlag" />
    <result column="HOUSE_USEAGE" jdbcType="TINYINT" property="houseUseage" />
    <result column="USE_COUNT" jdbcType="INTEGER" property="useCount" />
    <result column="UPDATETIME" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="LOCK" jdbcType="TINYINT" property="lock" />
    <result column="ENCODE_FLAG" jdbcType="TINYINT" property="encodeFlag" />
    <result column="NEW_TEMPLATE" jdbcType="TINYINT" property="newTemplate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.myfun.repository.admindb.po.AdminFunTemplet">
    <!--@mbggenerated-->
    <result column="CHARACT_TEMPLET" jdbcType="CLOB" property="charactTemplet" />
    <result column="CHARACT_TEMPLET_ENCODE" jdbcType="CLOB" property="charactTempletEncode" />
    <result column="CHARACT_TEMPLET_ENCODE_OLD" jdbcType="CLOB" property="charactTempletEncodeOld" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, SUBJECT_TEMPLET, [TYPE], SALE_LEASE, CITY_ID, TYPES_FLAG, HOUSE_USEAGE, USE_COUNT, 
    UPDATETIME, COMP_ID, ARCHIVE_ID, [LOCK], ENCODE_FLAG, NEW_TEMPLATE
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbggenerated-->
    CHARACT_TEMPLET, CHARACT_TEMPLET_ENCODE, CHARACT_TEMPLET_ENCODE_OLD
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.myfun.repository.admindb.po.AdminFunTempletExample" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_TEMPLET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminFunTempletExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_TEMPLET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_TEMPLET
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_TEMPLET
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminFunTempletExample">
    <!--@mbggenerated-->
    delete from FUN_TEMPLET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunTemplet">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_TEMPLET (SUBJECT_TEMPLET, [TYPE], SALE_LEASE, 
      CITY_ID, TYPES_FLAG, HOUSE_USEAGE, 
      USE_COUNT, UPDATETIME, COMP_ID, 
      ARCHIVE_ID, [LOCK], ENCODE_FLAG, 
      NEW_TEMPLATE, CHARACT_TEMPLET, CHARACT_TEMPLET_ENCODE, 
      CHARACT_TEMPLET_ENCODE_OLD)
    values (#{subjectTemplet,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, #{saleLease,jdbcType=TINYINT}, 
      #{cityId,jdbcType=INTEGER}, #{typesFlag,jdbcType=VARCHAR}, #{houseUseage,jdbcType=TINYINT}, 
      #{useCount,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, #{compId,jdbcType=INTEGER}, 
      #{archiveId,jdbcType=INTEGER}, #{lock,jdbcType=TINYINT}, #{encodeFlag,jdbcType=TINYINT}, 
      #{newTemplate,jdbcType=TINYINT}, #{charactTemplet,jdbcType=CLOB}, #{charactTempletEncode,jdbcType=CLOB}, 
      #{charactTempletEncodeOld,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunTemplet">
    <!--@mbggenerated-->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_TEMPLET
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subjectTemplet != null">
        SUBJECT_TEMPLET,
      </if>
      <if test="type != null">
        [TYPE],
      </if>
      <if test="saleLease != null">
        SALE_LEASE,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="typesFlag != null">
        TYPES_FLAG,
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE,
      </if>
      <if test="useCount != null">
        USE_COUNT,
      </if>
      <if test="updatetime != null">
        UPDATETIME,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="lock != null">
        [LOCK],
      </if>
      <if test="encodeFlag != null">
        ENCODE_FLAG,
      </if>
      <if test="newTemplate != null">
        NEW_TEMPLATE,
      </if>
      <if test="charactTemplet != null">
        CHARACT_TEMPLET,
      </if>
      <if test="charactTempletEncode != null">
        CHARACT_TEMPLET_ENCODE,
      </if>
      <if test="charactTempletEncodeOld != null">
        CHARACT_TEMPLET_ENCODE_OLD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subjectTemplet != null">
        #{subjectTemplet,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="saleLease != null">
        #{saleLease,jdbcType=TINYINT},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="typesFlag != null">
        #{typesFlag,jdbcType=VARCHAR},
      </if>
      <if test="houseUseage != null">
        #{houseUseage,jdbcType=TINYINT},
      </if>
      <if test="useCount != null">
        #{useCount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="lock != null">
        #{lock,jdbcType=TINYINT},
      </if>
      <if test="encodeFlag != null">
        #{encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="newTemplate != null">
        #{newTemplate,jdbcType=TINYINT},
      </if>
      <if test="charactTemplet != null">
        #{charactTemplet,jdbcType=CLOB},
      </if>
      <if test="charactTempletEncode != null">
        #{charactTempletEncode,jdbcType=CLOB},
      </if>
      <if test="charactTempletEncodeOld != null">
        #{charactTempletEncodeOld,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminFunTempletExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_TEMPLET
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_TEMPLET
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.subjectTemplet != null">
        SUBJECT_TEMPLET = #{record.subjectTemplet,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        [TYPE] = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.saleLease != null">
        SALE_LEASE = #{record.saleLease,jdbcType=TINYINT},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.typesFlag != null">
        TYPES_FLAG = #{record.typesFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.houseUseage != null">
        HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      </if>
      <if test="record.useCount != null">
        USE_COUNT = #{record.useCount,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.lock != null">
        [LOCK] = #{record.lock,jdbcType=TINYINT},
      </if>
      <if test="record.encodeFlag != null">
        ENCODE_FLAG = #{record.encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="record.newTemplate != null">
        NEW_TEMPLATE = #{record.newTemplate,jdbcType=TINYINT},
      </if>
      <if test="record.charactTemplet != null">
        CHARACT_TEMPLET = #{record.charactTemplet,jdbcType=CLOB},
      </if>
      <if test="record.charactTempletEncode != null">
        CHARACT_TEMPLET_ENCODE = #{record.charactTempletEncode,jdbcType=CLOB},
      </if>
      <if test="record.charactTempletEncodeOld != null">
        CHARACT_TEMPLET_ENCODE_OLD = #{record.charactTempletEncodeOld,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--@mbggenerated-->
    update FUN_TEMPLET
    set ID = #{record.id,jdbcType=INTEGER},
      SUBJECT_TEMPLET = #{record.subjectTemplet,jdbcType=VARCHAR},
      [TYPE] = #{record.type,jdbcType=BIT},
      SALE_LEASE = #{record.saleLease,jdbcType=TINYINT},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      TYPES_FLAG = #{record.typesFlag,jdbcType=VARCHAR},
      HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      USE_COUNT = #{record.useCount,jdbcType=INTEGER},
      UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      [LOCK] = #{record.lock,jdbcType=TINYINT},
      ENCODE_FLAG = #{record.encodeFlag,jdbcType=TINYINT},
      NEW_TEMPLATE = #{record.newTemplate,jdbcType=TINYINT},
      CHARACT_TEMPLET = #{record.charactTemplet,jdbcType=CLOB},
      CHARACT_TEMPLET_ENCODE = #{record.charactTempletEncode,jdbcType=CLOB},
      CHARACT_TEMPLET_ENCODE_OLD = #{record.charactTempletEncodeOld,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_TEMPLET
    set ID = #{record.id,jdbcType=INTEGER},
      SUBJECT_TEMPLET = #{record.subjectTemplet,jdbcType=VARCHAR},
      [TYPE] = #{record.type,jdbcType=BIT},
      SALE_LEASE = #{record.saleLease,jdbcType=TINYINT},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      TYPES_FLAG = #{record.typesFlag,jdbcType=VARCHAR},
      HOUSE_USEAGE = #{record.houseUseage,jdbcType=TINYINT},
      USE_COUNT = #{record.useCount,jdbcType=INTEGER},
      UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      [LOCK] = #{record.lock,jdbcType=TINYINT},
      ENCODE_FLAG = #{record.encodeFlag,jdbcType=TINYINT},
      NEW_TEMPLATE = #{record.newTemplate,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunTemplet">
    <!--@mbggenerated-->
    update FUN_TEMPLET
    <set>
      <if test="subjectTemplet != null">
        SUBJECT_TEMPLET = #{subjectTemplet,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        [TYPE] = #{type,jdbcType=BIT},
      </if>
      <if test="saleLease != null">
        SALE_LEASE = #{saleLease,jdbcType=TINYINT},
      </if>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="typesFlag != null">
        TYPES_FLAG = #{typesFlag,jdbcType=VARCHAR},
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      </if>
      <if test="useCount != null">
        USE_COUNT = #{useCount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="lock != null">
        [LOCK] = #{lock,jdbcType=TINYINT},
      </if>
      <if test="encodeFlag != null">
        ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="newTemplate != null">
        NEW_TEMPLATE = #{newTemplate,jdbcType=TINYINT},
      </if>
      <if test="charactTemplet != null">
        CHARACT_TEMPLET = #{charactTemplet,jdbcType=CLOB},
      </if>
      <if test="charactTempletEncode != null">
        CHARACT_TEMPLET_ENCODE = #{charactTempletEncode,jdbcType=CLOB},
      </if>
      <if test="charactTempletEncodeOld != null">
        CHARACT_TEMPLET_ENCODE_OLD = #{charactTempletEncodeOld,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myfun.repository.admindb.po.AdminFunTemplet">
    <!--@mbggenerated-->
    update FUN_TEMPLET
    set SUBJECT_TEMPLET = #{subjectTemplet,jdbcType=VARCHAR},
      [TYPE] = #{type,jdbcType=BIT},
      SALE_LEASE = #{saleLease,jdbcType=TINYINT},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      TYPES_FLAG = #{typesFlag,jdbcType=VARCHAR},
      HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      USE_COUNT = #{useCount,jdbcType=INTEGER},
      UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      COMP_ID = #{compId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      [LOCK] = #{lock,jdbcType=TINYINT},
      ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      NEW_TEMPLATE = #{newTemplate,jdbcType=TINYINT},
      CHARACT_TEMPLET = #{charactTemplet,jdbcType=CLOB},
      CHARACT_TEMPLET_ENCODE = #{charactTempletEncode,jdbcType=CLOB},
      CHARACT_TEMPLET_ENCODE_OLD = #{charactTempletEncodeOld,jdbcType=CLOB}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunTemplet">
    <!--@mbggenerated-->
    update FUN_TEMPLET
    set SUBJECT_TEMPLET = #{subjectTemplet,jdbcType=VARCHAR},
      [TYPE] = #{type,jdbcType=BIT},
      SALE_LEASE = #{saleLease,jdbcType=TINYINT},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      TYPES_FLAG = #{typesFlag,jdbcType=VARCHAR},
      HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      USE_COUNT = #{useCount,jdbcType=INTEGER},
      UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      COMP_ID = #{compId,jdbcType=INTEGER},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      [LOCK] = #{lock,jdbcType=TINYINT},
      ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      NEW_TEMPLATE = #{newTemplate,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateTemplateById" parameterType="com.myfun.erpWeb.common.param.AddEditCompDefineTemplateParam">
    update FUN_TEMPLET
    <set>
      <if test="subjectTemplet != null">
        SUBJECT_TEMPLET = #{subjectTemplet,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        [TYPE] = #{type,jdbcType=BIT},
      </if>
      <if test="saleLease != null">
        SALE_LEASE = #{saleLease,jdbcType=TINYINT},
      </if>
      <if test="typesFlag != null">
        TYPES_FLAG = #{typesFlag,jdbcType=VARCHAR},
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE = #{houseUseage,jdbcType=TINYINT},
      </if>
      <if test="useCount != null">
        USE_COUNT = #{useCount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="lock != null">
        [LOCK] = #{lock,jdbcType=TINYINT},
      </if>
      <if test="encodeFlag != null">
        ENCODE_FLAG = #{encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="newTemplate != null">
        NEW_TEMPLATE = #{newTemplate,jdbcType=TINYINT},
      </if>
      <if test="charactTemplet != null">
        CHARACT_TEMPLET = #{charactTemplet,jdbcType=CLOB},
      </if>
      <if test="charactTempletEncode != null">
        CHARACT_TEMPLET_ENCODE = #{charactTempletEncode,jdbcType=CLOB},
      </if>
      <if test="charactTempletEncodeOld != null">
        CHARACT_TEMPLET_ENCODE_OLD = #{charactTempletEncodeOld,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertTemplate" parameterType="com.myfun.erpWeb.common.param.AddEditCompDefineTemplateParam">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into FUN_TEMPLET
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subjectTemplet != null">
        SUBJECT_TEMPLET,
      </if>
      <if test="type != null">
        [TYPE],
      </if>
      <if test="saleLease != null">
        SALE_LEASE,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="typesFlag != null">
        TYPES_FLAG,
      </if>
      <if test="houseUseage != null">
        HOUSE_USEAGE,
      </if>
      <if test="useCount != null">
        USE_COUNT,
      </if>
      <if test="updatetime != null">
        UPDATETIME,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="lock != null">
        [LOCK],
      </if>
      <if test="encodeFlag != null">
        ENCODE_FLAG,
      </if>
      <if test="newTemplate != null">
        NEW_TEMPLATE,
      </if>
      <if test="charactTemplet != null">
        CHARACT_TEMPLET,
      </if>
      <if test="charactTempletEncode != null">
        CHARACT_TEMPLET_ENCODE,
      </if>
      <if test="charactTempletEncodeOld != null">
        CHARACT_TEMPLET_ENCODE_OLD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subjectTemplet != null">
        #{subjectTemplet,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="saleLease != null">
        #{saleLease,jdbcType=TINYINT},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="typesFlag != null">
        #{typesFlag,jdbcType=VARCHAR},
      </if>
      <if test="houseUseage != null">
        #{houseUseage,jdbcType=TINYINT},
      </if>
      <if test="useCount != null">
        #{useCount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="lock != null">
        #{lock,jdbcType=TINYINT},
      </if>
      <if test="encodeFlag != null">
        #{encodeFlag,jdbcType=TINYINT},
      </if>
      <if test="newTemplate != null">
        #{newTemplate,jdbcType=TINYINT},
      </if>
      <if test="charactTemplet != null">
        #{charactTemplet,jdbcType=CLOB},
      </if>
      <if test="charactTempletEncode != null">
        #{charactTempletEncode,jdbcType=CLOB},
      </if>
      <if test="charactTempletEncodeOld != null">
        #{charactTempletEncodeOld,jdbcType=CLOB},
      </if>
    </trim>
  </insert>

</mapper>