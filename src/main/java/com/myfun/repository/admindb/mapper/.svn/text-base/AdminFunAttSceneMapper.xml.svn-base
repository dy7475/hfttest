<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunAttSceneMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunAttScene">
    <!--@mbggenerated-->
    <id column="SCENE_ID" jdbcType="INTEGER" property="sceneId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CRM_USER_ID" jdbcType="INTEGER" property="crmUserId" />
    <result column="SCENE_DESC" jdbcType="VARCHAR" property="sceneDesc" />
    <result column="SCENE_TYPE" jdbcType="TINYINT" property="sceneType" />
    <result column="CLOCK_START_TIME" jdbcType="INTEGER" property="clockStartTime" />
    <result column="CLOCK_END_TIME" jdbcType="INTEGER" property="clockEndTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    SCENE_ID, CREATE_TIME, UPDATE_TIME, CRM_USER_ID, SCENE_DESC, SCENE_TYPE, CLOCK_START_TIME, 
    CLOCK_END_TIME
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminFunAttSceneExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUN_ATT_SCENE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_ATT_SCENE
    where SCENE_ID = #{sceneId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_ATT_SCENE
    where SCENE_ID = #{sceneId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminFunAttSceneExample">
    <!--@mbggenerated-->
    delete from FUN_ATT_SCENE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="sceneId" parameterType="com.myfun.repository.admindb.po.AdminFunAttScene" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ATT_SCENE (CREATE_TIME, UPDATE_TIME, CRM_USER_ID, 
      SCENE_DESC, SCENE_TYPE, CLOCK_START_TIME, 
      CLOCK_END_TIME)
    values (#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{crmUserId,jdbcType=INTEGER}, 
      #{sceneDesc,jdbcType=VARCHAR}, #{sceneType,jdbcType=TINYINT}, #{clockStartTime,jdbcType=INTEGER}, 
      #{clockEndTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="sceneId" parameterType="com.myfun.repository.admindb.po.AdminFunAttScene" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_ATT_SCENE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="crmUserId != null">
        CRM_USER_ID,
      </if>
      <if test="sceneDesc != null">
        SCENE_DESC,
      </if>
      <if test="sceneType != null">
        SCENE_TYPE,
      </if>
      <if test="clockStartTime != null">
        CLOCK_START_TIME,
      </if>
      <if test="clockEndTime != null">
        CLOCK_END_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crmUserId != null">
        #{crmUserId,jdbcType=INTEGER},
      </if>
      <if test="sceneDesc != null">
        #{sceneDesc,jdbcType=VARCHAR},
      </if>
      <if test="sceneType != null">
        #{sceneType,jdbcType=TINYINT},
      </if>
      <if test="clockStartTime != null">
        #{clockStartTime,jdbcType=INTEGER},
      </if>
      <if test="clockEndTime != null">
        #{clockEndTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminFunAttSceneExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from FUN_ATT_SCENE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ATT_SCENE
    <set>
      <if test="record.sceneId != null">
        SCENE_ID = #{record.sceneId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.crmUserId != null">
        CRM_USER_ID = #{record.crmUserId,jdbcType=INTEGER},
      </if>
      <if test="record.sceneDesc != null">
        SCENE_DESC = #{record.sceneDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.sceneType != null">
        SCENE_TYPE = #{record.sceneType,jdbcType=TINYINT},
      </if>
      <if test="record.clockStartTime != null">
        CLOCK_START_TIME = #{record.clockStartTime,jdbcType=INTEGER},
      </if>
      <if test="record.clockEndTime != null">
        CLOCK_END_TIME = #{record.clockEndTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update FUN_ATT_SCENE
    set SCENE_ID = #{record.sceneId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CRM_USER_ID = #{record.crmUserId,jdbcType=INTEGER},
      SCENE_DESC = #{record.sceneDesc,jdbcType=VARCHAR},
      SCENE_TYPE = #{record.sceneType,jdbcType=TINYINT},
      CLOCK_START_TIME = #{record.clockStartTime,jdbcType=INTEGER},
      CLOCK_END_TIME = #{record.clockEndTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunAttScene">
    <!--@mbggenerated-->
    update FUN_ATT_SCENE
    <set>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crmUserId != null">
        CRM_USER_ID = #{crmUserId,jdbcType=INTEGER},
      </if>
      <if test="sceneDesc != null">
        SCENE_DESC = #{sceneDesc,jdbcType=VARCHAR},
      </if>
      <if test="sceneType != null">
        SCENE_TYPE = #{sceneType,jdbcType=TINYINT},
      </if>
      <if test="clockStartTime != null">
        CLOCK_START_TIME = #{clockStartTime,jdbcType=INTEGER},
      </if>
      <if test="clockEndTime != null">
        CLOCK_END_TIME = #{clockEndTime,jdbcType=INTEGER},
      </if>
    </set>
    where SCENE_ID = #{sceneId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunAttScene">
    <!--@mbggenerated-->
    update FUN_ATT_SCENE
    set CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CRM_USER_ID = #{crmUserId,jdbcType=INTEGER},
      SCENE_DESC = #{sceneDesc,jdbcType=VARCHAR},
      SCENE_TYPE = #{sceneType,jdbcType=TINYINT},
      CLOCK_START_TIME = #{clockStartTime,jdbcType=INTEGER},
      CLOCK_END_TIME = #{clockEndTime,jdbcType=INTEGER}
    where SCENE_ID = #{sceneId,jdbcType=INTEGER}
  </update>
  <select id="selectAllScene" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM FUN_ATT_SCENE
  </select>
</mapper>