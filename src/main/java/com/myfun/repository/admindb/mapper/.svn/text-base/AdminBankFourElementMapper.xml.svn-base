<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminBankFourElementMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminBankFourElement" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="ID_CARD" property="idCard" jdbcType="VARCHAR" />
    <result column="BANK_CARD_NUMBER" property="bankCardNumber" jdbcType="VARCHAR" />
    <result column="USER_MOBILE" property="userMobile" jdbcType="VARCHAR" />
    <result column="VALIDATION_STATUS" property="validationStatus" jdbcType="TINYINT" />
    <result column="COOPERATE_DEAL_ID" property="cooperateDealId" jdbcType="INTEGER" />
    <result column="BANK_NAME_ALL" property="bankNameAll" jdbcType="VARCHAR" />
    <result column="BANK_NAME_SIMPLE" property="bankNameSimple" jdbcType="VARCHAR" />
    <result column="BANK_NO" property="bankNo" jdbcType="VARCHAR" />
    <result column="CERTIFICATION_PARTY" property="certificationParty" jdbcType="TINYINT" />
    <result column="DEAL_TYPE" property="dealType" jdbcType="TINYINT" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, USER_NAME, ID_CARD, BANK_CARD_NUMBER, USER_MOBILE, VALIDATION_STATUS, COOPERATE_DEAL_ID, 
    BANK_NAME_ALL, BANK_NAME_SIMPLE, BANK_NO, CERTIFICATION_PARTY, DEAL_TYPE, ARCHIVE_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.admindb.po.AdminBankFourElementExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BANK_FOUR_ELEMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from BANK_FOUR_ELEMENT
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from BANK_FOUR_ELEMENT
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminBankFourElementExample" >
    <!--@mbggenerated-->
    delete from BANK_FOUR_ELEMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminBankFourElement" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into BANK_FOUR_ELEMENT (USER_NAME, ID_CARD, BANK_CARD_NUMBER, 
      USER_MOBILE, VALIDATION_STATUS, COOPERATE_DEAL_ID, 
      BANK_NAME_ALL, BANK_NAME_SIMPLE, BANK_NO, 
      CERTIFICATION_PARTY, DEAL_TYPE, ARCHIVE_ID
      )
    values (#{userName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{bankCardNumber,jdbcType=VARCHAR}, 
      #{userMobile,jdbcType=VARCHAR}, #{validationStatus,jdbcType=TINYINT}, #{cooperateDealId,jdbcType=INTEGER}, 
      #{bankNameAll,jdbcType=VARCHAR}, #{bankNameSimple,jdbcType=VARCHAR}, #{bankNo,jdbcType=VARCHAR}, 
      #{certificationParty,jdbcType=TINYINT}, #{dealType,jdbcType=TINYINT}, #{archiveId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminBankFourElement" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into BANK_FOUR_ELEMENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="idCard != null" >
        ID_CARD,
      </if>
      <if test="bankCardNumber != null" >
        BANK_CARD_NUMBER,
      </if>
      <if test="userMobile != null" >
        USER_MOBILE,
      </if>
      <if test="validationStatus != null" >
        VALIDATION_STATUS,
      </if>
      <if test="cooperateDealId != null" >
        COOPERATE_DEAL_ID,
      </if>
      <if test="bankNameAll != null" >
        BANK_NAME_ALL,
      </if>
      <if test="bankNameSimple != null" >
        BANK_NAME_SIMPLE,
      </if>
      <if test="bankNo != null" >
        BANK_NO,
      </if>
      <if test="certificationParty != null" >
        CERTIFICATION_PARTY,
      </if>
      <if test="dealType != null" >
        DEAL_TYPE,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNumber != null" >
        #{bankCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="validationStatus != null" >
        #{validationStatus,jdbcType=TINYINT},
      </if>
      <if test="cooperateDealId != null" >
        #{cooperateDealId,jdbcType=INTEGER},
      </if>
      <if test="bankNameAll != null" >
        #{bankNameAll,jdbcType=VARCHAR},
      </if>
      <if test="bankNameSimple != null" >
        #{bankNameSimple,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null" >
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="certificationParty != null" >
        #{certificationParty,jdbcType=TINYINT},
      </if>
      <if test="dealType != null" >
        #{dealType,jdbcType=TINYINT},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminBankFourElementExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from BANK_FOUR_ELEMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update BANK_FOUR_ELEMENT
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null" >
        ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardNumber != null" >
        BANK_CARD_NUMBER = #{record.bankCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userMobile != null" >
        USER_MOBILE = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.validationStatus != null" >
        VALIDATION_STATUS = #{record.validationStatus,jdbcType=TINYINT},
      </if>
      <if test="record.cooperateDealId != null" >
        COOPERATE_DEAL_ID = #{record.cooperateDealId,jdbcType=INTEGER},
      </if>
      <if test="record.bankNameAll != null" >
        BANK_NAME_ALL = #{record.bankNameAll,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNameSimple != null" >
        BANK_NAME_SIMPLE = #{record.bankNameSimple,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNo != null" >
        BANK_NO = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.certificationParty != null" >
        CERTIFICATION_PARTY = #{record.certificationParty,jdbcType=TINYINT},
      </if>
      <if test="record.dealType != null" >
        DEAL_TYPE = #{record.dealType,jdbcType=TINYINT},
      </if>
      <if test="record.archiveId != null" >
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update BANK_FOUR_ELEMENT
    set ID = #{record.id,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      BANK_CARD_NUMBER = #{record.bankCardNumber,jdbcType=VARCHAR},
      USER_MOBILE = #{record.userMobile,jdbcType=VARCHAR},
      VALIDATION_STATUS = #{record.validationStatus,jdbcType=TINYINT},
      COOPERATE_DEAL_ID = #{record.cooperateDealId,jdbcType=INTEGER},
      BANK_NAME_ALL = #{record.bankNameAll,jdbcType=VARCHAR},
      BANK_NAME_SIMPLE = #{record.bankNameSimple,jdbcType=VARCHAR},
      BANK_NO = #{record.bankNo,jdbcType=VARCHAR},
      CERTIFICATION_PARTY = #{record.certificationParty,jdbcType=TINYINT},
      DEAL_TYPE = #{record.dealType,jdbcType=TINYINT},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminBankFourElement" >
    <!--@mbggenerated-->
    update BANK_FOUR_ELEMENT
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        ID_CARD = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNumber != null" >
        BANK_CARD_NUMBER = #{bankCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="validationStatus != null" >
        VALIDATION_STATUS = #{validationStatus,jdbcType=TINYINT},
      </if>
      <if test="cooperateDealId != null" >
        COOPERATE_DEAL_ID = #{cooperateDealId,jdbcType=INTEGER},
      </if>
      <if test="bankNameAll != null" >
        BANK_NAME_ALL = #{bankNameAll,jdbcType=VARCHAR},
      </if>
      <if test="bankNameSimple != null" >
        BANK_NAME_SIMPLE = #{bankNameSimple,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null" >
        BANK_NO = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="certificationParty != null" >
        CERTIFICATION_PARTY = #{certificationParty,jdbcType=TINYINT},
      </if>
      <if test="dealType != null" >
        DEAL_TYPE = #{dealType,jdbcType=TINYINT},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminBankFourElement" >
    <!--@mbggenerated-->
    update BANK_FOUR_ELEMENT
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      ID_CARD = #{idCard,jdbcType=VARCHAR},
      BANK_CARD_NUMBER = #{bankCardNumber,jdbcType=VARCHAR},
      USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      VALIDATION_STATUS = #{validationStatus,jdbcType=TINYINT},
      COOPERATE_DEAL_ID = #{cooperateDealId,jdbcType=INTEGER},
      BANK_NAME_ALL = #{bankNameAll,jdbcType=VARCHAR},
      BANK_NAME_SIMPLE = #{bankNameSimple,jdbcType=VARCHAR},
      BANK_NO = #{bankNo,jdbcType=VARCHAR},
      CERTIFICATION_PARTY = #{certificationParty,jdbcType=TINYINT},
      DEAL_TYPE = #{dealType,jdbcType=TINYINT},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectOneByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.admindb.po.AdminBankFourElementExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BANK_FOUR_ELEMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>