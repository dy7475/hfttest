<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.Admin_Sync_OA_ML_UserChangeData2Mapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_UserChangeData2" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="C_TYPE" property="cType" jdbcType="VARCHAR" />
    <result column="C_TYPE_CODE" property="cTypeCode" jdbcType="VARCHAR" />
    <result column="CHANGE_TITLE" property="changeTitle" jdbcType="VARCHAR" />
    <result column="CHANGE_ID" property="changeId" jdbcType="VARCHAR" />
    <result column="OLD_BAGE" property="oldBage" jdbcType="VARCHAR" />
    <result column="BADGE" property="badge" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="CERT_NO" property="certNo" jdbcType="VARCHAR" />
    <result column="OLD_MOBILE" property="oldMobile" jdbcType="VARCHAR" />
    <result column="NEW_MOBILE" property="newMobile" jdbcType="VARCHAR" />
    <result column="CHANGE_DATE" property="changeDate" jdbcType="TIMESTAMP" />
    <result column="OLD_DEP_CODE" property="oldDepCode" jdbcType="VARCHAR" />
    <result column="NEW_DEP_CODE" property="newDepCode" jdbcType="VARCHAR" />
    <result column="OLD_DEP_ID" property="oldDepId" jdbcType="VARCHAR" />
    <result column="NEW_DEP_ID" property="newDepId" jdbcType="VARCHAR" />
    <result column="OLD_DEP_MAR_KET" property="oldDepMarKet" jdbcType="VARCHAR" />
    <result column="OLD_MARKET_NAME" property="oldMarketName" jdbcType="VARCHAR" />
    <result column="NEW_DEP_MARKET" property="newDepMarket" jdbcType="VARCHAR" />
    <result column="NEW_MARKET_NAME" property="newMarketName" jdbcType="VARCHAR" />
    <result column="OLD_DEP_ABBR" property="oldDepAbbr" jdbcType="VARCHAR" />
    <result column="NEW_DEP_ABBR" property="newDepAbbr" jdbcType="VARCHAR" />
    <result column="OLD_EMPGRADE" property="oldEmpgrade" jdbcType="VARCHAR" />
    <result column="NEW_EMPGRADE" property="newEmpgrade" jdbcType="VARCHAR" />
    <result column="JOIN_DATE" property="joinDate" jdbcType="TIMESTAMP" />
    <result column="LEAVE_DATE" property="leaveDate" jdbcType="TIMESTAMP" />
    <result column="HONG_KONG_ID" property="hongKongId" jdbcType="VARCHAR" />
    <result column="INITIALIZED_TIME" property="initializedTime" jdbcType="TIMESTAMP" />
    <result column="OLD_JOB_NAME" property="oldJobName" jdbcType="VARCHAR" />
    <result column="OLD_JOB_ID" property="oldJobId" jdbcType="VARCHAR" />
    <result column="NEW_JOB_NAME" property="newJobName" jdbcType="VARCHAR" />
    <result column="NEW_JOB_ID" property="newJobId" jdbcType="VARCHAR" />
    <result column="E_STATUE" property="eStatue" jdbcType="VARCHAR" />
    <result column="OLD_QXTYPE" property="oldQxtype" jdbcType="VARCHAR" />
    <result column="OLD_QXTYPE_NAME" property="oldQxtypeName" jdbcType="VARCHAR" />
    <result column="NEW_QXTYPE" property="newQxtype" jdbcType="VARCHAR" />
    <result column="NEW_QXTYPE_NAME" property="newQxtypeName" jdbcType="VARCHAR" />
    <result column="ORG_PATH" property="orgPath" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, C_TYPE, C_TYPE_CODE, CHANGE_TITLE, CHANGE_ID, OLD_BAGE, BADGE, NAME, CERT_NO, 
    OLD_MOBILE, NEW_MOBILE, CHANGE_DATE, OLD_DEP_CODE, NEW_DEP_CODE, OLD_DEP_ID, NEW_DEP_ID, 
    OLD_DEP_MAR_KET, OLD_MARKET_NAME, NEW_DEP_MARKET, NEW_MARKET_NAME, OLD_DEP_ABBR, 
    NEW_DEP_ABBR, OLD_EMPGRADE, NEW_EMPGRADE, JOIN_DATE, LEAVE_DATE, HONG_KONG_ID, INITIALIZED_TIME, 
    OLD_JOB_NAME, OLD_JOB_ID, NEW_JOB_NAME, NEW_JOB_ID, E_STATUE, OLD_QXTYPE, OLD_QXTYPE_NAME, 
    NEW_QXTYPE, NEW_QXTYPE_NAME, ORG_PATH
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.framework.config.mybatis.CommonQueryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ML_EMP_CHANGE_DATA
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ML_EMP_CHANGE_DATA
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ML_EMP_CHANGE_DATA
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.framework.config.mybatis.CommonQueryExample" >
    delete from ML_EMP_CHANGE_DATA
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_UserChangeData2" >
    insert into ML_EMP_CHANGE_DATA (ID, C_TYPE, C_TYPE_CODE, 
      CHANGE_TITLE, CHANGE_ID, OLD_BAGE, 
      BADGE, NAME, CERT_NO, 
      OLD_MOBILE, NEW_MOBILE, CHANGE_DATE, 
      OLD_DEP_CODE, NEW_DEP_CODE, OLD_DEP_ID, 
      NEW_DEP_ID, OLD_DEP_MAR_KET, OLD_MARKET_NAME, 
      NEW_DEP_MARKET, NEW_MARKET_NAME, OLD_DEP_ABBR, 
      NEW_DEP_ABBR, OLD_EMPGRADE, NEW_EMPGRADE, 
      JOIN_DATE, LEAVE_DATE, HONG_KONG_ID, 
      INITIALIZED_TIME, OLD_JOB_NAME, OLD_JOB_ID, 
      NEW_JOB_NAME, NEW_JOB_ID, E_STATUE, 
      OLD_QXTYPE, OLD_QXTYPE_NAME, NEW_QXTYPE, 
      NEW_QXTYPE_NAME, ORG_PATH)
    values (#{id,jdbcType=VARCHAR}, #{cType,jdbcType=VARCHAR}, #{cTypeCode,jdbcType=VARCHAR}, 
      #{changeTitle,jdbcType=VARCHAR}, #{changeId,jdbcType=VARCHAR}, #{oldBage,jdbcType=VARCHAR}, 
      #{badge,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{certNo,jdbcType=VARCHAR}, 
      #{oldMobile,jdbcType=VARCHAR}, #{newMobile,jdbcType=VARCHAR}, #{changeDate,jdbcType=TIMESTAMP}, 
      #{oldDepCode,jdbcType=VARCHAR}, #{newDepCode,jdbcType=VARCHAR}, #{oldDepId,jdbcType=VARCHAR}, 
      #{newDepId,jdbcType=VARCHAR}, #{oldDepMarKet,jdbcType=VARCHAR}, #{oldMarketName,jdbcType=VARCHAR}, 
      #{newDepMarket,jdbcType=VARCHAR}, #{newMarketName,jdbcType=VARCHAR}, #{oldDepAbbr,jdbcType=VARCHAR}, 
      #{newDepAbbr,jdbcType=VARCHAR}, #{oldEmpgrade,jdbcType=VARCHAR}, #{newEmpgrade,jdbcType=VARCHAR}, 
      #{joinDate,jdbcType=TIMESTAMP}, #{leaveDate,jdbcType=TIMESTAMP}, #{hongKongId,jdbcType=VARCHAR}, 
      #{initializedTime,jdbcType=TIMESTAMP}, #{oldJobName,jdbcType=VARCHAR}, #{oldJobId,jdbcType=VARCHAR}, 
      #{newJobName,jdbcType=VARCHAR}, #{newJobId,jdbcType=VARCHAR}, #{eStatue,jdbcType=VARCHAR}, 
      #{oldQxtype,jdbcType=VARCHAR}, #{oldQxtypeName,jdbcType=VARCHAR}, #{newQxtype,jdbcType=VARCHAR}, 
      #{newQxtypeName,jdbcType=VARCHAR}, #{orgPath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_UserChangeData2" >
    insert into ML_EMP_CHANGE_DATA
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="cType != null" >
        C_TYPE,
      </if>
      <if test="cTypeCode != null" >
        C_TYPE_CODE,
      </if>
      <if test="changeTitle != null" >
        CHANGE_TITLE,
      </if>
      <if test="changeId != null" >
        CHANGE_ID,
      </if>
      <if test="oldBage != null" >
        OLD_BAGE,
      </if>
      <if test="badge != null" >
        BADGE,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="certNo != null" >
        CERT_NO,
      </if>
      <if test="oldMobile != null" >
        OLD_MOBILE,
      </if>
      <if test="newMobile != null" >
        NEW_MOBILE,
      </if>
      <if test="changeDate != null" >
        CHANGE_DATE,
      </if>
      <if test="oldDepCode != null" >
        OLD_DEP_CODE,
      </if>
      <if test="newDepCode != null" >
        NEW_DEP_CODE,
      </if>
      <if test="oldDepId != null" >
        OLD_DEP_ID,
      </if>
      <if test="newDepId != null" >
        NEW_DEP_ID,
      </if>
      <if test="oldDepMarKet != null" >
        OLD_DEP_MAR_KET,
      </if>
      <if test="oldMarketName != null" >
        OLD_MARKET_NAME,
      </if>
      <if test="newDepMarket != null" >
        NEW_DEP_MARKET,
      </if>
      <if test="newMarketName != null" >
        NEW_MARKET_NAME,
      </if>
      <if test="oldDepAbbr != null" >
        OLD_DEP_ABBR,
      </if>
      <if test="newDepAbbr != null" >
        NEW_DEP_ABBR,
      </if>
      <if test="oldEmpgrade != null" >
        OLD_EMPGRADE,
      </if>
      <if test="newEmpgrade != null" >
        NEW_EMPGRADE,
      </if>
      <if test="joinDate != null" >
        JOIN_DATE,
      </if>
      <if test="leaveDate != null" >
        LEAVE_DATE,
      </if>
      <if test="hongKongId != null" >
        HONG_KONG_ID,
      </if>
      <if test="initializedTime != null" >
        INITIALIZED_TIME,
      </if>
      <if test="oldJobName != null" >
        OLD_JOB_NAME,
      </if>
      <if test="oldJobId != null" >
        OLD_JOB_ID,
      </if>
      <if test="newJobName != null" >
        NEW_JOB_NAME,
      </if>
      <if test="newJobId != null" >
        NEW_JOB_ID,
      </if>
      <if test="eStatue != null" >
        E_STATUE,
      </if>
      <if test="oldQxtype != null" >
        OLD_QXTYPE,
      </if>
      <if test="oldQxtypeName != null" >
        OLD_QXTYPE_NAME,
      </if>
      <if test="newQxtype != null" >
        NEW_QXTYPE,
      </if>
      <if test="newQxtypeName != null" >
        NEW_QXTYPE_NAME,
      </if>
      <if test="orgPath != null" >
        ORG_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="cType != null" >
        #{cType,jdbcType=VARCHAR},
      </if>
      <if test="cTypeCode != null" >
        #{cTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="changeTitle != null" >
        #{changeTitle,jdbcType=VARCHAR},
      </if>
      <if test="changeId != null" >
        #{changeId,jdbcType=VARCHAR},
      </if>
      <if test="oldBage != null" >
        #{oldBage,jdbcType=VARCHAR},
      </if>
      <if test="badge != null" >
        #{badge,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="certNo != null" >
        #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="oldMobile != null" >
        #{oldMobile,jdbcType=VARCHAR},
      </if>
      <if test="newMobile != null" >
        #{newMobile,jdbcType=VARCHAR},
      </if>
      <if test="changeDate != null" >
        #{changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="oldDepCode != null" >
        #{oldDepCode,jdbcType=VARCHAR},
      </if>
      <if test="newDepCode != null" >
        #{newDepCode,jdbcType=VARCHAR},
      </if>
      <if test="oldDepId != null" >
        #{oldDepId,jdbcType=VARCHAR},
      </if>
      <if test="newDepId != null" >
        #{newDepId,jdbcType=VARCHAR},
      </if>
      <if test="oldDepMarKet != null" >
        #{oldDepMarKet,jdbcType=VARCHAR},
      </if>
      <if test="oldMarketName != null" >
        #{oldMarketName,jdbcType=VARCHAR},
      </if>
      <if test="newDepMarket != null" >
        #{newDepMarket,jdbcType=VARCHAR},
      </if>
      <if test="newMarketName != null" >
        #{newMarketName,jdbcType=VARCHAR},
      </if>
      <if test="oldDepAbbr != null" >
        #{oldDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="newDepAbbr != null" >
        #{newDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="oldEmpgrade != null" >
        #{oldEmpgrade,jdbcType=VARCHAR},
      </if>
      <if test="newEmpgrade != null" >
        #{newEmpgrade,jdbcType=VARCHAR},
      </if>
      <if test="joinDate != null" >
        #{joinDate,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveDate != null" >
        #{leaveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hongKongId != null" >
        #{hongKongId,jdbcType=VARCHAR},
      </if>
      <if test="initializedTime != null" >
        #{initializedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldJobName != null" >
        #{oldJobName,jdbcType=VARCHAR},
      </if>
      <if test="oldJobId != null" >
        #{oldJobId,jdbcType=VARCHAR},
      </if>
      <if test="newJobName != null" >
        #{newJobName,jdbcType=VARCHAR},
      </if>
      <if test="newJobId != null" >
        #{newJobId,jdbcType=VARCHAR},
      </if>
      <if test="eStatue != null" >
        #{eStatue,jdbcType=VARCHAR},
      </if>
      <if test="oldQxtype != null" >
        #{oldQxtype,jdbcType=VARCHAR},
      </if>
      <if test="oldQxtypeName != null" >
        #{oldQxtypeName,jdbcType=VARCHAR},
      </if>
      <if test="newQxtype != null" >
        #{newQxtype,jdbcType=VARCHAR},
      </if>
      <if test="newQxtypeName != null" >
        #{newQxtypeName,jdbcType=VARCHAR},
      </if>
      <if test="orgPath != null" >
        #{orgPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.framework.config.mybatis.CommonQueryExample" resultType="java.lang.Integer" >
    select count(*) from ML_EMP_CHANGE_DATA
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ML_EMP_CHANGE_DATA
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.cType != null" >
        C_TYPE = #{record.cType,jdbcType=VARCHAR},
      </if>
      <if test="record.cTypeCode != null" >
        C_TYPE_CODE = #{record.cTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.changeTitle != null" >
        CHANGE_TITLE = #{record.changeTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.changeId != null" >
        CHANGE_ID = #{record.changeId,jdbcType=VARCHAR},
      </if>
      <if test="record.oldBage != null" >
        OLD_BAGE = #{record.oldBage,jdbcType=VARCHAR},
      </if>
      <if test="record.badge != null" >
        BADGE = #{record.badge,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.certNo != null" >
        CERT_NO = #{record.certNo,jdbcType=VARCHAR},
      </if>
      <if test="record.oldMobile != null" >
        OLD_MOBILE = #{record.oldMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.newMobile != null" >
        NEW_MOBILE = #{record.newMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.changeDate != null" >
        CHANGE_DATE = #{record.changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oldDepCode != null" >
        OLD_DEP_CODE = #{record.oldDepCode,jdbcType=VARCHAR},
      </if>
      <if test="record.newDepCode != null" >
        NEW_DEP_CODE = #{record.newDepCode,jdbcType=VARCHAR},
      </if>
      <if test="record.oldDepId != null" >
        OLD_DEP_ID = #{record.oldDepId,jdbcType=VARCHAR},
      </if>
      <if test="record.newDepId != null" >
        NEW_DEP_ID = #{record.newDepId,jdbcType=VARCHAR},
      </if>
      <if test="record.oldDepMarKet != null" >
        OLD_DEP_MAR_KET = #{record.oldDepMarKet,jdbcType=VARCHAR},
      </if>
      <if test="record.oldMarketName != null" >
        OLD_MARKET_NAME = #{record.oldMarketName,jdbcType=VARCHAR},
      </if>
      <if test="record.newDepMarket != null" >
        NEW_DEP_MARKET = #{record.newDepMarket,jdbcType=VARCHAR},
      </if>
      <if test="record.newMarketName != null" >
        NEW_MARKET_NAME = #{record.newMarketName,jdbcType=VARCHAR},
      </if>
      <if test="record.oldDepAbbr != null" >
        OLD_DEP_ABBR = #{record.oldDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="record.newDepAbbr != null" >
        NEW_DEP_ABBR = #{record.newDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="record.oldEmpgrade != null" >
        OLD_EMPGRADE = #{record.oldEmpgrade,jdbcType=VARCHAR},
      </if>
      <if test="record.newEmpgrade != null" >
        NEW_EMPGRADE = #{record.newEmpgrade,jdbcType=VARCHAR},
      </if>
      <if test="record.joinDate != null" >
        JOIN_DATE = #{record.joinDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.leaveDate != null" >
        LEAVE_DATE = #{record.leaveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hongKongId != null" >
        HONG_KONG_ID = #{record.hongKongId,jdbcType=VARCHAR},
      </if>
      <if test="record.initializedTime != null" >
        INITIALIZED_TIME = #{record.initializedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oldJobName != null" >
        OLD_JOB_NAME = #{record.oldJobName,jdbcType=VARCHAR},
      </if>
      <if test="record.oldJobId != null" >
        OLD_JOB_ID = #{record.oldJobId,jdbcType=VARCHAR},
      </if>
      <if test="record.newJobName != null" >
        NEW_JOB_NAME = #{record.newJobName,jdbcType=VARCHAR},
      </if>
      <if test="record.newJobId != null" >
        NEW_JOB_ID = #{record.newJobId,jdbcType=VARCHAR},
      </if>
      <if test="record.eStatue != null" >
        E_STATUE = #{record.eStatue,jdbcType=VARCHAR},
      </if>
      <if test="record.oldQxtype != null" >
        OLD_QXTYPE = #{record.oldQxtype,jdbcType=VARCHAR},
      </if>
      <if test="record.oldQxtypeName != null" >
        OLD_QXTYPE_NAME = #{record.oldQxtypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.newQxtype != null" >
        NEW_QXTYPE = #{record.newQxtype,jdbcType=VARCHAR},
      </if>
      <if test="record.newQxtypeName != null" >
        NEW_QXTYPE_NAME = #{record.newQxtypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.orgPath != null" >
        ORG_PATH = #{record.orgPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ML_EMP_CHANGE_DATA
    set ID = #{record.id,jdbcType=VARCHAR},
      C_TYPE = #{record.cType,jdbcType=VARCHAR},
      C_TYPE_CODE = #{record.cTypeCode,jdbcType=VARCHAR},
      CHANGE_TITLE = #{record.changeTitle,jdbcType=VARCHAR},
      CHANGE_ID = #{record.changeId,jdbcType=VARCHAR},
      OLD_BAGE = #{record.oldBage,jdbcType=VARCHAR},
      BADGE = #{record.badge,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      CERT_NO = #{record.certNo,jdbcType=VARCHAR},
      OLD_MOBILE = #{record.oldMobile,jdbcType=VARCHAR},
      NEW_MOBILE = #{record.newMobile,jdbcType=VARCHAR},
      CHANGE_DATE = #{record.changeDate,jdbcType=TIMESTAMP},
      OLD_DEP_CODE = #{record.oldDepCode,jdbcType=VARCHAR},
      NEW_DEP_CODE = #{record.newDepCode,jdbcType=VARCHAR},
      OLD_DEP_ID = #{record.oldDepId,jdbcType=VARCHAR},
      NEW_DEP_ID = #{record.newDepId,jdbcType=VARCHAR},
      OLD_DEP_MAR_KET = #{record.oldDepMarKet,jdbcType=VARCHAR},
      OLD_MARKET_NAME = #{record.oldMarketName,jdbcType=VARCHAR},
      NEW_DEP_MARKET = #{record.newDepMarket,jdbcType=VARCHAR},
      NEW_MARKET_NAME = #{record.newMarketName,jdbcType=VARCHAR},
      OLD_DEP_ABBR = #{record.oldDepAbbr,jdbcType=VARCHAR},
      NEW_DEP_ABBR = #{record.newDepAbbr,jdbcType=VARCHAR},
      OLD_EMPGRADE = #{record.oldEmpgrade,jdbcType=VARCHAR},
      NEW_EMPGRADE = #{record.newEmpgrade,jdbcType=VARCHAR},
      JOIN_DATE = #{record.joinDate,jdbcType=TIMESTAMP},
      LEAVE_DATE = #{record.leaveDate,jdbcType=TIMESTAMP},
      HONG_KONG_ID = #{record.hongKongId,jdbcType=VARCHAR},
      INITIALIZED_TIME = #{record.initializedTime,jdbcType=TIMESTAMP},
      OLD_JOB_NAME = #{record.oldJobName,jdbcType=VARCHAR},
      OLD_JOB_ID = #{record.oldJobId,jdbcType=VARCHAR},
      NEW_JOB_NAME = #{record.newJobName,jdbcType=VARCHAR},
      NEW_JOB_ID = #{record.newJobId,jdbcType=VARCHAR},
      E_STATUE = #{record.eStatue,jdbcType=VARCHAR},
      OLD_QXTYPE = #{record.oldQxtype,jdbcType=VARCHAR},
      OLD_QXTYPE_NAME = #{record.oldQxtypeName,jdbcType=VARCHAR},
      NEW_QXTYPE = #{record.newQxtype,jdbcType=VARCHAR},
      NEW_QXTYPE_NAME = #{record.newQxtypeName,jdbcType=VARCHAR},
      ORG_PATH = #{record.orgPath,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_UserChangeData2" >
    update ML_EMP_CHANGE_DATA
    <set >
      <if test="cType != null" >
        C_TYPE = #{cType,jdbcType=VARCHAR},
      </if>
      <if test="cTypeCode != null" >
        C_TYPE_CODE = #{cTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="changeTitle != null" >
        CHANGE_TITLE = #{changeTitle,jdbcType=VARCHAR},
      </if>
      <if test="changeId != null" >
        CHANGE_ID = #{changeId,jdbcType=VARCHAR},
      </if>
      <if test="oldBage != null" >
        OLD_BAGE = #{oldBage,jdbcType=VARCHAR},
      </if>
      <if test="badge != null" >
        BADGE = #{badge,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="certNo != null" >
        CERT_NO = #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="oldMobile != null" >
        OLD_MOBILE = #{oldMobile,jdbcType=VARCHAR},
      </if>
      <if test="newMobile != null" >
        NEW_MOBILE = #{newMobile,jdbcType=VARCHAR},
      </if>
      <if test="changeDate != null" >
        CHANGE_DATE = #{changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="oldDepCode != null" >
        OLD_DEP_CODE = #{oldDepCode,jdbcType=VARCHAR},
      </if>
      <if test="newDepCode != null" >
        NEW_DEP_CODE = #{newDepCode,jdbcType=VARCHAR},
      </if>
      <if test="oldDepId != null" >
        OLD_DEP_ID = #{oldDepId,jdbcType=VARCHAR},
      </if>
      <if test="newDepId != null" >
        NEW_DEP_ID = #{newDepId,jdbcType=VARCHAR},
      </if>
      <if test="oldDepMarKet != null" >
        OLD_DEP_MAR_KET = #{oldDepMarKet,jdbcType=VARCHAR},
      </if>
      <if test="oldMarketName != null" >
        OLD_MARKET_NAME = #{oldMarketName,jdbcType=VARCHAR},
      </if>
      <if test="newDepMarket != null" >
        NEW_DEP_MARKET = #{newDepMarket,jdbcType=VARCHAR},
      </if>
      <if test="newMarketName != null" >
        NEW_MARKET_NAME = #{newMarketName,jdbcType=VARCHAR},
      </if>
      <if test="oldDepAbbr != null" >
        OLD_DEP_ABBR = #{oldDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="newDepAbbr != null" >
        NEW_DEP_ABBR = #{newDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="oldEmpgrade != null" >
        OLD_EMPGRADE = #{oldEmpgrade,jdbcType=VARCHAR},
      </if>
      <if test="newEmpgrade != null" >
        NEW_EMPGRADE = #{newEmpgrade,jdbcType=VARCHAR},
      </if>
      <if test="joinDate != null" >
        JOIN_DATE = #{joinDate,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveDate != null" >
        LEAVE_DATE = #{leaveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hongKongId != null" >
        HONG_KONG_ID = #{hongKongId,jdbcType=VARCHAR},
      </if>
      <if test="initializedTime != null" >
        INITIALIZED_TIME = #{initializedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldJobName != null" >
        OLD_JOB_NAME = #{oldJobName,jdbcType=VARCHAR},
      </if>
      <if test="oldJobId != null" >
        OLD_JOB_ID = #{oldJobId,jdbcType=VARCHAR},
      </if>
      <if test="newJobName != null" >
        NEW_JOB_NAME = #{newJobName,jdbcType=VARCHAR},
      </if>
      <if test="newJobId != null" >
        NEW_JOB_ID = #{newJobId,jdbcType=VARCHAR},
      </if>
      <if test="eStatue != null" >
        E_STATUE = #{eStatue,jdbcType=VARCHAR},
      </if>
      <if test="oldQxtype != null" >
        OLD_QXTYPE = #{oldQxtype,jdbcType=VARCHAR},
      </if>
      <if test="oldQxtypeName != null" >
        OLD_QXTYPE_NAME = #{oldQxtypeName,jdbcType=VARCHAR},
      </if>
      <if test="newQxtype != null" >
        NEW_QXTYPE = #{newQxtype,jdbcType=VARCHAR},
      </if>
      <if test="newQxtypeName != null" >
        NEW_QXTYPE_NAME = #{newQxtypeName,jdbcType=VARCHAR},
      </if>
      <if test="orgPath != null" >
        ORG_PATH = #{orgPath,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_UserChangeData2" >
    update ML_EMP_CHANGE_DATA
    set C_TYPE = #{cType,jdbcType=VARCHAR},
      C_TYPE_CODE = #{cTypeCode,jdbcType=VARCHAR},
      CHANGE_TITLE = #{changeTitle,jdbcType=VARCHAR},
      CHANGE_ID = #{changeId,jdbcType=VARCHAR},
      OLD_BAGE = #{oldBage,jdbcType=VARCHAR},
      BADGE = #{badge,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      CERT_NO = #{certNo,jdbcType=VARCHAR},
      OLD_MOBILE = #{oldMobile,jdbcType=VARCHAR},
      NEW_MOBILE = #{newMobile,jdbcType=VARCHAR},
      CHANGE_DATE = #{changeDate,jdbcType=TIMESTAMP},
      OLD_DEP_CODE = #{oldDepCode,jdbcType=VARCHAR},
      NEW_DEP_CODE = #{newDepCode,jdbcType=VARCHAR},
      OLD_DEP_ID = #{oldDepId,jdbcType=VARCHAR},
      NEW_DEP_ID = #{newDepId,jdbcType=VARCHAR},
      OLD_DEP_MAR_KET = #{oldDepMarKet,jdbcType=VARCHAR},
      OLD_MARKET_NAME = #{oldMarketName,jdbcType=VARCHAR},
      NEW_DEP_MARKET = #{newDepMarket,jdbcType=VARCHAR},
      NEW_MARKET_NAME = #{newMarketName,jdbcType=VARCHAR},
      OLD_DEP_ABBR = #{oldDepAbbr,jdbcType=VARCHAR},
      NEW_DEP_ABBR = #{newDepAbbr,jdbcType=VARCHAR},
      OLD_EMPGRADE = #{oldEmpgrade,jdbcType=VARCHAR},
      NEW_EMPGRADE = #{newEmpgrade,jdbcType=VARCHAR},
      JOIN_DATE = #{joinDate,jdbcType=TIMESTAMP},
      LEAVE_DATE = #{leaveDate,jdbcType=TIMESTAMP},
      HONG_KONG_ID = #{hongKongId,jdbcType=VARCHAR},
      INITIALIZED_TIME = #{initializedTime,jdbcType=TIMESTAMP},
      OLD_JOB_NAME = #{oldJobName,jdbcType=VARCHAR},
      OLD_JOB_ID = #{oldJobId,jdbcType=VARCHAR},
      NEW_JOB_NAME = #{newJobName,jdbcType=VARCHAR},
      NEW_JOB_ID = #{newJobId,jdbcType=VARCHAR},
      E_STATUE = #{eStatue,jdbcType=VARCHAR},
      OLD_QXTYPE = #{oldQxtype,jdbcType=VARCHAR},
      OLD_QXTYPE_NAME = #{oldQxtypeName,jdbcType=VARCHAR},
      NEW_QXTYPE = #{newQxtype,jdbcType=VARCHAR},
      NEW_QXTYPE_NAME = #{newQxtypeName,jdbcType=VARCHAR},
      ORG_PATH = #{orgPath,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 获取当前员工的职级信息 -->
  <select id="getSyncUserByHftUserId"  parameterType="java.lang.Integer" resultType="com.myfun.repository.admindb.vo.Admin_Sync_OA_ML_UserVO">
	SELECT
		A.BADGE badge,
		A.NAME name,
		A.JOIN_DATE joinDate,
		A.LEAVE_DATE leaveDate,
		A.EMP_STATUS empStatus,
		case 
			when A.EMP_STATUS=1 then '在职'
			when A.EMP_STATUS=2 then '离职'
			when A.EMP_STATUS=3 then '退休'
			when A.EMP_STATUS=4 then '退休'
			else '' end empStatusDesc,
		A.JOB_STATUS jobStatus,
		A.MOBILE mobile,
		A.CERT_NO certNo,
		B.TITLE2 positionName,
		<!-- 职级  -->
		ISNULL(D.HFT_RULE_DESC, '') hftRuleDesc,
		ISNULL(C.ORGANIZATION_NAME, '') orgName
	FROM
		ML_USER A
	LEFT JOIN ML_JOB B ON A.JOB_ID = B.JOB_ID
	LEFT JOIN hft_erpdb_CD..FUN_ORGANIZATION C ON C.ORGANIZATION_ID=A.HFT_ORG_ID
	LEFT JOIN HFT_ML_JOB_MAP D ON A.HFT_COMP_ID = D.HFT_COMP_ID AND A.EMP_GRADE = D.ML_ID
	WHERE
		A.HFT_USER_ID = #{userId}
  </select>

	<!--  获取用户调迁记录  -->
  <select id="getUserTransferList"  parameterType="com.myfun.repository.admindb.param.Admin_Sync_OA_ML_UserChangeDataParam" resultType="com.myfun.repository.admindb.vo.UserTransferVo">
	SELECT * from ( 
	SELECT
		a.C_TYPE AS cType,
		a.C_TYPE_CODE AS typeCode,
		a.CHANGE_TITLE AS changeTitle,
		a.CHANGE_ID AS changeId,
		a.OLD_BAGE AS oldBadge,
		a.BADGE AS badge,
		a.NAME AS name,
		a.CERT_NO AS certNo,
		a.OLD_MOBILE AS oldMobile,
		a.NEW_MOBILE AS newMobile,
		a.CHANGE_DATE AS chageDate,
		<!-- 失效日期，为下一个起效日期的前一天 -->
		(SELECT top 1 dateadd(day,-1,d.CHANGE_DATE)  
			from ML_EMP_CHANGE_DATA d 
			where d.CERT_NO=a.CERT_NO 
			AND d.CHANGE_DATE > a.CHANGE_DATE 
			order by d.CHANGE_DATE DESC 
		) as invalidDate,
		a.OLD_DEP_CODE AS oldEmpCode,
		a.NEW_DEP_CODE AS newEmpCode,
		a.OLD_DEP_ID AS oldDeptId,
		a.NEW_DEP_ID AS newDeptId,
		a.NEW_DEP_ABBR newOrgName,
		a.OLD_DEP_ABBR oldOrgName,
		a.OLD_DEP_MAR_KET AS oldMarket,
		a.OLD_MARKET_NAME AS oldMarketName,
		a.NEW_DEP_MARKET AS newMarket,
		a.NEW_MARKET_NAME AS newMarketName,
		a.OLD_EMPGRADE AS oldEmpGrade,
		a.NEW_EMPGRADE AS newEmpGrade,
		a.JOIN_DATE AS joinDate,
		a.LEAVE_DATE AS leaveDate,
		a.INITIALIZED_TIME AS initializedTime,
		a.OLD_JOB_NAME AS oldJobName,
		a.NEW_JOB_NAME AS newJobName,
		a.E_STATUE AS eStatus,
		a.OLD_QXTYPE_NAME AS oldQxTypeName,
		a.NEW_QXTYPE_NAME AS newQxTypeName,
		a.ORG_PATH AS orgPath
	FROM
	dbo.ML_EMP_CHANGE_DATA AS A
	<!-- 查询指定人员身份证对应的记录  -->
	LEFT JOIN ML_USER B on a.CERT_NO=B.CERT_NO
	<where>
		<if test="typeCode != null">
			AND A.C_TYPE_CODE = #{typeCode}
		</if>
		<if test="changeId != null">
			AND A.CHANGE_ID = #{changeId}
		</if>
		<if test="hftUserId != null ">
			AND B.HFT_USER_ID = #{hftUserId}
		</if>
		 <!-- 查询指定的组织，及其子组织数据 -->
	  	 <if test="organizationId != null"> 
		 	AND A.ORG_PATH LIKE '%/'+(select ID from ML_ORG_TREE t where t.HFT_ORG_ID=#{organizationId} )+'%'
		 </if>
		 <if test="queryDateType == 1">
	 		<if test="queryBeginTime != null"> 
			 	and a.CHANGE_DATE <![CDATA[ >= ]]> convert (varchar(10),#{queryBeginTime},120)
			 </if>
		 	 <if test="queryEndTime != null"> 
			 	and a.CHANGE_DATE <![CDATA[ <= ]]> convert (varchar(10),#{queryEndTime},120)
			 </if>
	 	</if>
	</where>
	) temp
	<!-- 查询失效时间的情况下 -->
	<where>
		<if test="queryDateType == 2">
	 		<if test="queryBeginTime != null"> 
			 	and temp.invalidDate <![CDATA[ >= ]]> convert (varchar(10),#{queryBeginTime},120)
			 </if>
		 	 <if test="queryEndTime != null"> 
			 	and temp.invalidDate <![CDATA[ <= ]]> convert (varchar(10),#{queryEndTime},120)
			 </if>
	 	</if>
	</where>
	 ORDER BY temp.initializedTime  ASC
  </select>
  
  
</mapper>