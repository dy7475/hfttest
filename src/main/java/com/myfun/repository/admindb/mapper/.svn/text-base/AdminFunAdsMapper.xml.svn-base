<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunAdsMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunAds" >
    <!--@mbggenerated-->
    <id column="AD_ID" property="adId" jdbcType="INTEGER" />
    <result column="AD_TYPE" property="adType" jdbcType="VARCHAR" />
    <result column="AD_NAME" property="adName" jdbcType="VARCHAR" />
    <result column="AD_ADDR" property="adAddr" jdbcType="VARCHAR" />
    <result column="AD_LINK" property="adLink" jdbcType="VARCHAR" />
    <result column="AD_MD5" property="adMd5" jdbcType="VARCHAR" />
    <result column="AD_DEFAULT" property="adDefault" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    AD_ID, AD_TYPE, AD_NAME, AD_ADDR, AD_LINK, AD_MD5, AD_DEFAULT
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_ADS
    where AD_ID = #{adId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_ADS
    where AD_ID = #{adId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunAds" >
    <!--@mbggenerated-->
    insert into FUN_ADS (AD_ID, AD_TYPE, AD_NAME, 
      AD_ADDR, AD_LINK, AD_MD5, 
      AD_DEFAULT)
    values (#{adId,jdbcType=INTEGER}, #{adType,jdbcType=VARCHAR}, #{adName,jdbcType=VARCHAR}, 
      #{adAddr,jdbcType=VARCHAR}, #{adLink,jdbcType=VARCHAR}, #{adMd5,jdbcType=VARCHAR}, 
      #{adDefault,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunAds" >
    <!--@mbggenerated-->
    insert into FUN_ADS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adId != null" >
        AD_ID,
      </if>
      <if test="adType != null" >
        AD_TYPE,
      </if>
      <if test="adName != null" >
        AD_NAME,
      </if>
      <if test="adAddr != null" >
        AD_ADDR,
      </if>
      <if test="adLink != null" >
        AD_LINK,
      </if>
      <if test="adMd5 != null" >
        AD_MD5,
      </if>
      <if test="adDefault != null" >
        AD_DEFAULT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adId != null" >
        #{adId,jdbcType=INTEGER},
      </if>
      <if test="adType != null" >
        #{adType,jdbcType=VARCHAR},
      </if>
      <if test="adName != null" >
        #{adName,jdbcType=VARCHAR},
      </if>
      <if test="adAddr != null" >
        #{adAddr,jdbcType=VARCHAR},
      </if>
      <if test="adLink != null" >
        #{adLink,jdbcType=VARCHAR},
      </if>
      <if test="adMd5 != null" >
        #{adMd5,jdbcType=VARCHAR},
      </if>
      <if test="adDefault != null" >
        #{adDefault,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunAds" >
    <!--@mbggenerated-->
    update FUN_ADS
    <set >
      <if test="adType != null" >
        AD_TYPE = #{adType,jdbcType=VARCHAR},
      </if>
      <if test="adName != null" >
        AD_NAME = #{adName,jdbcType=VARCHAR},
      </if>
      <if test="adAddr != null" >
        AD_ADDR = #{adAddr,jdbcType=VARCHAR},
      </if>
      <if test="adLink != null" >
        AD_LINK = #{adLink,jdbcType=VARCHAR},
      </if>
      <if test="adMd5 != null" >
        AD_MD5 = #{adMd5,jdbcType=VARCHAR},
      </if>
      <if test="adDefault != null" >
        AD_DEFAULT = #{adDefault,jdbcType=TINYINT},
      </if>
    </set>
    where AD_ID = #{adId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunAds" >
    <!--@mbggenerated-->
    update FUN_ADS
    set AD_TYPE = #{adType,jdbcType=VARCHAR},
      AD_NAME = #{adName,jdbcType=VARCHAR},
      AD_ADDR = #{adAddr,jdbcType=VARCHAR},
      AD_LINK = #{adLink,jdbcType=VARCHAR},
      AD_MD5 = #{adMd5,jdbcType=VARCHAR},
      AD_DEFAULT = #{adDefault,jdbcType=TINYINT}
    where AD_ID = #{adId,jdbcType=INTEGER}
  </update>
  <!-- business -->
  <select id="getAdsByTypeAndCityId" resultMap="BaseResultMap" >
    select fa.AD_ID, fa.AD_TYPE, fa.AD_NAME, fa.AD_ADDR, fa.AD_LINK, fa.AD_MD5, fa.AD_DEFAULT from FUN_ADS fa
	left join CITY_ADS ca on ca.AD_ID=fa.AD_ID
	where  fa.AD_TYPE=#{adType,jdbcType=VARCHAR} 
		and (ca.AD_LIMIT &gt; GETDATE() OR fa.AD_DEFAULT = 1) 
		and (CA.CITY_ID = #{cityId,jdbcType=TINYINT} OR CA.CITY_ID = 0) 
	ORDER BY FA.AD_DEFAULT ASC
  </select>
  <select id="getAdsByTypeAndDefault" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
		<include refid="Base_Column_List" />
	FROM FUN_ADS 
	WHERE AD_TYPE = #{adType,jdbcType=VARCHAR} AND AD_DEFAULT = 1
  </select>
</mapper>