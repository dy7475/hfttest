<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminOnlinePaymentOrderPayeeMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderPayee">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
    <result column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
    <result column="XW_BANK_ACCOUNT_ID" jdbcType="INTEGER" property="xwBankAccountId" />
    <result column="RECEIVED_AMOUNT" jdbcType="NUMERIC" property="receivedAmount" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, ORDER_NO, ORDER_ID, XW_BANK_ACCOUNT_ID, RECEIVED_AMOUNT, CREATION_TIME, CITY_ID, 
    COMP_ID
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderPayeeExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ONLINE_PAYMENT_ORDER_PAYEE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from ONLINE_PAYMENT_ORDER_PAYEE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from ONLINE_PAYMENT_ORDER_PAYEE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderPayeeExample">
    <!--@mbggenerated-->
    delete from ONLINE_PAYMENT_ORDER_PAYEE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderPayee" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into ONLINE_PAYMENT_ORDER_PAYEE (ORDER_NO, ORDER_ID, XW_BANK_ACCOUNT_ID, 
      RECEIVED_AMOUNT, CREATION_TIME, CITY_ID, 
      COMP_ID)
    values (#{orderNo,jdbcType=VARCHAR}, #{orderId,jdbcType=INTEGER}, #{xwBankAccountId,jdbcType=INTEGER}, 
      #{receivedAmount,jdbcType=NUMERIC}, #{creationTime,jdbcType=TIMESTAMP}, #{cityId,jdbcType=INTEGER}, 
      #{compId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderPayee" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into ONLINE_PAYMENT_ORDER_PAYEE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        ORDER_NO,
      </if>
      <if test="orderId != null">
        ORDER_ID,
      </if>
      <if test="xwBankAccountId != null">
        XW_BANK_ACCOUNT_ID,
      </if>
      <if test="receivedAmount != null">
        RECEIVED_AMOUNT,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="xwBankAccountId != null">
        #{xwBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="receivedAmount != null">
        #{receivedAmount,jdbcType=NUMERIC},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderPayeeExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from ONLINE_PAYMENT_ORDER_PAYEE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update ONLINE_PAYMENT_ORDER_PAYEE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.xwBankAccountId != null">
        XW_BANK_ACCOUNT_ID = #{record.xwBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.receivedAmount != null">
        RECEIVED_AMOUNT = #{record.receivedAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update ONLINE_PAYMENT_ORDER_PAYEE
    set ID = #{record.id,jdbcType=INTEGER},
      ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      XW_BANK_ACCOUNT_ID = #{record.xwBankAccountId,jdbcType=INTEGER},
      RECEIVED_AMOUNT = #{record.receivedAmount,jdbcType=NUMERIC},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      COMP_ID = #{record.compId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderPayee">
    <!--@mbggenerated-->
    update ONLINE_PAYMENT_ORDER_PAYEE
    <set>
      <if test="orderNo != null">
        ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        ORDER_ID = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="xwBankAccountId != null">
        XW_BANK_ACCOUNT_ID = #{xwBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="receivedAmount != null">
        RECEIVED_AMOUNT = #{receivedAmount,jdbcType=NUMERIC},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderPayee">
    <!--@mbggenerated-->
    update ONLINE_PAYMENT_ORDER_PAYEE
    set ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      ORDER_ID = #{orderId,jdbcType=INTEGER},
      XW_BANK_ACCOUNT_ID = #{xwBankAccountId,jdbcType=INTEGER},
      RECEIVED_AMOUNT = #{receivedAmount,jdbcType=NUMERIC},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>