<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminOnlinePaymentOrderMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminOnlinePaymentOrder">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
    <result column="BUSINESS_ID" jdbcType="INTEGER" property="businessId" />
    <result column="ORDER_TYPE" jdbcType="TINYINT" property="orderType" />
    <result column="ORDER_AMOUNT" jdbcType="NUMERIC" property="orderAmount" />
    <result column="PAYMENT_STATUS" jdbcType="TINYINT" property="paymentStatus" />
    <result column="PAYMENT_TIME" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="HOUSE_COMP_ID" jdbcType="INTEGER" property="houseCompId" />
    <result column="CUST_COMP_ID" jdbcType="INTEGER" property="custCompId" />
    <result column="PF_ID" jdbcType="INTEGER" property="pfId" />
    <result column="PAYER" jdbcType="TINYINT" property="payer" />
    <result column="ORDER_PAYMENT_TYPE" jdbcType="TINYINT" property="orderPaymentType" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="PAYER_NAME" jdbcType="VARCHAR" property="payerName" />
    <result column="CITY_ID" jdbcType="INTEGER" property="cityId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="HOUSE_CITY_ID" jdbcType="INTEGER" property="houseCityId" />
    <result column="CUST_CITY_ID" jdbcType="INTEGER" property="custCityId" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="ORDER_BODY" jdbcType="VARCHAR" property="orderBody" />
    <result column="ORDER_SUMMARY" jdbcType="VARCHAR" property="orderSummary" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
    <result column="COMP_ID" jdbcType="INTEGER" property="compId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="ORDER_REMARK" jdbcType="VARCHAR" property="orderRemark" />
    <result column="PF_NAME" jdbcType="VARCHAR" property="pfName" />
    <result column="BUSINESS_TYPE" jdbcType="TINYINT" property="businessType" />
    <result column="TXN_NO" jdbcType="VARCHAR" property="txnNo" />
    <result column="ARCHIVE_ID" jdbcType="INTEGER" property="archiveId" />
    <result column="CASE_TYPE" jdbcType="TINYINT" property="caseType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, ORDER_NO, BUSINESS_ID, ORDER_TYPE, ORDER_AMOUNT, PAYMENT_STATUS, PAYMENT_TIME, 
    CREATION_TIME, HOUSE_COMP_ID, CUST_COMP_ID, PF_ID, PAYER, ORDER_PAYMENT_TYPE, BUILD_NAME, 
    PAYER_NAME, CITY_ID, USER_ID, HOUSE_CITY_ID, CUST_CITY_ID, BUILD_ID, ORDER_BODY, 
    ORDER_SUMMARY, DEPT_ID, DEPT_NAME, COMP_ID, USER_NAME, ORDER_REMARK, PF_NAME, BUSINESS_TYPE, 
    TXN_NO, ARCHIVE_ID, CASE_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ONLINE_PAYMENT_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from ONLINE_PAYMENT_ORDER
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from ONLINE_PAYMENT_ORDER
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderExample">
    <!--@mbggenerated-->
    delete from ONLINE_PAYMENT_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrder" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into ONLINE_PAYMENT_ORDER (ORDER_NO, BUSINESS_ID, ORDER_TYPE, 
      ORDER_AMOUNT, PAYMENT_STATUS, PAYMENT_TIME, 
      CREATION_TIME, HOUSE_COMP_ID, CUST_COMP_ID, 
      PF_ID, PAYER, ORDER_PAYMENT_TYPE, 
      BUILD_NAME, PAYER_NAME, CITY_ID, 
      USER_ID, HOUSE_CITY_ID, CUST_CITY_ID, 
      BUILD_ID, ORDER_BODY, ORDER_SUMMARY, 
      DEPT_ID, DEPT_NAME, COMP_ID, 
      USER_NAME, ORDER_REMARK, PF_NAME, 
      BUSINESS_TYPE, TXN_NO, ARCHIVE_ID, 
      CASE_TYPE)
    values (#{orderNo,jdbcType=VARCHAR}, #{businessId,jdbcType=INTEGER}, #{orderType,jdbcType=TINYINT}, 
      #{orderAmount,jdbcType=NUMERIC}, #{paymentStatus,jdbcType=TINYINT}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{houseCompId,jdbcType=INTEGER}, #{custCompId,jdbcType=INTEGER}, 
      #{pfId,jdbcType=INTEGER}, #{payer,jdbcType=TINYINT}, #{orderPaymentType,jdbcType=TINYINT}, 
      #{buildName,jdbcType=VARCHAR}, #{payerName,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{houseCityId,jdbcType=INTEGER}, #{custCityId,jdbcType=INTEGER}, 
      #{buildId,jdbcType=INTEGER}, #{orderBody,jdbcType=VARCHAR}, #{orderSummary,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{orderRemark,jdbcType=VARCHAR}, #{pfName,jdbcType=VARCHAR}, 
      #{businessType,jdbcType=TINYINT}, #{txnNo,jdbcType=VARCHAR}, #{archiveId,jdbcType=INTEGER}, 
      #{caseType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrder" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into ONLINE_PAYMENT_ORDER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        ORDER_NO,
      </if>
      <if test="businessId != null">
        BUSINESS_ID,
      </if>
      <if test="orderType != null">
        ORDER_TYPE,
      </if>
      <if test="orderAmount != null">
        ORDER_AMOUNT,
      </if>
      <if test="paymentStatus != null">
        PAYMENT_STATUS,
      </if>
      <if test="paymentTime != null">
        PAYMENT_TIME,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="houseCompId != null">
        HOUSE_COMP_ID,
      </if>
      <if test="custCompId != null">
        CUST_COMP_ID,
      </if>
      <if test="pfId != null">
        PF_ID,
      </if>
      <if test="payer != null">
        PAYER,
      </if>
      <if test="orderPaymentType != null">
        ORDER_PAYMENT_TYPE,
      </if>
      <if test="buildName != null">
        BUILD_NAME,
      </if>
      <if test="payerName != null">
        PAYER_NAME,
      </if>
      <if test="cityId != null">
        CITY_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="houseCityId != null">
        HOUSE_CITY_ID,
      </if>
      <if test="custCityId != null">
        CUST_CITY_ID,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="orderBody != null">
        ORDER_BODY,
      </if>
      <if test="orderSummary != null">
        ORDER_SUMMARY,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="deptName != null">
        DEPT_NAME,
      </if>
      <if test="compId != null">
        COMP_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="orderRemark != null">
        ORDER_REMARK,
      </if>
      <if test="pfName != null">
        PF_NAME,
      </if>
      <if test="businessType != null">
        BUSINESS_TYPE,
      </if>
      <if test="txnNo != null">
        TXN_NO,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="caseType != null">
        CASE_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=TINYINT},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=NUMERIC},
      </if>
      <if test="paymentStatus != null">
        #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="houseCompId != null">
        #{houseCompId,jdbcType=INTEGER},
      </if>
      <if test="custCompId != null">
        #{custCompId,jdbcType=INTEGER},
      </if>
      <if test="pfId != null">
        #{pfId,jdbcType=INTEGER},
      </if>
      <if test="payer != null">
        #{payer,jdbcType=TINYINT},
      </if>
      <if test="orderPaymentType != null">
        #{orderPaymentType,jdbcType=TINYINT},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="payerName != null">
        #{payerName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="houseCityId != null">
        #{houseCityId,jdbcType=INTEGER},
      </if>
      <if test="custCityId != null">
        #{custCityId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="orderBody != null">
        #{orderBody,jdbcType=VARCHAR},
      </if>
      <if test="orderSummary != null">
        #{orderSummary,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="orderRemark != null">
        #{orderRemark,jdbcType=VARCHAR},
      </if>
      <if test="pfName != null">
        #{pfName,jdbcType=VARCHAR},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=TINYINT},
      </if>
      <if test="txnNo != null">
        #{txnNo,jdbcType=VARCHAR},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        #{caseType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrderExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from ONLINE_PAYMENT_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update ONLINE_PAYMENT_ORDER
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.businessId != null">
        BUSINESS_ID = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.orderType != null">
        ORDER_TYPE = #{record.orderType,jdbcType=TINYINT},
      </if>
      <if test="record.orderAmount != null">
        ORDER_AMOUNT = #{record.orderAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.paymentStatus != null">
        PAYMENT_STATUS = #{record.paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.paymentTime != null">
        PAYMENT_TIME = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.houseCompId != null">
        HOUSE_COMP_ID = #{record.houseCompId,jdbcType=INTEGER},
      </if>
      <if test="record.custCompId != null">
        CUST_COMP_ID = #{record.custCompId,jdbcType=INTEGER},
      </if>
      <if test="record.pfId != null">
        PF_ID = #{record.pfId,jdbcType=INTEGER},
      </if>
      <if test="record.payer != null">
        PAYER = #{record.payer,jdbcType=TINYINT},
      </if>
      <if test="record.orderPaymentType != null">
        ORDER_PAYMENT_TYPE = #{record.orderPaymentType,jdbcType=TINYINT},
      </if>
      <if test="record.buildName != null">
        BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.payerName != null">
        PAYER_NAME = #{record.payerName,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        CITY_ID = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.houseCityId != null">
        HOUSE_CITY_ID = #{record.houseCityId,jdbcType=INTEGER},
      </if>
      <if test="record.custCityId != null">
        CUST_CITY_ID = #{record.custCityId,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.orderBody != null">
        ORDER_BODY = #{record.orderBody,jdbcType=VARCHAR},
      </if>
      <if test="record.orderSummary != null">
        ORDER_SUMMARY = #{record.orderSummary,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.deptName != null">
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null">
        COMP_ID = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderRemark != null">
        ORDER_REMARK = #{record.orderRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.pfName != null">
        PF_NAME = #{record.pfName,jdbcType=VARCHAR},
      </if>
      <if test="record.businessType != null">
        BUSINESS_TYPE = #{record.businessType,jdbcType=TINYINT},
      </if>
      <if test="record.txnNo != null">
        TXN_NO = #{record.txnNo,jdbcType=VARCHAR},
      </if>
      <if test="record.archiveId != null">
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.caseType != null">
        CASE_TYPE = #{record.caseType,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update ONLINE_PAYMENT_ORDER
    set ID = #{record.id,jdbcType=INTEGER},
      ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      BUSINESS_ID = #{record.businessId,jdbcType=INTEGER},
      ORDER_TYPE = #{record.orderType,jdbcType=TINYINT},
      ORDER_AMOUNT = #{record.orderAmount,jdbcType=NUMERIC},
      PAYMENT_STATUS = #{record.paymentStatus,jdbcType=TINYINT},
      PAYMENT_TIME = #{record.paymentTime,jdbcType=TIMESTAMP},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      HOUSE_COMP_ID = #{record.houseCompId,jdbcType=INTEGER},
      CUST_COMP_ID = #{record.custCompId,jdbcType=INTEGER},
      PF_ID = #{record.pfId,jdbcType=INTEGER},
      PAYER = #{record.payer,jdbcType=TINYINT},
      ORDER_PAYMENT_TYPE = #{record.orderPaymentType,jdbcType=TINYINT},
      BUILD_NAME = #{record.buildName,jdbcType=VARCHAR},
      PAYER_NAME = #{record.payerName,jdbcType=VARCHAR},
      CITY_ID = #{record.cityId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      HOUSE_CITY_ID = #{record.houseCityId,jdbcType=INTEGER},
      CUST_CITY_ID = #{record.custCityId,jdbcType=INTEGER},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      ORDER_BODY = #{record.orderBody,jdbcType=VARCHAR},
      ORDER_SUMMARY = #{record.orderSummary,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      COMP_ID = #{record.compId,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      ORDER_REMARK = #{record.orderRemark,jdbcType=VARCHAR},
      PF_NAME = #{record.pfName,jdbcType=VARCHAR},
      BUSINESS_TYPE = #{record.businessType,jdbcType=TINYINT},
      TXN_NO = #{record.txnNo,jdbcType=VARCHAR},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      CASE_TYPE = #{record.caseType,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrder">
    <!--@mbggenerated-->
    update ONLINE_PAYMENT_ORDER
    <set>
      <if test="orderNo != null">
        ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        BUSINESS_ID = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        ORDER_TYPE = #{orderType,jdbcType=TINYINT},
      </if>
      <if test="orderAmount != null">
        ORDER_AMOUNT = #{orderAmount,jdbcType=NUMERIC},
      </if>
      <if test="paymentStatus != null">
        PAYMENT_STATUS = #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="paymentTime != null">
        PAYMENT_TIME = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="houseCompId != null">
        HOUSE_COMP_ID = #{houseCompId,jdbcType=INTEGER},
      </if>
      <if test="custCompId != null">
        CUST_COMP_ID = #{custCompId,jdbcType=INTEGER},
      </if>
      <if test="pfId != null">
        PF_ID = #{pfId,jdbcType=INTEGER},
      </if>
      <if test="payer != null">
        PAYER = #{payer,jdbcType=TINYINT},
      </if>
      <if test="orderPaymentType != null">
        ORDER_PAYMENT_TYPE = #{orderPaymentType,jdbcType=TINYINT},
      </if>
      <if test="buildName != null">
        BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="payerName != null">
        PAYER_NAME = #{payerName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="houseCityId != null">
        HOUSE_CITY_ID = #{houseCityId,jdbcType=INTEGER},
      </if>
      <if test="custCityId != null">
        CUST_CITY_ID = #{custCityId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="orderBody != null">
        ORDER_BODY = #{orderBody,jdbcType=VARCHAR},
      </if>
      <if test="orderSummary != null">
        ORDER_SUMMARY = #{orderSummary,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="compId != null">
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="orderRemark != null">
        ORDER_REMARK = #{orderRemark,jdbcType=VARCHAR},
      </if>
      <if test="pfName != null">
        PF_NAME = #{pfName,jdbcType=VARCHAR},
      </if>
      <if test="businessType != null">
        BUSINESS_TYPE = #{businessType,jdbcType=TINYINT},
      </if>
      <if test="txnNo != null">
        TXN_NO = #{txnNo,jdbcType=VARCHAR},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="caseType != null">
        CASE_TYPE = #{caseType,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminOnlinePaymentOrder">
    <!--@mbggenerated-->
    update ONLINE_PAYMENT_ORDER
    set ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      BUSINESS_ID = #{businessId,jdbcType=INTEGER},
      ORDER_TYPE = #{orderType,jdbcType=TINYINT},
      ORDER_AMOUNT = #{orderAmount,jdbcType=NUMERIC},
      PAYMENT_STATUS = #{paymentStatus,jdbcType=TINYINT},
      PAYMENT_TIME = #{paymentTime,jdbcType=TIMESTAMP},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      HOUSE_COMP_ID = #{houseCompId,jdbcType=INTEGER},
      CUST_COMP_ID = #{custCompId,jdbcType=INTEGER},
      PF_ID = #{pfId,jdbcType=INTEGER},
      PAYER = #{payer,jdbcType=TINYINT},
      ORDER_PAYMENT_TYPE = #{orderPaymentType,jdbcType=TINYINT},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      PAYER_NAME = #{payerName,jdbcType=VARCHAR},
      CITY_ID = #{cityId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      HOUSE_CITY_ID = #{houseCityId,jdbcType=INTEGER},
      CUST_CITY_ID = #{custCityId,jdbcType=INTEGER},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      ORDER_BODY = #{orderBody,jdbcType=VARCHAR},
      ORDER_SUMMARY = #{orderSummary,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      ORDER_REMARK = #{orderRemark,jdbcType=VARCHAR},
      PF_NAME = #{pfName,jdbcType=VARCHAR},
      BUSINESS_TYPE = #{businessType,jdbcType=TINYINT},
      TXN_NO = #{txnNo,jdbcType=VARCHAR},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      CASE_TYPE = #{caseType,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="extBaseResultMap" type="com.myfun.erpWeb.onlinepay.vo.OnlinePaymentOrderVO">
    <id column="ID" jdbcType="INTEGER" property="orderId" />
    <result column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="PF_NAME" jdbcType="VARCHAR" property="pfName" />
    <result column="PAYER_NAME" jdbcType="VARCHAR" property="payerName" />
    <result column="PAYER" jdbcType="TINYINT" property="payer" />
    <result column="PAYMENT_TIME" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="ORDER_AMOUNT" jdbcType="NUMERIC" property="orderAmount" />
    <result column="AMOUNT_RECEIVED" jdbcType="NUMERIC" property="receivedAmount" />
  </resultMap>

  <select id="selectOrderList" resultMap="extBaseResultMap">
    select a.ID,a.ORDER_NO, a.BUILD_NAME, a.PF_NAME,a.PAYER_NAME,a.PAYER,a.PAYMENT_TIME,a.ORDER_AMOUNT,b.RECEIVED_AMOUNT  from ONLINE_PAYMENT_ORDER a
    join ONLINE_PAYMENT_ORDER_PAYEE b on a.city_id = b.city_id and a.comp_id = b.comp_id and a.id = b.ORDER_ID
    where a.PAYMENT_STATUS = 1 and b.COMP_ID = #{compId} AND ORDER_TYPE = 1 AND b.XW_BANK_ACCOUNT_ID = #{accountId}
    <if test="null != timeStart and '' != timeStart">
        AND PAYMENT_TIME &gt;= #{timeStart}
    </if>
    <if test="null != timeEnd and '' != timeEnd">
      AND PAYMENT_TIME &lt;= #{timeEnd}
    </if>
  </select>
  <select id="sumOrderAmount" resultType="java.math.BigDecimal">
    select sum(ORDER_AMOUNT) from ONLINE_PAYMENT_ORDER where BUSINESS_ID = #{businessId}
    and BUSINESS_TYPE = #{businessType} and CITY_ID = #{cityId} AND ORDER_TYPE=1 and PAYMENT_STATUS=1
  </select>
</mapper>