<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.Admin_Sync_OA_ML_DepartmentChangeData2Mapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_DepartmentChangeData2" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="CHANGE_ID" property="changeId" jdbcType="INTEGER" />
    <result column="C_TYPE" property="cType" jdbcType="VARCHAR" />
    <result column="C_TYPE_CODE" property="cTypeCode" jdbcType="VARCHAR" />
    <result column="CHANGE_TITLE" property="changeTitle" jdbcType="VARCHAR" />
    <result column="CHANGE_CODE" property="changeCode" jdbcType="VARCHAR" />
    <result column="DEP_ID" property="depId" jdbcType="VARCHAR" />
    <result column="DEP_CODE" property="depCode" jdbcType="VARCHAR" />
    <result column="NEW_DEP_ABBR" property="newDepAbbr" jdbcType="VARCHAR" />
    <result column="OLD_DEP_ABBR" property="oldDepAbbr" jdbcType="VARCHAR" />
    <result column="NEW_TITLE" property="newTitle" jdbcType="VARCHAR" />
    <result column="OLD_DEP_TITLE" property="oldDepTitle" jdbcType="VARCHAR" />
    <result column="NEW_MARKET" property="newMarket" jdbcType="VARCHAR" />
    <result column="OLD_MARKET" property="oldMarket" jdbcType="VARCHAR" />
    <result column="NEW_MARKET_NAME" property="newMarketName" jdbcType="VARCHAR" />
    <result column="OLD_MARKET_NAME" property="oldMarketName" jdbcType="VARCHAR" />
    <result column="QX_TYPE" property="qxType" jdbcType="VARCHAR" />
    <result column="QX_TYPE_NAME" property="qxTypeName" jdbcType="VARCHAR" />
    <result column="NEW_COMP_ID" property="newCompId" jdbcType="VARCHAR" />
    <result column="OLD_COMP_ID" property="oldCompId" jdbcType="VARCHAR" />
    <result column="NEW_DIRECOR_BADGE" property="newDirecorBadge" jdbcType="VARCHAR" />
    <result column="OLD_DIRECOR_BADGE" property="oldDirecorBadge" jdbcType="VARCHAR" />
    <result column="NEW_DIRECOR_NAME" property="newDirecorName" jdbcType="VARCHAR" />
    <result column="OLD_DIRECOR_NAME" property="oldDirecorName" jdbcType="VARCHAR" />
    <result column="NEW_TEL_D1" property="newTelD1" jdbcType="VARCHAR" />
    <result column="TEL_D1" property="telD1" jdbcType="VARCHAR" />
    <result column="DEP_GRADE_ID" property="depGradeId" jdbcType="VARCHAR" />
    <result column="DEP_GRADE_TITLE" property="depGradeTitle" jdbcType="VARCHAR" />
    <result column="WORK_AREA_ID" property="workAreaId" jdbcType="VARCHAR" />
    <result column="WORK_AREA_TITLE" property="workAreaTitle" jdbcType="VARCHAR" />
    <result column="WORK_AREA_MANAGE_BADGE" property="workAreaManageBadge" jdbcType="VARCHAR" />
    <result column="WORK_AREA_MANAGE_NAME" property="workAreaManageName" jdbcType="VARCHAR" />
    <result column="WORK_AREA_ID_K" property="workAreaIdK" jdbcType="VARCHAR" />
    <result column="WORK_AREA_TITLE_K" property="workAreaTitleK" jdbcType="VARCHAR" />
    <result column="WORK_AREA_MANAGE_BADGE_K" property="workAreaManageBadgeK" jdbcType="VARCHAR" />
    <result column="WORK_AREA_MANAGE_NAME_K" property="workAreaManageNameK" jdbcType="VARCHAR" />
    <result column="WORK_AREA_ID_I" property="workAreaIdI" jdbcType="VARCHAR" />
    <result column="WORK_AREA_TITLE_I" property="workAreaTitleI" jdbcType="VARCHAR" />
    <result column="WORK_AREA_MANAGE_BADGE_I" property="workAreaManageBadgeI" jdbcType="VARCHAR" />
    <result column="WORK_AREA_MANAGE_NAME_I" property="workAreaManageNameI" jdbcType="VARCHAR" />
    <result column="ORG_PATH_HISTORY" property="orgPathHistory" jdbcType="VARCHAR" />
    <result column="ORG_PATH" property="orgPath" jdbcType="VARCHAR" />
    <result column="NEW_TEL" property="newTel" jdbcType="VARCHAR" />
    <result column="TEL" property="tel" jdbcType="VARCHAR" />
    <result column="CHANGE_DATE" property="changeDate" jdbcType="TIMESTAMP" />
    <result column="INITIALIZED_TIME" property="initializedTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, CHANGE_ID, C_TYPE, C_TYPE_CODE, CHANGE_TITLE, CHANGE_CODE, DEP_ID, DEP_CODE, 
    NEW_DEP_ABBR, OLD_DEP_ABBR, NEW_TITLE, OLD_DEP_TITLE, NEW_MARKET, OLD_MARKET, NEW_MARKET_NAME, 
    OLD_MARKET_NAME, QX_TYPE, QX_TYPE_NAME, NEW_COMP_ID, OLD_COMP_ID, NEW_DIRECOR_BADGE, 
    OLD_DIRECOR_BADGE, NEW_DIRECOR_NAME, OLD_DIRECOR_NAME, NEW_TEL_D1, TEL_D1, DEP_GRADE_ID, 
    DEP_GRADE_TITLE, WORK_AREA_ID, WORK_AREA_TITLE, WORK_AREA_MANAGE_BADGE, WORK_AREA_MANAGE_NAME, 
    WORK_AREA_ID_K, WORK_AREA_TITLE_K, WORK_AREA_MANAGE_BADGE_K, WORK_AREA_MANAGE_NAME_K, 
    WORK_AREA_ID_I, WORK_AREA_TITLE_I, WORK_AREA_MANAGE_BADGE_I, WORK_AREA_MANAGE_NAME_I, 
    ORG_PATH_HISTORY, ORG_PATH, NEW_TEL, TEL, CHANGE_DATE, INITIALIZED_TIME, CREATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.framework.config.mybatis.CommonQueryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ML_DEPT_CHANGE_DATA
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ML_DEPT_CHANGE_DATA
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ML_DEPT_CHANGE_DATA
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.framework.config.mybatis.CommonQueryExample" >
    delete from ML_DEPT_CHANGE_DATA
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_DepartmentChangeData2" >
    insert into ML_DEPT_CHANGE_DATA (ID, CHANGE_ID, C_TYPE, 
      C_TYPE_CODE, CHANGE_TITLE, CHANGE_CODE, 
      DEP_ID, DEP_CODE, NEW_DEP_ABBR, 
      OLD_DEP_ABBR, NEW_TITLE, OLD_DEP_TITLE, 
      NEW_MARKET, OLD_MARKET, NEW_MARKET_NAME, 
      OLD_MARKET_NAME, QX_TYPE, QX_TYPE_NAME, 
      NEW_COMP_ID, OLD_COMP_ID, NEW_DIRECOR_BADGE, 
      OLD_DIRECOR_BADGE, NEW_DIRECOR_NAME, OLD_DIRECOR_NAME, 
      NEW_TEL_D1, TEL_D1, DEP_GRADE_ID, 
      DEP_GRADE_TITLE, WORK_AREA_ID, WORK_AREA_TITLE, 
      WORK_AREA_MANAGE_BADGE, WORK_AREA_MANAGE_NAME, 
      WORK_AREA_ID_K, WORK_AREA_TITLE_K, WORK_AREA_MANAGE_BADGE_K, 
      WORK_AREA_MANAGE_NAME_K, WORK_AREA_ID_I, WORK_AREA_TITLE_I, 
      WORK_AREA_MANAGE_BADGE_I, WORK_AREA_MANAGE_NAME_I, 
      ORG_PATH_HISTORY, ORG_PATH, NEW_TEL, 
      TEL, CHANGE_DATE, INITIALIZED_TIME, 
      CREATE_TIME)
    values (#{id,jdbcType=INTEGER}, #{changeId,jdbcType=INTEGER}, #{cType,jdbcType=VARCHAR}, 
      #{cTypeCode,jdbcType=VARCHAR}, #{changeTitle,jdbcType=VARCHAR}, #{changeCode,jdbcType=VARCHAR}, 
      #{depId,jdbcType=VARCHAR}, #{depCode,jdbcType=VARCHAR}, #{newDepAbbr,jdbcType=VARCHAR}, 
      #{oldDepAbbr,jdbcType=VARCHAR}, #{newTitle,jdbcType=VARCHAR}, #{oldDepTitle,jdbcType=VARCHAR}, 
      #{newMarket,jdbcType=VARCHAR}, #{oldMarket,jdbcType=VARCHAR}, #{newMarketName,jdbcType=VARCHAR}, 
      #{oldMarketName,jdbcType=VARCHAR}, #{qxType,jdbcType=VARCHAR}, #{qxTypeName,jdbcType=VARCHAR}, 
      #{newCompId,jdbcType=VARCHAR}, #{oldCompId,jdbcType=VARCHAR}, #{newDirecorBadge,jdbcType=VARCHAR}, 
      #{oldDirecorBadge,jdbcType=VARCHAR}, #{newDirecorName,jdbcType=VARCHAR}, #{oldDirecorName,jdbcType=VARCHAR}, 
      #{newTelD1,jdbcType=VARCHAR}, #{telD1,jdbcType=VARCHAR}, #{depGradeId,jdbcType=VARCHAR}, 
      #{depGradeTitle,jdbcType=VARCHAR}, #{workAreaId,jdbcType=VARCHAR}, #{workAreaTitle,jdbcType=VARCHAR}, 
      #{workAreaManageBadge,jdbcType=VARCHAR}, #{workAreaManageName,jdbcType=VARCHAR}, 
      #{workAreaIdK,jdbcType=VARCHAR}, #{workAreaTitleK,jdbcType=VARCHAR}, #{workAreaManageBadgeK,jdbcType=VARCHAR}, 
      #{workAreaManageNameK,jdbcType=VARCHAR}, #{workAreaIdI,jdbcType=VARCHAR}, #{workAreaTitleI,jdbcType=VARCHAR}, 
      #{workAreaManageBadgeI,jdbcType=VARCHAR}, #{workAreaManageNameI,jdbcType=VARCHAR}, 
      #{orgPathHistory,jdbcType=VARCHAR}, #{orgPath,jdbcType=VARCHAR}, #{newTel,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{changeDate,jdbcType=TIMESTAMP}, #{initializedTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_DepartmentChangeData2" >
    insert into ML_DEPT_CHANGE_DATA
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="changeId != null" >
        CHANGE_ID,
      </if>
      <if test="cType != null" >
        C_TYPE,
      </if>
      <if test="cTypeCode != null" >
        C_TYPE_CODE,
      </if>
      <if test="changeTitle != null" >
        CHANGE_TITLE,
      </if>
      <if test="changeCode != null" >
        CHANGE_CODE,
      </if>
      <if test="depId != null" >
        DEP_ID,
      </if>
      <if test="depCode != null" >
        DEP_CODE,
      </if>
      <if test="newDepAbbr != null" >
        NEW_DEP_ABBR,
      </if>
      <if test="oldDepAbbr != null" >
        OLD_DEP_ABBR,
      </if>
      <if test="newTitle != null" >
        NEW_TITLE,
      </if>
      <if test="oldDepTitle != null" >
        OLD_DEP_TITLE,
      </if>
      <if test="newMarket != null" >
        NEW_MARKET,
      </if>
      <if test="oldMarket != null" >
        OLD_MARKET,
      </if>
      <if test="newMarketName != null" >
        NEW_MARKET_NAME,
      </if>
      <if test="oldMarketName != null" >
        OLD_MARKET_NAME,
      </if>
      <if test="qxType != null" >
        QX_TYPE,
      </if>
      <if test="qxTypeName != null" >
        QX_TYPE_NAME,
      </if>
      <if test="newCompId != null" >
        NEW_COMP_ID,
      </if>
      <if test="oldCompId != null" >
        OLD_COMP_ID,
      </if>
      <if test="newDirecorBadge != null" >
        NEW_DIRECOR_BADGE,
      </if>
      <if test="oldDirecorBadge != null" >
        OLD_DIRECOR_BADGE,
      </if>
      <if test="newDirecorName != null" >
        NEW_DIRECOR_NAME,
      </if>
      <if test="oldDirecorName != null" >
        OLD_DIRECOR_NAME,
      </if>
      <if test="newTelD1 != null" >
        NEW_TEL_D1,
      </if>
      <if test="telD1 != null" >
        TEL_D1,
      </if>
      <if test="depGradeId != null" >
        DEP_GRADE_ID,
      </if>
      <if test="depGradeTitle != null" >
        DEP_GRADE_TITLE,
      </if>
      <if test="workAreaId != null" >
        WORK_AREA_ID,
      </if>
      <if test="workAreaTitle != null" >
        WORK_AREA_TITLE,
      </if>
      <if test="workAreaManageBadge != null" >
        WORK_AREA_MANAGE_BADGE,
      </if>
      <if test="workAreaManageName != null" >
        WORK_AREA_MANAGE_NAME,
      </if>
      <if test="workAreaIdK != null" >
        WORK_AREA_ID_K,
      </if>
      <if test="workAreaTitleK != null" >
        WORK_AREA_TITLE_K,
      </if>
      <if test="workAreaManageBadgeK != null" >
        WORK_AREA_MANAGE_BADGE_K,
      </if>
      <if test="workAreaManageNameK != null" >
        WORK_AREA_MANAGE_NAME_K,
      </if>
      <if test="workAreaIdI != null" >
        WORK_AREA_ID_I,
      </if>
      <if test="workAreaTitleI != null" >
        WORK_AREA_TITLE_I,
      </if>
      <if test="workAreaManageBadgeI != null" >
        WORK_AREA_MANAGE_BADGE_I,
      </if>
      <if test="workAreaManageNameI != null" >
        WORK_AREA_MANAGE_NAME_I,
      </if>
      <if test="orgPathHistory != null" >
        ORG_PATH_HISTORY,
      </if>
      <if test="orgPath != null" >
        ORG_PATH,
      </if>
      <if test="newTel != null" >
        NEW_TEL,
      </if>
      <if test="tel != null" >
        TEL,
      </if>
      <if test="changeDate != null" >
        CHANGE_DATE,
      </if>
      <if test="initializedTime != null" >
        INITIALIZED_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="changeId != null" >
        #{changeId,jdbcType=INTEGER},
      </if>
      <if test="cType != null" >
        #{cType,jdbcType=VARCHAR},
      </if>
      <if test="cTypeCode != null" >
        #{cTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="changeTitle != null" >
        #{changeTitle,jdbcType=VARCHAR},
      </if>
      <if test="changeCode != null" >
        #{changeCode,jdbcType=VARCHAR},
      </if>
      <if test="depId != null" >
        #{depId,jdbcType=VARCHAR},
      </if>
      <if test="depCode != null" >
        #{depCode,jdbcType=VARCHAR},
      </if>
      <if test="newDepAbbr != null" >
        #{newDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="oldDepAbbr != null" >
        #{oldDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="newTitle != null" >
        #{newTitle,jdbcType=VARCHAR},
      </if>
      <if test="oldDepTitle != null" >
        #{oldDepTitle,jdbcType=VARCHAR},
      </if>
      <if test="newMarket != null" >
        #{newMarket,jdbcType=VARCHAR},
      </if>
      <if test="oldMarket != null" >
        #{oldMarket,jdbcType=VARCHAR},
      </if>
      <if test="newMarketName != null" >
        #{newMarketName,jdbcType=VARCHAR},
      </if>
      <if test="oldMarketName != null" >
        #{oldMarketName,jdbcType=VARCHAR},
      </if>
      <if test="qxType != null" >
        #{qxType,jdbcType=VARCHAR},
      </if>
      <if test="qxTypeName != null" >
        #{qxTypeName,jdbcType=VARCHAR},
      </if>
      <if test="newCompId != null" >
        #{newCompId,jdbcType=VARCHAR},
      </if>
      <if test="oldCompId != null" >
        #{oldCompId,jdbcType=VARCHAR},
      </if>
      <if test="newDirecorBadge != null" >
        #{newDirecorBadge,jdbcType=VARCHAR},
      </if>
      <if test="oldDirecorBadge != null" >
        #{oldDirecorBadge,jdbcType=VARCHAR},
      </if>
      <if test="newDirecorName != null" >
        #{newDirecorName,jdbcType=VARCHAR},
      </if>
      <if test="oldDirecorName != null" >
        #{oldDirecorName,jdbcType=VARCHAR},
      </if>
      <if test="newTelD1 != null" >
        #{newTelD1,jdbcType=VARCHAR},
      </if>
      <if test="telD1 != null" >
        #{telD1,jdbcType=VARCHAR},
      </if>
      <if test="depGradeId != null" >
        #{depGradeId,jdbcType=VARCHAR},
      </if>
      <if test="depGradeTitle != null" >
        #{depGradeTitle,jdbcType=VARCHAR},
      </if>
      <if test="workAreaId != null" >
        #{workAreaId,jdbcType=VARCHAR},
      </if>
      <if test="workAreaTitle != null" >
        #{workAreaTitle,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageBadge != null" >
        #{workAreaManageBadge,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageName != null" >
        #{workAreaManageName,jdbcType=VARCHAR},
      </if>
      <if test="workAreaIdK != null" >
        #{workAreaIdK,jdbcType=VARCHAR},
      </if>
      <if test="workAreaTitleK != null" >
        #{workAreaTitleK,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageBadgeK != null" >
        #{workAreaManageBadgeK,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageNameK != null" >
        #{workAreaManageNameK,jdbcType=VARCHAR},
      </if>
      <if test="workAreaIdI != null" >
        #{workAreaIdI,jdbcType=VARCHAR},
      </if>
      <if test="workAreaTitleI != null" >
        #{workAreaTitleI,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageBadgeI != null" >
        #{workAreaManageBadgeI,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageNameI != null" >
        #{workAreaManageNameI,jdbcType=VARCHAR},
      </if>
      <if test="orgPathHistory != null" >
        #{orgPathHistory,jdbcType=VARCHAR},
      </if>
      <if test="orgPath != null" >
        #{orgPath,jdbcType=VARCHAR},
      </if>
      <if test="newTel != null" >
        #{newTel,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="changeDate != null" >
        #{changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="initializedTime != null" >
        #{initializedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.framework.config.mybatis.CommonQueryExample" resultType="java.lang.Integer" >
    select count(*) from ML_DEPT_CHANGE_DATA
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ML_DEPT_CHANGE_DATA
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.changeId != null" >
        CHANGE_ID = #{record.changeId,jdbcType=INTEGER},
      </if>
      <if test="record.cType != null" >
        C_TYPE = #{record.cType,jdbcType=VARCHAR},
      </if>
      <if test="record.cTypeCode != null" >
        C_TYPE_CODE = #{record.cTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.changeTitle != null" >
        CHANGE_TITLE = #{record.changeTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.changeCode != null" >
        CHANGE_CODE = #{record.changeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.depId != null" >
        DEP_ID = #{record.depId,jdbcType=VARCHAR},
      </if>
      <if test="record.depCode != null" >
        DEP_CODE = #{record.depCode,jdbcType=VARCHAR},
      </if>
      <if test="record.newDepAbbr != null" >
        NEW_DEP_ABBR = #{record.newDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="record.oldDepAbbr != null" >
        OLD_DEP_ABBR = #{record.oldDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="record.newTitle != null" >
        NEW_TITLE = #{record.newTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.oldDepTitle != null" >
        OLD_DEP_TITLE = #{record.oldDepTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.newMarket != null" >
        NEW_MARKET = #{record.newMarket,jdbcType=VARCHAR},
      </if>
      <if test="record.oldMarket != null" >
        OLD_MARKET = #{record.oldMarket,jdbcType=VARCHAR},
      </if>
      <if test="record.newMarketName != null" >
        NEW_MARKET_NAME = #{record.newMarketName,jdbcType=VARCHAR},
      </if>
      <if test="record.oldMarketName != null" >
        OLD_MARKET_NAME = #{record.oldMarketName,jdbcType=VARCHAR},
      </if>
      <if test="record.qxType != null" >
        QX_TYPE = #{record.qxType,jdbcType=VARCHAR},
      </if>
      <if test="record.qxTypeName != null" >
        QX_TYPE_NAME = #{record.qxTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.newCompId != null" >
        NEW_COMP_ID = #{record.newCompId,jdbcType=VARCHAR},
      </if>
      <if test="record.oldCompId != null" >
        OLD_COMP_ID = #{record.oldCompId,jdbcType=VARCHAR},
      </if>
      <if test="record.newDirecorBadge != null" >
        NEW_DIRECOR_BADGE = #{record.newDirecorBadge,jdbcType=VARCHAR},
      </if>
      <if test="record.oldDirecorBadge != null" >
        OLD_DIRECOR_BADGE = #{record.oldDirecorBadge,jdbcType=VARCHAR},
      </if>
      <if test="record.newDirecorName != null" >
        NEW_DIRECOR_NAME = #{record.newDirecorName,jdbcType=VARCHAR},
      </if>
      <if test="record.oldDirecorName != null" >
        OLD_DIRECOR_NAME = #{record.oldDirecorName,jdbcType=VARCHAR},
      </if>
      <if test="record.newTelD1 != null" >
        NEW_TEL_D1 = #{record.newTelD1,jdbcType=VARCHAR},
      </if>
      <if test="record.telD1 != null" >
        TEL_D1 = #{record.telD1,jdbcType=VARCHAR},
      </if>
      <if test="record.depGradeId != null" >
        DEP_GRADE_ID = #{record.depGradeId,jdbcType=VARCHAR},
      </if>
      <if test="record.depGradeTitle != null" >
        DEP_GRADE_TITLE = #{record.depGradeTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaId != null" >
        WORK_AREA_ID = #{record.workAreaId,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaTitle != null" >
        WORK_AREA_TITLE = #{record.workAreaTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaManageBadge != null" >
        WORK_AREA_MANAGE_BADGE = #{record.workAreaManageBadge,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaManageName != null" >
        WORK_AREA_MANAGE_NAME = #{record.workAreaManageName,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaIdK != null" >
        WORK_AREA_ID_K = #{record.workAreaIdK,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaTitleK != null" >
        WORK_AREA_TITLE_K = #{record.workAreaTitleK,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaManageBadgeK != null" >
        WORK_AREA_MANAGE_BADGE_K = #{record.workAreaManageBadgeK,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaManageNameK != null" >
        WORK_AREA_MANAGE_NAME_K = #{record.workAreaManageNameK,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaIdI != null" >
        WORK_AREA_ID_I = #{record.workAreaIdI,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaTitleI != null" >
        WORK_AREA_TITLE_I = #{record.workAreaTitleI,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaManageBadgeI != null" >
        WORK_AREA_MANAGE_BADGE_I = #{record.workAreaManageBadgeI,jdbcType=VARCHAR},
      </if>
      <if test="record.workAreaManageNameI != null" >
        WORK_AREA_MANAGE_NAME_I = #{record.workAreaManageNameI,jdbcType=VARCHAR},
      </if>
      <if test="record.orgPathHistory != null" >
        ORG_PATH_HISTORY = #{record.orgPathHistory,jdbcType=VARCHAR},
      </if>
      <if test="record.orgPath != null" >
        ORG_PATH = #{record.orgPath,jdbcType=VARCHAR},
      </if>
      <if test="record.newTel != null" >
        NEW_TEL = #{record.newTel,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        TEL = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.changeDate != null" >
        CHANGE_DATE = #{record.changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.initializedTime != null" >
        INITIALIZED_TIME = #{record.initializedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ML_DEPT_CHANGE_DATA
    set ID = #{record.id,jdbcType=INTEGER},
      CHANGE_ID = #{record.changeId,jdbcType=INTEGER},
      C_TYPE = #{record.cType,jdbcType=VARCHAR},
      C_TYPE_CODE = #{record.cTypeCode,jdbcType=VARCHAR},
      CHANGE_TITLE = #{record.changeTitle,jdbcType=VARCHAR},
      CHANGE_CODE = #{record.changeCode,jdbcType=VARCHAR},
      DEP_ID = #{record.depId,jdbcType=VARCHAR},
      DEP_CODE = #{record.depCode,jdbcType=VARCHAR},
      NEW_DEP_ABBR = #{record.newDepAbbr,jdbcType=VARCHAR},
      OLD_DEP_ABBR = #{record.oldDepAbbr,jdbcType=VARCHAR},
      NEW_TITLE = #{record.newTitle,jdbcType=VARCHAR},
      OLD_DEP_TITLE = #{record.oldDepTitle,jdbcType=VARCHAR},
      NEW_MARKET = #{record.newMarket,jdbcType=VARCHAR},
      OLD_MARKET = #{record.oldMarket,jdbcType=VARCHAR},
      NEW_MARKET_NAME = #{record.newMarketName,jdbcType=VARCHAR},
      OLD_MARKET_NAME = #{record.oldMarketName,jdbcType=VARCHAR},
      QX_TYPE = #{record.qxType,jdbcType=VARCHAR},
      QX_TYPE_NAME = #{record.qxTypeName,jdbcType=VARCHAR},
      NEW_COMP_ID = #{record.newCompId,jdbcType=VARCHAR},
      OLD_COMP_ID = #{record.oldCompId,jdbcType=VARCHAR},
      NEW_DIRECOR_BADGE = #{record.newDirecorBadge,jdbcType=VARCHAR},
      OLD_DIRECOR_BADGE = #{record.oldDirecorBadge,jdbcType=VARCHAR},
      NEW_DIRECOR_NAME = #{record.newDirecorName,jdbcType=VARCHAR},
      OLD_DIRECOR_NAME = #{record.oldDirecorName,jdbcType=VARCHAR},
      NEW_TEL_D1 = #{record.newTelD1,jdbcType=VARCHAR},
      TEL_D1 = #{record.telD1,jdbcType=VARCHAR},
      DEP_GRADE_ID = #{record.depGradeId,jdbcType=VARCHAR},
      DEP_GRADE_TITLE = #{record.depGradeTitle,jdbcType=VARCHAR},
      WORK_AREA_ID = #{record.workAreaId,jdbcType=VARCHAR},
      WORK_AREA_TITLE = #{record.workAreaTitle,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_BADGE = #{record.workAreaManageBadge,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_NAME = #{record.workAreaManageName,jdbcType=VARCHAR},
      WORK_AREA_ID_K = #{record.workAreaIdK,jdbcType=VARCHAR},
      WORK_AREA_TITLE_K = #{record.workAreaTitleK,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_BADGE_K = #{record.workAreaManageBadgeK,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_NAME_K = #{record.workAreaManageNameK,jdbcType=VARCHAR},
      WORK_AREA_ID_I = #{record.workAreaIdI,jdbcType=VARCHAR},
      WORK_AREA_TITLE_I = #{record.workAreaTitleI,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_BADGE_I = #{record.workAreaManageBadgeI,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_NAME_I = #{record.workAreaManageNameI,jdbcType=VARCHAR},
      ORG_PATH_HISTORY = #{record.orgPathHistory,jdbcType=VARCHAR},
      ORG_PATH = #{record.orgPath,jdbcType=VARCHAR},
      NEW_TEL = #{record.newTel,jdbcType=VARCHAR},
      TEL = #{record.tel,jdbcType=VARCHAR},
      CHANGE_DATE = #{record.changeDate,jdbcType=TIMESTAMP},
      INITIALIZED_TIME = #{record.initializedTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_DepartmentChangeData2" >
    update ML_DEPT_CHANGE_DATA
    <set >
      <if test="changeId != null" >
        CHANGE_ID = #{changeId,jdbcType=INTEGER},
      </if>
      <if test="cType != null" >
        C_TYPE = #{cType,jdbcType=VARCHAR},
      </if>
      <if test="cTypeCode != null" >
        C_TYPE_CODE = #{cTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="changeTitle != null" >
        CHANGE_TITLE = #{changeTitle,jdbcType=VARCHAR},
      </if>
      <if test="changeCode != null" >
        CHANGE_CODE = #{changeCode,jdbcType=VARCHAR},
      </if>
      <if test="depId != null" >
        DEP_ID = #{depId,jdbcType=VARCHAR},
      </if>
      <if test="depCode != null" >
        DEP_CODE = #{depCode,jdbcType=VARCHAR},
      </if>
      <if test="newDepAbbr != null" >
        NEW_DEP_ABBR = #{newDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="oldDepAbbr != null" >
        OLD_DEP_ABBR = #{oldDepAbbr,jdbcType=VARCHAR},
      </if>
      <if test="newTitle != null" >
        NEW_TITLE = #{newTitle,jdbcType=VARCHAR},
      </if>
      <if test="oldDepTitle != null" >
        OLD_DEP_TITLE = #{oldDepTitle,jdbcType=VARCHAR},
      </if>
      <if test="newMarket != null" >
        NEW_MARKET = #{newMarket,jdbcType=VARCHAR},
      </if>
      <if test="oldMarket != null" >
        OLD_MARKET = #{oldMarket,jdbcType=VARCHAR},
      </if>
      <if test="newMarketName != null" >
        NEW_MARKET_NAME = #{newMarketName,jdbcType=VARCHAR},
      </if>
      <if test="oldMarketName != null" >
        OLD_MARKET_NAME = #{oldMarketName,jdbcType=VARCHAR},
      </if>
      <if test="qxType != null" >
        QX_TYPE = #{qxType,jdbcType=VARCHAR},
      </if>
      <if test="qxTypeName != null" >
        QX_TYPE_NAME = #{qxTypeName,jdbcType=VARCHAR},
      </if>
      <if test="newCompId != null" >
        NEW_COMP_ID = #{newCompId,jdbcType=VARCHAR},
      </if>
      <if test="oldCompId != null" >
        OLD_COMP_ID = #{oldCompId,jdbcType=VARCHAR},
      </if>
      <if test="newDirecorBadge != null" >
        NEW_DIRECOR_BADGE = #{newDirecorBadge,jdbcType=VARCHAR},
      </if>
      <if test="oldDirecorBadge != null" >
        OLD_DIRECOR_BADGE = #{oldDirecorBadge,jdbcType=VARCHAR},
      </if>
      <if test="newDirecorName != null" >
        NEW_DIRECOR_NAME = #{newDirecorName,jdbcType=VARCHAR},
      </if>
      <if test="oldDirecorName != null" >
        OLD_DIRECOR_NAME = #{oldDirecorName,jdbcType=VARCHAR},
      </if>
      <if test="newTelD1 != null" >
        NEW_TEL_D1 = #{newTelD1,jdbcType=VARCHAR},
      </if>
      <if test="telD1 != null" >
        TEL_D1 = #{telD1,jdbcType=VARCHAR},
      </if>
      <if test="depGradeId != null" >
        DEP_GRADE_ID = #{depGradeId,jdbcType=VARCHAR},
      </if>
      <if test="depGradeTitle != null" >
        DEP_GRADE_TITLE = #{depGradeTitle,jdbcType=VARCHAR},
      </if>
      <if test="workAreaId != null" >
        WORK_AREA_ID = #{workAreaId,jdbcType=VARCHAR},
      </if>
      <if test="workAreaTitle != null" >
        WORK_AREA_TITLE = #{workAreaTitle,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageBadge != null" >
        WORK_AREA_MANAGE_BADGE = #{workAreaManageBadge,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageName != null" >
        WORK_AREA_MANAGE_NAME = #{workAreaManageName,jdbcType=VARCHAR},
      </if>
      <if test="workAreaIdK != null" >
        WORK_AREA_ID_K = #{workAreaIdK,jdbcType=VARCHAR},
      </if>
      <if test="workAreaTitleK != null" >
        WORK_AREA_TITLE_K = #{workAreaTitleK,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageBadgeK != null" >
        WORK_AREA_MANAGE_BADGE_K = #{workAreaManageBadgeK,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageNameK != null" >
        WORK_AREA_MANAGE_NAME_K = #{workAreaManageNameK,jdbcType=VARCHAR},
      </if>
      <if test="workAreaIdI != null" >
        WORK_AREA_ID_I = #{workAreaIdI,jdbcType=VARCHAR},
      </if>
      <if test="workAreaTitleI != null" >
        WORK_AREA_TITLE_I = #{workAreaTitleI,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageBadgeI != null" >
        WORK_AREA_MANAGE_BADGE_I = #{workAreaManageBadgeI,jdbcType=VARCHAR},
      </if>
      <if test="workAreaManageNameI != null" >
        WORK_AREA_MANAGE_NAME_I = #{workAreaManageNameI,jdbcType=VARCHAR},
      </if>
      <if test="orgPathHistory != null" >
        ORG_PATH_HISTORY = #{orgPathHistory,jdbcType=VARCHAR},
      </if>
      <if test="orgPath != null" >
        ORG_PATH = #{orgPath,jdbcType=VARCHAR},
      </if>
      <if test="newTel != null" >
        NEW_TEL = #{newTel,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        TEL = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="changeDate != null" >
        CHANGE_DATE = #{changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="initializedTime != null" >
        INITIALIZED_TIME = #{initializedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.Admin_Sync_OA_ML_DepartmentChangeData2" >
    update ML_DEPT_CHANGE_DATA
    set CHANGE_ID = #{changeId,jdbcType=INTEGER},
      C_TYPE = #{cType,jdbcType=VARCHAR},
      C_TYPE_CODE = #{cTypeCode,jdbcType=VARCHAR},
      CHANGE_TITLE = #{changeTitle,jdbcType=VARCHAR},
      CHANGE_CODE = #{changeCode,jdbcType=VARCHAR},
      DEP_ID = #{depId,jdbcType=VARCHAR},
      DEP_CODE = #{depCode,jdbcType=VARCHAR},
      NEW_DEP_ABBR = #{newDepAbbr,jdbcType=VARCHAR},
      OLD_DEP_ABBR = #{oldDepAbbr,jdbcType=VARCHAR},
      NEW_TITLE = #{newTitle,jdbcType=VARCHAR},
      OLD_DEP_TITLE = #{oldDepTitle,jdbcType=VARCHAR},
      NEW_MARKET = #{newMarket,jdbcType=VARCHAR},
      OLD_MARKET = #{oldMarket,jdbcType=VARCHAR},
      NEW_MARKET_NAME = #{newMarketName,jdbcType=VARCHAR},
      OLD_MARKET_NAME = #{oldMarketName,jdbcType=VARCHAR},
      QX_TYPE = #{qxType,jdbcType=VARCHAR},
      QX_TYPE_NAME = #{qxTypeName,jdbcType=VARCHAR},
      NEW_COMP_ID = #{newCompId,jdbcType=VARCHAR},
      OLD_COMP_ID = #{oldCompId,jdbcType=VARCHAR},
      NEW_DIRECOR_BADGE = #{newDirecorBadge,jdbcType=VARCHAR},
      OLD_DIRECOR_BADGE = #{oldDirecorBadge,jdbcType=VARCHAR},
      NEW_DIRECOR_NAME = #{newDirecorName,jdbcType=VARCHAR},
      OLD_DIRECOR_NAME = #{oldDirecorName,jdbcType=VARCHAR},
      NEW_TEL_D1 = #{newTelD1,jdbcType=VARCHAR},
      TEL_D1 = #{telD1,jdbcType=VARCHAR},
      DEP_GRADE_ID = #{depGradeId,jdbcType=VARCHAR},
      DEP_GRADE_TITLE = #{depGradeTitle,jdbcType=VARCHAR},
      WORK_AREA_ID = #{workAreaId,jdbcType=VARCHAR},
      WORK_AREA_TITLE = #{workAreaTitle,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_BADGE = #{workAreaManageBadge,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_NAME = #{workAreaManageName,jdbcType=VARCHAR},
      WORK_AREA_ID_K = #{workAreaIdK,jdbcType=VARCHAR},
      WORK_AREA_TITLE_K = #{workAreaTitleK,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_BADGE_K = #{workAreaManageBadgeK,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_NAME_K = #{workAreaManageNameK,jdbcType=VARCHAR},
      WORK_AREA_ID_I = #{workAreaIdI,jdbcType=VARCHAR},
      WORK_AREA_TITLE_I = #{workAreaTitleI,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_BADGE_I = #{workAreaManageBadgeI,jdbcType=VARCHAR},
      WORK_AREA_MANAGE_NAME_I = #{workAreaManageNameI,jdbcType=VARCHAR},
      ORG_PATH_HISTORY = #{orgPathHistory,jdbcType=VARCHAR},
      ORG_PATH = #{orgPath,jdbcType=VARCHAR},
      NEW_TEL = #{newTel,jdbcType=VARCHAR},
      TEL = #{tel,jdbcType=VARCHAR},
      CHANGE_DATE = #{changeDate,jdbcType=TIMESTAMP},
      INITIALIZED_TIME = #{initializedTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
   <!-- 获取部门调迁记录  -->
 <select id="getDeptTransferList"  parameterType="com.myfun.repository.admindb.param.Admin_Sync_OA_ML_DepartmentChangeDataParam" resultType="com.myfun.repository.admindb.vo.Admin_Sync_OA_ML_DeptVO">
  	SELECT * from ( 
		  SELECT
			a.C_TYPE AS type,
			a.C_TYPE_CODE AS typeCode,
			a.CHANGE_TITLE AS changeTitle,
			a.CHANGE_CODE AS changeCode,
			a.DEP_CODE AS deptCode,
			a.NEW_MARKET_NAME AS newMarketName,
			a.OLD_MARKET_NAME AS oldMarketName,
			a.ORG_PATH AS orgPath,
			a.ORG_PATH_HISTORY AS orgPathHistory,
			b.[LEVEL] orgLevel,
			a.DEP_GRADE_TITLE deptGradeTitle,
			a.CHANGE_DATE AS changeDate,
			<!-- 失效日期，取下一个动作起效的前一天 -->
			(SELECT top 1 dateadd(day,-1,d.CHANGE_DATE)  
				from ML_DEPT_CHANGE_DATA d 
				where d.DEP_ID=a.DEP_ID 
				AND d.CHANGE_ID <![CDATA[<>]]> a.CHANGE_ID 
				AND d.CHANGE_DATE <![CDATA[>=]]> a.CHANGE_DATE order by d.CHANGE_DATE ASC  
			) as invalidDate,
			a.INITIALIZED_TIME AS initializedTime,
			b.ID orgCode,
			a.NEW_TITLE orgName,
			ISNULL(c.TITLE, '') parentOrgName,
			CASE 
				WHEN a.C_TYPE_CODE= 2 and a.CHANGE_CODE=2 then ISNULL(a.OLD_DEP_TITLE, a.OLD_DEP_ABBR) 
			else a.OLD_DEP_TITLE end  oldOrgName
		 from ML_DEPT_CHANGE_DATA a 
		 LEFT JOIN ML_ORG_TREE b ON 'd'+CONVERT(VARCHAR(11),A.DEP_ID)=b.ID
		 LEFT JOIN ML_ORG_TREE c ON b.XID=c.ID
		<where>
			<choose>
			 <when test="queryDateType == 1">
		 		<if test="queryBeginTime != null"> 
				 	and a.CHANGE_DATE <![CDATA[ >= ]]> convert (varchar(10),#{queryBeginTime},120)
				 </if>
			 	 <if test="queryEndTime != null"> 
				 	and a.CHANGE_DATE <![CDATA[ <= ]]> convert (varchar(10),#{queryEndTime},120)
				 </if>
		 	</when>
		 </choose>
		 <!-- 查询指定的组织，及其子组织数据 -->
	  	 <if test="organizationId != null"> 
		 	AND b.ORG_PATH LIKE '%/'+(select ID from ML_ORG_TREE t where t.HFT_ORG_ID=#{organizationId} )+'%'
		 </if>
		 
		</where>
	) temp
	<!-- 查询失效时间的情况下 -->
	<where>
		<if test="queryDateType == 2">
	 		<if test="queryBeginTime != null"> 
			 	and temp.invalidDate <![CDATA[ >= ]]> convert (varchar(10),#{queryBeginTime},120)
			 </if>
		 	 <if test="queryEndTime != null"> 
			 	and temp.invalidDate <![CDATA[ <= ]]> convert (varchar(10),#{queryEndTime},120)
			 </if>
	 	</if>
	</where>
	 ORDER BY temp.changeDate  ASC
  </select>
  
  
</mapper>