<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunActivityRegisterMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunActivityRegister" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="CITY_ID" property="cityId" jdbcType="INTEGER" />
    <result column="COMP_ID" property="compId" jdbcType="INTEGER" />
    <result column="COMP_NO" property="compNo" jdbcType="VARCHAR" />
    <result column="AC_TYPE" property="acType" jdbcType="VARCHAR" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="DEPT_NO" property="deptNo" jdbcType="VARCHAR" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="USER_MOBILE" property="userMobile" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="TRACK_USER" property="trackUser" jdbcType="INTEGER" />
    <result column="SELLER" property="seller" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="exResultMap" type="com.myfun.repository.admindb.dto.AdminFunActivityRegisterDto" extends="BaseResultMap">
  	<result column="USER_RIGHT" property="user_hight" jdbcType="INTEGER"/>
  	<result column="USER_EMAIL" property="user_email" jdbcType="VARCHAR"/>
  	<result column="USER_NAME" property="user_name" jdbcType="VARCHAR"/>
  	<result column="USER_SEX" property="user_sex" jdbcType="INTEGER"/>
  	<result column="USER_MOBILE" property="user_mobile" jdbcType="VARCHAR"/>
  	<result column="MOBILE_VALIDED" property="mobile_valided" jdbcType="INTEGER"/>
  	<result column="AMOUNT" property="amount" jdbcType="DECIMAL"/>
  	<result column="SUPER_USER" property="super_user" jdbcType="INTEGER"/>
  	<result column="SUPER_START" property="super_start" jdbcType="TIMESTAMP"/>
  	<result column="SUPER_END" property="super_end" jdbcType="TIMESTAMP"/>
  	<result column="CREATION_TIME" property="creation_time" jdbcType="TIMESTAMP"/>
  	<result column="DEPT_NAME" property="dept_name" jdbcType="VARCHAR"/>
    <result column="CITY_NAME" property="city_name" jdbcType="VARCHAR"/>
    <result column="COUNT" property="registerNum" jdbcType="INTEGER"/>
    <result column="LAST_REGTIME" property="lastRegisterTime" jdbcType="TIMESTAMP"/>
  </resultMap>
  
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, CITY_ID, COMP_ID, COMP_NO, AC_TYPE, DEPT_ID, DEPT_NO, ARCHIVE_ID, USER_ID, USER_NAME, 
    USER_MOBILE, CREATE_TIME, TRACK_USER, SELLER
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from FUN_ACTIVITY_REGISTER
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="getPublicNumberRegisterList" resultMap="exResultMap" parameterType="com.myfun.repository.admindb.param.AdminFunActivityRegisterParam">
  	select
  	A.COMP_ID,A.DEPT_ID,C.CITY_NAME, B.COMP_NO, 
	B.DEPT_NO, B.DEPT_NAME, A.SELLER, count(*) COUNT, min(CREATE_TIME) LAST_REGTIME
  	from FUN_ACTIVITY_REGISTER A 
  	left join fun_depts B on A.comp_no = B.comp_no and A.dept_no = B.dept_no
  	left join fun_city C on A.city_id = C.city_id 
    where A.AC_TYPE = 'PUBACCOUNT_REGISTER' 
    <if test="null !=cityId">
      and A.CITY_ID = #{cityId,jdbcType=INTEGER}
    </if>
    <if test="cityId  == null">
      and A.CITY_ID = 1
    </if>
    <if test="seller != null">
      and A.SELLER = #{seller,jdbcType=INTEGER}
    </if>
    <if test="deptName != null">
      and B.DEPT_NAME like '%#{deptName,jdbcType=VARCHAR}%'
     </if>
     <if test="sTime !=null">
      and A.CREATE_TIME <![CDATA[ > ]]> #{sTime,jdbcType=TIMESTAMP}
     </if>
     <if test="eTime !=null">
      and A.CREATE_TIME <![CDATA[ < ]]> #{eTime,jdbcType=TIMESTAMP}
     </if>
      group by C.city_name, B.comp_no, B.dept_no, B.dept_name, A.seller,A.COMP_ID,A.DEPT_ID 
  </select>
 <select id="getAchiveIDsByCompIDAndDeptID" resultMap="exResultMap" parameterType="com.myfun.repository.admindb.po.AdminFunActivityRegister">
  	SELECT FAR.CREATE_TIME, A.USER_RIGHT, A.USER_EMAIL, A.USER_NAME, A.USER_SEX, A.USER_MOBILE,  
	A.MOBILE_VALIDED,B.AMOUNT, A.SUPER_USER, A.SUPER_START, A.SUPER_END,A.CREATION_TIME, A.ARCHIVE_ID, A.CITY_ID 
	FROM FUN_ACTIVITY_REGISTER  FAR 
	left join FUN_ARCHIVE A ON FAR.ARCHIVE_ID=A.ARCHIVE_ID 
	LEFT JOIN FUN_USER_ACCOUNT B ON A.UA_ID = B.UA_ID 
	where 1=1
	<if test="null !=compId">
		and FAR.COMP_ID=#{compId}
	</if>
	<if test="null !=deptId">
		and FAR.DEPT_ID=#{deptId}
	</if>
	ORDER BY A.USER_RIGHT DESC, A.SUPER_END DESC 
	
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from FUN_ACTIVITY_REGISTER
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.admindb.po.AdminFunActivityRegister" >
    <!--@mbggenerated-->
    insert into FUN_ACTIVITY_REGISTER (ID, CITY_ID, COMP_ID, 
      COMP_NO, AC_TYPE, DEPT_ID, 
      DEPT_NO, ARCHIVE_ID, USER_ID, 
      USER_NAME, USER_MOBILE, CREATE_TIME, 
      TRACK_USER, SELLER)
    values (#{id,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, 
      #{compNo,jdbcType=VARCHAR}, #{acType,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, 
      #{deptNo,jdbcType=VARCHAR}, #{archiveId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{trackUser,jdbcType=INTEGER}, #{seller,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.admindb.po.AdminFunActivityRegister" >
    <!--@mbggenerated-->
    insert into FUN_ACTIVITY_REGISTER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="compId != null" >
        COMP_ID,
      </if>
      <if test="compNo != null" >
        COMP_NO,
      </if>
      <if test="acType != null" >
        AC_TYPE,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="deptNo != null" >
        DEPT_NO,
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="userMobile != null" >
        USER_MOBILE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="trackUser != null" >
        TRACK_USER,
      </if>
      <if test="seller != null" >
        SELLER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null" >
        #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="acType != null" >
        #{acType,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null" >
        #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackUser != null" >
        #{trackUser,jdbcType=INTEGER},
      </if>
      <if test="seller != null" >
        #{seller,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunActivityRegister" >
    <!--@mbggenerated-->
    update FUN_ACTIVITY_REGISTER
    <set >
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        COMP_ID = #{compId,jdbcType=INTEGER},
      </if>
      <if test="compNo != null" >
        COMP_NO = #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="acType != null" >
        AC_TYPE = #{acType,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null" >
        DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackUser != null" >
        TRACK_USER = #{trackUser,jdbcType=INTEGER},
      </if>
      <if test="seller != null" >
        SELLER = #{seller,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunActivityRegister" >
    <!--@mbggenerated-->
    update FUN_ACTIVITY_REGISTER
    set CITY_ID = #{cityId,jdbcType=INTEGER},
      COMP_ID = #{compId,jdbcType=INTEGER},
      COMP_NO = #{compNo,jdbcType=VARCHAR},
      AC_TYPE = #{acType,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_MOBILE = #{userMobile,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      TRACK_USER = #{trackUser,jdbcType=INTEGER},
      SELLER = #{seller,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>