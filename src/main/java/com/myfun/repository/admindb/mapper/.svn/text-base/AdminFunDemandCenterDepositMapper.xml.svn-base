<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminFunDemandCenterDepositMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminFunDemandCenterDeposit">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ADUIT_UID" jdbcType="INTEGER" property="aduitUid" />
    <result column="ADUIT_TIME" jdbcType="TIMESTAMP" property="aduitTime" />
    <result column="PAY_STATUS" jdbcType="TINYINT" property="payStatus" />
    <result column="PAID_ID" jdbcType="INTEGER" property="paidId" />
    <result column="PAID_AMOUNT" jdbcType="DECIMAL" property="paidAmount" />
    <result column="BACK_AMOUNT" jdbcType="DECIMAL" property="backAmount" />
    <result column="PAID_TIME" jdbcType="TIMESTAMP" property="paidTime" />
    <result column="APPLY_BACK_TIME" jdbcType="TIMESTAMP" property="applyBackTime" />
    <result column="READY_BACK_TIME" jdbcType="TIMESTAMP" property="readyBackTime" />
    <result column="CASH_TYPE" jdbcType="TINYINT" property="cashType" />
    <result column="ACCOUNT_NO" jdbcType="VARCHAR" property="accountNo" />
    <result column="ACCOUNT_UNAME" jdbcType="VARCHAR" property="accountUname" />
    <result column="COMP_NO" jdbcType="VARCHAR" property="compNo" />
    <result column="DEPT_NO" jdbcType="VARCHAR" property="deptNo" />
    <result column="ARCHIVE_ID" jdbcType="VARCHAR" property="archiveId" />
    <result column="UA_ID" jdbcType="VARCHAR" property="uaId" />
    <result column="PAID_TYPE" jdbcType="TINYINT" property="paidType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.myfun.repository.admindb.po.AdminFunDemandCenterDeposit">
    <!--@mbggenerated-->
    <result column="PAID_DES" jdbcType="CLOB" property="paidDes" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, ADUIT_UID, ADUIT_TIME, PAY_STATUS, PAID_ID, PAID_AMOUNT, BACK_AMOUNT, PAID_TIME, 
    APPLY_BACK_TIME, READY_BACK_TIME, CASH_TYPE, ACCOUNT_NO, ACCOUNT_UNAME, COMP_NO, 
    DEPT_NO, ARCHIVE_ID, UA_ID, PAID_TYPE
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbggenerated-->
    PAID_DES
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FUN_DEMAND_CENTER_DEPOSIT
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from FUN_DEMAND_CENTER_DEPOSIT
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminFunDemandCenterDeposit" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_DEMAND_CENTER_DEPOSIT (ADUIT_UID, ADUIT_TIME, PAY_STATUS, 
      PAID_ID, PAID_AMOUNT, BACK_AMOUNT, 
      PAID_TIME, APPLY_BACK_TIME, READY_BACK_TIME, 
      CASH_TYPE, ACCOUNT_NO, ACCOUNT_UNAME, 
      COMP_NO, DEPT_NO, ARCHIVE_ID, 
      UA_ID, PAID_TYPE, PAID_DES
      )
    values (#{aduitUid,jdbcType=INTEGER}, #{aduitTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=TINYINT}, 
      #{paidId,jdbcType=INTEGER}, #{paidAmount,jdbcType=DECIMAL}, #{backAmount,jdbcType=DECIMAL}, 
      #{paidTime,jdbcType=TIMESTAMP}, #{applyBackTime,jdbcType=TIMESTAMP}, #{readyBackTime,jdbcType=TIMESTAMP}, 
      #{cashType,jdbcType=TINYINT}, #{accountNo,jdbcType=VARCHAR}, #{accountUname,jdbcType=VARCHAR}, 
      #{compNo,jdbcType=VARCHAR}, #{deptNo,jdbcType=VARCHAR}, #{archiveId,jdbcType=VARCHAR}, 
      #{uaId,jdbcType=VARCHAR}, #{paidType,jdbcType=TINYINT}, #{paidDes,jdbcType=CLOB}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminFunDemandCenterDeposit" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into FUN_DEMAND_CENTER_DEPOSIT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aduitUid != null">
        ADUIT_UID,
      </if>
      <if test="aduitTime != null">
        ADUIT_TIME,
      </if>
      <if test="payStatus != null">
        PAY_STATUS,
      </if>
      <if test="paidId != null">
        PAID_ID,
      </if>
      <if test="paidAmount != null">
        PAID_AMOUNT,
      </if>
      <if test="backAmount != null">
        BACK_AMOUNT,
      </if>
      <if test="paidTime != null">
        PAID_TIME,
      </if>
      <if test="applyBackTime != null">
        APPLY_BACK_TIME,
      </if>
      <if test="readyBackTime != null">
        READY_BACK_TIME,
      </if>
      <if test="cashType != null">
        CASH_TYPE,
      </if>
      <if test="accountNo != null">
        ACCOUNT_NO,
      </if>
      <if test="accountUname != null">
        ACCOUNT_UNAME,
      </if>
      <if test="compNo != null">
        COMP_NO,
      </if>
      <if test="deptNo != null">
        DEPT_NO,
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID,
      </if>
      <if test="uaId != null">
        UA_ID,
      </if>
      <if test="paidType != null">
        PAID_TYPE,
      </if>
      <if test="paidDes != null">
        PAID_DES,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aduitUid != null">
        #{aduitUid,jdbcType=INTEGER},
      </if>
      <if test="aduitTime != null">
        #{aduitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="paidId != null">
        #{paidId,jdbcType=INTEGER},
      </if>
      <if test="paidAmount != null">
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="backAmount != null">
        #{backAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidTime != null">
        #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyBackTime != null">
        #{applyBackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readyBackTime != null">
        #{readyBackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashType != null">
        #{cashType,jdbcType=TINYINT},
      </if>
      <if test="accountNo != null">
        #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="accountUname != null">
        #{accountUname,jdbcType=VARCHAR},
      </if>
      <if test="compNo != null">
        #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="deptNo != null">
        #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="archiveId != null">
        #{archiveId,jdbcType=VARCHAR},
      </if>
      <if test="uaId != null">
        #{uaId,jdbcType=VARCHAR},
      </if>
      <if test="paidType != null">
        #{paidType,jdbcType=TINYINT},
      </if>
      <if test="paidDes != null">
        #{paidDes,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminFunDemandCenterDeposit">
    <!--@mbggenerated-->
    update FUN_DEMAND_CENTER_DEPOSIT
    <set>
      <if test="aduitUid != null">
        ADUIT_UID = #{aduitUid,jdbcType=INTEGER},
      </if>
      <if test="aduitTime != null">
        ADUIT_TIME = #{aduitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        PAY_STATUS = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="paidId != null">
        PAID_ID = #{paidId,jdbcType=INTEGER},
      </if>
      <if test="paidAmount != null">
        PAID_AMOUNT = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="backAmount != null">
        BACK_AMOUNT = #{backAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidTime != null">
        PAID_TIME = #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyBackTime != null">
        APPLY_BACK_TIME = #{applyBackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readyBackTime != null">
        READY_BACK_TIME = #{readyBackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashType != null">
        CASH_TYPE = #{cashType,jdbcType=TINYINT},
      </if>
      <if test="accountNo != null">
        ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="accountUname != null">
        ACCOUNT_UNAME = #{accountUname,jdbcType=VARCHAR},
      </if>
      <if test="compNo != null">
        COMP_NO = #{compNo,jdbcType=VARCHAR},
      </if>
      <if test="deptNo != null">
        DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      </if>
      <if test="archiveId != null">
        ARCHIVE_ID = #{archiveId,jdbcType=VARCHAR},
      </if>
      <if test="uaId != null">
        UA_ID = #{uaId,jdbcType=VARCHAR},
      </if>
      <if test="paidType != null">
        PAID_TYPE = #{paidType,jdbcType=TINYINT},
      </if>
      <if test="paidDes != null">
        PAID_DES = #{paidDes,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myfun.repository.admindb.po.AdminFunDemandCenterDeposit">
    <!--@mbggenerated-->
    update FUN_DEMAND_CENTER_DEPOSIT
    set ADUIT_UID = #{aduitUid,jdbcType=INTEGER},
      ADUIT_TIME = #{aduitTime,jdbcType=TIMESTAMP},
      PAY_STATUS = #{payStatus,jdbcType=TINYINT},
      PAID_ID = #{paidId,jdbcType=INTEGER},
      PAID_AMOUNT = #{paidAmount,jdbcType=DECIMAL},
      BACK_AMOUNT = #{backAmount,jdbcType=DECIMAL},
      PAID_TIME = #{paidTime,jdbcType=TIMESTAMP},
      APPLY_BACK_TIME = #{applyBackTime,jdbcType=TIMESTAMP},
      READY_BACK_TIME = #{readyBackTime,jdbcType=TIMESTAMP},
      CASH_TYPE = #{cashType,jdbcType=TINYINT},
      ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR},
      ACCOUNT_UNAME = #{accountUname,jdbcType=VARCHAR},
      COMP_NO = #{compNo,jdbcType=VARCHAR},
      DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      ARCHIVE_ID = #{archiveId,jdbcType=VARCHAR},
      UA_ID = #{uaId,jdbcType=VARCHAR},
      PAID_TYPE = #{paidType,jdbcType=TINYINT},
      PAID_DES = #{paidDes,jdbcType=CLOB}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminFunDemandCenterDeposit">
    <!--@mbggenerated-->
    update FUN_DEMAND_CENTER_DEPOSIT
    set ADUIT_UID = #{aduitUid,jdbcType=INTEGER},
      ADUIT_TIME = #{aduitTime,jdbcType=TIMESTAMP},
      PAY_STATUS = #{payStatus,jdbcType=TINYINT},
      PAID_ID = #{paidId,jdbcType=INTEGER},
      PAID_AMOUNT = #{paidAmount,jdbcType=DECIMAL},
      BACK_AMOUNT = #{backAmount,jdbcType=DECIMAL},
      PAID_TIME = #{paidTime,jdbcType=TIMESTAMP},
      APPLY_BACK_TIME = #{applyBackTime,jdbcType=TIMESTAMP},
      READY_BACK_TIME = #{readyBackTime,jdbcType=TIMESTAMP},
      CASH_TYPE = #{cashType,jdbcType=TINYINT},
      ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR},
      ACCOUNT_UNAME = #{accountUname,jdbcType=VARCHAR},
      COMP_NO = #{compNo,jdbcType=VARCHAR},
      DEPT_NO = #{deptNo,jdbcType=VARCHAR},
      ARCHIVE_ID = #{archiveId,jdbcType=VARCHAR},
      UA_ID = #{uaId,jdbcType=VARCHAR},
      PAID_TYPE = #{paidType,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>