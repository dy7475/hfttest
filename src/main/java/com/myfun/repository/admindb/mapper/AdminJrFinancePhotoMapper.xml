<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.admindb.dao.AdminJrFinancePhotoMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.admindb.po.AdminJrFinancePhoto">
    <!--@mbggenerated-->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="PHOTO_PATH" jdbcType="VARCHAR" property="photoPath" />
    <result column="FINANCE_ID" jdbcType="INTEGER" property="financeId" />
    <result column="SEQ_NUM" jdbcType="TINYINT" property="seqNum" />
    <result column="PHOTO_TYPE" jdbcType="TINYINT" property="photoType" />
    <result column="SOURCE" jdbcType="TINYINT" property="source" />
    <result column="CREATE_USER_NAME" jdbcType="VARCHAR" property="createUserName" />
    <result column="CREATE_USER_ID" jdbcType="INTEGER" property="createUserId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="DELETE_FLAG" jdbcType="BIT" property="deleteFlag" />
    <result column="ATTACHMENT_TYPE" jdbcType="TINYINT" property="attachmentType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbggenerated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    ID, PHOTO_PATH, FINANCE_ID, SEQ_NUM, PHOTO_TYPE, [SOURCE], CREATE_USER_NAME, CREATE_USER_ID, 
    CREATE_TIME, DELETE_FLAG, ATTACHMENT_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.myfun.repository.admindb.po.AdminJrFinancePhotoExample" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from JR_FINANCE_PHOTO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from JR_FINANCE_PHOTO
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbggenerated-->
    delete from JR_FINANCE_PHOTO
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.admindb.po.AdminJrFinancePhotoExample">
    <!--@mbggenerated-->
    delete from JR_FINANCE_PHOTO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminJrFinancePhoto" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into JR_FINANCE_PHOTO (PHOTO_PATH, FINANCE_ID, SEQ_NUM, 
      PHOTO_TYPE, [SOURCE], CREATE_USER_NAME, 
      CREATE_USER_ID, CREATE_TIME, DELETE_FLAG, 
      ATTACHMENT_TYPE)
    values (#{photoPath,jdbcType=VARCHAR}, #{financeId,jdbcType=INTEGER}, #{seqNum,jdbcType=TINYINT}, 
      #{photoType,jdbcType=TINYINT}, #{source,jdbcType=TINYINT}, #{createUserName,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=BIT}, 
      #{attachmentType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.myfun.repository.admindb.po.AdminJrFinancePhoto" useGeneratedKeys="true">
    <!--@mbggenerated-->
    insert into JR_FINANCE_PHOTO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="photoPath != null">
        PHOTO_PATH,
      </if>
      <if test="financeId != null">
        FINANCE_ID,
      </if>
      <if test="seqNum != null">
        SEQ_NUM,
      </if>
      <if test="photoType != null">
        PHOTO_TYPE,
      </if>
      <if test="source != null">
        [SOURCE],
      </if>
      <if test="createUserName != null">
        CREATE_USER_NAME,
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG,
      </if>
      <if test="attachmentType != null">
        ATTACHMENT_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="photoPath != null">
        #{photoPath,jdbcType=VARCHAR},
      </if>
      <if test="financeId != null">
        #{financeId,jdbcType=INTEGER},
      </if>
      <if test="seqNum != null">
        #{seqNum,jdbcType=TINYINT},
      </if>
      <if test="photoType != null">
        #{photoType,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="attachmentType != null">
        #{attachmentType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.admindb.po.AdminJrFinancePhotoExample" resultType="java.lang.Integer">
    <!--@mbggenerated-->
    select count(*) from JR_FINANCE_PHOTO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbggenerated-->
    update JR_FINANCE_PHOTO
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.photoPath != null">
        PHOTO_PATH = #{record.photoPath,jdbcType=VARCHAR},
      </if>
      <if test="record.financeId != null">
        FINANCE_ID = #{record.financeId,jdbcType=INTEGER},
      </if>
      <if test="record.seqNum != null">
        SEQ_NUM = #{record.seqNum,jdbcType=TINYINT},
      </if>
      <if test="record.photoType != null">
        PHOTO_TYPE = #{record.photoType,jdbcType=TINYINT},
      </if>
      <if test="record.source != null">
        [SOURCE] = #{record.source,jdbcType=TINYINT},
      </if>
      <if test="record.createUserName != null">
        CREATE_USER_NAME = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        CREATE_USER_ID = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null">
        DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT},
      </if>
      <if test="record.attachmentType != null">
        ATTACHMENT_TYPE = #{record.attachmentType,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbggenerated-->
    update JR_FINANCE_PHOTO
    set ID = #{record.id,jdbcType=INTEGER},
      PHOTO_PATH = #{record.photoPath,jdbcType=VARCHAR},
      FINANCE_ID = #{record.financeId,jdbcType=INTEGER},
      SEQ_NUM = #{record.seqNum,jdbcType=TINYINT},
      PHOTO_TYPE = #{record.photoType,jdbcType=TINYINT},
      [SOURCE] = #{record.source,jdbcType=TINYINT},
      CREATE_USER_NAME = #{record.createUserName,jdbcType=VARCHAR},
      CREATE_USER_ID = #{record.createUserId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT},
      ATTACHMENT_TYPE = #{record.attachmentType,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.admindb.po.AdminJrFinancePhoto">
    <!--@mbggenerated-->
    update JR_FINANCE_PHOTO
    <set>
      <if test="photoPath != null">
        PHOTO_PATH = #{photoPath,jdbcType=VARCHAR},
      </if>
      <if test="financeId != null">
        FINANCE_ID = #{financeId,jdbcType=INTEGER},
      </if>
      <if test="seqNum != null">
        SEQ_NUM = #{seqNum,jdbcType=TINYINT},
      </if>
      <if test="photoType != null">
        PHOTO_TYPE = #{photoType,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        [SOURCE] = #{source,jdbcType=TINYINT},
      </if>
      <if test="createUserName != null">
        CREATE_USER_NAME = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG = #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="attachmentType != null">
        ATTACHMENT_TYPE = #{attachmentType,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.admindb.po.AdminJrFinancePhoto">
    <!--@mbggenerated-->
    update JR_FINANCE_PHOTO
    set PHOTO_PATH = #{photoPath,jdbcType=VARCHAR},
      FINANCE_ID = #{financeId,jdbcType=INTEGER},
      SEQ_NUM = #{seqNum,jdbcType=TINYINT},
      PHOTO_TYPE = #{photoType,jdbcType=TINYINT},
      [SOURCE] = #{source,jdbcType=TINYINT},
      CREATE_USER_NAME = #{createUserName,jdbcType=VARCHAR},
      CREATE_USER_ID = #{createUserId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      DELETE_FLAG = #{deleteFlag,jdbcType=BIT},
      ATTACHMENT_TYPE = #{attachmentType,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getPhotoListByFinanceId" resultType ="java.util.Map">
    select  <include refid="Base_Column_List" /> from JR_FINANCE_PHOTO
  	where FINANCE_ID =#{id} 
  	and DELETE_FLAG=0
  </select>

  <insert id="insertForFastDfs">
    <foreach collection="dfsParamList" item="dfsParam" separator=";">
      INSERT  INTO  JR_FINANCE_PHOTO_FASTDFS_TMP(JR_ID,PATH_OLD,PATH_NEW)
      VALUES (#{dfsParam.jrId}, #{dfsParam.pathOld}, #{dfsParam.pathNew})
    </foreach>
  </insert>
</mapper>