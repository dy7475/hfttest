<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.searchdb.dao.SearchPhotoZjMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.searchdb.po.SearchPhotoZj" >
    <!--@mbggenerated-->
    <id column="city_id" property="cityId" jdbcType="SMALLINT" />
    <id column="page_type" property="pageType" jdbcType="TINYINT" />
    <id column="sl_id" property="slId" jdbcType="INTEGER" />
    <id column="photo_id" property="photoId" jdbcType="INTEGER" />
    <result column="photo_type" property="photoType" jdbcType="TINYINT" />
    <result column="photo_addr" property="photoAddr" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="deal_flag" property="dealFlag" jdbcType="TINYINT" />
    <result column="pic_type" property="picType" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    city_id, page_type, sl_id, photo_id, photo_type, photo_addr, create_time, deal_flag, 
    pic_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.myfun.repository.searchdb.po.SearchPhotoZjKey" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from photo_zj
    where city_id = #{cityId,jdbcType=SMALLINT}
      and page_type = #{pageType,jdbcType=TINYINT}
      and sl_id = #{slId,jdbcType=INTEGER}
      and photo_id = #{photoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.myfun.repository.searchdb.po.SearchPhotoZjKey" >
    <!--@mbggenerated-->
    delete from photo_zj
    where city_id = #{cityId,jdbcType=SMALLINT}
      and page_type = #{pageType,jdbcType=TINYINT}
      and sl_id = #{slId,jdbcType=INTEGER}
      and photo_id = #{photoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.searchdb.po.SearchPhotoZj" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="photoId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into photo_zj (city_id, page_type, sl_id, 
      photo_type, photo_addr, create_time, 
      deal_flag, pic_type)
    values (#{cityId,jdbcType=SMALLINT}, #{pageType,jdbcType=TINYINT}, #{slId,jdbcType=INTEGER}, 
      #{photoType,jdbcType=TINYINT}, #{photoAddr,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{dealFlag,jdbcType=TINYINT}, #{picType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.searchdb.po.SearchPhotoZj" >
    <!--@mbggenerated-->
    <selectKey resultType="java.lang.Integer" keyProperty="photoId" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into photo_zj
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="pageType != null" >
        page_type,
      </if>
      <if test="slId != null" >
        sl_id,
      </if>
      <if test="photoType != null" >
        photo_type,
      </if>
      <if test="photoAddr != null" >
        photo_addr,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="dealFlag != null" >
        deal_flag,
      </if>
      <if test="picType != null" >
        pic_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="pageType != null" >
        #{pageType,jdbcType=TINYINT},
      </if>
      <if test="slId != null" >
        #{slId,jdbcType=INTEGER},
      </if>
      <if test="photoType != null" >
        #{photoType,jdbcType=TINYINT},
      </if>
      <if test="photoAddr != null" >
        #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="dealFlag != null" >
        #{dealFlag,jdbcType=TINYINT},
      </if>
      <if test="picType != null" >
        #{picType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.searchdb.po.SearchPhotoZj" >
    <!--@mbggenerated-->
    update photo_zj
    <set >
      <if test="photoType != null" >
        photo_type = #{photoType,jdbcType=TINYINT},
      </if>
      <if test="photoAddr != null" >
        photo_addr = #{photoAddr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="dealFlag != null" >
        deal_flag = #{dealFlag,jdbcType=TINYINT},
      </if>
      <if test="picType != null" >
        pic_type = #{picType,jdbcType=TINYINT},
      </if>
    </set>
    where city_id = #{cityId,jdbcType=SMALLINT}
      and page_type = #{pageType,jdbcType=TINYINT}
      and sl_id = #{slId,jdbcType=INTEGER}
      and photo_id = #{photoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.searchdb.po.SearchPhotoZj" >
    <!--@mbggenerated-->
    update photo_zj
    set photo_type = #{photoType,jdbcType=TINYINT},
      photo_addr = #{photoAddr,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      deal_flag = #{dealFlag,jdbcType=TINYINT},
      pic_type = #{picType,jdbcType=TINYINT}
    where city_id = #{cityId,jdbcType=SMALLINT}
      and page_type = #{pageType,jdbcType=TINYINT}
      and sl_id = #{slId,jdbcType=INTEGER}
      and photo_id = #{photoId,jdbcType=INTEGER}
  </update>
  
	<select id="getPhotoList" resultMap="BaseResultMap">
		SELECT PHOTO_ID,PHOTO_ADDR,PHOTO_ADDR_SOURCE FROM
		<choose>
			<when test="caseType == 1">PHOTO_SALE</when>
			<when test="caseType == 2">PHOTO_LEASE</when>
			<when test="caseType == 3">PHOTO_SHOP</when>
			<when test="caseType == 4">PHOTO_HEZU</when>
		</choose>
		WHERE CITY_ID = #{cityId} AND SL_ID = #{caseId}
	</select>
	
	<select id="getNeedValidatePhotoList" resultMap="BaseResultMap">
		SELECT top ${pageSize} CITY_ID,SL_ID,PAGE_TYPE,PHOTO_ID,PHOTO_ADDR FROM PHOTO_ZJ WHERE IS_VALID not in(3,7) AND CITY_ID=#{cityId}
	</select>
  
	<select id="updateIsValid">
		update photo_zj set IS_VALID=#{isValid} where 
		CITY_ID=#{searchPhotoZj.cityId} and PHOTO_ID=#{searchPhotoZj.photoId}
		and SL_ID=#{searchPhotoZj.slId} and PAGE_TYPE=#{searchPhotoZj.pageType}
	</select>
	
	<select id="getPhotoOne" resultMap="BaseResultMap">
		SELECT top 1 PHOTO_ID,PHOTO_ADDR,PHOTO_ADDR_SOURCE FROM
		<choose>
			<when test="caseType == 1">PHOTO_SALE</when>
			<when test="caseType == 2">PHOTO_LEASE</when>
			<when test="caseType == 3">PHOTO_SHOP</when>
			<when test="caseType == 4">PHOTO_HEZU</when>
		</choose>
		WHERE CITY_ID = #{cityId} AND SL_ID = #{caseId}
	</select>
	
	<select id="getPhotoZjList" resultMap="BaseResultMap">
		SELECT SL_ID,MAX(PHOTO_ADDR) as PHOTO_ADDR
		from
		<choose>
			<when test="caseType == 1">PHOTO_SALE</when>
			<when test="caseType == 2">PHOTO_LEASE</when>
			<when test="caseType == 3">PHOTO_SHOP</when>
			<when test="caseType == 4">PHOTO_HEZU</when>
		</choose>
		WHERE CITY_ID = #{cityId} AND SL_ID in
		<foreach collection="caseIds" open="(" close=")" item="caseId" separator=",">
			#{caseId}
		</foreach>
		GROUP BY SL_ID
	</select>
	
</mapper>


