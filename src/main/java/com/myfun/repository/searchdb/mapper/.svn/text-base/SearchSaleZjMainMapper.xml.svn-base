<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfun.repository.searchdb.dao.SearchSaleZjMainMapper">
  <resultMap id="BaseResultMap" type="com.myfun.repository.searchdb.po.SearchSaleZjMain">
    <!--@mbggenerated-->
    <id column="city_id" jdbcType="SMALLINT" property="cityId" />
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="build_name" jdbcType="VARCHAR" property="buildName" />
    <result column="useage" jdbcType="VARCHAR" property="useage" />
    <result column="sectors" jdbcType="VARCHAR" property="sectors" />
    <result column="room" jdbcType="TINYINT" property="room" />
    <result column="floor" jdbcType="SMALLINT" property="floor" />
    <result column="fitment" jdbcType="VARCHAR" property="fitment" />
    <result column="direct" jdbcType="VARCHAR" property="direct" />
    <result column="area" jdbcType="DECIMAL" property="area" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="unit_price" jdbcType="INTEGER" property="unitPrice" />
    <result column="img_flag" jdbcType="TINYINT" property="imgFlag" />
    <result column="status_flag" jdbcType="TINYINT" property="statusFlag" />
    <result column="small_pic" jdbcType="VARCHAR" property="smallPic" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="round" jdbcType="VARCHAR" property="round" />
    <result column="section" jdbcType="VARCHAR" property="section" />
    <result column="hall" jdbcType="TINYINT" property="hall" />
    <result column="wei" jdbcType="TINYINT" property="wei" />
    <result column="chu" jdbcType="TINYINT" property="chu" />
    <result column="yang" jdbcType="TINYINT" property="yang" />
    <result column="floors" jdbcType="TINYINT" property="floors" />
    <result column="build_id" jdbcType="INTEGER" property="buildId" />
    <result column="charact" jdbcType="VARCHAR" property="charact" />
    <result column="reg_id" jdbcType="INTEGER" property="regId" />
    <result column="filter_flag" jdbcType="TINYINT" property="filterFlag" />
    <result column="sync_flag" jdbcType="BIT" property="syncFlag" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="section_id" jdbcType="INTEGER" property="sectionId" />
    <result column="repeat_flag" jdbcType="INTEGER" property="repeatFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbggenerated-->
    city_id, id, in_time, title, build_name, useage, sectors, room, [floor], fitment, 
    direct, area, total_price, unit_price, img_flag, status_flag, small_pic, [owner], 
    region, round, [section], hall, wei, chu, yang, floors, build_id, charact, reg_id, 
    filter_flag, sync_flag, update_time, section_id, repeat_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.myfun.repository.searchdb.po.SearchSaleZjMainKey" resultMap="BaseResultMap">
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from sale_zj_main
    where city_id = #{cityId,jdbcType=SMALLINT}
      and id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.myfun.repository.searchdb.po.SearchSaleZjMainKey">
    <!--@mbggenerated-->
    delete from sale_zj_main
    where city_id = #{cityId,jdbcType=SMALLINT}
      and id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.searchdb.po.SearchSaleZjMain">
    <!--@mbggenerated-->
    insert into sale_zj_main (city_id, id, in_time, 
      title, build_name, useage, 
      sectors, room, [floor], 
      fitment, direct, area, 
      total_price, unit_price, img_flag, 
      status_flag, small_pic, [owner], 
      region, round, [section], 
      hall, wei, chu, yang, 
      floors, build_id, charact, 
      reg_id, filter_flag, sync_flag, 
      update_time, section_id, repeat_flag
      )
    values (#{cityId,jdbcType=SMALLINT}, #{id,jdbcType=INTEGER}, #{inTime,jdbcType=TIMESTAMP}, 
      #{title,jdbcType=VARCHAR}, #{buildName,jdbcType=VARCHAR}, #{useage,jdbcType=VARCHAR}, 
      #{sectors,jdbcType=VARCHAR}, #{room,jdbcType=TINYINT}, #{floor,jdbcType=SMALLINT}, 
      #{fitment,jdbcType=VARCHAR}, #{direct,jdbcType=VARCHAR}, #{area,jdbcType=DECIMAL}, 
      #{totalPrice,jdbcType=DECIMAL}, #{unitPrice,jdbcType=INTEGER}, #{imgFlag,jdbcType=TINYINT}, 
      #{statusFlag,jdbcType=TINYINT}, #{smallPic,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR}, #{round,jdbcType=VARCHAR}, #{section,jdbcType=VARCHAR}, 
      #{hall,jdbcType=TINYINT}, #{wei,jdbcType=TINYINT}, #{chu,jdbcType=TINYINT}, #{yang,jdbcType=TINYINT}, 
      #{floors,jdbcType=TINYINT}, #{buildId,jdbcType=INTEGER}, #{charact,jdbcType=VARCHAR}, 
      #{regId,jdbcType=INTEGER}, #{filterFlag,jdbcType=TINYINT}, #{syncFlag,jdbcType=BIT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{sectionId,jdbcType=INTEGER}, #{repeatFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.searchdb.po.SearchSaleZjMain">
    <!--@mbggenerated-->
    insert into sale_zj_main
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        city_id,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="inTime != null">
        in_time,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="buildName != null">
        build_name,
      </if>
      <if test="useage != null">
        useage,
      </if>
      <if test="sectors != null">
        sectors,
      </if>
      <if test="room != null">
        room,
      </if>
      <if test="floor != null">
        [floor],
      </if>
      <if test="fitment != null">
        fitment,
      </if>
      <if test="direct != null">
        direct,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="imgFlag != null">
        img_flag,
      </if>
      <if test="statusFlag != null">
        status_flag,
      </if>
      <if test="smallPic != null">
        small_pic,
      </if>
      <if test="owner != null">
        [owner],
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="round != null">
        round,
      </if>
      <if test="section != null">
        [section],
      </if>
      <if test="hall != null">
        hall,
      </if>
      <if test="wei != null">
        wei,
      </if>
      <if test="chu != null">
        chu,
      </if>
      <if test="yang != null">
        yang,
      </if>
      <if test="floors != null">
        floors,
      </if>
      <if test="buildId != null">
        build_id,
      </if>
      <if test="charact != null">
        charact,
      </if>
      <if test="regId != null">
        reg_id,
      </if>
      <if test="filterFlag != null">
        filter_flag,
      </if>
      <if test="syncFlag != null">
        sync_flag,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="sectionId != null">
        section_id,
      </if>
      <if test="repeatFlag != null">
        repeat_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="useage != null">
        #{useage,jdbcType=VARCHAR},
      </if>
      <if test="sectors != null">
        #{sectors,jdbcType=VARCHAR},
      </if>
      <if test="room != null">
        #{room,jdbcType=TINYINT},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=SMALLINT},
      </if>
      <if test="fitment != null">
        #{fitment,jdbcType=VARCHAR},
      </if>
      <if test="direct != null">
        #{direct,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=INTEGER},
      </if>
      <if test="imgFlag != null">
        #{imgFlag,jdbcType=TINYINT},
      </if>
      <if test="statusFlag != null">
        #{statusFlag,jdbcType=TINYINT},
      </if>
      <if test="smallPic != null">
        #{smallPic,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="round != null">
        #{round,jdbcType=VARCHAR},
      </if>
      <if test="section != null">
        #{section,jdbcType=VARCHAR},
      </if>
      <if test="hall != null">
        #{hall,jdbcType=TINYINT},
      </if>
      <if test="wei != null">
        #{wei,jdbcType=TINYINT},
      </if>
      <if test="chu != null">
        #{chu,jdbcType=TINYINT},
      </if>
      <if test="yang != null">
        #{yang,jdbcType=TINYINT},
      </if>
      <if test="floors != null">
        #{floors,jdbcType=TINYINT},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="charact != null">
        #{charact,jdbcType=VARCHAR},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=INTEGER},
      </if>
      <if test="filterFlag != null">
        #{filterFlag,jdbcType=TINYINT},
      </if>
      <if test="syncFlag != null">
        #{syncFlag,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sectionId != null">
        #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="repeatFlag != null">
        #{repeatFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.searchdb.po.SearchSaleZjMain">
    <!--@mbggenerated-->
    update sale_zj_main
    <set>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="buildName != null">
        build_name = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="useage != null">
        useage = #{useage,jdbcType=VARCHAR},
      </if>
      <if test="sectors != null">
        sectors = #{sectors,jdbcType=VARCHAR},
      </if>
      <if test="room != null">
        room = #{room,jdbcType=TINYINT},
      </if>
      <if test="floor != null">
        [floor] = #{floor,jdbcType=SMALLINT},
      </if>
      <if test="fitment != null">
        fitment = #{fitment,jdbcType=VARCHAR},
      </if>
      <if test="direct != null">
        direct = #{direct,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=INTEGER},
      </if>
      <if test="imgFlag != null">
        img_flag = #{imgFlag,jdbcType=TINYINT},
      </if>
      <if test="statusFlag != null">
        status_flag = #{statusFlag,jdbcType=TINYINT},
      </if>
      <if test="smallPic != null">
        small_pic = #{smallPic,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        [owner] = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="round != null">
        round = #{round,jdbcType=VARCHAR},
      </if>
      <if test="section != null">
        [section] = #{section,jdbcType=VARCHAR},
      </if>
      <if test="hall != null">
        hall = #{hall,jdbcType=TINYINT},
      </if>
      <if test="wei != null">
        wei = #{wei,jdbcType=TINYINT},
      </if>
      <if test="chu != null">
        chu = #{chu,jdbcType=TINYINT},
      </if>
      <if test="yang != null">
        yang = #{yang,jdbcType=TINYINT},
      </if>
      <if test="floors != null">
        floors = #{floors,jdbcType=TINYINT},
      </if>
      <if test="buildId != null">
        build_id = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="charact != null">
        charact = #{charact,jdbcType=VARCHAR},
      </if>
      <if test="regId != null">
        reg_id = #{regId,jdbcType=INTEGER},
      </if>
      <if test="filterFlag != null">
        filter_flag = #{filterFlag,jdbcType=TINYINT},
      </if>
      <if test="syncFlag != null">
        sync_flag = #{syncFlag,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sectionId != null">
        section_id = #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="repeatFlag != null">
        repeat_flag = #{repeatFlag,jdbcType=INTEGER},
      </if>
    </set>
    where city_id = #{cityId,jdbcType=SMALLINT}
      and id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.searchdb.po.SearchSaleZjMain">
    <!--@mbggenerated-->
    update sale_zj_main
    set in_time = #{inTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      build_name = #{buildName,jdbcType=VARCHAR},
      useage = #{useage,jdbcType=VARCHAR},
      sectors = #{sectors,jdbcType=VARCHAR},
      room = #{room,jdbcType=TINYINT},
      [floor] = #{floor,jdbcType=SMALLINT},
      fitment = #{fitment,jdbcType=VARCHAR},
      direct = #{direct,jdbcType=VARCHAR},
      area = #{area,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      unit_price = #{unitPrice,jdbcType=INTEGER},
      img_flag = #{imgFlag,jdbcType=TINYINT},
      status_flag = #{statusFlag,jdbcType=TINYINT},
      small_pic = #{smallPic,jdbcType=VARCHAR},
      [owner] = #{owner,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      round = #{round,jdbcType=VARCHAR},
      [section] = #{section,jdbcType=VARCHAR},
      hall = #{hall,jdbcType=TINYINT},
      wei = #{wei,jdbcType=TINYINT},
      chu = #{chu,jdbcType=TINYINT},
      yang = #{yang,jdbcType=TINYINT},
      floors = #{floors,jdbcType=TINYINT},
      build_id = #{buildId,jdbcType=INTEGER},
      charact = #{charact,jdbcType=VARCHAR},
      reg_id = #{regId,jdbcType=INTEGER},
      filter_flag = #{filterFlag,jdbcType=TINYINT},
      sync_flag = #{syncFlag,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      section_id = #{sectionId,jdbcType=INTEGER},
      repeat_flag = #{repeatFlag,jdbcType=INTEGER}
    where city_id = #{cityId,jdbcType=SMALLINT}
      and id = #{id,jdbcType=INTEGER}
  </update>
  <!-- business -->
  <select id="getListBySolrParamForPage" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sale_zj_main
    <where>
      <if test="preSyncTime != null">
        and update_time &gt;= #{preSyncTime,jdbcType=TIMESTAMP}
      </if>
      <if test="serverTime != null">
        and update_time &lt;= #{serverTime,jdbcType=TIMESTAMP}
      </if>
      <if test="1 == 1">
        and repeat_flag = 1
      </if>
    </where>
    order by update_time desc
  </select>
</mapper>