<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myfun.repository.searchdb.dao.SearchSosoViewCountMapper" >
  <resultMap id="BaseResultMap" type="com.myfun.repository.searchdb.po.SearchSosoViewCount" >
    <!--@mbggenerated-->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ARCHIVE_ID" property="archiveId" jdbcType="INTEGER" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="DATA_TYPE" property="dataType" jdbcType="TINYINT" />
    <result column="VIEW_COUNT" property="viewCount" jdbcType="INTEGER" />
    <result column="CREATION_TIME" property="creationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--@mbggenerated-->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--@mbggenerated-->
    ID, ARCHIVE_ID, DEPT_ID, DATA_TYPE, VIEW_COUNT, CREATION_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myfun.repository.searchdb.po.SearchSosoViewCountExample" >
    <!--@mbggenerated-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SOSO_VIEW_COUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    select 
    <include refid="Base_Column_List" />
    from SOSO_VIEW_COUNT
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--@mbggenerated-->
    delete from SOSO_VIEW_COUNT
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myfun.repository.searchdb.po.SearchSosoViewCountExample" >
    <!--@mbggenerated-->
    delete from SOSO_VIEW_COUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myfun.repository.searchdb.po.SearchSosoViewCount" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into SOSO_VIEW_COUNT (ARCHIVE_ID, DEPT_ID, DATA_TYPE, 
      VIEW_COUNT, CREATION_TIME)
    values (#{archiveId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{dataType,jdbcType=TINYINT}, 
      #{viewCount,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.myfun.repository.searchdb.po.SearchSosoViewCount" useGeneratedKeys="true" keyProperty="id" >
    <!--@mbggenerated-->
    insert into SOSO_VIEW_COUNT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="archiveId != null" >
        ARCHIVE_ID,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="dataType != null" >
        DATA_TYPE,
      </if>
      <if test="viewCount != null" >
        VIEW_COUNT,
      </if>
      <if test="creationTime != null" >
        CREATION_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="dataType != null" >
        #{dataType,jdbcType=TINYINT},
      </if>
      <if test="viewCount != null" >
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myfun.repository.searchdb.po.SearchSosoViewCountExample" resultType="java.lang.Integer" >
    <!--@mbggenerated-->
    select count(*) from SOSO_VIEW_COUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--@mbggenerated-->
    update SOSO_VIEW_COUNT
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null" >
        ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.dataType != null" >
        DATA_TYPE = #{record.dataType,jdbcType=TINYINT},
      </if>
      <if test="record.viewCount != null" >
        VIEW_COUNT = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null" >
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--@mbggenerated-->
    update SOSO_VIEW_COUNT
    set ID = #{record.id,jdbcType=INTEGER},
      ARCHIVE_ID = #{record.archiveId,jdbcType=INTEGER},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      DATA_TYPE = #{record.dataType,jdbcType=TINYINT},
      VIEW_COUNT = #{record.viewCount,jdbcType=INTEGER},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myfun.repository.searchdb.po.SearchSosoViewCount" >
    <!--@mbggenerated-->
    update SOSO_VIEW_COUNT
    <set >
      <if test="archiveId != null" >
        ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="dataType != null" >
        DATA_TYPE = #{dataType,jdbcType=TINYINT},
      </if>
      <if test="viewCount != null" >
        VIEW_COUNT = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myfun.repository.searchdb.po.SearchSosoViewCount" >
    <!--@mbggenerated-->
    update SOSO_VIEW_COUNT
    set ARCHIVE_ID = #{archiveId,jdbcType=INTEGER},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      DATA_TYPE = #{dataType,jdbcType=TINYINT},
      VIEW_COUNT = #{viewCount,jdbcType=INTEGER},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
	
	<select id="getViewCount" resultType="java.lang.Integer">
		SELECT ISNULL(SUM(VIEW_COUNT), 0) FROM SOSO_VIEW_COUNT
		<where>
			<if test="viewTimeStart != null and viewTimeStart != ''">
				AND CREATION_TIME &gt;= #{viewTimeStart}
			</if>
			<if test="dataType != null">AND DATA_TYPE = #{dataType}</if>
			<if test="deptId != null">AND DEPT_ID = #{deptId}</if>
			<if test="archiveId != null">AND ARCHIVE_ID = #{archiveId}</if>
		</where>
	</select>
	
	<select id="getDeptViewCount" resultType="java.lang.Integer">
		SELECT 
			ISNULL(SUM(VIEW_COUNT), 0) 
		FROM 
			SOSO_VIEW_COUNT 
		WHERE 
			DATA_TYPE = 1 AND DEPT_ID = #{deptId} AND CREATION_TIME BETWEEN #{viewTimeStart} AND #{viewTimeEnd}
	</select>
	
</mapper>

